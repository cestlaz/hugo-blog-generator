---
title: "Whiteboard interviews"
date: 2017-03-05
tags:
- cs
-  jobs
-  interviews
draft: false
---

A few days ago, I saw a [[https://theoutline.com/post/1166/programmers-are-confessing-their-coding-sins-to-protest-a-broken-job-interview-process%0A][piece]] on [[https://twitter.com/dhh][David Heinemeier Hansson's]] tweet on
whiteboard interviews:

#+BEGIN_html
<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Hello, my name is David. I would fail to write bubble sort on a whiteboard. I look code up on the internet all the time. I don&#39;t do riddles.</p>&mdash; DHH (@dhh) <a href="https://twitter.com/dhh/status/834146806594433025">February 21, 2017</a></blockquote>
<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
#+END_html

I'm not a huge fan of the whiteboard interview but I think many of the
tweets missed the point. Most of the whiteboard interviews I'm
aware of involve algorithmic problem solving while the tweets, at
least the ones I've seen all refer to things that indeed one would
look up. Things like API calls - not things that whiteboard interviewers
typically care about.

Tim Bray takes that point of view and shared his thoughts in a
[[https://www.tbray.org/ongoing/When/201x/2017/03/04/Whiteboard-Interviews][recent blog post]].


The idea behind the whiteboard interview isn't all bad. The
interviewer has an opportunity to see how the candidate thinks and
works through a problem and in an ideal situation the interviewer is,
at least to a point, coaching the candidate to help them through the
process. It seems to me that the problem lies more in the types of
questions asked and the skill of the interviewer rather than the idea
that candidates work through a problem live.

I'd imagine that whiteboard interview success skew towards candidates
who work well in isolation in a short period of time, have a good
amount of exposure to these types of algorithmic problems. Also those
who have practiced and trained specifically for the interview will
have a huge edge. For people new to the process, it can be very
stressful.

Once a candidate has accepted a position, they'll likely be working
with a team, with additional resources, and with time to solve
problems. This is a very different environment.  The whiteboard
interview, much like the SAT is thus something of an arbitrary
gatekeeper that a candidate must prepare for and conquer rather than a
skill that they must develop that will make them a more productive
team member.

This whole process tends to advantage those with the time and
background to prepare - this is one of the places where the argument
that whiteboard interview hurt diversity come from.

I could be totally wrong but I seem to recall that the whiteboard
interview, at least in terms of external visibility grew out of the
legendary Google puzzle interview questions.

A tech giant like Google can interview however they like and they'll
still get the talent. They go to the most selective institutions where
candidates have already been culled for success. If they then interview 100
candidates and 10 of them would be good fits, as long as a couple
thrive through the whiteboard interview process, they'll get their
engineer. They'll miss out on a lot of great talent but they can cast
such a large net they'll fill there seats with productive employees.

On the other hand, smaller companies will certainly miss out on great
talent if they follow the same approach.

Is there a better way?

Some companies pre-assign mini projects and then discuss that at the
interview. Pairing could also be a lower stress alternative to the
technical interview. Another option would be to look at a candidates
existing projects.

An interesting question is "why do so many companies use the
whiteboard interview?" I can't say for certain but I wouldn't be
surprised if it was a simple as "because Google does it."

For over 100 years, Stuyvesant high school required students study
mechanical drawing (drafting). The relevance of the subject lessened over the
decades and what was taught in many ways has become a joke. A typical
class during the CAD parts of the class might be going over the
**cylinder** command in CadKey. That's like spending a day studying
the **edit** menu in Microsoft Word in an English class. If you can't
tell, I'm not a fan. Drafting at Stuyvesant is the vestigial organ of
the course of study.

My point isn't to bash drafting at Stuy but rather that there have
been any number of schools that require their students take drafting
even though it doesn't prepare students for, nor lead them to anything
else in the schools curriculum (which now can be said for Stuy's
drafting requirement). I've spoken to teachers and principals at these
schools and we go back and forth as I press them for the reason for
the requirement and ultimately, they tell me that their school
requires drafting "because Stuyvesant does."

Why do so many small companies employ the whiteboard interview?
Because the big kids do. The trouble is that the big kids can get away
with it, the smaller players on the other hand, are hurting
themselves. Even the bigger players would be well served to
try to come up with an interview process that better assesses fit
rather than a course filter that while it does pull in talent misses
talent as well.
