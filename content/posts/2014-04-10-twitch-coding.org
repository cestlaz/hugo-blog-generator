---
title: "Twitch Coding"
date: "2014-04-10"
tags:
- pedagogy
draft: false
---


<style>
div.center {text-align:center;}
</style>

<p>
We have the kids write programs in all sorts of ways
</p>

<ul class="org-ul">
<li>on paper
</li>
<li>solo
</li>
<li>informally in pairs
</li>
<li>"pair programming"
</li>
<li>We have them trade code, pick up each others projects, and more.
</li>
</ul>

<p>
We do lots of different things to engage the kids in a lot of
different ways and I love it when someone comes up with a new
technique.
</p>


<p>
My friend, colleague, and incidentally, former student, Sam had such
an idea the other day. Sam started his teaching career at Francis
Lewis High School and it took us a while to convince him to join the
team, but he's been with us for about three years now and he's terrific.
</p>

<p>
Sam's also our resident gamer so I guess I shouldn't have been
surprised when Sam said he was going to do <a href="http://www.reddit.com/r/twitchplayspokemon/comments/1y94r8/the_history_of_twitch_plays_pokemon/">Twitch Pokemon</a> coding with
his classes. It sounded great.
</p>

<p>
In Twitch Pokemen, users type moves into a chat window and a bot reads
the commands to control a Pokemon. Sam's idea was to apply it to a CS class.
</p>

<p>
I loved the idea so I tried it in my classes.
</p>

<p>
First cut, I did it with stacks. We had a basic design in mind and then we started the "Twitch Coding."
</p>

<p>
We went up and down the rows. When it was a students turn, they could
either add a word, line, or concept, delete one, or change one.
</p>

<p>
So, for example, if the state of the code was:
</p>

<div class="org-src-container">

<pre class="src src-java"><span style="color: #F0DFAF; font-weight: bold;">public</span> <span style="color: #7CB8BB;">Node</span> <span style="color: #DFAF8F;">top</span>;

<span style="color: #F0DFAF; font-weight: bold;">public</span> <span style="color: #7CB8BB;">void</span> <span style="color: #93E0E3;">push</span>(<span style="color: #7CB8BB;">String</span> <span style="color: #DFAF8F;">s</span>) {
<span style="color: #7CB8BB;">Node</span> <span style="color: #DFAF8F;">n</span> = <span style="color: #F0DFAF; font-weight: bold;">new</span> <span style="color: #7CB8BB;">Node</span>(s);
}
</pre>
</div>

<p>
a student could:
</p>

<ul class="org-ul">
<li>add n.setNext(top) to the push routine
</li>
<li>change public to private in the declaration of top
</li>
</ul>

<p>
Or the somewhat lame
</p>

<ul class="org-ul">
<li>add a // above the push declaration line
</li>
</ul>

<p>
or something else.
</p>

<p>
If a student gets stuck, it's up to the class to "go Price is Right"
on them and give suggestions.
</p>

<p>
It worked great in one class, forced in another, and somewhere in the
middle in the third. Overall, I was happy with the results.
</p>


<p>
We tried it again today as we implemented a queue.
</p>

<p>
This time, we prepped a little better and the results were better.
</p>

<p>
The idea needs some fine tuning, but I think it's a fun and different
way to engage the class and I think we'll be playing with twitch
coding some more in the coming months.
</p>
