<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>csed on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/csed/</link>
    <description>C&#39;est la Z (csed)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Aug 2020 07:37:12 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/csed/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Preparing CS Teachers - what to leave in, what to leave out</title>
      <link>https://cestlaz.github.io/post/teacher-cert-methods-choosing/</link>
      <pubDate>Thu, 06 Aug 2020 07:37:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-methods-choosing/</guid>
      <description>&lt;p&gt;
Teachers always make decisions in their courses - what to leave in,
what to leave out. I&amp;#39;ve seen programming and data structure classes
where everything is written from scratch and others where a few things
are explained and the students just use built in types like the
java LinkedList  or Arrays.sort() method.
&lt;/p&gt;
&lt;p&gt;
Do too much from scratch and you&amp;#39;ll never finish the curriculum. Do to
little and the students won&amp;#39;t really understand what&amp;#39;s going on and
walk a path towards being programmers or coders rather than computer
scientists. Most teachers work somewhere between the extremes.
&lt;/p&gt;
&lt;p&gt;
We not only had to make these decisions for our CS content but also
for our methods. We decided to leave out two particular
methods that are very popular - pair programming and Parsons
problems. We did mention both in passing and did a little talk on pair
programming but the treatment was far less than say live coding,
subgoal labeling or the many other teaching techniques we decided to
explicitly cover. 
&lt;/p&gt;
&lt;p&gt;
Why did we leave out these two topics? 
&lt;/p&gt;
&lt;p&gt;
Partly pragmatism and pragmatism is something that&amp;#39;s always left out
when talking about teaching. Let&amp;#39;s look at Parsons problems. If you&amp;#39;re
unfamiliar with them, they&amp;#39;re basically scrambled code
fragments. Students have to put them in order. They&amp;#39;re cool puzzles
and a nice change of pace. but you have to create them and get them to
your students. That didn&amp;#39;t fit all that well with us. By the time we
got to content that would benefit from Parsons problems our pace or approach
didn&amp;#39;t really fit using them. It&amp;#39;s also worth noting that we haven&amp;#39;t
seen any good online Parson problem generator systems which would be
both a boon to problem creation and potentially distribution and
assessment. 
&lt;/p&gt;
&lt;p&gt;
There just wasn&amp;#39;t that much bang for the buck in giving them more than
lip service. Since our cohort was composed of experienced teachers, we
were confident that they can find the appropriate Parsons problems
resources and use them where appropriate in their classes.
&lt;/p&gt;
&lt;p&gt;
On pair programming we had similar pragmatic issues - it didn&amp;#39;t fit
all that well given how tight the program was and we had to figure out
how bet to do it remotely on the fly. We also knew that the cohort had
all been to at least some NYC CS4All training and so were at least
exposed to the idea. Still, we, or more accurately, Topher, who&amp;#39;s had
great success getting student buy in did do a brief talk on the
subject. Some of the things we covered were: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
How to motivate pair programming in a collaborative way
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What activities can you give the navigator while the driver&amp;#39;s
setting up the environment to involve them.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How in the &amp;#34;real world&amp;#34; some developers love PP and some hate it
and that there are many variations on the theme.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
You&amp;#39;d not always going to get student buy in.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
That last point is &lt;strong&gt;very&lt;/strong&gt; important. Teachers are going to try things
that don&amp;#39;t always work and unfortunately, the system of evaluation
doesn&amp;#39;t promote such necessary experimentation. What&amp;#39;s more every time
you go to a professional development or training session or head
something online it&amp;#39;s about how the presented did it and it worked
perfectly and if you follow the same recipe it&amp;#39;ll work for you. It
might, but then, it might not. It&amp;#39;s all about building the toolbox of
tricks and using them when appropriate and even then, not every lesson
is going to be John Keating or Jaime Escalante on the big screen.
&lt;/p&gt;
&lt;p&gt;
So, in the end we made choices. We&amp;#39;re they the right ones? I think
so. Next time around the cohort will be different and the
circumstances a little as well. Will we make the same choices? Maybe,
we&amp;#39;ll have to wait and see. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing CS Teachers - adding methods to our madness</title>
      <link>https://cestlaz.github.io/post/teacher-cert-methods/</link>
      <pubDate>Tue, 04 Aug 2020 06:47:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-methods/</guid>
      <description>&lt;p&gt;
Our summer intensive was, well, pretty intensive. We met all day every
day for a month and knocked out four classes. 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Programming (CS1)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data Structures
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Topics
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Methods
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If you ever took or taught a summer session class, you know that time
is tight and generally you cover a little less than in a fall or
spring semester class. N credits in 5 weeks just isn&amp;#39;t the same as
those same N credits spread over 13. 
&lt;/p&gt;
&lt;p&gt;
How did we recapture some time? First, we had some pre-work and second
we integrated some of the courses. We couldn&amp;#39;t really do it with
programming and data structures and we were less successful at
integrating the topics than we liked but it made the most sense with
methods, in fact, I think the methods part of the class was more
successful as a result of it&amp;#39;s integration with the other subjects
than it would have been as a stand alone.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what we did.
&lt;/p&gt;
&lt;p&gt;
We first thought about covering methods as we taught topics - that is,
present something using some teaching technique, cover the topic and
then also dive in to the technique. This turned out to be a
mistake. The teachers that came in with a strong CS background  seemed
fine but for the ones newer to the subject matter, it was too much at
once. We had to alter course.
&lt;/p&gt;
&lt;p&gt;
So we did.
&lt;/p&gt;
&lt;p&gt;
We continued to model various methods and sometimes made a side remark
here or there but focused on the CS. After a few days in, we were
ready to spend a day on pedagogy. We broke the class into groups and
had them reflect on the content we taught - how did we teach it? Why
did we approach it the way we did? Did it work? This led to some rich
discussion of both CS teaching techniques and teaching in general. We
were very happy with how it all went.
&lt;/p&gt;
&lt;p&gt;
We then went back to content but added more side bits here and there
about the teaching methods - as they became more comfortable with the
CS we were able to integrate more methods talk in with the CS talk. At
our next formal pedagogy lesson, we again talked about new techniques
that were modeled but also looked at alternative approaches and
took a deeper look at our individual cohort members student
populations. 
&lt;/p&gt;
&lt;p&gt;
Some of the methods we discussed included: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Live Coding 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Subgoal labeling
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Make predictions
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Modifying existing code
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
code tracing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
diagramming
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
scaffolded assignments (code skeletons)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Rubber Duck Debugging
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code sharing (presenting)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
writing implementations of library code
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
slack techniques (reacts polls, channels, ) 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
thought-grooming/sparking warm-up Qs/tasks
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
relevant quotes at warm-up
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and more but the list doesn&amp;#39;t really do the discussion justice. Take
&amp;#34;live coding&amp;#34; for example - that&amp;#39;s not just writing code in front of
the class. There&amp;#39;s a rich discussion here - how do you narrate? Is it
truly live or from a note sheet? How about discussing workflow while
modeling it? How about live coding subgoals? The actual class is much
richer than just &amp;#34;live coding.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
In addition to integrating methods into the teaching of content, we
also merged it with the topics course for some of the assessment. For
topics, each group created a class or unit on some area of CS and
included in the documents they prepared and presentation was a
discussion of how it might bet taught. I know that they all came in as
experienced teachers so weren&amp;#39;t starting with nothing but man, they
knocked it out of the park. I&amp;#39;ll be talking more about the topics in a
later post.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll probably say this a lot in my summer intensive wrap up posts but
it was such a treat working with a cohort of great educators and also
to have two of the best teachers I know to work with as the teaching
team.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing teachers to teach CS</title>
      <link>https://cestlaz.github.io/post/teacher-cert-recap-intro/</link>
      <pubDate>Mon, 03 Aug 2020 06:16:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-recap-intro/</guid>
      <description>&lt;p&gt;
Now that the summer portion of Hunter College&amp;#39;s Advanced Certificate
in Teaching Computer Science is over I thought I&amp;#39;d do a
postmortem. That is, a few posts about what we did and how it all
went. 
&lt;/p&gt;
&lt;p&gt;
First, though, an overview of the program.
&lt;/p&gt;
&lt;p&gt;
The Advanced Certificate program is geared towards teachers who are
currently certified in another subject area who wish to earn an
additional New York State teaching certificate in Computer
Science. Aspiring teachers - people who don&amp;#39;t currently have either a
Masters degree or any teaching certification can enroll in our Masters
in Computer Science Education program. We&amp;#39;re starting a small cohort
of five on that in the Fall. 
&lt;/p&gt;
&lt;p&gt;
The certificate program consists of a bunch of graduate classes plus
field work which is required by the state. Over the summer we covered
four of the classes. 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Programming - essentially a CS1 type course.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data Structures - since K12 teachers should go deeper than the last
HS course which is typically APCS-A.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Topcs in Compute rScience - since K12 teachers need a wide breadth
of CS knowledge.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Methods - since teachers need to know how to teach CS.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
In the fall, we&amp;#39;ll continue with Ethics in Computer Science and
Curriculum Development which also includes the field work.
&lt;/p&gt;
&lt;p&gt;
For this summer we started with a cohort of 22 practicing teachers but
lost one along the way. They all came from different schools and we
had all five boroughs represented. Most of the teachers worked in high
schools but we had some middle school representation and in terms of
current certifications, we had at least math, special ed, and science
represented but that&amp;#39;s something we didn&amp;#39;t officially track.
&lt;/p&gt;
&lt;p&gt;
Staffing wise, it was me along with two of my long time collaborators
JonAlf Dyrland-Weaver and Topher Mykolyk. JonAlf and Topher are two of
the best educators out there and part of my former core team at
Stuy. That team is the biggest thing I still miss having come over to
Hunter. They&amp;#39;re quite simply the best.
&lt;/p&gt;
&lt;p&gt;
The program ran basically all day every day during the month of
July. we knew it would be tight so we also added on some pre-work
which made sure all participants had some experience with Java prior
to our official start. 
&lt;/p&gt;
&lt;p&gt;
More will be revealed over the next few posts but I&amp;#39;ll spoil the
ending - I&amp;#39;m super proud of our 21 participants - while they still
have more work to do to earn their certifications, if I ran a school,
I&amp;#39;d love to have any of them teaching my CS classes. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not planning on writing much about the programming and data
structure classes except possibly through the methods eye because both
of those courses are pretty well established and cut and dry but I do
plan to write at least the following: 
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
The methods course 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
More on the methods course 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The topics course 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Use of tools for remote teaching 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Our overall philosophy in designing and running the program.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
So, stay tuned for more.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do It First</title>
      <link>https://cestlaz.github.io/post/do-it-first/</link>
      <pubDate>Mon, 10 Jun 2019 08:00:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/do-it-first/</guid>
      <description>&lt;p&gt;
Reading Garth Flint&amp;#39;s end of year &lt;a href=&#34;https://gflint.wordpress.com/2019/06/07/last-day-of-school-and-done-with-java/&#34;&gt;post&lt;/a&gt; and Alfred Thompson&amp;#39;s &lt;a href=&#34;http://blog.acthompson.net/2019/06/how-well-can-you-code-projects-you.html&#34;&gt;follow up&lt;/a&gt;
had me thinking about a couple of things. 
&lt;/p&gt;
&lt;p&gt;
One was spurred when Garth
wrote &amp;#34;They also have to figure out the math before they code.&amp;#34; This
made me think about all the details we sometimes &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-21-little-details.html/&#34;&gt;take for for
granted&lt;/a&gt;. Things that are hard for our students that we just know. It&amp;#39;s
frequently math that we might find trivial but it could also be much
simpler things.
&lt;/p&gt;
&lt;p&gt;
When I write Java code I have a snippet that provides most of my main
boilerplate. For a beginner, just typing in all the details and
getting them right might be a chore. Heck, even typing is something we
take for granted. Beginners who can type have a distinct
advantage. They can focus on the code rather than on the keys. That
boilerplate code might take ten minutes of typing alone and that&amp;#39;s not
adding in any typos or understanding errors. 
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have anything to add here that I didn&amp;#39;t address in earlier
posts and Garth&amp;#39;s post has some great points so if you haven&amp;#39;t read it
yet, I recommend you take the few minutes to do so.
&lt;/p&gt;
&lt;p&gt;
The other thoughts were spurred from this part of Garth&amp;#39;s post:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
did only two of the six assignments myself.  With the others I saw
 the solution so did not code them up.  I should have coded them up
 just so I could answer questions better for the students.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Alfred expounded on this in his post and there was a good twitter
conversation around it as well.
&lt;/p&gt;
&lt;p&gt;
As a general rule as teachers we should have solved the problems
before we assign them and not just theoretically be able to solve
them. Actually writing up the solutions can also clue us in on some of
the difficulties that our students might face. Particularly if we
really try to look at the assignment using our student&amp;#39;s eyes. 
&lt;/p&gt;
&lt;p&gt;
Neal Plotnick tweeted: 
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The lack of
experience with coding for Ts combined with canned, cloud based
curricula has allowed classrooms to be created with Ts pushing
assignments out and relying on automated grades. I don’t have a CS
degree but I made sure to code my python assignments first.&lt;/p&gt;&amp;mdash;
neil plotnick (@NeilPlotnick) &lt;a
href=&#34;https://twitter.com/NeilPlotnick/status/1137340790554996736?ref_src=twsrc%5Etfw&#34;&gt;June
8, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
And this is a real concern for me. I get it - we&amp;#39;re building a plane
while flying it and that places teachers in situations where they have
to learn on the fly and at times they&amp;#39;ll  have to assign problems
before they have  solutions. Long term, however, this is a big problem
and I suspect it&amp;#39;s not going to go away. 
&lt;/p&gt;
&lt;p&gt;
On the other side of the coin though are times when it&amp;#39;s best not to
have a solution before the class. Sure, if you&amp;#39;re teaching a merge
sort or doing a unit on inheritance you probably should have your
ownb written solutions but there are a whole bunch of topics which
lend themselves to doing things on the fly:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
debugging
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
software engineering practices
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
how to approach &amp;#34;random&amp;#34; problems
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
practical &amp;#34;programming&amp;#34; techniques
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
can all benefit from an on the fly lesson. 
&lt;/p&gt;
&lt;p&gt;
Coding or teaching on the fly, when used appropriately allows the
teacher to model best practices in real situations. Of course this is
difficult to truly replicate if you teach the same class again later
in the day or if you revisit the class next year but it can be a
valuable tool. When you get a bug - a real bug not a planted one in
your code, you can really model techniques to solve the problem and
you can involve the class in finding that solution.
&lt;/p&gt;
&lt;p&gt;
This can all be pretty scary. You can end up going down the wrong path
and never finish building whatever you&amp;#39;re building but overall it can
be a very valuable experience for the students. 
&lt;/p&gt;
&lt;p&gt;
The other consideration is that you can teach a great lesson this way
but it would probably get a low rating on Danielson or whateve
nonsense rubric your district uses for teacher evaluation.
&lt;/p&gt;
&lt;p&gt;
None of this is to say that you don&amp;#39;t want to prepare. Most of the
time I&amp;#39;ll have solutions worked out or if not, I&amp;#39;ll have written
similar solutions countless times before but that said, there&amp;#39;s
sometimes value in exploring in the wild or as one of my early
supervisors put it &amp;#34;calling an audible.&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blog For Self Professional Devleopment</title>
      <link>https://cestlaz.github.io/post/blog-for-pd/</link>
      <pubDate>Thu, 16 May 2019 07:12:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/blog-for-pd/</guid>
      <description>&lt;p&gt;
Lat day of the 2019 &lt;a href=&#34;https://www.ncwit.org/summit/2019-ncwit-summit-women-and-it&#34;&gt;NCWIT Summmit&lt;/a&gt;. Got up crazy early, got back from
my run and saw this when I checked Twitter:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A1: CSTA,
Twitter chats like this one, &lt;a
href=&#34;https://twitter.com/guzdial?ref_src=twsrc%5Etfw&#34;&gt;@guzdial&lt;/a&gt;
and &lt;a
href=&#34;https://twitter.com/alfredtwo?ref_src=twsrc%5Etfw&#34;&gt;@alfredtwo&lt;/a&gt;&amp;#39;s
blogs among others. In all cases because those places start from
assuming I&amp;#39;m a CS teacher, rather than starting from assuming
I&amp;#39;m a teacher who is better at teaching something else. &lt;a
href=&#34;https://twitter.com/hashtag/csk8?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#csk8&lt;/a&gt;
&lt;a
href=&#34;https://t.co/6DO77fzq0j&#34;&gt;https://t.co/6DO77fzq0j&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Sarah Judd (@SarahEJudd) &lt;a
href=&#34;https://twitter.com/SarahEJudd/status/1128829652145979392?ref_src=twsrc%5Etfw&#34;&gt;May
16, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I don&amp;#39;t usually participate in Twitter chats. The format doesn&amp;#39;t
really work for me. I do frequently lurk though and while I didn&amp;#39;t see
this tweet until the morning after, another &lt;a href=&#34;https://twitter.com/Todd_Lash/status/1128816582048673793&#34;&gt;one&lt;/a&gt; by my &lt;a href=&#34;https://twitter.com/Todd_Lash&#34;&gt;Todd Lash&lt;/a&gt; caught
my eye and I&amp;#39;ll probably comment on that at some point in the near
future.
&lt;/p&gt;
&lt;p&gt;
On Sarah&amp;#39;s tweet I&amp;#39;ll say that CS teachers should certainly frequent
Alfred and Mark&amp;#39;s blogs. I subscribe to and enjoy both. I&amp;#39;ll add
something that I&amp;#39;ve said before and that is if you&amp;#39;re a CS teacher you
should also blog.
&lt;/p&gt;
&lt;p&gt;
I get it - it takes time, it&amp;#39;s hard to put yourself out there and if you&amp;#39;re a
relatively young teacher you might feel like you don&amp;#39;t have much to
say but I say so what.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been blogging on and off for nine years now. I have no reason to
believe I have anything more than a small readership but I do
periodically get surprised at a conference with a &amp;#34;hey, I love your
blog.&amp;#34; Comments are few and far between and from &amp;#34;the usual
suspects&amp;#34; but as I sad above, so what.
&lt;/p&gt;
&lt;p&gt;
Pick a lesson you just did and describe it. That&amp;#39;s all it takes. Try
something different a week later? Write it up. Rinse and repeat.
&lt;/p&gt;
&lt;p&gt;
Why have I found writing a blog to be good self-PD?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Writing the experience or the lesson makes me think through it
again. What worked, what didn&amp;#39;t.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
When I do a similar lesson in the future, I can look back on what I
did. It helps in iterating towards becoming a better teacher.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
I get to see how I&amp;#39;ve evolved as a teacher over time. You don&amp;#39;t get
this immediately but blog for a few years and then reread some early
posts. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
You could get some comments. I don&amp;#39;t get a lot but the ones people
have left have proven useful to me. Some of the ones from people who
disagree have been the most useful.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
On top of this, some other new teacher might discover something you
wrote up and find inspiration from it. 
&lt;/p&gt;
&lt;p&gt;
So, jump in and try it. Blogging for self-PD. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Give me a break (and a continue)</title>
      <link>https://cestlaz.github.io/post/break-continue/</link>
      <pubDate>Wed, 01 May 2019 08:39:41 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/break-continue/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
What can I do to discourage my students from using the &amp;#34;break&amp;#34;
statement?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That was more or less the gist of the comment and it elicited some
good responses. This time the conversation was on Facebook but I&amp;#39;ve
seen this one and participated in it many times before. I never liked
the question when presented as a &amp;#34;how can I stop them&amp;#34; one.  I equally
dislike when the offered advice is basically &amp;#34;never use break no
matter what&amp;#34; or something similar. When writing code the best advice
is rarely to never or always do something. The question should really
be &amp;#34;when is it appropriate for my students to use a break statement
and how can I steer them  towards using it correctly.&amp;#34; The answer, of
course is &amp;#34;it depends.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
For those unfamiliar with the statements, &lt;code&gt;break&lt;/code&gt; jumps to the end and
exits the loop or switch statement that encloses it. The &lt;code&gt;continue&lt;/code&gt;
statement jumps up to the next iteration of its enclosing loop. I&amp;#39;ll
show some examples below.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s true that you never &lt;strong&gt;need&lt;/strong&gt; to use break but in my opinion, if
used correctly it can create clearer code. Let&amp;#39;s look at a related
situation. Suppose you write a function to find and return some item
from  a data set (in pseudocode):
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You could tighten it up a bit but there are two things that I don&amp;#39;t
like about the above solution. First, it goes through the entire data
set even if the item you&amp;#39;re searching for is near the beginning. You
could fix that by putting in a more complex loop boolean:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; numitems &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;found &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Second. you&amp;#39;ve got the conditional after the loop. I find the
following much clearer:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To me this is perfectly clear. Look for an item, if and when we find
it, we&amp;#39;re done so let&amp;#39;s get out of here. If not, the loop finishes and
we return the not found stuff at the end. It&amp;#39;s clean, easy to
understand, and potentially a little faster.
&lt;/p&gt;
&lt;p&gt;
You have a similar situation with &lt;code&gt;break&lt;/code&gt;. Without it you might have
code like this:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And with:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Not significantly different. 
&lt;/p&gt;
&lt;p&gt;
People who don&amp;#39;t like the break statement usually adhere to a very
strict interpretation of structured programming - one entry point, one
exit point but I&amp;#39;d argue that break (and continue) are not like
arbitrary jumps. They&amp;#39;re well defined and don&amp;#39;t introduce spaghetti
code. They either specifically exit a bounding language construct or
jump to the next iteration. Actually, now that I think about it,
&lt;code&gt;exceptions&lt;/code&gt; can be used in a way that mucks with clear code in a much
more dangerous way than break and continue can.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an example with continue:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
as opposed to:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Which is better? It&amp;#39;s purely subjective. Nothing wrong with either.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll share a final example. This one lifted from an &lt;a href=&#34;https://cestlaz.github.io/post/globals-breaks-and-returns/&#34;&gt;older post&lt;/a&gt; on
&amp;#34;best practices.&amp;#34; If you&amp;#39;re writing an event handler, you could put
the exit event in the loop boolean but I find including it
as a case using a &lt;code&gt;break&lt;/code&gt; to be cleaner:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
At the end of the day, &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt;, like most langauge
constructs can be used for either good or evil. There have been times
when they&amp;#39;ve led me to cleaner code so I&amp;#39;ve used them. At other times,
using them would have been forced.
&lt;/p&gt;
&lt;p&gt;
If we agree that &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; can be appropriate, the other
question is when to introduce them. One comment from the most recent
Facebook thread on this (name withheld since that&amp;#39;s a semi-private
forum) was that it shouldn&amp;#39;t be right off the bat but rather after
they&amp;#39;re comfortable with loops, conditionals and booleans so that they
can use the new constructs when they make sense and not willy-nilly. I
tend to agree with this.
&lt;/p&gt;
&lt;p&gt;
Personally, I think it&amp;#39;s important to show our kids constructs like
&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; and it&amp;#39;s also important for us to talk about
good code and &lt;a href=&#34;https://cestlaz.github.io/posts/best-practices-cli/&#34;&gt;best practices&lt;/a&gt; but the important thing is that we don&amp;#39;t
have our kids blindly follow any practice but empower them to make good
decisions based on their situations.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Seam Carving and Dynamic Programming</title>
      <link>https://cestlaz.github.io/post/seam-carving/</link>
      <pubDate>Mon, 22 Apr 2019 13:51:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/seam-carving/</guid>
      <description>&lt;p&gt;
It&amp;#39;s spring break and for me that&amp;#39;s always been a good time to explore
some new ideas.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s one that some of you might like, particularly if you&amp;#39;re
teaching APCS-A or something similar. 
&lt;/p&gt;
&lt;p&gt;
Many APCS-A teachers do a unit on image processing using the &lt;a href=&#34;https://docs.google.com/viewer?url=http%253A%252F%252Fmedia.collegeboard.com%252FdigitalServices%252Fpdf%252Fap%252Fpicture-lab-studentguide.pdf%0A&#34;&gt;picture
lab&lt;/a&gt; (&lt;a href=&#34;http://www.apcs.mathorama.com/index.php?n=Main.PictureLab&#34;&gt;alternate resource&lt;/a&gt;). Image processing is a nice platform to
explore two dimensional arrays. You basically use a 2D array of pixels
(points) to represent an image. You can just use a 2D array of ints
and store 0-255 at each location for a grayscale image and three ints
per pixel for red, green, blue. For this you can just use a simple
2D array of some color class - I think there&amp;#39;s even one built into
Java that you can use.
&lt;/p&gt;
&lt;p&gt;
I like to use the PPM format to save and later reload the images. PPM
is a simple text format. It starts with a header, then an optional
comment (starting with #), the width and height (4x4 in the example
below), then the maximum color number. Here&amp;#39;s an example:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
P3
# feep.ppm
4 4
15
 0  0  0    0  0  0    0  0  0   15  0 15
 0  0  0    0 15  7    0  0  0    0  0  0
 0  0  0    0  0  0    0 15  7    0  0  0
15  0 15    0  0  0    0  0  0    0  0  0
&lt;/pre&gt;
&lt;p&gt;
You can even cut and paste the above into a file and view it with an
image viewer. 
&lt;/p&gt;
&lt;p&gt;
You can find the full format specification &lt;a href=&#34;http://netpbm.sourceforge.net/doc/ppm.html%0A&#34;&gt;here&lt;/a&gt; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Netpbm_format&#34;&gt;alternate resource&lt;/a&gt;). 
&lt;/p&gt;
&lt;p&gt;
The picture lab has a bunch of interesting exercise ideas but if
you&amp;#39;re looking for something &amp;#34;next level&amp;#34; check this out:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/6NcIJXTlugc&#34;&gt;https://www.youtube.com/embed/6NcIJXTlugc&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Seam Carving is no longer a new cutting edge
technique but it still blows me away. It&amp;#39;s also a really cool project
for more advanced students for two reasons: one, it&amp;#39;s not a toy
assignment - it&amp;#39;s from real research and two, it contains a very
approachable example of dynamic programming which I&amp;#39;ll talk about in a
bit.
&lt;/p&gt;
&lt;p&gt;
If you watch the video, there are two pieces that can sound
intimidating. One is the &amp;#34;dynamic programming algorithm.&amp;#34; The other is
when they talk about the &amp;#34;gradient magnitude.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
Gradient magnitude. That sounds pretty hard. Actually, it could be
worse. When I first starting looking at the basics of image processing
it was described as &amp;#34;the derivative of the pixels.&amp;#34; &lt;strong&gt;The dirivative of
the pixels????&lt;/strong&gt; I have to know calculus for this?????? Not really. I
hate it when they use big words for simple ideas. All they&amp;#39;re really
talking about is the difference between the color of neighboring
pixels. That is, how much the color changes from one pixel to the
next. Let&amp;#39;s say you have a greyscale image (or have converted an image
to greyscale by averaging the red green and blue values), if you have
a vertical row of pixels with all the values of, let&amp;#39;s say 200 and the
row right next to it is also of values 200, then the two lines are of
the same color - there is no difference. If one pixel has a value of
200 and its neighbor has a value of 50, it changes quite a lot.
&lt;/p&gt;
&lt;p&gt;
The APCS-A picture lab describes a simple way to calculate this in
exercise 9 (linked above). You can also just do a search on &amp;#34;edge
detection tutorial&amp;#34; or &amp;#34;sobol edge detection tutorial&amp;#34; or something
similar.
&lt;/p&gt;
&lt;p&gt;
For Seam Carving, you have to find a sequence of pixels from one side
of the image to the other where the sum off all the differences is the
lowest. This is where the dynamic programming comes in.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_programming&#34;&gt;Dynamic Programming&lt;/a&gt; is a technique that, in basic terms takes a
problem that decomposes into subproblems and you store the optimal
subproblem solution rather than recalculating it.
&lt;/p&gt;
&lt;p&gt;
Probably the easiest example is Fibonacci numbers. You can generate
Fibonacci numbers recursively using something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fib&lt;/span&gt;(n):
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fib(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;fib(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s very simple but it gets very slow very fast. That&amp;#39;s because it
keeps recalculating the same subproblems over and over and over.
&lt;/p&gt;
&lt;p&gt;
You can &amp;#34;fix&amp;#34; this by creating a list of previously found Fibonacci 
numbers and just return them rather than recalculating:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  fibs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# make room for 1000 fib numbers&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fib&lt;/span&gt;(n):
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; fibs[n] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
          &lt;span style=&#34;color:#75715e&#34;&gt;# we already have the answer, just return it&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fibs[n]
      &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
          &lt;span style=&#34;color:#75715e&#34;&gt;# otherwise, calculate it, store it, return it&lt;/span&gt;
          f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fib(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;fib(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
          fibs[n]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;f
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; f&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and that&amp;#39;s a dynamic programming solution for Fibonacci numbers,
specifically using a technique known as &lt;a href=&#34;https://en.wikipedia.org/wiki/Memoization&#34;&gt;memoization&lt;/a&gt;.  
&lt;/p&gt;
&lt;p&gt;
How does this apply to finding the proper seam to remove? The one with
the lowest total change? 
&lt;/p&gt;
&lt;p&gt;
First, go through the image array and build a second 2D array where
each element contains the pixels &amp;#34;gradient magnitude&amp;#34; or change using
either the method described in task 9 of the picture lab or
elsewhere. 
&lt;/p&gt;
&lt;p&gt;
For the first row, the sum of each pixels path so far is just the
array element.
&lt;/p&gt;
&lt;p&gt;
For each successive row, the value of any pixel is going to be it&amp;#39;s
value plus one of the values abov it, either up left, up center, or up
right. Specifically, the elements new value will be it&amp;#39;s value + the
smallest of the above three.
&lt;/p&gt;
&lt;p&gt;
For example, given this array representing the color changes:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/seam-mat1.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
When calculating the second item in the second row, you&amp;#39;ll consider
the three values above it:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/seam-mat2.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The smallest is 0 so that 2 remains a 2. If we do this for every
element in the second row we get the following:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/seam-mat3.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The green boxes added a 0 from the line above but the yellow ones
added the smallest non zero value from the above  row. Note that the
edges just considered the two values above them and didn&amp;#39;t wrap.
&lt;/p&gt;
&lt;p&gt;
Working the rest of the way through, you get this final array:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/seam-mat4.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
You can now easily identify the best seam to remove by finding the
smallest value in the bottom row and working your way up to the top.
&lt;/p&gt;
&lt;p&gt;
All together this is very doable by an advanced APCS-A student and the
results are very cool, particularly if you do it in an interactive
environment like processing.
&lt;/p&gt;
&lt;p&gt;
So, check out seam carving. I&amp;#39;ll leave you with one more link to a
longer presentation on the topic: 
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=ZBtXl3EuU14&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZBtXl3EuU14&#34;&gt;https://www.youtube.com/watch?v=ZBtXl3EuU14&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teacher PD at Grow with Google</title>
      <link>https://cestlaz.github.io/post/pd-at-gwg/</link>
      <pubDate>Fri, 12 Apr 2019 08:12:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-at-gwg/</guid>
      <description>&lt;p&gt;
Yesterday we held our third monthly Professional Development session
for teachers of &amp;#34;APCS-A, Similar, and Beyond.&amp;#34; It&amp;#39;s great to see that
we&amp;#39;re starting to form a core of a community of CS teachers teaching
some of the more advanced classes as there is a core group that keeps
coming back for more. Even better is the fact that we&amp;#39;re gaining a
couple of new teachers at each session.
&lt;/p&gt;
&lt;p&gt;
Last time, we were at &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt;, a cloud provide that has been
very involved in education since their creation  and has been a
tremendous boon to my education projects over the years. 
&lt;/p&gt;
&lt;p&gt;
This time we were hosted at &lt;a href=&#34;https://events.withgoogle.com/grow-with-google-in-nyc/#content&#34;&gt;Grow with Google&lt;/a&gt;&amp;#39;s new New York City
space. It&amp;#39;s a great space on the first two floors of Google&amp;#39;s main
building in Chelsea - 111 8th avenue. GWG looks like it will be a
terrific resource for New Yorkers with workshops ranging from coding,
resume writing, digital skills, and more. They also have offerings for
both kids and adults. 
&lt;/p&gt;
&lt;p&gt;
They were also great hosts, providing a great room for us to run our
session as well as a nice dinner to keep the teachers fueled.
&lt;/p&gt;
&lt;p&gt;
As usual, we had two major themes for our PD. First the pedagogy. My
former colleage Topher started with a pair programming workshop. 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/gwg-topher.jpg&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Pair programming is a pretty common technique but it&amp;#39;s deceptively
difficult to do well. It&amp;#39;s not as simple as &amp;#34;work in groups of two&amp;#34;
and it can be a challenge to make sure both students are engaged and
progressing while using this practice.
&lt;/p&gt;
&lt;p&gt;
Topher ran the group through a pair programming exercise and led a
discussion as to some of the strategies he uses and some of the
challenges he&amp;#39;s face. I found it very helpful. Even small suggestions
like when he has each pair draw their &amp;#34;team flag&amp;#34; on a piece of paper
which they&amp;#39;ll hold up if they want to ask for help. In the discussion
after the workshop I mentioned that I&amp;#39;ve had more success with pair
programming when I relate it to a series of code review lessons I&amp;#39;ve
been doing and that if people were interested I&amp;#39;d talk about those
lessons at a future session.
&lt;/p&gt;
&lt;p&gt;
Then we had dinner after which I did the content piece.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/gwg-z.jpg&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
We first look at a bit of &lt;a href=&#34;https://ccl.northwestern.edu/netlogo/&#34;&gt;NetLogo&lt;/a&gt; for image procesing mostly so I
could introduce the participants to NetLogo since it&amp;#39;s really an
underused, underappreciated environment. Then we talked a bit about
the APCS-A image lab. This led to the meat of the content piece. We
took a look at &lt;a href=&#34;https://www.youtube.com/watch?v=6NcIJXTlugc&amp;amp;list=WL&amp;amp;index=44&amp;amp;t=0s&#34;&gt;this video&lt;/a&gt; on seam carving. When I first saw it, I was
blown away. Now it&amp;#39;s an old technique but I&amp;#39;m still blown away by how
it can be used as both motivation and a a platform to teach some
dynamic programming. We then did a brief overview behind the basic
ideas of dynamic programming and then developed the dynamic
programming algorith that&amp;#39;s used in Seam Carving. I&amp;#39;ll probably write
all of this up in more detail in a future post.
&lt;/p&gt;
&lt;p&gt;
Overall it was a great event. We have one more PD scheduled for May
and then we&amp;#39;ll start it up again in the Fall.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s great to have amazing partners like Google and Digital Ocean to
help support our CS teachers and I&amp;#39;m looking forward to work with both
of them for years to come.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Choosing A Textbook</title>
      <link>https://cestlaz.github.io/post/choosing-a-textbook/</link>
      <pubDate>Sun, 31 Mar 2019 10:41:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/choosing-a-textbook/</guid>
      <description>&lt;p&gt;
Now and again there are requests on the assorted CS Education forums
asking about which text book to use. These requests are usually for
APCS-A. There are usually a number of &amp;#34;I&amp;#39;m very happy with …&amp;#34;
replies but I thought I&amp;#39;d take a bit of a deeper dive into what
teachers might want to consider when evaluating a textbook.
&lt;/p&gt;
&lt;p&gt;
It was never an issue when I started as a math teacher. The choice was
generally already made and the school had one book for each subject
level. Sometimes there were two if the school was transitioning from
one book to another.
&lt;/p&gt;
&lt;p&gt;
The older books were in general more rigorous and at the same time
more terse. The newer ones were more accessible but never seemed to
give enough guidance for kids to approach the harder
problems on their own. 
&lt;/p&gt;
&lt;p&gt;
In general, most teachers I know used them primarily as a source for
homework problems.
&lt;/p&gt;
&lt;p&gt;
In the CS world, it seems like we have more options. 
&lt;/p&gt;
&lt;p&gt;
When I first starting teaching APCS-AB at Stuy we had to buy new books
as the enrollment had just shot up. There weren&amp;#39;t many books that
covered both the programming and the data structures but I found one
nad it was a good one:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://pictures.abebooks.com/isbn/9780314933072-uk.jpg&#34; alt=&#34;https://pictures.abebooks.com/isbn/9780314933072-uk.jpg&#34; title=&#34;https://pictures.abebooks.com/isbn/9780314933072-uk.jpg&#34; /&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
It was both accessible and was thorough. It wasn&amp;#39;t a great source of
exercises but it was no worse than the other options.
&lt;/p&gt;
&lt;p&gt;
When we moved to C++ it was pretty easy as the same book was still
available, albeit now in two parts:
&amp;lt;div&amp;gt;
&amp;lt;figure class=&amp;#34;z_image_right&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/31pkP2rZj5L._BO1,204,203,200_.jpg&#34; alt=&#34;https://images-na.ssl-images-amazon.com/images/I/31pkP2rZj5L._BO1,204,203,200_.jpg&#34; title=&#34;https://images-na.ssl-images-amazon.com/images/I/31pkP2rZj5L._BO1,204,203,200_.jpg&#34; /&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/51BS6W1XRRL._SX394_BO1,204,203,200_.jpg&#34; alt=&#34;https://images-na.ssl-images-amazon.com/images/I/51BS6W1XRRL._SX394_BO1,204,203,200_.jpg&#34; title=&#34;https://images-na.ssl-images-amazon.com/images/I/51BS6W1XRRL._SX394_BO1,204,203,200_.jpg&#34; /&gt;&amp;#34; width=&amp;#34;150px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;/div&amp;gt;
When we went to Java we couldn&amp;#39;t find a book that covered both the
programming and the data structures but settled on this one: 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://i.ebayimg.com/images/g/N4oAAOSw4bVTmzOV/s-l1600.jpg&#34; alt=&#34;https://i.ebayimg.com/images/g/N4oAAOSw4bVTmzOV/s-l1600.jpg&#34; title=&#34;https://i.ebayimg.com/images/g/N4oAAOSw4bVTmzOV/s-l1600.jpg&#34; /&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Nowadays, particularly with data structures no longer being in issue
at most high schools there are many more choices and even back then
there was more to consider than I&amp;#39;m sure I realized.
&lt;/p&gt;
&lt;p&gt;
When we recommend books to our colleagues we&amp;#39;re probably not being as
helpful as we can when we say &amp;#34;we like ….&amp;#34;&amp;#34;
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s important to think about how the text book is going to be
used. 
&lt;/p&gt;
&lt;p&gt;
Some text books weave a project, toolkit, or theme throughout
the chapters. That&amp;#39;s great if the teacher&amp;#39;s going to align the course
closely with the textbook. If you don&amp;#39;t however, it can make later
chapters harder on the students. If the text book develops, let&amp;#39;s say,
a graphics library in the early chapters and the teacher doesn&amp;#39;t do
the same, when the later chapters rely on this library students will
find themselves in a bit of trouble. 
&lt;/p&gt;
&lt;p&gt;
Some textbooks develop these large projects or libraries but do so as
add ons to each chapter. For most teachers that&amp;#39;s probably a better
bet.
&lt;/p&gt;
&lt;p&gt;
Does the textbook have a rich set of problems, questions, and
examples? I haven&amp;#39;t found many that are great but then it&amp;#39;s probably
not as important these days with resources like &lt;a href=&#34;https://codingbat.com/java&#34;&gt;Coding Bat&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Does the textbook present material in a way similar to the teacher? If
it is, is that a good thing or not? On the one hand, it might make the
book easier for the student that&amp;#39;s &amp;#34;getting it&amp;#34; in class and then the
book and the class reinforce each other. On the other hand, if I&amp;#39;m not
connecting with a student, it&amp;#39;s probably better if the textbook takes
on a different voice.
&lt;/p&gt;
&lt;p&gt;
There are more questions one should ask themselves when desciding on a
new textbook but I think you get the idea.
&lt;/p&gt;
&lt;p&gt;
For my classes, I&amp;#39;ve never strictly used the textbook. It&amp;#39;s more meant
as a reference and alternate resource for the kids. For this reason, I
like a book that is more on the tutorial side. I generally don&amp;#39;t use
them for assignments but if the book has good ones, so much the
better. As we cover a unit in class, I want the book to be available
for the student who might need extra support. Nowadays, with so many
free resources out there I try to leverage them as well. For my
beginners at Hunter, I&amp;#39;ve been using &lt;a href=&#34;https://automatetheboringstuff.com/&#34;&gt;this&lt;/a&gt; and am pretty happy with it.
&lt;/p&gt;
&lt;p&gt;
So, what am I missing? What else should we be considering more so than
just &amp;#34;I like the book.&amp;#34;
&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adapting A Nifty Assignment</title>
      <link>https://cestlaz.github.io/post/adapting-a-nifty-assignment/</link>
      <pubDate>Sat, 16 Mar 2019 08:20:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/adapting-a-nifty-assignment/</guid>
      <description>&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;http://nifty.stanford.edu/2019/popyack-nifty-post-it/samples/animation/Animated_325.gif&#34; alt=&#34;http://nifty.stanford.edu/2019/popyack-nifty-post-it/samples/animation/Animated_325.gif&#34; title=&#34;http://nifty.stanford.edu/2019/popyack-nifty-post-it/samples/animation/Animated_325.gif&#34; /&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;a href=&#34;http://nifty.stanford.edu/&#34;&gt;Nifty Assignments&lt;/a&gt; session at SGICSE is always a popular one.
&lt;/p&gt;
&lt;p&gt;
Go to &lt;a href=&#34;http://nifty.stanford.edu/&#34;&gt;the site&lt;/a&gt; and you&amp;#39;ll find links to all the assignments presented
from 1999 to the present year.
&lt;/p&gt;
&lt;p&gt;
On the one hand, it&amp;#39;s a great resource. On the other, the assignments
vary in nifty-ness depending on one&amp;#39;s personal taste. To me, there
seemed to be a run of nifty assignments that were really just &amp;#34;take a
generic assignment and fancy up the graphics&amp;#34; mixed in with one&amp;#39;s that
I found really cool. There&amp;#39;s also no way to really tell if an
assignment scratches your fancy without clicking through and reading
all of them.
&lt;/p&gt;
&lt;p&gt;
I thought I&amp;#39;d talk about one of the assignments presented at this past
SIGCSE. I don&amp;#39;t think I&amp;#39;ll have an opportunity to use it directly but
I did find it pretty nifty. I also thought I&amp;#39;d share some tweaks I&amp;#39;d
consider if I were to use it.
&lt;/p&gt;
&lt;p&gt;
The assignment is Jeffrey L. Popyack&amp;#39;s &lt;a href=&#34;http://nifty.stanford.edu/2019/popyack-nifty-post-it/&#34;&gt;Post-It Pandemoniim&lt;/a&gt; assignment.
&lt;/p&gt;
&lt;p&gt;
At first glance, or rather at the start of the presentation it seemed
a pretty lightweight assignment - kids make a pixelated image by
putting colored postit notes on a grid. That&amp;#39;s a simple, nice
intro to 2D arrays but not all that nifty. The nifty part came when
you drilled down into the details. 
&lt;/p&gt;
&lt;p&gt;
The assignment starts with a GIF image. First you process it  with a program
provided hich produces sheets describing a 3x5 section of the overall
image. These sheets are ultimately distributed to the students
perofming the activity. This still doesn&amp;#39;t sound tremendously deep but
the activity also lets you talk about file formats with color
palettes. The idea that instead of storing the rgb triple for each
pixel you store an index into a palette of 256 colors that&amp;#39;s also
embedded into the file. This is a great way to introduce indirect
lookups. Another feature Poplyack spoke about was compression. He
mentioned the project lending itself to Run Length Encoding. The idea
that if the image has a run of adjacent pixels of the same color,
let&amp;#39;s say 9 reds in a row, instead of encoding them as &amp;#34;RRRRRRRRR&amp;#34; you
would use something like &amp;#34;9R.&amp;#34; Add this all together and it&amp;#39;s pretty
nifty. 
&lt;/p&gt;
&lt;p&gt;
I did have a problem, though with the compression part. During the
talk, Poplyack talked about Run Length Encoding which is pretty simple
and approachable to beginners. GIF, however, as far as I know uses
Lempel-Ziv compression which is much more complex.
&lt;/p&gt;
&lt;p&gt;
If I were to use this assignment, I&amp;#39;d probable make a few changes. I&amp;#39;m
not sure which of the following I&amp;#39;d actually do but here&amp;#39;s what I
would think about.
&lt;/p&gt;
&lt;p&gt;
First I would consider using the &lt;a href=&#34;https://en.wikipedia.org/wiki/Netpbm_format&#34;&gt;NetPBM&lt;/a&gt; formats. Some of these formats
are simple ASCII. You can see some examples on the &lt;a href=&#34;https://en.wikipedia.org/wiki/Netpbm_format&#34;&gt;Wikipedia&lt;/a&gt;
page. This lets them go directly from the file to the poster. You also
have binary encoded versions of the format which adds a layer of
complexity if desired.
&lt;/p&gt;
&lt;p&gt;
The second thing I would consider is using &lt;a href=&#34;https://en.wikipedia.org/wiki/PCX&#34;&gt;PCX&lt;/a&gt; files instead of
GIFs. PCX is a pretty simple format. It uses a color palette and also
RLE compression so while it&amp;#39;s no longer as well known as GIF I think
it might present a more accessible way of getting to a format with Run
Length Encoding and a palette.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not sure of the exact direction I&amp;#39;d go in with this assignment but
these are the additional things I&amp;#39;d think about. It&amp;#39;s pretty nifty as
is but as with a lot of nifty assignments, part of the fun is
customizing it for your situation.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Evaluating Java IDES for teaching teachers.</title>
      <link>https://cestlaz.github.io/post/java-ides/</link>
      <pubDate>Fri, 08 Mar 2019 13:29:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/java-ides/</guid>
      <description>
&lt;p&gt;
Since Hunter uses C++ as it&amp;#39;s core language, I haven&amp;#39;t used Java much
in the past three years. That&amp;#39;s going to change pretty soon. Once we
start offering our CS teacher Certificate and Masters programs I&amp;#39;ll
once again start teaching with Java as that&amp;#39;s one of the langauges
that we want to prepare our teachers with.
&lt;/p&gt;
&lt;p&gt;
That means deciding on a set of tools and so I&amp;#39;ve been spending time
evaluating Java programming environments with an eye on the
beginner since not only do the teachers I work with have to be
comfortable with the tool but more importantly they will have to be
able to support the tool for all of their students.
&lt;/p&gt;
&lt;p&gt;
One tool we&amp;#39;re likely to use is &lt;a href=&#34;https://repl.it/&#34;&gt;repl.it&lt;/a&gt;. That&amp;#39;s an online environment
for Java and a bunch of other languages. There&amp;#39;s a lot to like about
it and teachers might go with it or a similar cloud based option in
their classes but it&amp;#39;s important that we also prepare teachers to
build programs locally.
&lt;/p&gt;
&lt;p&gt;
So, here&amp;#39;s my criteria and here&amp;#39;s what I found.
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
The tool has to install easily on all platforms
&lt;/h3&gt;
&lt;p&gt;
I started with my desktop Linux machine. I&amp;#39;m running LinuxMint which
is pretty mainstream and I installed the Java tools using Mint&amp;#39;s
package manager. The packages are openjdk-11 and it looks like running
Java 10. If the IDE or editor I installed  didn&amp;#39;t work off the bat it
was no good. If it installed and I liked it I&amp;#39;ll pass it off to
friends who use Windows and Macs to see if the install there is
equally seamless.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
The tool has to be easy to run 
&lt;/h3&gt;
&lt;p&gt;
After install you have to be able to run it easily. No fancy &lt;code&gt;java
-jar blah blah blah&lt;/code&gt;.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
I&amp;#39;m not looking for a professional tool
&lt;/h3&gt;
&lt;p&gt;
Professional tools can be too compex and do too much for students. I
was looking for the sweet spot of giving a nice amount of support but
not giving away the store.
&lt;/p&gt;
&lt;p&gt;
Here are the tools I looked at (and you can debate if something
belongs in the other category in some cases):
&lt;/p&gt;
&lt;h4 id=&#34;headline-4&#34;&gt;
Editors
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Emacs
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Gedit
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Vim
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Sublime Text
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Atom
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Jedit
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;headline-5&#34;&gt;
IDES
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Eclipse
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
DrJava
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Geany
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
BlueJ
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
IntelliJ
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
VSCode
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
JGrasp
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Editor vs IDE
&lt;/h3&gt;
&lt;p&gt;
The line between editor and IDE is a blurry one. I tend to think of an
editor as multi-purpose and multi-language where an also useful for
non programming text realted tasks whereas an IDE comes with more
programming bells and whistles. The truth is, though. that some IDES
can do well with non programming tasks and many editors are pretty
close to IDEs.
&lt;/p&gt;
&lt;p&gt;
In any event, for a teacher, there&amp;#39;s something to be said for keeping
it &amp;#34;close to the metal&amp;#34; and have them use an editor to edit source
code and compile from the command line. This doesn&amp;#39;t mean they
shouldn&amp;#39;t also see IDEs and perhaps use them with their students but
a teacher should know a little more about what&amp;#39;s going on than just
load a program, write some code, and click run. If a teacher is that
limited you end up in situations similar to that common comment from
people who finish a beginner course on Codecademy - &amp;#34;I finished the
course and I can program in their environment but I don&amp;#39;t know how to
actually make something anywhere else.&amp;#34;
&lt;/p&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
The Editors
&lt;/h3&gt;
&lt;p&gt;
Here the idea would be start as I mentioned above. Edit files adn then
compile on the command line. Eventually, though, many of these tools
can be used as IDEs
&lt;/p&gt;
&lt;h4 id=&#34;headline-8&#34;&gt;
Emacs
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;https://www.gnu.org/software/emacs/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve got to start with my tool of choice although I can&amp;#39;t really be
unbiased. I think it gets a bad wrap because it&amp;#39;s old and out of the
box looks plain but, yes, you can use your mouse and it does have
menus. The upside is that it can do everything an IDE can do and a
thousand times more. I do email, read rss feeds, maintain my calendar
and more in Emacs. 
&lt;/p&gt;
&lt;p&gt;
The downside is that it doesn&amp;#39;t do Java well out of the box and kids
like shinier objects. 
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t think I&amp;#39;d start the teachers with Emacs but I&amp;#39;d probably shift
my instruction to using it at some point and show some of the cooler
features (many highlighted in my &lt;a href=&#34;https://cestlaz.github.io/stories/emacs/&#34;&gt;Emcacs videos&lt;/a&gt;)
&lt;/p&gt;
&lt;h4 id=&#34;headline-9&#34;&gt;
Gedit
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://wiki.gnome.org/Apps/Gedit%0A&#34;&gt;https://wiki.gnome.org/Apps/Gedit%0A&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is a plain simple editor. You can bucket in notepad+ and whatever
the basic Mac editor is in here. Nothing special and nothing
fancy. It&amp;#39;s easy enough to load, edit a file and save but not much
more. I&amp;#39;d be fine using it were it not for better options.
&lt;/p&gt;
&lt;h4 id=&#34;headline-10&#34;&gt;
Vim
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.vim.org/&#34;&gt;https://www.vim.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
No
&lt;/p&gt;
&lt;h4 id=&#34;headline-11&#34;&gt;
Sublime Text
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.sublimetext.com/%0A&#34;&gt;https://www.sublimetext.com/%0A&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This was the hotness for a while and it&amp;#39;s a pretty slick editor. I
can&amp;#39;t recommend it for teachers though for two reasons. One is that
it&amp;#39;s not free (although it isn&amp;#39;t expensive). The other is that it&amp;#39;s
not open source. There were other hot editors before sublime and when
their companies folded or sunset the editor all those plugins and
customizations had to be redone on a new platform. 
&lt;/p&gt;
&lt;h4 id=&#34;headline-12&#34;&gt;
Atom
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://atom.io/&#34;&gt;https://atom.io/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Atom&amp;#39;s an editor I want to like. It&amp;#39;s open source and looks pretty
neat but it seems more focused on the JS ecosystem. I couldn&amp;#39;t find
enough Java related plugins to make it better than Gedit although it
was easy to theme and customize the keys. Were I not an Emacs guy I&amp;#39;d
probably use Atom for much of my non-Java development but it doesn&amp;#39;t
seem like a great fit for Java
&lt;/p&gt;
&lt;h4 id=&#34;headline-13&#34;&gt;
Jedit
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.jedit.org/&#34;&gt;http://www.jedit.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This looked like the strongest contender for Java. Not too
complicated. Nice syntax highlighting out of the box. It doesn&amp;#39;t do
completion but that&amp;#39;s arguably a good thing when teaching
programming (incidentally, Emacs doesn&amp;#39;t do completion out of the box
but it can be added so you can up the tools ability as the class moves
along). From my limited explorations you can install plugins like a
Java Linter and you can run a console from inside JEdit which means
you can actually type things like &lt;code&gt;javac file.java&lt;/code&gt; and then run the
program all from within the editor.
&lt;/p&gt;
&lt;p&gt;
Jedit also has some nice builtin macros for boilerplate code like
setters and getters.
&lt;/p&gt;
&lt;h3 id=&#34;headline-14&#34;&gt;
IDEs
&lt;/h3&gt;
&lt;h4 id=&#34;headline-15&#34;&gt;
Eclipse 
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.eclipse.org&#34;&gt;https://www.eclipse.org&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve used eclipse before and as a Java environment, it&amp;#39;s actually
pretty nice. You can customize the keys so I set mine to Emacs. It has
a lot of plugins, you can compile and test your program from within
the IDE and do tons of other things. It&amp;#39;s a VERY nice professional
tool.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t like it for teaching for three reasons. First, it does too
much. By giving too much professional support kids rely too much on
the tool. Second, it&amp;#39;s made for big projects using build systems not
small AP class programs consisting of one or two files where you run
javac manually. Yes, you can do this in Eclipse but it seems more
awkward. Third, becasue there&amp;#39;s so much going on you need a HUGE
screen and kids and schools might not have enough screen real estate.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s also a fourth reason which is that I installed Eclipse using
LinuxMint&amp;#39;s package manager and it crashed when running. If I&amp;#39;m going
to recommend a teacher roll out a tool that all of their students are
going to install at home on their own, at the very least it has to
install and run seamlessly.
&lt;/p&gt;
&lt;h4 id=&#34;headline-16&#34;&gt;
DrJava
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.drjava.org/&#34;&gt;http://www.drjava.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Like Eclipse, I&amp;#39;ve used DrJava before. It&amp;#39;s similar to DrRacket (nee
Scheme) and Dr. Python. It&amp;#39;s close to perfect. You get highlighting,
helpful error finding, can run your program from within Dr. Java and
more.
&lt;/p&gt;
&lt;p&gt;
The killer problem is that I can&amp;#39;t get the latest version to
run. Actually the first problem is that it&amp;#39;s just a jar file so you
have to run it with &lt;code&gt;java -jar drjava.jar&lt;/code&gt;. Beyond that, it didn&amp;#39;t
work out of the box. It loaded but compilign and running didn&amp;#39;t After
some mucking around, I got it to compile but it doesn&amp;#39;t run the
programs. 
&lt;/p&gt;
&lt;p&gt;
This is too bad because when it runs it&amp;#39;s a terrific learning
environment.
&lt;/p&gt;
&lt;h4 id=&#34;headline-17&#34;&gt;
BlueJ
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://bluej.org/&#34;&gt;https://bluej.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is another tool that was DOA. I tried the debian package as well
as the jar file. Couldn&amp;#39;t get it working. 
&lt;/p&gt;
&lt;p&gt;
I have used an older version so I&amp;#39;ll describe that instead just
remember things might be different in the current version.
&lt;/p&gt;
&lt;p&gt;
BlueJ does one thing very well - objects. It visually shows object
creation and relationships. I recall that you can create an opject,
click on it&amp;#39;s box in a visual graph pane, inspect it, instantiate new
ones and in general explore and expirement. If you&amp;#39;re big on OOP and
like Object First by all means check BlueJ out. It&amp;#39;s probably best in
class for that approach.
&lt;/p&gt;
&lt;p&gt;
On the other hand, it&amp;#39;s a one trick pony. If you, like me, are not all
in on OOP or an Objects first and all the time approach it&amp;#39;s probably
not the tool for you. 
&lt;/p&gt;
&lt;h4 id=&#34;headline-18&#34;&gt;
Geany
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.geany.org/&#34;&gt;https://www.geany.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I hadn&amp;#39;t heard of this one before but it looks like a contender. It
has a  pretty clean interface and it worked out of the box. I
installed it using the package manager.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/geany.png&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Class browser on the right, files on the left and console (terminal),
compiler status etc on the bottom. It supports some level of
autocomplete but it doesn&amp;#39;t do everything. I&amp;#39;m not sure yet but it
might hit the completion sweet spot.
&lt;/p&gt;
&lt;p&gt;
It says it does snippets but I haven&amp;#39;t figured that out yet. 
&lt;/p&gt;
&lt;h4 id=&#34;headline-19&#34;&gt;
IntelliJ
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;https://www.jetbrains.com/idea/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
IntelliJ is fro JetBrains. They make a bunch of IDEs each focussed on
a different toolset but all with the same look and feel. You can also
add plugins to each to make them multi-modal. I believe the editor at
the core is JEdit. I&amp;#39;ve used their IDEs in the past and as far as
professional IDEs go I like them. They&amp;#39;re more lightweight than say
Eclipse and don&amp;#39;t need the real estate.
&lt;/p&gt;
&lt;p&gt;
Still, I think it&amp;#39;s too much for a beginner. For example, you can
in theory run your program from the build menu but, much like Eclipse,
it takes you to a configuration screen. I was pretty lost and I&amp;#39;m not
a beginner. Much like Eclipse it&amp;#39;s made for projects not small class
programs. 
&lt;/p&gt;
&lt;p&gt;
I found the Python version of JetBrains IDEs more approachable
probably because the ecosystem is much simpler.
&lt;/p&gt;
&lt;h4 id=&#34;headline-20&#34;&gt;
VSCode
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This one shocked me - I actually found myself liking a Microsoft
product. I guess this really isn&amp;#39;t your father&amp;#39;s Microsoft.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/vscode.png&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Much like Geany it has a clean interface and like Geany you don&amp;#39;t need
a whole Java build system. It does more completions out of the box
which you may or may not like as well as snippets. A single key will
compile and run your program and on top of all that it has en &amp;#34;Emacs&amp;#34;
setting for keybindings.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not sure if I like Geany or VSCode better but I think both are
really good options. I&amp;#39;d probably lean towards Geany due to the less
robust completions. Were I writing code for real rather than teaching,
I&amp;#39;d probably go the other way.
&lt;/p&gt;
&lt;h4 id=&#34;headline-21&#34;&gt;
JGrasp
&lt;/h4&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/vscode.png&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
JGrasp feels much the same as the other contenders - Geany and VSCode
but the interface just looks a bit clunkier to me. I know that&amp;#39;s
purely subjective. 
&lt;/p&gt;
&lt;p&gt;
The biggest difference I&amp;#39;m seeing out of the box is that JGrasp
doesn&amp;#39;t do completions so depending on where you fall with that you
might want Jgrasp for none, Geany for some, and VSCode for all.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;[EDIT]&lt;/strong&gt; JGrasp has a very cool visualizer built in that will animate
 your proram. Here&amp;#39;s a &lt;a href=&#34;https://www.youtube.com/watch?v=wuQowTV0o6s&#34;&gt;video&lt;/a&gt; of it in action. I&amp;#39;m going to have to
 play with this a bit and see if it pushes JGrasp up over the top for
 me. 
&lt;/p&gt;
&lt;h4 id=&#34;headline-22&#34;&gt;
Processing
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://processing.org/&#34;&gt;https://processing.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to talk about processing but I felt that it would be
negligent not to mention it at all. Processing is a IDE, wrapper and
graphical library that&amp;#39;s essentially Java under the hood (although
there are Processing bindings in many other languages probably the
most well known now is &lt;a href=&#34;https://p5js.org/&#34;&gt;p5.js&lt;/a&gt;). It&amp;#39;s great if you want to do graphical
work or base your class around the libraries that are available to
processing which include ones for web cameras, hardware access,
networking, sound and more but it&amp;#39;s not the same as an IDE or editor
for traditional Java development.
&lt;/p&gt;
&lt;h3 id=&#34;headline-23&#34;&gt;
Notes
&lt;/h3&gt;
&lt;p&gt;
Just about all of these tools have multiple themes and are fairly
customizable so don&amp;#39;t go by the screenshots above, on the homepages or
what they look like when you first install them.
&lt;/p&gt;
&lt;p&gt;
All of the tools I liked installed right out of the box either by
using the package manager or downloading and extracting from an
archive. I can&amp;#39;t say yet if they install as easily on a Mac or Windows
box but since Linux is usually the unloved stepchild of sortware
packaging and distribution my guess is that if anything it&amp;#39;ll be
easier on those platforms.
&lt;/p&gt;
&lt;h3 id=&#34;headline-24&#34;&gt;
Conclusions
&lt;/h3&gt;
&lt;p&gt;
I&amp;#39;ll always be an Emacs guy. Org-mode is too useful and I can get IDE
like behavior for pretty much any language I want to work in. In some
cases like Clojure, I haven&amp;#39;t seen an IDE that can match Emacs and
Cider, it&amp;#39;s premier Clojure development setup. I also haven&amp;#39;t a Git
interface nearly as slick and powerful as &lt;a href=&#34;https://magit.vc/&#34;&gt;Magit&lt;/a&gt; which works under
Emacs.
&lt;/p&gt;
&lt;p&gt;
For my teachers though, I&amp;#39;ll probably start with Geany or VSCode,
switch to Emacs for myself at some point in the program and make sure
to spend time on the command line along the way.
&lt;/p&gt;
&lt;p&gt;
If I missed any editors or IDEs or have something to add on one of the
ones I mentioned, please share in the comments.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2019 - the keynotes</title>
      <link>https://cestlaz.github.io/post/sigcse-2019-keynotes/</link>
      <pubDate>Mon, 04 Mar 2019 15:25:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2019-keynotes/</guid>
      <description>
&lt;p&gt;
It&amp;#39;s that time of the year to write a series of blog posts about
SIGCSE. I thought I&amp;#39;d start with one on the keynotes. 
&lt;/p&gt;
&lt;p&gt;
There were four keynote speakers. Marie desJardins, Gloria Townsend,
Mark Guzdial, and Blair Taylor. I wasn&amp;#39;t at the first timer&amp;#39;s lunch
where Townsend spoke so I won&amp;#39;t talk at all about that keynote.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also not going to summarize the talks. Andy Ko wrote up a terrific
summary of his &lt;a href=&#34;https://medium.com/bits-and-behavior/sigcse-2019-trip-report-celebrating-50-years-b3460835a09a&#34;&gt;SIGCSE experience&lt;/a&gt; and did a much better job giving
overviews to the keynotes than I ever could so I&amp;#39;ll just refer you to
Andy&amp;#39;s &lt;a href=&#34;https://medium.com/bits-and-behavior/sigcse-2019-trip-report-celebrating-50-years-b3460835a09a&#34;&gt;blog post&lt;/a&gt;. Rather, I&amp;#39;m just going to talk a bit about what they
left me thinking about. It might be something that&amp;#39;s pretty tangential
to the actual talk but hey, it&amp;#39;s the direction that the speaker sent
my brain to follow.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Marie des Jardin - the pinch hitter
&lt;/h2&gt;
&lt;p&gt;
Marie desJardins wasn&amp;#39;t supposed to be the keynote. She was filling in
for a flu ridden &lt;a href=&#34;https://en.m.wikipedia.org/wiki/Freeman_A._Hrabowski_III&#34;&gt;Freeman Hrabowski&lt;/a&gt; at the last minute and she did a
more than admirable job.
&lt;/p&gt;
&lt;p&gt;
The big line for me was her plea for us not to create &amp;#34;weed out&amp;#34;
courses but rather to create &amp;#34;launch&amp;#34; courses. I think this resonated
with many in the audience. It got me thinking about something that&amp;#39;s
been a concern of mine for a while. We see a lot of examples of making
student&amp;#39;s first CS experience more gentle and more varied. Probably
the biggest example is APCS-P but you can also find it in many college
CS0 classes. Hunter&amp;#39;s no exception - we&amp;#39;re now in the second year of a
more varied CS0 class (although truth be told, our problem
wasn&amp;#39;t so much that our old CS0 was a gatekeeper but more that
students hardly did any programming). 
&lt;/p&gt;
&lt;p&gt;
I started to become aware of the problem as I would hear stories of
kids who did Girls Who Code programs who then dropped out of CS
classes that were too hard and then later when my former students at
Harvard told me that many kids &amp;#34;dropped like flies&amp;#34; in the class after
CS50. I&amp;#39;ve also seen these problems at Hunter but at least here I know
we&amp;#39;re working on it. Having a more accessible entry point is terrific
but not if you just set the kids up to fail one step down the line. It
seems that not enough people are looking at the complete path: from
first course to last and the transitions in between. This is a hidden
danger. We can proudly say that diversity and enrollments are up based
on those first experiences and no one&amp;#39;s the wiser that we&amp;#39;re killing
the kids later on. We have to do better.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Mark Guzdial - the outstanding contributer
&lt;/h2&gt;
&lt;p&gt;
Mark was this year&amp;#39;s winner of SIGCSE&amp;#39;s Award for Outstanding
Contribution to CS Education. A well deserved award. Mark&amp;#39;s talk was
terrific and similar to the one he gave at the Code and Beyond
conference in NY which I wrote about &lt;a href=&#34;https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
As with the previous keynote you can get a great summary if you read
Andy&amp;#39;s post linked above.
&lt;/p&gt;
&lt;p&gt;
One point Mark made was that he felt that all students should learn
programming but if I remember the talk correctly he didn&amp;#39;t make a
strong statement about all students learning CS. He also said that
first course our CS majors take shouldn&amp;#39;t be the same as the first
course for non majors. I see where Mark&amp;#39;s coming from I&amp;#39;m not sure I
agree. Well, I do agree given what a first CS course for a major
typically looks like versus what a never-CS major might need for life but
the few CS0 for non major courses I&amp;#39;ve seen don&amp;#39;t leave their students
with enough to continue on to the CS major or a minor (which could be
valuable to a HUGE swath of students) so they end up taking the CS0
for CS majors anyway. This means one more course and one more
semester. More cost and more time spent. I&amp;#39;ll say that I do agree with
Mark UNLESS you can design a course that can address the needs of both
parties and the truth is I think you can. We did it at Stuy. Students
come back with that having been their only course and talk of its
usefulness and utility and students come back having used it to launch
a tech career in later high school, college, and beyond. What we built
isn&amp;#39;t perfect and is for a particular population but as proof of
concept it&amp;#39;s convinced me that a single course for both can be done
&lt;/p&gt;
&lt;p&gt;
Another one of Mark&amp;#39;s big points was taking CS into other subject
areas. I love this and I love when he said (apologies if the quote&amp;#39;s a
little off) &amp;#34;They need things and we can build stuff&amp;#34; as a call to
action to partner with and to develop the languages and tools needed
to support a new vision of CS embedded in other subject areas.
&lt;/p&gt;
&lt;p&gt;
My thoughts here are that as a community we are ignoring the realities
of K12 education. Mark mentioned Bootstrap World, a sprogram both he
and I like very much. It is embedded in Algebra classes and uses CS in
Racket (nee Scheme) to support learning said algebra. Mark noted that
Racket looks like Algebra and that&amp;#39;s one of the reasons Bootstrap
works. Another fact often left out is that algebra is frequently
taught either over two years or with a double period allocated to
it. It is given more time than most classes and that allows teachers to experiment
a bit more with instruction. Even if we develop more tools like
Bootstrap that align themselves to teaching other subjects those
subject teachers might not have the time to dedicate to the new
tool. Why not? That&amp;#39;s another thing Mark indirectly mentioned. At one
point he said that we might have to &amp;#34;take a step back&amp;#34; first in terms
of results and quite frankly, K12 teachers sometimes can&amp;#39;t take that
chance. In addition to not wanting to give their current students a
worse experience even with the promise that future classes would get a
better one they have to face the specter of high stakes testing. If
I&amp;#39;m using a new CS tool in a history class and my student&amp;#39;s test
results go down, they might have to repeat the class and the teacher
could put their license in jeopardy.
&lt;/p&gt;
&lt;p&gt;
In the end I loved just about everything Mark had to say but it still
got me thinking about a lot and to me that&amp;#39;s one of the hallmarks of a
great talk. 
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Blair Taylor - the controversy
&lt;/h2&gt;
&lt;p&gt;
Blair Taylor gave the final keynote and this one had some controversy
around it. Andy&amp;#39;s blog post again summarizes things well. 
&lt;/p&gt;
&lt;p&gt;
My only take on the content is that the talk was more about
Dr. Taylor&amp;#39;s journey and less about Cyber Security (I hate it that
it&amp;#39;s now just being called &amp;#34;cyber&amp;#34;) but that was fine. 
&lt;/p&gt;
&lt;p&gt;
What I want to talk about here is not so much the controversy over how
some people took parts of Dr. Taylor&amp;#39;s talk and the Q&amp;amp;A at the end but
rather the fact that more and more recently I&amp;#39;ve felt that as a
community we can&amp;#39;t talk about difficult issues concerning gender,
race, and the like. 
&lt;/p&gt;
&lt;p&gt;
I consider myself an ally to under represented and under served groups
but have found myself in situations recently where unless I 100%
parrot one side&amp;#39;s extreme view I&amp;#39;m accused of sexism or racism at
which point ANYTHING I say is treated as such. One is not allowed to
see any nuance in what is a very complex topic. 
&lt;/p&gt;
&lt;p&gt;
At one point, the speaker made a joke. She prefaced it with something
like &amp;#34;I&amp;#39;m going to tell this offensive joke&amp;#34; and that she could,
presumably because she is a women. The joke fell flat (although I&amp;#39;ve
told the story of the keynote to a few women in tech and they chuckled
and said they actually kind of liked the joke). My take was that the
speaker was setting the stage to maybe dive into a difficult
conversation. My take was also that some members of the audience right
then and there decided that the speaker was wrong about all things. 
&lt;/p&gt;
&lt;p&gt;
After the talk I was a bit more convinced that this was the case as I
read a tweet stream explaining what happened that included the joke
but none of the context for the reader to make an informed decision. 
&lt;/p&gt;
&lt;p&gt;
In the end, I felt that Dr. Taylor has honestly worked for under
represented groups and while this might be unpopular, her pragmatism of
sometimes swallowing an insult and &amp;#34;having a sense of humor&amp;#34; is the
right thing to do. Unfortunately, Dr. Taylor misread the audience and that
some people decided somewhere in her talk that even though she was
working to empower women in her own way, it wasn&amp;#39;t &amp;#34;my way&amp;#34; so it was
wrong. 
&lt;/p&gt;
&lt;p&gt;
The situation was unfortunate and my big fear is that as a community
we still have a long way to go before we can have these conversations
and personally, as someone who considers themselves an ally of the
undeserved I&amp;#39;m becoming more gun shy of partaking in discussions.
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
That&amp;#39;s all for now.
&lt;/h2&gt;
&lt;p&gt;
So, that&amp;#39;s my take on the keynotes. Much more to come on the
conference in future posts. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>March PD for CS Teachers</title>
      <link>https://cestlaz.github.io/post/pd-apcs-a-and-beyond-3-14-2019/</link>
      <pubDate>Tue, 26 Feb 2019 15:49:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-apcs-a-and-beyond-3-14-2019/</guid>
      <description>&lt;p&gt;
Back in December we ran our first &lt;a href=&#34;https://cestlaz.github.io/post/pd-apcs-a-and-beyond/&#34;&gt;PD session for CS teachers&lt;/a&gt;. This was
to address the need for professional development for teachers who were
more experienced in terms of computer science - we aimed this at people who were ready to
teach APCS-A, similar, or beyond and also to start to build a
community for these teachers. 
&lt;/p&gt;
&lt;p&gt;
We had trouble setting things up for February but we&amp;#39;re good to go for
March, April and May.
&lt;/p&gt;
&lt;p&gt;
Just as with our first session, each session will consist of a content
piece, a pedagogy piece, and will overall be driven by the
participants.
&lt;/p&gt;
&lt;p&gt;
The next session is set for Thursday, March 14 from 5:00 - 8:00 and
will be hosted by Digital Ocean. The sessions will earn you 3 CTLE
hours and dinner will be provided.
&lt;/p&gt;
&lt;p&gt;
If you or a CS teacher you know is interested in this, they can sign
up here: &lt;a href=&#34;https://goo.gl/forms/DCXqPtwYS47Ooo8j1&#34;&gt;https://goo.gl/forms/DCXqPtwYS47Ooo8j1&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why the Thomas Friedman&#39;s editorial on the College Board&#39;s Two Codes left me concerned</title>
      <link>https://cestlaz.github.io/post/college-boards-two-codes/</link>
      <pubDate>Tue, 19 Feb 2019 10:20:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/college-boards-two-codes/</guid>
      <description>&lt;p&gt;
There was some buzz over &lt;a href=&#34;https://www.nytimes.com/2019/02/12/opinion/college-board-sat-ap.html&#34;&gt;this editorial&lt;/a&gt; about the College Board last
week. The two codes every child needs - Coding and the US
Constitution? Who could argue with that.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to disagree. Civics and CS are important and can&amp;#39;t wait
until college. The thing that left me chilled though was that nobody&amp;#39;s
paying attention to the fact that the College Board - a private entity
with its own interests has so much influence over American education.
&lt;/p&gt;
&lt;p&gt;
In the piece, Friedman states:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
So rather than have SAT exams and Advanced Placement courses based on things that you cram for and forget, they are shifting them, where they can, to promote the “two codes.”
&lt;/p&gt;
&lt;p&gt;
In 2016, the College Board completely revamped its approach toA.P. computer science courses and exams. 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nothing wrong here but the AP program is supposed to offer &amp;#34;college
level&amp;#34; work in high school. Back when the program started, from 
best I can figure, they offered exams based on courses that were
essentially HS implementations of college classes. Now they&amp;#39;re
flipping the script. They&amp;#39;re dictating what they think should be
taught at the high school level and, oh by the way, it&amp;#39;s college level
because it has the AP designation. The editorial goes into some
details. Now, I&amp;#39;m not against what they&amp;#39;re doing with AP US Gov, it
sounds like a really good idea. I&amp;#39;m against their overall influence.
&lt;/p&gt;
&lt;p&gt;
The biggest concern I had though was with this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Besides revamping the government course and the exam on that subject, Coleman and Sanford in 2014 made a staple of the regular SAT a long reading comprehension passage from one of the founding documents, such as the Constitution, or another important piece of democracy, like a great presidential speech. That said to students and teachers something the SAT had never dared say before: Some content is disproportionately more powerful and important, and if you prepare for it you will be rewarded on the SAT.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If we put this on the SAT, schools will teach it so the kids will do
better the SAT.
&lt;/p&gt;
&lt;p&gt;
This should be chilling to everyone. 
&lt;/p&gt;
&lt;p&gt;
No, I&amp;#39;m not against the details but it&amp;#39;s frightening to have a private
entity with so much influence on public policy like
education. Ultimately, it can&amp;#39;t be good. Just because what the College
Board&amp;#39;s pushing in terms of civics jives with me doesn&amp;#39;t mean they
should be able to influence and manipulate curriculum across the
nation to such a degree. The College Board is pretty much accountable
to nobody. As long as students are told to take AP classes and the
SAT, particularly with politicians and boards of education agreeing to
pay the college board with taxpayers money, the public has very little
say. Sure, more better civics and CS is good but who&amp;#39;s to say the next
initiative will be in the public&amp;#39;s interest?
&lt;/p&gt;
&lt;p&gt;
The same can be said for any of the major education players - for and
non profit alike both in and out of CS. We have to be more aware,
vigilant, and vocal when the power players accomplish things by being
the 800 pound gorilla even when we agree with what some of those
things are.
&lt;/p&gt;
&lt;p&gt;
This is a big reason why I frequently speak out against the College
Board and other power players, some of whom I greatly like, respect,
and admire, and feel that others should feel obligated to do the same.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use A Real Language</title>
      <link>https://cestlaz.github.io/post/use-a-real-language/</link>
      <pubDate>Sat, 09 Feb 2019 15:08:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/use-a-real-language/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Why can&amp;#39;t we use a real language!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This topic has been coming up a lot recently. Now I&amp;#39;m not talking
about the Drag and drop vs textual language thing. Let me be clear. To
me a Drag and Drop language can certainly be a real language and many
are. I also think they&amp;#39;re terrific when used correctly. I just think
they&amp;#39;re frequently misapplied in later grades. 
&lt;/p&gt;
&lt;p&gt;
No, I&amp;#39;m talking about people asking things like &amp;#34;Why do we have to use
Java in our class, why can&amp;#39;t we use a real language like &lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt;__&lt;/span&gt;&lt;/span&gt;.&amp;#34; Or
at Hunter, I might get &amp;#34;Why do we have to use C++, why can&amp;#39;t we use
Java.&amp;#34; Back at Stuy I&amp;#39;d get the same question about Scheme and
Netlogo. It actually doesn&amp;#39;t really matter what language you
use. Someone else, usually a non-teacher always knows better.
&lt;/p&gt;
&lt;p&gt;
All of this reminded me of when I was young. 
&lt;/p&gt;
&lt;p&gt;
I started with BASIC and then in high school programmed Fortran IV
using punch cards on an &lt;a href=&#34;https://en.wikipedia.org/wiki/IBM_1130&#34;&gt;IBM 1130&lt;/a&gt;. At the time BASIC was considered a
toy language and Fortran IV not to mention punch cards were
yesterday&amp;#39;s technology. I also took APCS the first year it was offered
and that&amp;#39;s where I learned Pascal.
&lt;/p&gt;
&lt;p&gt;
I then went to NYU - The Courant Institute of Mathematical Sciences. There
we also used Pascal as the core language. That was the language used
in CS1, Data Structures, and Algorithms. It was also the default
language for other classes. That is, unless the class lent itself to
a specific language such as Lisp for AI you&amp;#39;d probably use
Pascal. I learned C early on in my college career and also took
classes that used Ada, and 8088 Assembly. I mostly tried to stick with
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
It was the hot language at the time and all the cool kids were
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
using it. Some kids continued to use Pascal but it was universally
derided. It wasn&amp;#39;t a &amp;#34;real language.&amp;#34; Nobody used it for anything
serious.
&lt;/p&gt;
&lt;p&gt;
Senior year it was time to look for a job. I ended up going  to
Goldman Sachs and developed for PCs running Windows 2.1 in C. They
also hired a bunch of college grads to program the Stratus systems in
PL1 and Cobol programmers for the mainframes. This was
around 1989. Goldman and most other big companies started you in a
training program. I already knew C but they ran a crash course for my
group. They did the same for the Cobol kids although most of them had
learned it in their business schools. The PL1 kids were grouped in
with the C and Cobol groups and had to figure out PL1 on their own
once they were assigned teams.
&lt;/p&gt;
&lt;p&gt;
My story tough, isn&amp;#39;t about Goldman. It&amp;#39;s about another big bank I
interviewed with. I won&amp;#39;t name them but it&amp;#39;s a big firm that still
exists today. I think they had at least a whole big building down on
the street back when I interviewed but I don&amp;#39;t remember. The interview
process was tough and thorough. We talked about the firm, what they
did, the platforms they developed and of course they drilled me on
what I brought to the table. The funny thing was that their entire
PC platform was built in, yep, you guessed it, Turbo Pascal. 
&lt;/p&gt;
&lt;p&gt;
Here was a really respected financial firm doing really interesting
tech and they were using that fake toy language that no kid would ever
use for real.
&lt;/p&gt;
&lt;p&gt;
So there you have it. All this &amp;#34;it&amp;#39;s not a real language&amp;#34; stuff is
largely nonsense. If it can solve your problem it&amp;#39;s real. If it can
teach your concept it&amp;#39;s real. The rest is nonsense.
&lt;/p&gt;
&lt;p&gt;
As a side note, my first programming gig was in the mid 1980s for a
ticket printing company - Arcus Simplex Brown. I worked on a computer
ticket printing system for them. It was in BASIC and ran on a little
PC running CP/M with a big line printer. Best I could figure they were
still using the same system in 2012.
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/ticket.jpg&#34; width=&#34;250&#34; height=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
So, don&amp;#39;t get caught up with someone else&amp;#39;s opinion of what&amp;#39;s a real
language just make sure your students are getting what they need.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sequencing Topics</title>
      <link>https://cestlaz.github.io/post/sequencing-topics/</link>
      <pubDate>Sat, 26 Jan 2019 16:06:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sequencing-topics/</guid>
      <description>&lt;p&gt;
Monday&amp;#39;s the start of the Spring semester. Other than the 8:00am start
I&amp;#39;m looking forward to it. My 8:00am class is the honors/lab component
that goes with CS1. I taught it last semester and during each of the
past two years at Hunter. My second class is the follow up  - more OOP
/ C++, data structures and some algorithms.
&lt;/p&gt;
&lt;p&gt;
The material is old hat. I&amp;#39;ve taught it in Java more times than I can
count and also in C++ albeit many years ago. What&amp;#39;s new is that I&amp;#39;m
teaching my Hunter kids and I&amp;#39;m doing it in a college framework - two
days a week, 1:15 a session. I&amp;#39;m not thinking too much about how I&amp;#39;ll
teach each class - I usually figure that out in the moment - not
actually in the class but week to week based on the flow of the
class. 
&lt;/p&gt;
&lt;p&gt;
Right now, I have to make final decisions on sequencing, at least for
the start of the class. We got ahead of the game by covering most of
the C++ topics - inheritance, templates, overloading etc. at the end
of last semester so that
leaves all the data structures, algorithms, dynamic structures, and
memory management, recursion, and sorting and searching. If I have
time I&amp;#39;d also love to get into some graph stuff. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the plan, at lest for now.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll start with recursion. They had the basics last term but now
we&amp;#39;ll talk about search - I usually focus this around a maze
solver. After this we&amp;#39;ll place recursion on hold - at least in terms
of class time and move to linked lists and dynamic memory. We&amp;#39;ll
follow this with sorting. The idea is that students have trouble
getting comfortable with both recursion and also with dynamic
structures first time through. Rather than ploughing  through from
recursion to the recursive sorts I&amp;#39;m hoping that putting the dynamic
lists in between will give recursion some time to marinate in the
background. Likewise I&amp;#39;m hoping that the dynamic memory stuff can
marinate through the sorting unit for when we revisit it with stacks,
queues, and trees after sorting.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if this is the optimal way of sequencing the topics but I
think it will work pretty well.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll see as the semester progresses. If things are going swimmingly I
can always call an audible.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts On Code And Beyond - Computational Thinking</title>
      <link>https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/</link>
      <pubDate>Mon, 14 Jan 2019 17:48:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/</guid>
      <description>&lt;p&gt;
The theme of this year&amp;#39;s &lt;a href=&#34;https://twitter.com/i/moments/1084877641285541889&#34;&gt;To Code and Beyond&lt;/a&gt; was Computational
Thinking. &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; gave the keynote. While the talk isn&amp;#39;t
currently online, check out &lt;a href=&#34;https://www.youtube.com/watch?v=N3uCb-95fFE&amp;amp;t=5s&#34;&gt;this talk&lt;/a&gt; that Mark gave last March. It&amp;#39;s
not the same but the second halves are and well worth a look.
&lt;/p&gt;
&lt;p&gt;
In the first half, Mark talked about other types of &amp;#34;thinking.&amp;#34;
Scientific thinking, engineering thinking and even historical
thinking. All had a good amount of overlap with both each other and
with computational thinking even as we haven&amp;#39;t yet settled on what
computational thinking actually is.
&lt;/p&gt;
&lt;p&gt;
This overlap is why I think that bringing CS into the primary grades
gives us an opportunity to reduce the achievement gap between rich and
poor. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already said that I&amp;#39;m not sold on hardcore CS and programming in
the early grades but rather it&amp;#39;s CT - the problem solving and
methodologies of CS that can effectively be part of the earlier
grades.
&lt;/p&gt;
&lt;p&gt;
Of course, that&amp;#39;s easier said than done. While there has been some
pushback recently we still have far too much emphasis on standardized
tests and elementary school teachers are way overworked. Trying to get
already overburdened teachers to add in a whole new subject area is a
big ask. The opportunity is that we might be able to develop aspects
of CT in a way that supports what elementary teachers are already
doing, possibly under the unlabeled guise of scientific thinking,
historical thinking, engineering thinking or some other thinking.
&lt;/p&gt;
&lt;p&gt;
This is already going on to a certain extent with individual teachers
at individual schools. Logic games and problem solving techniques have
always been explored by elementary school teachers who have freedom
from tightly packed test based curricula. These could be considered CT
and you could also add data collection and processing and I&amp;#39;m sure
many other things as well. This is where CS/CT can fit in the
elementary schools without adding to the teacher&amp;#39;s current
load. What&amp;#39;s more, if we can figure out how to incorporate these CT
concepts to support the subject matter already being studied we could
help close the gap between the haves and the have nots.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve said many times before that I&amp;#39;m not an elementary school
specialist but I still suspect this is the approach for CS in the
primary grades at least for the near term. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already got a pretty full plate between my work with Hunters
Daedalus CS honors program along with our pre-service programs being
very close to going live but I&amp;#39;m also hoping to do some work in
relating to this in the near future.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is There a First Grade Machine Learning Achievement Gap?</title>
      <link>https://cestlaz.github.io/post/is-there-a-first-grade-ml-achievement-gap/</link>
      <pubDate>Fri, 11 Jan 2019 15:24:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/is-there-a-first-grade-ml-achievement-gap/</guid>
      <description>&lt;p&gt;
Today was the fifth &amp;#34;To Code and Beyond&amp;#34; - a one day conference
hosted at Cornell Technion and once again Diane Levitt put together
a great show. The theme was Computational Thinking and the day
consisted of a variety of talks, panels, and activities. I plan on
writing about one panel in particular but for today I wanted to
address something that came up as a question. One attendee asked a
panel about the achievement gap - the fact that when the CS movement got
started in NY some of the more innovative and interesting work was
being done with some of our most vulnerable students. Recently, he
heard about a student who was doing Machine Learning in early
elementary school - first grade. The concern
he had was that when we started the less affluent populations might
have even been pulling ahead but now he&amp;#39;s concerned that the gap
between have and have nots will continue to grow even in this new
field.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not so concerned about the ML gap in the early grades and I
still think that we still have an opportunity to lessen the gap
between the haves and have nots with CS and more specifically CT.
&lt;/p&gt;
&lt;p&gt;
I was reminded about when I started fencing. I first picked up a foil
in 11th grade. Stuy had a senior heavy team that year. I was the only
new junior and there were a bunch of new sophomores. The following
year, we were the starting lineup. We were raw but we still managed
second place in the city. Most of us continued on to fence in USFA
events and then in college. I remember one of the first events we went
to. It was the under 20 qualifiers for the Junior Olympics National
Championships. There were a couple of superstars who recently came
over from eastern bloc countries there. Also a bunch of
fencers we didn&amp;#39;t know but we knew that they&amp;#39;d been fencing for
years - since they were 8, 9, 10. &amp;#34;They&amp;#39;ve been fencing for
years. We&amp;#39;ve only been doing it for one. How can we ever compete?&amp;#34;
I remember Jordan saying &amp;#34;Yeah, they&amp;#39;ve fenced for years but probably
a day or two a week, we&amp;#39;ve been doing it intensely every day for a
year and a half.&amp;#34; He also noted that when they were in their early
years their bodies probably weren&amp;#39;t coordinated enough to really
develop so much. He was right. The superstars dominated but then we
were very much in the mix and in fact took most of the qualifying
spots. 
&lt;/p&gt;
&lt;p&gt;
I also thought about teaching CS at Stuy. There were always kid who
came in to class with prior experience. That was clear on day one and
for the first few weeks. By the end of the first semester you woudn&amp;#39;t
know it based on overall class performance. The newcomers caught up
pretty quickly. 
&lt;/p&gt;
&lt;p&gt;
This is why I&amp;#39; not really concerned when I hear about a school doing
Machine Learning in first grade. How much can they really do and how
deep is it? Is the kid even really ready for it or are they just going
through the motions? Or, are they just doing something they&amp;#39;ve always
done in first grade and are just labelling it ML.
&lt;/p&gt;
&lt;p&gt;
I think that last option is fairly likely. It&amp;#39;s also why I think we
still have an opportunity to close the achievement gap as part of the
CS / CT movement. 
&lt;/p&gt;
&lt;p&gt;
When people ask me about CS in the early grades I first tell them that
I&amp;#39;m not an early grade specialist. I follow this by stating that I
think that well resourced schools have been doing thing that we now
consider CT for years - logic, problem solving, puzzles, etc.When a
group of students solve a problem and describe a solution that
includes repetition it used to be just problem solving. Now it&amp;#39;s
computation thinking. Sure, we can tease it out, formalize it and
expand on it but the schools and teachers with the resources and
freedom have already been doing this. 
&lt;/p&gt;
&lt;p&gt;
With the CS For All movement, we have an opportunity to bring this to
all our students not just the well to do ones.
&lt;/p&gt;
&lt;p&gt;
Of course this is easier said than done. We have to prepare them to
identify these CT practices and actively develop these skills in their
students. This means giving teachers the time, resources, and training
and not shorten the already tight tether to standardized multiple
choice tests. 
&lt;/p&gt;
&lt;p&gt;
At times I&amp;#39;ve been disappointed with the overall K12 CS Ed
movement. We&amp;#39;ve made great strides coming from nowhere to where we are
but as a community we missed the opportunity to bypass the mistakes
and bad ideas that teachers of other disciplines are plagued with. 
We still have this chance with Computational Thinking and the early
grades.
&lt;/p&gt;
&lt;p&gt;
I hope we do it right.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code, Data Structures, and Hidden Complexity</title>
      <link>https://cestlaz.github.io/post/aoc-data-structures-hidden-complexity/</link>
      <pubDate>Sun, 30 Dec 2018 15:17:14 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/aoc-data-structures-hidden-complexity/</guid>
      <description>&lt;p&gt;
Since 2015, &lt;a href=&#34;https://twitter.com/ericwastl&#34;&gt;Eric Wastl&lt;/a&gt; has gifted us each December with &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of
Code&lt;/a&gt; - a 25 day programming competition that I very much enjoy. This
year I haven&amp;#39;t been able to get to too many of the problems. I only
completed the first two days on the day they were released, problem
three a day late and then I didn&amp;#39;t get back to the problems until
almost 12/25 - the final day of the competition. I&amp;#39;ve spent a bit of
time over the break working through the problems. I&amp;#39;m currently
through 9. I started working through the problems in Clojure - part of
my yearly attempt to dive into the language but then did a few in
Python just to speed up my progress.
&lt;/p&gt;
&lt;p&gt;
Yesterday, I did &lt;a href=&#34;https://adventofcode.com/2018/day/9&#34;&gt;question 9&lt;/a&gt; which I found interesting as a teacher -
so much so that I think I&amp;#39;ll assign at some point in the future.
At the core of the problem you have to maintain a list of items
inserting and deleting items at assorted locations. I threw together
this solution:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_players &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;431&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 9&lt;/span&gt;
last_score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;70950&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 255&lt;/span&gt;
players &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(num_players&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)]

player&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
board&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
next_marble &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; next_marble &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; last_score:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; next_marble &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;#regular insert&lt;/span&gt;
        L &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(board)
        index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;L
        index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;L
        board&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(index,next_marble)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        players[player]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;players[player]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; next_marble
        index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(index&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;len(board)
        players[player]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;players[player]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;board[index]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; board[index]
    player&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(player&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;num_players
    next_marble &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; next_marble &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(max(players))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
It worked and I got my first star. This unlocked part 2 which changed
the number of marbles in the game from 70950 to 70950&amp;lt;b&amp;gt;00&amp;lt;/b&amp;gt;. This
brings me to my first observation - hidden complexity. Seeing my input
I knew my part 2 would be crazy slow. The solution requires you insert
and delete into a list over and over again and I did it using a Python
list and a Python list is backed by an array. This means that every
insert and delete will be linear and I had a whole bunch of them.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s another great simple example of hidden complexity. Students and
beginners use Python lists as if they were linked structures with
direct indexing - the best of all worlds. It&amp;#39;s great if you&amp;#39;re dealing
with small data sets but unless you&amp;#39;re careful things can get very
slow very fast. It&amp;#39;s important that students learn about this and it
appears that many don&amp;#39;t. 
&lt;/p&gt;
&lt;p&gt;
Even though I knew the program would take forever to run it was my bed
time so I started it on part two and turned in for the night.
&lt;/p&gt;
&lt;p&gt;
When I woke up I had an answer to part 2, entered it and earned my
next star. 
&lt;/p&gt;
&lt;p&gt;
Of course I knew that the solution should really be written using a
doubly linked list. The funny thing is that if you&amp;#39;re comfortable with
creating dynamic data structures like linked lists, writing a solution
using a doubly linked list and running it on part 2 actually takes a fraction of
the time of writing the original solution and running it. To make
sure, I did it. I decided to code it up in Java since I might assign
something like this to my students in C++. You can check it out &lt;a href=&#34;https://github.com/zamansky/advent2018/tree/master/java&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
The second take away was that it&amp;#39;s actually beneficial for students to
be able comfortable with pointers and dynamic memory and while
creating a linked list let alone a tree can be tricky at first, &lt;a href=&#34;https://cestlaz.github.io/posts/it-gets-easier-advent19/&#34;&gt;it
does get easier.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With all the debate going on over coding vs computational thinking vs
CS it&amp;#39;s things like this - thinking about things like this that marks
one of the ways a computer scientist is different from a programmer. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Visiting schools and talking tech</title>
      <link>https://cestlaz.github.io/post/fall-2018-tour-revisited/</link>
      <pubDate>Fri, 21 Dec 2018 15:49:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/fall-2018-tour-revisited/</guid>
      <description>&lt;p&gt;
Back in September I talked about embarking on my &lt;a href=&#34;https://cestlaz.github.io/post/fall-2018-hs-tour/&#34;&gt;Fall 2018 HS CS Tour&lt;/a&gt;.
Since then I&amp;#39;ve visited about a dozen schools. I&amp;#39;d like to thank my
friends who helped connect me to schools - particularly &lt;a href=&#34;https://twitter.com/aankit&#34;&gt;Aankit Patel&lt;/a&gt;
and &lt;a href=&#34;https://twitter.com/diane_levitt&#34;&gt;Diane Levitt&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Even though the original motivation for the visits was to get the word
out about Hunter CS and the awesome things we&amp;#39;re doing in the Hunter
CS Honors program I always tried to make my talks about something that
would be relevant for the entire audience and not just the few that
were great fits for my program. I think I&amp;#39;ve done a pretty good job at
that. All this said, doing these visits is incredibly draining. I&amp;#39;m
usually up at the crack of dawn and end up taking the subway or
sometimes subway and bus way out into the five boroughs. Actually four
this year since I wasn&amp;#39;t able to get a date to visit any Staten Island
schools. It takes a lot of time and effort and while I love
talking to students and there some ancillary things I enjoy about
getting out into the neighborhoods of the city I&amp;#39;m extremely happy
that I can now rest for a few weeks. 
&lt;/p&gt;
&lt;p&gt;
Reflecting on all of this I&amp;#39;m realizing how important these visits are
and not because they&amp;#39;re recruiting trips.
&lt;/p&gt;
&lt;p&gt;
I spoke about some of the specifics I talk about in an &lt;a href=&#34;https://cestlaz.github.io/post/fall-2018-hs-tour/&#34;&gt;earlier post&lt;/a&gt;
but arguably more important is that for many of them it&amp;#39;s the first
time for them to hear about the possibilities.
&lt;/p&gt;
&lt;p&gt;
While many students are excited about what they&amp;#39;re doing in their first
CS classes it turns out that few have any idea where it will
lead. They may have heard that computer science can lead to a high
paying job. They might know they can get a job at Google but they
don&amp;#39;t really know what that means.
&lt;/p&gt;
&lt;p&gt;
I saw this at Hunter when I started three years ago and now a lot of
hard work later students are much more in tune with the New York Tech
community and all that it means.
&lt;/p&gt;
&lt;p&gt;
Students don&amp;#39;t realize that there are many programming careers beyond
Google and their are many CS careers beyond programming. 
&lt;/p&gt;
&lt;p&gt;
They don&amp;#39;t realize they can combine computer science with almost any
other field or interest.
&lt;/p&gt;
&lt;p&gt;
They don&amp;#39;t know that the same algorithmic approach behind Amazon,
Netflix, and Spotify recommendations can be used by companies selling
cloths, cosmetics, or anything else.
&lt;/p&gt;
&lt;p&gt;
And that&amp;#39;s just the tip of the iceberg. 
&lt;/p&gt;
&lt;p&gt;
Now I&amp;#39;m not saying that teachers aren&amp;#39;t telling their students about
the possibilities but rather that sometimes it has to come from an
outsider. When I started at Stuy, before I had a reputation (good or
bad) I&amp;#39;d tell students things and they wouldn&amp;#39;t buy it. Later I&amp;#39;d have
a friend from the &amp;#34;real world&amp;#34; come in. Frequently they&amp;#39;d touch on
points I addressed in class and all of a sudden I was worth listening
to. Sometimes you need an outside voice to empower and authenticate the teacher.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying that I&amp;#39;m a super motivational speaker or anything like
that. I&amp;#39;m not. I&amp;#39;m an ok speaker with content worth listening to. I&amp;#39;m
just realizing more and more how important this small self imposed
corner of my job is. Not so much for Hunter but for the kids of NY. 
&lt;/p&gt;
&lt;p&gt;
Jut this past week I&amp;#39;ve started to work to connect some of my current
students to &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt; volunteers. If you read this blog you know I&amp;#39;m a
big fan of TEALS and have wanted to encourage my students to get
involved for a while. Once we get some of our Hunter CS majors into
schools around the city to help teach CS perhaps they can help spread
the message of the possibilities to even more students.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Professional Development - APCS-A, similar and beyond</title>
      <link>https://cestlaz.github.io/post/pd-apcs-a-and-beyond/</link>
      <pubDate>Sat, 15 Dec 2018 08:56:06 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-apcs-a-and-beyond/</guid>
      <description>&lt;p&gt;
A while ago I wrote about &lt;a href=&#34;https://cestlaz.github.io/post/pd-in-nyc/&#34;&gt;our plans&lt;/a&gt; at Hunter to run professional
development for CS teachers. Specifically, running once a month
sessions for teachers who teach APCS-A, similar and beyond.
&lt;/p&gt;
&lt;p&gt;
The idea started as a joke but morphed into a legit idea.
&lt;/p&gt;
&lt;p&gt;
I was talking to some friends about CTLE hours and how ridiculous the
system is. NY State teachers need 100 hours of CTLE credit (PD hours)
every so many years. It&amp;#39;s something of a scam for a few
reasons. First, two of the biggest providers are the NYC DOE and the
UFT, the teacher&amp;#39;s union. I&amp;#39;ve been told they both charge money for
many CTLE credit bearing activities. That certainly doesn&amp;#39;t seem
kosher – your boss and your union set up a system to charge you to keep your
job. 
&lt;/p&gt;
&lt;p&gt;
Well, it turns out that Hunter is certified to issue CTLE credits so
we joked that we should get dinner and hang out once a month and call
it professional development. We were only half joking - whenever you
get a bunch of teachers in a room they talk shop and that is actually
the best PD there is. Upon talking among ourselves and also to other
teachers we realized there was a legitimate need for PD for teachers
who were beyond the basics and so we turned this silly idea into the
real deal.
&lt;/p&gt;
&lt;p&gt;
Last Thursday we had our first session. We had about 25 attendees for
a three hour session.
&lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t tell you if it was any good - you&amp;#39;ll have to ask the
participants, I can tell you what we did and what we plan moving
forward.
&lt;/p&gt;
&lt;p&gt;
We started with a content piece. I ran through &lt;a href=&#34;https://cestlaz.github.io/posts/2013-03-23-who_won_the_election-quadratic_to_linear_time/&#34;&gt;this lesson&lt;/a&gt; (or &lt;a href=&#34;https://cestlaz.github.io/posts/when-they-change-the-script/&#34;&gt;this
one&lt;/a&gt;) where the students find the mode of a list, realize it&amp;#39;s a slow
(n^2) algorithm and then refine it to a linear solution. The key idea
is to give the students an intuitive feeling for run time issues and
also to introduce them to &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-17-hidden-complexity.html/&#34;&gt;hidden complexity&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
After this we had dinner, provided by our friends at Google. Over
dinner the teachers talked shop. In addition to getting to know each
other, their programs, and their classes we also asked them to
consider these three items:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
What are things that cause you difficulty that you&amp;#39;d like us to
cover?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What are things you wish you knew about that you&amp;#39;d like us to
cover?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What are things you&amp;#39;re comfortable with that you&amp;#39;d be willing to
share with the group?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
After dinner we circled up and JonAlf presented the way he set up
student note taking in his class.
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/pd-apcs-a.jpg&#34; width=&#34;500&#34; height=&#34;500px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
Finally, we discussed next steps - specifically what we came up with
for those three bullet points above.
&lt;/p&gt;
&lt;p&gt;
I like the idea of having at least one short content piece, one short
pedagogy piece and a deeper dive at each meeting. For the first one,
JonAlf and I had to guess as to what might be useful and at the
appropriate level. We advertised for teachers who did APCS-A, similar,
or beyond but I&amp;#39;m sure we had teachers for whom the mode lesson was a
bit too advanced to do without scaffolding and also some for whom it
was way to simple. As we continue to meet, we&amp;#39;ll nail down the right
level and the right activities.
&lt;/p&gt;
&lt;p&gt;
The real hope is that many of the participants will become regulars
and together we&amp;#39;ll turn this into both an amazing once a month
activity and also a community of teachers.
&lt;/p&gt;
&lt;p&gt;
Right now, I&amp;#39;m looking for companies who want to feed us and possibly
provide space so if you know of any, hook me up. We&amp;#39;re also collecting
feedback and ideas from the attendees. 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re targetting February for our next session followed by March,
April, May and possibly June.
&lt;/p&gt;
&lt;p&gt;
In the meantime, stay tuned.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching Sorting</title>
      <link>https://cestlaz.github.io/post/teaching-sorting/</link>
      <pubDate>Mon, 19 Nov 2018 20:04:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teaching-sorting/</guid>
      <description>&lt;p&gt;
Earlier today I saw a facebook post asking for thoughts on teaching
sorting. The question was specifically not  about motivations like
having the class act out sorts or sort cards but rather about the
coding. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been meaning to write about this since last summer when I
attended Owen Astrachan&amp;#39;s talk on the same subject.
&lt;/p&gt;
&lt;p&gt;
Early in my career when teaching sorting I developed the n^2 sorts as
standalone routines just as they&amp;#39;re presented in most books but as I
gained more experience as a teacher, I changed it up to build the
sorts (at least some of them) from existing concepts. 
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at the selection sort.
&lt;/p&gt;
&lt;p&gt;
We can demonstrate it by arranging an already dealt hand. Find the
smallest card place it all the way at the left. The next smallest,
next to it. Repeat until done.
&lt;/p&gt;
&lt;p&gt;
This is actually a very easy algorithm to develop using code the kids
have already written.
&lt;/p&gt;
&lt;p&gt;
By the time we do sorting, students have already written the code to
find the smallest or largest in a list time and time again. We&amp;#39;ve also
used that concept in developing other algorithms like the one I wrote
about &lt;a href=&#34;https://cestlaz.github.io/oldblog/2013-03-23-who_won_the_election-quadratic_to_linear_time/&#34;&gt;here&lt;/a&gt;. Assuming we&amp;#39;ve covered the ArrayList, We can easily code
up a sorting type algorithm (excuse any little Java errors, I&amp;#39;ve been
teaching this in C++ for the past 3 years):
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
      ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; min_index&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
          min_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; findMinIndex&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
          value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;min_index&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
          a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;min_index&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
          result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;value&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This won&amp;#39;t be efficient due to &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-17-hidden-complexity/&#34;&gt;hidden complexity&lt;/a&gt; but it&amp;#39;s very easy to
write and understand the algorithm
&lt;/p&gt;
&lt;p&gt;
From here it&amp;#39;s a simple matter to code this algorithm in place -
swapping the next smallest item each time. This time coded with an array::
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; min_index&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      min_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; findMinIndex&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// find min excluding what&amp;#39;s sorted so far
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;min_index&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      swap&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;],&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;min_index&lt;span style=&#34;color:#f92672&#34;&gt;]);&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you want, you can then break out the findMinIndex routine and the
swap so that kids see all the code in one place but regardless, this
is an easy, incremental way of teaching selection sort.
&lt;/p&gt;
&lt;p&gt;
You can do something similar with insertion sort. Start with the code
to insert an item into an already sorted list. Write that as a routine
and then put a loop around it to complete the sort.
&lt;/p&gt;
&lt;p&gt;
Developing routines like this incrementally has a number of
advantages. The code is simpler, it reinforces old concepts, and it
gives students additional practice in composing more complex solutions
from building blocks.
&lt;/p&gt;
&lt;p&gt;
You can use a similar approach to coding the more advanced sorts but
I&amp;#39;ll save those ideas for a future post.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>From Scripts To Freestyle</title>
      <link>https://cestlaz.github.io/post/from-scripts-to-freestyle/</link>
      <pubDate>Fri, 26 Oct 2018 17:35:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/from-scripts-to-freestyle/</guid>
      <description>&lt;p&gt;
I just read &lt;a href=&#34;https://medium.com/@bethanymarz/going-off-script-b69345fc5904&#34;&gt;this post&lt;/a&gt; by  &lt;a href=&#34;https://twitter.com/bethanymarz&#34;&gt;Bethany Crystal&lt;/a&gt; - &lt;a href=&#34;https://medium.com/@bethanymarz/going-off-script-b69345fc5904&#34;&gt;Going off script&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Bethany writes that while she normally essentially scripts important
presentations, this time she went more off the cuff.
&lt;/p&gt;
&lt;p&gt;
It made me think about how I teach and a disturbing trend I&amp;#39;ve
seen in CS education and education in general.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never strictly used a script for teaching. When I started I did
use &lt;strong&gt;very&lt;/strong&gt; detailed lesson plans. Back then I was teaching math. It
was also pre internet or at least pre internet as we now know
it. I had an account on &lt;a href=&#34;https://www.panix.com/&#34;&gt;Panix&lt;/a&gt; and the internet did indeed exist but
you couldn&amp;#39;t just look for teaching materials. I actually remember
bringing a modem in to Seward Park one day and showing a bunch of kids
this up and coming thing called the internet. I showed them usernet
news, a gopher server and a couple of other things.
&lt;/p&gt;
&lt;p&gt;
In terms of teaching materials, you could buy sample lesson plans from
the teacher store near the Board of Ed in Brooklyn. These were books
that were compilations of mostly handwritten lessons. 
&lt;/p&gt;
&lt;p&gt;
I basically copied and modified them. I had an &lt;strong&gt;aim&lt;/strong&gt;, a &lt;strong&gt;do now&lt;/strong&gt; key
questions were written as were definitions and summary
statements. Of course there were numerous sample problems and
exercises, all worked out
in advance. It wasn&amp;#39;t quite a script but it was a very well fleshed
out guide 
&lt;/p&gt;
&lt;p&gt;
As I gained experience and also shifted from math which wasn&amp;#39;t my
passion to CS, my plans become sparser. I&amp;#39;d still write down
definitions, maybe some solutions and a list of key points but a lot
of the particulars were gone. I didn&amp;#39;t write out key questions or
solutions to all the problems in advance. 
&lt;/p&gt;
&lt;p&gt;
As time went by the plans got sparser still. I&amp;#39;d still list the key
points I&amp;#39;d want to cover as well as notes on tricky parts of the
lesson but more often than not I&amp;#39;ll just go in with a bullet list.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my plan for a recent lesson:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Go over cipher soution
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How to we solve if already ciphered?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Rotate 26 times.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What about using stats
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Frequency of letters - look up
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Find freq of letter in string then use distance formula against
model
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Get frequencies from a book
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
try it in another language
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
We didn&amp;#39;t get to the last two bullet items so that&amp;#39;s where we&amp;#39;ll start
off on Monday. This plan was all I needed but it in no way tells the
full story of the lesson to anyone but me. It doesn&amp;#39;t include the
motivation, ancillary stories and materials nor how the lesson was
developed or delivered. I knew how it would play out because I was
teaching it and for me these notes were more than sufficient. 
&lt;/p&gt;
&lt;p&gt;
All this is not to say that I don&amp;#39;t spend a lot of time planning my
lessons. I do. I just don&amp;#39;t create detailed scripts. I know what I
want to cover and how I want to cover it. Then it&amp;#39;s just got to the
class and go.
&lt;/p&gt;
&lt;p&gt;
A big advantage of this is something that Bethany mentioned in her
piece - the ability to &amp;#34;read the room.&amp;#34; This is a big part of
teaching. If you&amp;#39;re following a script, you&amp;#39;re not reading the room
and you&amp;#39;re probably not really teaching the class. You might be
following a script but your students certainly aren&amp;#39;t and once they
veer off program you&amp;#39;ve got to abandon your script or you&amp;#39;re not doing
right by the class. 
&lt;/p&gt;
&lt;p&gt;
Having a direction but not a script makes it easier to &amp;#34;call and
audible.&amp;#34; That&amp;#39;s what led me to teach the &lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;question answering system&lt;/a&gt;
lesson the other day. It was unplanned but as a class we were having a
discussion and that&amp;#39;s where it led.
&lt;/p&gt;
&lt;p&gt;
As I mentioned, when I started out I couldn&amp;#39;t do this. I needed much
more detailed plans. That said, as a teacher gains more experience
they can better connect to their classes and do more for their
students by not sticking to the script, reading the room and adapting.
&lt;/p&gt;
&lt;p&gt;
This brings me to that trend that disturbing trend. I&amp;#39;m talking about
pushing &lt;a href=&#34;https://www.washingtonpost.com/news/answer-sheet/wp/2013/11/30/teacher-slams-scripted-common-core-lessons-that-must-be-taught-word-for-word/?utm_term=.6afd6d64f1c6&#34;&gt;scripted lessons&lt;/a&gt;. These crop up in charter schools and no
excuse environments and are typically used as ways of &amp;#34;compensating&amp;#34;
for teachers that don&amp;#39;t really know the subject area or how to teach
and to standardize teaching. To me it&amp;#39;s an attack on the teaching
profession. A script is great for a play. It&amp;#39;s great for a speech and
for some presentations but not for teaching. 
&lt;/p&gt;
&lt;p&gt;
I understand having something that&amp;#39;s more scripted to use when you&amp;#39;re
faced with novice teachers or teachers that are new to a subject area
but I fear that at times the scripted lessons are the end game.
&lt;/p&gt;
&lt;p&gt;
I was talking to a friend a few years ago. He&amp;#39;s doing great work in the
CS Ed space and among other things, he develops curricula. I mentioned
to him that I loved his work (still do) but I was concerned that his
materials were becoming much more scripted. His reply was something
like &amp;#34;I agree with you in theory but the truth is most teachers aren&amp;#39;t
you.&amp;#34; I understood his point as most of the teachers that used his
materials were novices but I disagreed that they were &amp;#34;not me.&amp;#34; I&amp;#39;m
nothing special. I&amp;#39;m just a reasonably bright guy who works hard at
his craft. If I can teach script free so can anyone. Maybe not at
first, but certainly after time and we subvert our profession by
settling for less. 
&lt;/p&gt;
&lt;p&gt;
As a final note, at this point in my career I actually find it very
hard to use a script - even for a presentation. Over the last couple
of years, I&amp;#39;ve been spending my Falls visiting high schools to talk
about Hunter&amp;#39;s &lt;a href=&#34;http://info.huntercs.org&#34;&gt;Honors CS&lt;/a&gt; program. As much as I tried, I couldn&amp;#39;t
script a presentation. No matter what I did, when I got in front of
the students I just ended up doing my thing and talking to them. At
the end of the day I ended up working things backwards. Over my first
few school visits, I developed a set of key points that I kept coming
back to and finally ended up with a list of bullet points that I can
pretty much follow when I do the &amp;#34;navigating from high school to
college in tech&amp;#34; talk. I guess I&amp;#39;m now working in reverse. Starting
free style and working back to a script.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Who Played Spiderman - part 3</title>
      <link>https://cestlaz.github.io/post/who-played-spiderman-3/</link>
      <pubDate>Tue, 16 Oct 2018 17:25:33 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/who-played-spiderman-3/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Parts 1 and 2
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-2/&#34;&gt;Part 2&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Part 3
&lt;/h2&gt;
&lt;p&gt;
In the first two parts of this set of posts I wrote about the
motivation and design a question answering system that can answer
&amp;#34;who&amp;#34; queries like &amp;#34;who played Spiderman&amp;#34; or &amp;#34;who shot John Lennon?&amp;#34;
It&amp;#39;s not perfect. When doing the Spiderman query, chances are the
desired answer will be at or near the top of the list of most
frequently appearing names but so will &amp;#34;Peter Parker.&amp;#34; How do you
distinguish between a real answer and a fictional name? Likewise, if
you ask &amp;#34;Who shot John Lennon?&amp;#34; You&amp;#39;ll probably get Mark David (if you
search for two word names) or if you&amp;#39;re more inclusive, Mark David
Chapman, but you&amp;#39;ll also find John Lennon at or near the top of your
results.
&lt;/p&gt;
&lt;p&gt;
This system may not be perfect but then again, it can be written by one or a
small group of students relatively new to CS in a few periods as
opposed to a team of full time Google Software Engineers. I also truly
 &lt;strong&gt;like&lt;/strong&gt; the fact that it isn&amp;#39;t perfect. Too many student experiences involve
perfect questions with predetermined perfect answers. I love the fact
that they see false positives and true negatives in this. I love that
they can get pretty good but not perfect results. This makes the
experience more interesting, more fun, and more authentic.
&lt;/p&gt;
&lt;p&gt;
This lesson can also easily be extended beyond &amp;#34;who&amp;#34; queries. &amp;#34;When&amp;#34;
queries are also pretty straightforward. Things like &amp;#34;When was D-Day&amp;#34;
or &amp;#34;When did Elvis die?&amp;#34; For a &amp;#34;when&amp;#34; query, you start the same way as
for a &amp;#34;who&amp;#34; query. Use the search API to get a bunch of documents that
mention the query terms. Then you look for dates. Dates can be even
easier to search for than names. Particularly if your students know
regular expressions. Dates could be things like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
two digits / two digits / two digits
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Month name number, number
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
or in regular expressions, something like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
[0-9]{2}/[0-9]{2}/[0-9]{2}/
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
(Jan|Feb|Mar…)[0-9]{2}, {0-9]{4}}
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Just as with &amp;#34;who&amp;#34; queries there are issues to deal with - searching
for &amp;#34;when did Elvis die&amp;#34; might give you when Elvis was born instead
but again, these are great motivators for further exploration and
discussion.
&lt;/p&gt;
&lt;p&gt;
So, there&amp;#39;s the project. What level of students can do this? It
depends. I first did this in my Software Devepment class. That class
was offered to student who had completed APCS-A. The class covered
using APIs and setting up a web application using Python and Flask so
they were able to do the entire project, soup to nuts. An APCS class
could also do the project without the web application just so long as
they have access to the search API. In fact, an intro programming
class could also have success with this project.
&lt;/p&gt;
&lt;p&gt;
This was actually one of the lessons I&amp;#39;ve missed since I haven&amp;#39;t been
able to work it into my Hunter courses so I was really happy when the
class discussion led me to call and audible and talk about it.
&lt;/p&gt;
&lt;p&gt;
I hope some of you out there experiment with it and if you do, I&amp;#39;d
love to hear about your tweaks, implementations and successes.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Parts 1 and 2
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-2/&#34;&gt;Part 2&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Who Played Spiderman part 2</title>
      <link>https://cestlaz.github.io/post/who-played-spiderman-2/</link>
      <pubDate>Sat, 13 Oct 2018 16:04:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/who-played-spiderman-2/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Parts 1 and 3
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-3/&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Part 2
&lt;/h2&gt;
&lt;p&gt;
When we left off &lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;last time&lt;/a&gt; we used a search engine API to gather a
whole bunch of documents with the term &amp;#34;played Spiderman&amp;#34; or &amp;#34;who
played Spiderman.&amp;#34; Now we have to process these documents to answer
the question. Fortunately, the documents are basically just big
strings of text.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re doing a &amp;#34;who&amp;#34; query  we want to find all the names in all
the documents. This leads to a class discussion on how to find names
in a large string. They&amp;#39;ll come up with rules like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
two adjacent words each with a capital first letter.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
an honorific (Mr, Ms, etc.) followed by a capitalized word
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A word that matches a name from a &amp;#34;popular name&amp;#34; list followed by a
capitalized word.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The class might come up with different or additional rules. Actually
writing the code to pull out the names is an nice little assignment
that can be done with classes at many different levels. A beginning
class might just use string operations while an intermediate one could
use regular expressions. 
&lt;/p&gt;
&lt;p&gt;
Will the students write code that always finds all the names? Probably
not. Will their code incorrectly identify some word sets as names?
Most likely. It doesn&amp;#39;t really matter. Actually, this is a good
thing. You now have a great platform to talk about false positives and
true negatives.
&lt;/p&gt;
&lt;p&gt;
Now the moment of truth - what&amp;#39;s the most common name? To answer that
you have to decide on the meaning of &amp;#34;most common.&amp;#34; Is it the name
that appeared the most times? How about the name that appeared in the
most documents? Does it matter? Whichever way you do it, chances are
the correct answer will be near the top of your list.
&lt;/p&gt;
&lt;p&gt;
Next up in part 3 - other types of queries and why I love this sequence of
lessons so much.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Parts 1 and 3
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-3/&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Who Played Spiderman part 1 or my Nifty Assignment (that was rejected)</title>
      <link>https://cestlaz.github.io/post/who-played-spiderman/</link>
      <pubDate>Thu, 11 Oct 2018 17:16:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/who-played-spiderman/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Parts 2 and 3
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
[[/post/who-played-spiderman-2/][Part 2]
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-2/&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I wasn&amp;#39;t going to teach this lesson today. I was planning on starting
a multi day project starting with an exercise in specification writing
and design.
&lt;/p&gt;
&lt;p&gt;
Beforehand though, we had to talk about classes. One of my students
asked if probability and/or statistics were really important for CS. I
started to cite a few examples and then decided to segue into
this. Normally, I do this as a couple of lessons which leads to a
project, we just did the first part. I might do it as a project with
my class later on.
&lt;/p&gt;
&lt;p&gt;
I also submitted this as a &amp;#34;Nifty Assignment&amp;#34; for SIGCSE a couple of
years ago but it wasn&amp;#39;t accepted. I was going to share the lesson at
some point so, well, here goes.
&lt;/p&gt;
&lt;p&gt;
It starts with a question:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Who played Spiderman?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That&amp;#39;s it. Every student writes down their answer. No talking, no
Googling or other searching, just write something down.
&lt;/p&gt;
&lt;p&gt;
We then go around the room an tally up the answers. I got something
like this:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Toby Maguire&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tom Holland&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Andrew Garfield&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Peter Parker&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I don&amp;#39;t know&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
So as a class, we think that Toby MAguire played Spiderman with Tom
Holland also being a good choice. 
&lt;/p&gt;
&lt;p&gt;
After painstakingly explaining that Peter Parker couldn&amp;#39;t play
Spiderman because he &lt;strong&gt;IS&lt;/strong&gt; Spiderman I also shared some of the more
interesting answers I&amp;#39;ve gotten over the years.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve gotten &amp;#34;the lady playing the song on the violin in the movie in
front of the subway&amp;#34; which is technically correct and I also get
Willem Dafoe because as the Green Goblin / Norman Osborn he &lt;strong&gt;PLAYED&lt;/strong&gt; Spiderman.
&lt;/p&gt;
&lt;p&gt;
In any event, it appears that if we get a lot of data on who &amp;#34;played
Spiderman&amp;#34; it&amp;#39;s likely that the most popular result is the right
answer or at least the right answer will be among the most popular
results. Of course, this is &lt;a href=&#34;https://www.nbc.com/saturday-night-live/video/common-knowledge/n9612&#34;&gt;not always the case&lt;/a&gt; but with reliable
data sources. 
&lt;/p&gt;
&lt;p&gt;
So, the basic idea is that if we have a question to answer like &amp;#34;Who
played spiderman?&amp;#34; we can start by collecting a whole bunch of
documents from the web with terms like &amp;#34;played Spiderman&amp;#34; in them.
&lt;/p&gt;
&lt;p&gt;
When I first taught this lesson, we used the Google API to search for
web pages with the search terms in them but more recently I&amp;#39;ve used
the Bing API instead.
&lt;/p&gt;
&lt;p&gt;
This leaves us with a large number of documents that could potentially
answer a search for &amp;#34;who played Spiderman?&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll leave it at this for now. Next time, we&amp;#39;ll talk about how we can
go from this collection of documents to a likely answer to our query. 
&lt;/p&gt;
&lt;p&gt;
Tune in again tomorrow, same bat Time, same bat channel.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Parts 2 and 3
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
[[/post/who-played-spiderman-2/][Part 2]
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-2/&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Globals Breaks And Returns, oh my</title>
      <link>https://cestlaz.github.io/post/globals-breaks-and-returns/</link>
      <pubDate>Sat, 06 Oct 2018 15:48:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/globals-breaks-and-returns/</guid>
      <description>
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Never use global variables
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Never break out of a loop
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
These are two &amp;#34;best practices&amp;#34; that are frequently touted in early CS
classes both at the high school and college level.
&lt;/p&gt;
&lt;p&gt;
They came up a couple of times yesterday. Once in the Facebook APCS-A
teachers group and once on &lt;a href=&#34;http://blog.acthompson.net/2018/10/if-you-are-using-global-variables-you.html&#34;&gt;Alfred Thompson&lt;/a&gt;&amp;#39;s blog.
&lt;/p&gt;
&lt;p&gt;
Alfred post was topically on global variables. Actually it was deeper than just global
variables. It&amp;#39;s also about how students progress - what they can figure
out at various stages of progress and how what seems like a good idea
early on the path to computer science doesn&amp;#39;t seem so great later on.
&lt;/p&gt;
&lt;p&gt;
The discussion on the APCS-A group started with a discussion of this
code and its &lt;code&gt;break&lt;/code&gt; statement as opposed to having the loop&amp;#39;s exit
condition in the boolean up top:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;// do stuff
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;condition&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
These two &amp;#34;best practices&amp;#34; - not using globals and not breaking out of
loops are frequently taught to students at a point when reasons for
the best practice aren&amp;#39;t always clear. 
&lt;/p&gt;
&lt;p&gt;
Actually, these aren&amp;#39;t even universally best practices.
&lt;/p&gt;
&lt;p&gt;
Looking at the while loop, You might have event driven code with a
while loop acting as a dispatcher:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
      &lt;span style=&#34;color:#75715e&#34;&gt;// do stuff
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;some event&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; that event&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;some other event&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; that event&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

      &lt;span style=&#34;color:#75715e&#34;&gt;// etc
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;exit event&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Nothing wrong with that structure. It&amp;#39;s clean, easy to read and easy
to reason about. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen loops that use extra variables and crazy boolean expressions
so as to avoid using a &lt;code&gt;break&lt;/code&gt; statement so that they follow the &amp;#34;best
practice&amp;#34; but end up with much messier code.
&lt;/p&gt;
&lt;p&gt;
This is not to say that you should always use &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; for that matter but rather that the best practice should be to
consider if it makes the code cleaner, easier to read, and more
maintainable or not. 
&lt;/p&gt;
&lt;p&gt;
On the global front things are also not so clear. Sure, storing
information in globals  and then using them indiscriminantly in
assorted methods or functions is both bad form and dangerous but there
are times when using globals make sense. 
&lt;/p&gt;
&lt;p&gt;
Back in &amp;#34;the day&amp;#34; I was a C programmer. I used single C source files
along with their matching .h include files to enable &lt;strong&gt;object typed&lt;/strong&gt;
programming. Each file was a singleton object. Functions in the file
were methods using some naming convention to demarcate public vs
private, and variables that were global to the file as class variables
(or instance variables but there was only ever one instance of any
given class). Technically I broke the rules but the technique was very
effective and allowed me to write large maintainable systems. 
&lt;/p&gt;
&lt;p&gt;
More recently I&amp;#39;ve been playing with &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; for front end
development. Vue uses a central data store - Vuex to maintain
state. Basically a place for global variables to manage the state of
your application. Again, technically global but with rules and
protocols to make things work without the usual danger associated with
globals.
&lt;/p&gt;
&lt;p&gt;
A great comment on the Facebook thread &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; included this Hal
Ableson quote:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;#34;Programs must be written for people to read, and only incidentally for machines to execute.&amp;#34; 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and noted that this is particularly true on the AP Exam and after all,
the original question was posed on a forum about APCS-A. With this in
mind, you shouldn&amp;#39;t &lt;strong&gt;try&lt;/strong&gt; to use globals or cleverly or creatively 
use &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; but they do have their places.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve used globals in both professional and personal work when
appropriate and I don&amp;#39;t shy away from &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; and use
them regularly. The real &lt;strong&gt;best practice&lt;/strong&gt; is that you consider why you
are or aren&amp;#39;t using these constructs and make a choice that makes
sense for you, your group, or your team. 
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Footnotes
&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
While I will identify sources when they publish content publicly on ablog or Twitter, since
the Facebook group is semi-private, I don&amp;#39;t feel it&amp;#39;s appropriate to
state the names of commenters without asking]
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>When the students know more than the teacher</title>
      <link>https://cestlaz.github.io/post/students-know-more/</link>
      <pubDate>Thu, 04 Oct 2018 16:07:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/students-know-more/</guid>
      <description>&lt;p&gt;
We&amp;#39;ve heard it many times with computer science - &amp;#34;the kids know more
than the teacher.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
On the one hand, the truth is that this isn&amp;#39;t so much the case. Kids
might use computers all the time but they don&amp;#39;t necessarily know
much about them or about computer science (&lt;a href=&#34;https://cestlaz.github.io/oldblog/keyboarding-dig-divite/&#34;&gt;link 1&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/posts/2015-01-15-kids-know-nuttin.html/&#34;&gt;link 2&lt;/a&gt;). Then
you have students who think they know all about CS but really
don&amp;#39;t. They might have picked up a bit of coding somewhere but more
often than not, the knowledge is pretty superficial.
&lt;/p&gt;
&lt;p&gt;
On the other hand, you do have some cases where the students or a
subset of them do know more than the teacher. As K12 CS Education is
fairly nascent many of our teachers are brand new to the subject
matter. You might have kids who&amp;#39;s parents have a background and teach
them, kids who&amp;#39;s previous school had a solid program or you might have
some kids that are in that minority of people who can do it all on
their own. 
&lt;/p&gt;
&lt;p&gt;
In some cases, this problem will work itself out over time. States are
starting to require certification to teach computer science. Some of
these states have requirements that when met will result in teachers
who have a solid background in CS. In these cases, the problem will
eventually mostly be solved. Of course this will take years if not
decades and in states with weaker requirements the issue will never
disappear.
&lt;/p&gt;
&lt;p&gt;
The issue of having students knowing more than the teacher isn&amp;#39;t
always a problem. A solid teacher can make sure a kid that&amp;#39;s ahead of
the class doesn&amp;#39;t dominate and intimidate the rest of the class and as
long as the teacher adds some value to that student things can work
out. 
&lt;/p&gt;
&lt;p&gt;
In any event, I was thinking earlier today that as our subject area
gains traction and starts to mature, perhaps we can learn from other
fields where students knowing more than teachers is not that uncommon.
&lt;/p&gt;
&lt;p&gt;
The subjects that come to mind for me are art and music. Even though
NY has decimated it&amp;#39;s programs, there are still a few out there. When
I grew up and also through my children&amp;#39;s years in school there were
always students in all our music classes that were exceptional and well
beyond their respective teachers. 
&lt;/p&gt;
&lt;p&gt;
I never gave it much thought until now.
&lt;/p&gt;
&lt;p&gt;
I know that the disciplines are different but I wonder if there&amp;#39;s
something us CS teachers can learn from music and art teachers in
terms of dealing with this issue.
&lt;/p&gt;
&lt;p&gt;
Just some food for thought.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fall 2018 HS CS Tour</title>
      <link>https://cestlaz.github.io/post/fall-2018-hs-tour/</link>
      <pubDate>Sat, 29 Sep 2018 16:57:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/fall-2018-hs-tour/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve written before about why &lt;a href=&#34;https://cestlaz.github.io/posts/hunter-cs-important/&#34;&gt;Hunter College CS is so important&lt;/a&gt; for
NYC and I&amp;#39;ve been working hard to develop our Daedalus Scholars honors
CS program -  a program in which students receive a scholarship along
with all sorts of special opportunities to add on to their in class CS
education. The program and Hunter CS as a whole have &lt;a href=&#34;https://cestlaz.github.io/posts/hunter-cs-year-two/&#34;&gt;made a lot of
progress&lt;/a&gt; over the past two years and each year I roll out new
special activities and events for my honors students. Still, a major
challenges is getting the word out and building our reputation. Anyone
who takes a close look at what we&amp;#39;re doing can see we&amp;#39;re growing
something special but we still have to convince students and parents
who may not even realize that Hunter offers a CS degree to come to us
instead of going to more well known albeit much more expensive programs.
&lt;/p&gt;
&lt;p&gt;
To that end I try to visit as many high schools as I can during the
Fall semester to speak to high school seniors.
&lt;/p&gt;
&lt;p&gt;
I spent last Friday at Packer Collegiate.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Great to have &lt;a href=&#34;https://twitter.com/zamansky?ref_src=twsrc%5Etfw&#34;&gt;@zamansky&lt;/a&gt; come by and talk to juniors and seniors in the advanced CS about the tech sector and options for study including the amazing program at Hunter &lt;a href=&#34;https://t.co/ubHNfyt8Y9&#34;&gt;pic.twitter.com/ubHNfyt8Y9&lt;/a&gt;&lt;/p&gt;&amp;mdash; saber khan (@ed_saber) &lt;a href=&#34;https://twitter.com/ed_saber/status/1045768969519542272?ref_src=twsrc%5Etfw&#34;&gt;September 28, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I was invited by my friend &lt;a href=&#34;https://twitter.com/ed_saber&#34;&gt;Saber Khan&lt;/a&gt; who runs the weekly twitter
&lt;/p&gt;
&lt;p&gt;
When I first started doing school visits I had a tough time figuring
out exactly what to say - I&amp;#39;m no salesman - I&amp;#39;m not good at it and I
don&amp;#39;t like doing it. Fortunately, I didn&amp;#39;t have to be a salesman. I
decided I&amp;#39;d talk to the students about questions they should be asking
themselves as they consider where to go after graduation. I talk about
school location, community, and culture. I also talk about majors - BA
vs BS, Major vs Minor, niche majors, and possible career paths. I also
talk about tech sectors - how NY might be different from Sill icon
Valley might be different from Seattle or Boston.
&lt;/p&gt;
&lt;p&gt;
I also tell them the truth about the undergraduate experience - how
you can get a great CS background at all sorts of schools. How
Algorithms is Algorithms and no matter where you go you&amp;#39;ll probably
use the same text and how while I have many former students at the
Googles and Facebooks of the world that  have gone to MIT and CMU I
also have plenty who end up at those companies or similar going to
Stony, Oberlin, Tufts, and yes, Hunter.
&lt;/p&gt;
&lt;p&gt;
At the end of the talk I spend a few minutes talking about Hunter and
my honors program but it&amp;#39;s only a small part of the talk. I figure in
any given class there will be a few kids who could be a fit for my
program and I want the time spent to be worthwhile for the entire
class.
&lt;/p&gt;
&lt;p&gt;
Sometimes guidance people sit in when I talk to the students and
almost always they tell me how valuable it was for the students to
have someone like me come in and talk frankly about the college
application and acceptance process.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s going to take time to build our reputation at Hunter but I think
that going around to students and talking honestly about college and
not giving the hard sell helps build trust and our reputation and over
time, people will realize the value we&amp;#39;re bringing to the table and
come to us. It&amp;#39;s already happening.
&lt;/p&gt;
&lt;p&gt;
Now, the only other challenge is to get more high schools to bring me
in. Next week I&amp;#39;m visiting NEST+M and Brooklyn Tech and I&amp;#39;ve got a few
more on the calendar in upcoming weeks but would love to get to a
bunch more.
&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re at a NY area High School and you think there&amp;#39;s a fit -
hit me up - I&amp;#39;d love to visit and meet and talk with your kids.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS vs CT vs Coding</title>
      <link>https://cestlaz.github.io/post/cs-ct-cc/</link>
      <pubDate>Fri, 28 Sep 2018 12:08:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-ct-cc/</guid>
      <description>&lt;p&gt;
There&amp;#39;s been a lot of buzz recently concernting Computational Thinking
(CT) vs Computer Science (CS) vs Coding / Programming on the
interwebs.
&lt;/p&gt;
&lt;p&gt;
Some of the questions and concerns that I&amp;#39;ve seen recently include:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
What is CT??
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Will rich schools get CS and poor only CT?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Will rich schools get CS and poor on coding?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The first question is a big one and as a community we haven&amp;#39;t answered
it yet. I think about it as including things like algorithmic
thinking, decomposing problems, iterating, pattern recoginition and the like 
but I&amp;#39;m hardpressed to come up with a succinct formal definition. This
is somewhat related to the bigger problem of &amp;#34;what is CS?&amp;#34; A problem
the CS community is still dealing with. There seems to be an editorial
or letter in the &lt;a href=&#34;https://cacm.acm.org/&#34;&gt;Communications of the ACM&lt;/a&gt; every few months talking
about this. &amp;#34;We&amp;#39;re an enginering discipline. No, we&amp;#39;re a science. No
we&amp;#39;re an artistic endeavor&amp;#34; and on and on. It&amp;#39;s no surprise that the
rest of the world doesn&amp;#39;t understand what we are when we haven&amp;#39;t
figured it out ourselves. It&amp;#39;s also no surprise that this problem also
extends to CT.
&lt;/p&gt;
&lt;p&gt;
One thing seemed clear on the twitter threads and posts I read is that
people seem to believe that CT and Coding are potentially overlapping
subsets of CS but you can do CT and Coding without CS.
&lt;/p&gt;
&lt;p&gt;
While there&amp;#39;s probably a lot to say on the CT without CS or rather CT
without programming but today let&amp;#39;s look at the programming without CS
side of things.
&lt;/p&gt;
&lt;p&gt;
This is probably of particular concern to me as a high school and now
college guy. There&amp;#39;s no doubt to me that there&amp;#39;s a big difference
between a kid learning coding/programming and computer science. 
&lt;/p&gt;
&lt;p&gt;
Coding can be a useful skill but without at least some computer
science it&amp;#39;s of limited value. Look at code schools as examples. Many
code schools work to prepare their customers for entry level tech
jobs. Usually, this includes the fundamentals of programming on top of
a typical business toolset. Examples would be a node.js backend,
Mongodb, and React.js. Another, albeit older one so probably not
taught as much now would be Ruby on Rails. Upon completing the
program, one can create a formulaic full stack applicationand knowing
that formula can make you employable in our current tech sector. The
downside though, as I&amp;#39;ve heard from countless employers, is that code
school graduates, by training, can&amp;#39;t break out of that formula. They
just don&amp;#39;t have the context, nor the problem solving ability - they
lack the CS. I&amp;#39;m sure many go on to learn the CS but that&amp;#39;s another
story. I was talking to a code school founder a few years ago about
this and asked &amp;#34;what happens when the formula chages.&amp;#34; The answer I
got was &amp;#34;that&amp;#39;s ok, we&amp;#39;ll just bring them back for a new bootcamp.&amp;#34; Of
course that will cost the kid another 10K or whatever bootcamps are
charging these days.
&lt;/p&gt;
&lt;p&gt;
Now of course some code schools try harder than others and some
attempt build some CS into their programs but while there are always
outliers who can learn a great deal in a short period of time, and
often on their own, real education takes time and effort and a short
term bootcamp just doesn&amp;#39;t have that time.
&lt;/p&gt;
&lt;p&gt;
Back to schools.
&lt;/p&gt;
&lt;p&gt;
To start coding is easier to teach than CS. It can be formulaic and
there are lots of resources out there to assist teachers without a CS
background. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also easy to test and show off. 
&lt;/p&gt;
&lt;p&gt;
I was at the NYTM once and they were celebrating a code school
project. The idea was really a good one - automatic sensing of heat in
low income apartments. I had a couple of questions about getting their
data out to the authorities but thought that if they figured that out
it could really do some good. On the other hand there was practically
no CS. As the project was described - it sets up it&amp;#39;s own mesh network
and communicates heat readings etc etc., I said to my neighbor in the
audience - sounds like an arduino with an XBee shield and yep, when
they showed the case, it was the exact form factor to hold an arduino
and xbee. That told me there was no CS. The mesh networking is
automatically done by the XBee so all they had to do was take the
sample arduino code to read the heat sensor and instead of sending it
to the serial port as the sample code does, send it to a particular
XBee node. Pretty much no CS and almost no programming. Just a great
idea and gluing some components together.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen the same with student projects that have been highlighted at
events with funders and politicians and in the media. I won&amp;#39;t describe
them as they are student projects and wouldn&amp;#39;t do that to a student
but the projects really had no CS under the hood. Nice ideas or even
more importantly nice stories around the kid but it was glue and
simple basic programming not CS.
&lt;/p&gt;
&lt;p&gt;
Teaching real CS is harder to do, harder to assess and harder to show
off which makes teaching coding so enticing. 
&lt;/p&gt;
&lt;p&gt;
This is not to say that teaching coding without CS doesn&amp;#39;t have
value. I believe it does but it also leads to another problem – it
can be assessed improperly either with showy projects that are merely
gluing a theme on a fixed pattern or by tests that allow for
memorization and this at times has led to students being given too
much too early.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ve seen this with algebra and physics. Students end up taking these
subjects before they&amp;#39;re ready for them. They can pass the
standardized test  because they can plug numbers into formulas or can
recognize what form to use because there are a limited set of problem
patterns on the exams but they don&amp;#39;t really &amp;#34;get&amp;#34; the subject. This
leads to problems later on but of course that&amp;#39;s another teacher&amp;#39;s
problem.
&lt;/p&gt;
&lt;p&gt;
This also happens in coding classes. While it&amp;#39;s usually pretty clear
when a kid isn&amp;#39;t getting a CS concept, I&amp;#39;ve seen programming
experiences where the student at first or in the short term can appear
to pass the assessments but later on it&amp;#39;s revealed that they weren&amp;#39;t
ready and they didn&amp;#39;t really learn what they were supposed to.
&lt;/p&gt;
&lt;p&gt;
This is a problem. Just as we might have some students exposed to CT
without CS I think a major problem will be kids getting Coding without
CS. This will particularly be a danger in poorer schools and
communities but possibly across the board.
&lt;/p&gt;
&lt;p&gt;
Just another thing we have to really be on guard for as we try to
achieve CS for all.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Not every lesson has to be magic</title>
      <link>https://cestlaz.github.io/post/not-always-exciting/</link>
      <pubDate>Tue, 25 Sep 2018 18:08:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/not-always-exciting/</guid>
      <description>&lt;p&gt;
If you check out Twitter, Facebook, Medium  and other blog sites you
might get the idea that you&amp;#39;re the worst teacher in the world. The
internet abounds with people sharing tweets and posts about wonderful
lessons they&amp;#39;ve just taught, witnessed or learned about in
professional development. Sure, the teacher forums rife with requests
for lesson ideas and resources but the shared material is always aces.
&lt;/p&gt;
&lt;p&gt;
It makes sense, people in the community want to share things that
worked for them or things they think will work. 
&lt;/p&gt;
&lt;p&gt;
Still, for new teachers it can create an unhealthy illusion of what
really goes on in the classroom.
&lt;/p&gt;
&lt;p&gt;
This is not to say that sharing of the good stuff is a bad thing but
the truth is that not every lesson is a masterpiece, not every teacher
is a super charismatic showman, and not all topics lend themselves to
creative teaching.
&lt;/p&gt;
&lt;p&gt;
Why am I writing this now? Because I was planning lessons earlier
today and I&amp;#39;m at one of those places where I&amp;#39;m not going to be able to
deliver a whiz-bang lesson in my next class. One of my classes this
semester is for beginners so we&amp;#39;re building up language skills from
the ground up. Right now I want to do some loop applications but
there&amp;#39;s only so much we can do given what the students know. There are
reasons why I don&amp;#39;t want to do graphics with them right now. I also
haven&amp;#39;t introduced lists yet and don&amp;#39;t want to loop over strings yet
so I&amp;#39;m left with doing mathy stuff.
&lt;/p&gt;
&lt;p&gt;
I think I&amp;#39;ll look at Newton&amp;#39;s method for square roots. It&amp;#39;s
interesting for the math inclined and does let us explore issues with
floating point and accuracy. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not going to be super exciting for everyone though and that&amp;#39;s okay. 
&lt;/p&gt;
&lt;p&gt;
I could do lists first but I don&amp;#39;t want the kids to have to handle so
much new material so quickly. I&amp;#39;d rather keep the pace slower and work
with what they&amp;#39;ve just learned for a bit. 
&lt;/p&gt;
&lt;p&gt;
I could also do graphics but that adds a level of overhead I don&amp;#39;t
want to get into now.
&lt;/p&gt;
&lt;p&gt;
The idea is to look at the long game. A class runs a whole semester or
possibly a year. You&amp;#39;re going to have some special memorable lessons
and some mundane ones and that&amp;#39;s nothing to be ashamed of. 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re still mostly going to see best practices shared online with only
a few brave souls sharing disaster classes and asking for help. That&amp;#39;s
just how the internet works. It&amp;#39;s not the worst thing in the
world. Just remember when you&amp;#39;re struggling to come up with a good
lesson or you&amp;#39;ve just taught a bad one that tomorrow&amp;#39;s will be
better. Judge yourself by your students long term development, not one
day at a time.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What CS should we teach in HS</title>
      <link>https://cestlaz.github.io/post/what-cs-in-hs/</link>
      <pubDate>Sun, 23 Sep 2018 16:54:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/what-cs-in-hs/</guid>
      <description>&lt;p&gt;
I wanted to chime in on Alfred Thompson&amp;#39;s post last week on &lt;a href=&#34;http://blog.acthompson.net/2018/09/deciding-what-to-include-in-high-school.html&#34;&gt;what to
include in a HS CS class&lt;/a&gt; but was working on moving blogging platforms
so didn&amp;#39;t get a chance so I&amp;#39;ll say a few words here.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve been here before you probably know I&amp;#39;m not a fan of &lt;a href=&#34;https://cestlaz.github.io/posts/standards-who-for/&#34;&gt;the
standards&lt;/a&gt; and I certainly am no fan of the College Board and the AP
program so what&amp;#39;s my take?
&lt;/p&gt;
&lt;p&gt;
The truth is, my take doesn&amp;#39;t matter. Not in terms of specifics
anyway. Every school is different. Different kids, teachers, parents,
community, and culture so while there might be some things from the
program I designed at Stuy that work at another school there will be
plenty of things that don&amp;#39;t. I&amp;#39;m now designing first year experiences
at Hunter and while I take lessons earned away from my Stuy
experience, I&amp;#39;m now teaching different kids in a different environment
so the answer to the question &amp;#34;what do I teach them and how?&amp;#34; is different.
&lt;/p&gt;
&lt;p&gt;
The important thing to consider are the questions you should ask and
the answers you come up with.
&lt;/p&gt;
&lt;p&gt;
The first question is &amp;#34;why?&amp;#34; Why are you doing CS in your school? Is
it for kids already interested in CS? Is it &amp;#34;for all?&amp;#34; In either case,
what do you want them to get out of it?
&lt;/p&gt;
&lt;p&gt;
Is it for employment after high school? If so you might want to
consider locally used tools and technologies and also look at more
vocational tech like DevOps, SysAdmin and networking.
&lt;/p&gt;
&lt;p&gt;
Is it in support of other classes while in high school or college? You
might want to look at aspects of CS that cross over into other disciplines.
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll then have other questions dealing with resources, class size,
required classes vs electives and so on.
&lt;/p&gt;
&lt;p&gt;
At some point schools get to the point of figuring out what specific
topics to include. Many teachers now veer to an assortment of hot
topics that interest them or alternatively go the other way and try to
do whatever the students want. I&amp;#39;m not a  big fan of either. Don&amp;#39;t get
me wrong, if I worked in a rich private institution with tiny class
sizes and lots of resources I&amp;#39;d love to be student directed after the
basics but that&amp;#39;s a luxury that public school educators can&amp;#39;t really
afford. I&amp;#39;m also not a fan of the &amp;#34;hot topic&amp;#34; approach. 
&lt;/p&gt;
&lt;p&gt;
At Stuy, I tried to look at the complete sequence as a program. I
wanted the designation of &amp;#34;Stuy CS graduate&amp;#34; to mean something so I
looked at what the kids trajectories were after graduation and I tried
to develop a program that best launched them on that trajectory. That
meant designing an intro class that could both launch CS minded kids
into our more advanced classes and also give non-CS kids everything
they needed for their next levels. 
&lt;/p&gt;
&lt;p&gt;
The motivation and design of the intro course is a topic unto itself
but I&amp;#39;ll share what I considered when designing our post AP CS
courses. One of the first guidelines I follow is &amp;#34;don&amp;#39;t give them a
course that they&amp;#39;ll have to take later anyway.&amp;#34; A second is &amp;#34;set up
courses that support the students in what they&amp;#39;ll have to take later&amp;#34;
and finally &amp;#34;fill in the gaps.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
With this in mind, we ended up with a Graphics course, Systems course
and a two semester Software Development class and it&amp;#39;s worked pretty
well. 
&lt;/p&gt;
&lt;p&gt;
Had I been at another school and designed it&amp;#39;s sequence it would
likely look different. I would have developed the program the same
way but would likely have ended up with something different albeit
with similar themes.
&lt;/p&gt;
&lt;p&gt;
I get emails and calls now and then from schools asking for advice on
building their CS programs. Some want the easy way out - they want a
drop in curriculum with little regard for the fit or worse, they want
APCS because it&amp;#39;s AP. Those conversations usually don&amp;#39;t go
anywhere. Other schools ask for help and ask for a curriculum. I&amp;#39;ll
say I can&amp;#39;t help with that but I&amp;#39;d love to talk and to get to know the
school and together we can come up with the right program. That&amp;#39;s a
longer process and is more work. It&amp;#39;s also more likely to result in a
good sustainable program and building those are both better and a lot
more fun.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two Faces of Project Based Learning</title>
      <link>https://cestlaz.github.io/posts/two-faces-of-pbl/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/two-faces-of-pbl/</guid>
      <description>&lt;p&gt;
If one looks at my twitter feed they&amp;#39;ll notice that in addition to CS
Ed, another issue I&amp;#39;m passionate about is school reform or rather
resistance to what is popularly known as and mislabeled as school reform. I&amp;#39;m anti
vouchers, charter schools, high stakes testing and more. One of the
heroes of this resistance is education historian Diane Ravitch. I&amp;#39;m a
big fan of Diane&amp;#39;s and she&amp;#39;s one of the true great champions of public
schools, kids, and teachers. She blogged today about how a superintendent on Long Island &lt;a href=&#34;https://dianeravitch.net/2018/07/27/new-york-district-on-long-island-shows-that-problem-based-curriculum-produces-better-results-than-test-prep/&#34;&gt;replaced test
prep with project based learning&lt;/a&gt;. The post which talks about how this
superintendent improved test results  is worth a read. My only
quibble was that we shouldn&amp;#39;t read anything into the results for a
variety of reasons including the fact that the group of students who
did the project based learning (PBL) units instead of test prep were
self selecting volunteers.
&lt;/p&gt;
&lt;p&gt;
One of the comments caught my eye:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
PBL is just another “student-centered” fad…
&lt;/p&gt;
&lt;p&gt;
PBL operates on the myth of “transference” perpetuated by non-educators.
&lt;/p&gt;
&lt;p&gt;
…
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The comment continues on with a number of good points.
&lt;/p&gt;
&lt;p&gt;
Why am I writing about it here? Because PBL is a big CS Ed buzzword
and like most buzzwords there&amp;#39;s both truth at the root of the hype and
hype that distorts the truth.
&lt;/p&gt;
&lt;p&gt;
When done right with the right group of kids, project based learning
can be wonderful but it takes a lot of time and effort. You can&amp;#39;t just
set the kids loose to learn. You&amp;#39;ve got to train them to work
together, set up the project, as the teacher, you&amp;#39;ve got to know the
subject so as to know when to guide, when to tell, when to prod, and when to leave
them alone. Doing it right, at least for most students, is certainly
not giving them the instruction sheet and going off the check your
email.
&lt;/p&gt;
&lt;p&gt;
On the other hand, it&amp;#39;s easy to do it wrong. If you&amp;#39;ve got high
performing kids, they&amp;#39;ll figure things out. If you&amp;#39;ve got a few high
performing kids, they can mask the fact that the majority of a group
isn&amp;#39;t getting things. You might have an assignment where a kid figures
out a formula from discovered data and might be able to then use it to
make predictions but there&amp;#39;s a good chance they won&amp;#39;t understand why
it works or it&amp;#39;s root derivation. That&amp;#39;s where we need the teacher.
&lt;/p&gt;
&lt;p&gt;
One of the dangers of bad PBL is that it&amp;#39;s sexy. Kids are engaged and
it appears to work - particularly when the teacher doesn&amp;#39;t know the
subject area. This is my great fear whenever I hear things about
teachers being &amp;#34;Lead Learners.&amp;#34; Sure, when you&amp;#39;re a converted
something else teacher moving into CS you won&amp;#39;t know the subject
matter but that has to change over time. I&amp;#39;ve seen enough instances of
cases where teachers never develop their chops and just throw projects
at the kids augmented by scripted curricula or computer driver
content. The kids get through the class or program but are not
prepared for the next class or next level. I&amp;#39;ve seen this with the old
Cisco curriculum, any number of after school and summer programs -
some VERY highly regarded ones and I think we&amp;#39;ll see more and more of
this in states that are pushing CSforAll without developing the
necessary pre and in service programs for their teachers.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t let my last two paragraphs leave you feeling that I&amp;#39;m anti
PBL. I&amp;#39;m not. It&amp;#39;s great when done right and if you have thee time and
resources in your school and classes you should be using it when
appropriate.
&lt;/p&gt;
&lt;p&gt;
If you want some pointers on how to get going in the right direction with PBL in CS  check out &lt;a href=&#34;https://www.amazon.com/Computer-Science-K-12-Imagining-possibilities-ebook/dp/B07DYDXBSH/ref=sr_1_1?ie=UTF8&amp;amp;qid=1532808363&amp;amp;sr=8-1&amp;amp;keywords=doug+bergman&#34;&gt;this
book&lt;/a&gt; by my buddy Doug Bergman. It&amp;#39;s a great getting started guide by a
great teacher. He&amp;#39;s basically Mr. PBL and he does it right.  If you&amp;#39;re new to CS you&amp;#39;ll still need to learn content
and if you&amp;#39;re new to teaching, you&amp;#39;ll be developing your chops for
your entire career but it&amp;#39;s a great resource to get you and then your
kids started on the journey.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time To Create An Ethics Course</title>
      <link>https://cestlaz.github.io/posts/time-to-create-an-ethics-course/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/time-to-create-an-ethics-course/</guid>
      <description>&lt;p&gt;
I think it&amp;#39;s time for me to start developing a CS Ethics class.
&lt;/p&gt;
&lt;p&gt;
An ethics course isn&amp;#39;t a replacement for having teachers that live and
model good behavior and weave ethical issues throughout the curriculum
but still, adding a separate course on top of that has its merits.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not in a rush to create this course. I might be done in a month or
it might take a couple of years. When I&amp;#39;m done, I&amp;#39;ll add it as an
option in my CS Teacher education programs but hopefully it will be an
attractive course for undergrad CS majors as well.
&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s easy enough to come up with possible topics - privacy,
moral responsibilities, biased algorithms, net neutrality and on and
on I&amp;#39;m looking for this course to have a serious coding component. I
want the students to build things to really understand the
implications of what they&amp;#39;re studying.
&lt;/p&gt;
&lt;p&gt;
One topic I definitely want to cover is &lt;a href=&#34;https://news.harvard.edu/gazette/story/2011/10/youre-not-so-anonymous/&#34;&gt;anonimity&lt;/a&gt;. I&amp;#39;d love to find
the right combination of data sets and have the class discover that
some hidden information in the sets isn&amp;#39;t nearly as hidden as it seems
to be. When I was at Stuy, I was thinking about
having the kids give me permission to use their class schedules since
even with names removed we could probably identify many kids by
electives and overlapping classes. I have no idea what I&amp;#39;ll be able to
do at Hunter. If I can come up with something good I think this will
form the basis of a pretty amazing part of the class.
&lt;/p&gt;
&lt;p&gt;
Another project I&amp;#39;d love to put together is something dealing with a
biased algorithm. Again, I don&amp;#39;t know where this will go, maybe
something where I can seed the class so that different groups
implement some project differently and we can then analyze each groups
biases, hidden or otherwise.
&lt;/p&gt;
&lt;p&gt;
Beyond these two, I&amp;#39;m not sure.
&lt;/p&gt;
&lt;p&gt;
How about you? Anyone out there have any good ideas for programming
projects for an ethical CS course? If so, please share. It might be a
while but when I do finish putting this together I&amp;#39;ll be sure to
publish whatever the end result is.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2018 - Funding and Direction</title>
      <link>https://cestlaz.github.io/posts/csta-2018-future/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018-future/</guid>
      <description>&lt;p&gt;
In addition to everything I wrote about last time there were a couple
of other big announcements at this year&amp;#39;s CSTA conference. Both
announcements deal with funding.
&lt;/p&gt;
&lt;p&gt;
First, there is a new class of CSTA membership. The free tier remains
but now for $50 you can join &lt;a href=&#34;https://www.csteachers.org/page/cstaplus&#34;&gt;CSTA+&lt;/a&gt;. This new level of membership comes
with a bunch of extras that are probably good for K12 teachers but I
doubt I&amp;#39;ll use any of them. I did, however, get a snazzy CSTA+ water
bottle by joining at the conference. For me the interesting part is
that 50% of CSTA+ dues will go to support local chapters.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t exactly know what that means but it&amp;#39;s what got me to
join. Ultimately, local teaching communities are important and CSTA+
supports that, I&amp;#39;m all in.
&lt;/p&gt;
&lt;p&gt;
That said, what do chapters do? I know what goes on in NY but not
elsewhere. I bet the same is true for people all over the country. One
question that came up repeatedly at the conference, at least in my
circles was &amp;#34;what would the chapters use the money for?&amp;#34; I think it
would be wonderful if on the CSTA web site there was a page where
chapters could easily list activities funded by the central
organization. I&amp;#39;m not looking for a big write up - who has time to
read or write that. I&amp;#39;m looking for a line or two. What the chapter
did and maybe a few comments on details. Over time this could be  a
great way for chapters to steal ideas from each other.
&lt;/p&gt;
&lt;p&gt;
The other piece of big news was &lt;a href=&#34;https://www.linkedin.com/pulse/new-partnership-support-computer-science-teachers-mary-snapp-1c/?published=&#34;&gt;Microsoft pledging a big chunk of
change to the CSTA&lt;/a&gt;. I&amp;#39;ve often lamented that so many CS Education (and
education decisions in general) are decided by everyone except the
teachers. The CSTA is our teacher&amp;#39;s professional organization and our
best bet for teacher representation when policy is made and
implemented. Once again it appears that some of these funds will help
support local chapters.
&lt;/p&gt;
&lt;p&gt;
The Microsoft funding though got me thinking. The linked piece talks
about advocacy, professional development and curriculum. All important but
there&amp;#39;s an even greater need right around the corner. We need quality,
qualified CS teachers and we need them now. Taking a teacher with no
CS background and giving them some PD can be a stop gap but it isn&amp;#39;t a
solution. Long term we need pre and in service teacher preparation
programs similar to what we&amp;#39;re rolling out at Hunter. Programs that
include both pedagogy and content. As states begin to require these
programs, as they do in all other subject areas, teachers both new and
in service will have to take a number of graduate credits. In our
case, 18 for a certificate for an already licensed teacher and our MA
program is somewhere in the 30s.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d love to see money allocated to pay for CS teacher certification
through our public colleges as they (we) roll out programs.
&lt;/p&gt;
&lt;p&gt;
This said, the Microsoft commitment is great news for the CSTA and
CSTA is a great option for teachers that can afford it.
&lt;/p&gt;
&lt;p&gt;
Here in NY, our CSTA chapter is fairly young. I&amp;#39;m excited to see what
this year brings both on the local and national level.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I&#39;m not going to congratulate you on your AP results</title>
      <link>https://cestlaz.github.io/posts/ap-2018/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-2018/</guid>
      <description>&lt;p&gt;
While busy finishing off my sides for my talk at CSTA2018 this weekend
I noticed a Facebook post about APCS exam grades now or shortly being
available.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m no longer teaching high school but still fancy myself a teacher
first and part of the K12CS community. We&amp;#39;re a growing community and
we&amp;#39;re growing fast.
&lt;/p&gt;
&lt;p&gt;
Usually, at this time of year we see a number of people posting their
results. &amp;#34;I had 16 test takers, had 5 fives, 6 fours etc.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I decided that not only won&amp;#39;t I be congratulating anyone on their
results this year but decided to write this quick post to say no one
should.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying that hundreds of teachers out there don&amp;#39;t deserve
congratulations - they do. The problem is, for everyone who&amp;#39;s kids
got all fours and fives, somewhere out there was a teacher who
possibly through no fault of their own had students scoring ones, twos
and threes.
&lt;/p&gt;
&lt;p&gt;
When I was at Stuy, almost all of my kids got fours or fives when the
exam was the old AB exam. When it went to A only, it was almost
exclusively fives with a few fours and maybe a single one. That wasn&amp;#39;t
me. It was the kids. The AP CS teacher before me got similar results
as did all of my colleagues and the teachers who are still
there. Again, it was the kids.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s not to say that I didn&amp;#39;t add value. I know I spent a career at
Stuy doing right by those kids regardless of test scores.
&lt;/p&gt;
&lt;p&gt;
The fact is that there&amp;#39;s only so much a teacher can do.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Was APCS (A or principles) their first course?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What other demands are placed on the students?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How about the teacher?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How many kids in a class? How much time?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Is APCS an elective or required??
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Is the teacher getting the support they need?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
And the list goes on. I know some great teachers who never had classes
with great AP results and meh teachers that did. Actually, I know some
APCS and Calc teachers that consistently had classes with good scores
through drill and kill and building student speed. Of course, at the
same time these teachers totally turned the kids off from the subjects
&lt;/p&gt;
&lt;p&gt;
Our teachers do deserve praise and congratulations.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Praise for getting through another year.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Praise for forging a path in this new subject area.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Praise for doing more with less.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Praise for inspiring kids and starting them on a path.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Praise for changing lives for the better.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
And so on
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If your kids left with more than they came in with you did a great job
and deserve congratulations. If you set a seed that will later grow
you&amp;#39;ve done an enormous amount of good.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s like I would always tell my kids when they won an award. I was
never proud of them actually winning the award. I was proud of how they carried
themselves, prepared, performed or whatever. The award was just some
outsider also noticing they&amp;#39;re awesome.
&lt;/p&gt;
&lt;p&gt;
Same thing here so I won&amp;#39;t be congratulating teachers on student test
results. The results coming in do provide some measure of closure for
the year though so I will congratulate you all on the year and your
work.
&lt;/p&gt;
&lt;p&gt;
Hope to see many of you this weekend at CSTA2018.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talking about CS teacher certification at CSTA 2018</title>
      <link>https://cestlaz.github.io/posts/csta-2018/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018/</guid>
      <description>&lt;p&gt;
As I mentioned in my last post, this coming weekend is the Computer
Science Teachers Association (CSTA) conference. I&amp;#39;ve been a member of
CSTA since the beginning but this will be only the second time I&amp;#39;ve
made it to the annual conference.
&lt;/p&gt;
&lt;p&gt;
The CSTA conference might be the largest conference specifically for
k12 computer science teachers and that makes it different from
conferences like SIGCSE which is for CS education and education
research at all levels or ISTE which seems to be more of an Ed Tech
conference.
&lt;/p&gt;
&lt;p&gt;
I really enjoyed the conference last year but as the sessions seemed
to be weighted towards beginning CS teachers and towards the CSTA
standards I found most of the value in the &amp;#34;hallway track&amp;#34; when I got
to meet and chat with CS teachers from all over the country.
&lt;/p&gt;
&lt;p&gt;
Glancing at the program, there looks to be a bunch of interesting
sessions and this time more sessions that I think I&amp;#39;ll personally be
interested in .
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also giving a talk. New York State just approved and created K12
Computer Science Teacher Certification and we&amp;#39;re currently making
plans to roll out our Masters and Certificate programs for CS teachers
as soon as we get state approval. The Masters program will be largely
for preservice teacher candidates and the certificate program for in
service teachers certified in other areas.
&lt;/p&gt;
&lt;p&gt;
The talk will cover a bit of the history of CS Education in New York,
what the state is doing and mostly what where building at Hunter and
why. It should be a fun talk. I&amp;#39;m hoping for some people from other
states attend so we can have a rich discussion during the session.
&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re going to be at the CSTA conference, I&amp;#39;d love to see
you either at my session or at the conference in general. I&amp;#39;ll be
spending most of my non session time there with my friends at GitHub
education.
&lt;/p&gt;
&lt;p&gt;
For those of you can&amp;#39;t make it, I hope to blog about the weekend and I
hope others do as well.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PD for people who know CS</title>
      <link>https://cestlaz.github.io/posts/pd-for-cs/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pd-for-cs/</guid>
      <description>&lt;p&gt;
I saw a couple of tweets from Sarah Judd this morning:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A lot of CS Ed PD assumes you are new to CS. I really want CS Ed PD for people like us that came from a CS background and want to understand the pedagogy for CS in particular better. Do you know of some?&lt;/p&gt;&amp;mdash; Sarah Judd (@SarahEJudd) &lt;a href=&#34;https://twitter.com/SarahEJudd/status/1011785286693552139?ref_src=twsrc%5Etfw&#34;&gt;June 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Yes! I love SIGCSE and CSTA. I just feel like... Math teachers don&amp;#39;t get PD that starts with &amp;quot;and this is how you add and subtract!&amp;quot; and I&amp;#39;d love more CS PD that assumes the content is there, and can focus on the pedagogy.&lt;/p&gt;&amp;mdash; Sarah Judd (@SarahEJudd) &lt;a href=&#34;https://twitter.com/SarahEJudd/status/1011966102795059200?ref_src=twsrc%5Etfw&#34;&gt;June 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
It wasn&amp;#39;t the first time I&amp;#39;ve heard this refrain. Last year I attended
my first CSTA conference. I had numerous conversations with CS
teachers on the fact that everything was on an intro level in terms of
both content and teaching. Further conversations with local teachers
with stronger CS backgrounds led me to run a professional development
session at Hunter this past election day for more experienced CS
teachers at schools that offered more than the basics.
&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s not surprising that most of the PD opportunities for CS teachers are
rather rudimentary given that nationally most programs are new and
most teachers are new to the subject but there are a few deeper
reasons.
&lt;/p&gt;
&lt;p&gt;
To start, there are big players in the CS Ed movement that are pushing
curricula and specific programs and that leads to scripted PD for
their products and not depth of knowledge nor deep pedagogical content
knowledge let alone basic pedagogy. Add to this the fact that many of
the &amp;#34;thought leaders&amp;#34; in the space don&amp;#39;t have experience teaching CS
at the K12 level and in many cases don&amp;#39;t have a background either in
teaching nor tech and you can see where the problem comes from. On top
of this we have the erosion of respect for teaching as a profession
where reformers are trying to take the teacher out of teaching and are
trying to reduce pedagogy to following scripts. This problem goes well
beyond CS Ed but as the new kid on the block it probably hits us
hardest.
&lt;/p&gt;
&lt;p&gt;
In any case, preparing beginners is both necessary and appropriate for
the time being but we can and must do a better job than what&amp;#39;s
currently &amp;#34;state of the art.&amp;#34; At the same time we have to do something
with the CS teachers who indeed do have strong content knowledge but
don&amp;#39;t feel comfortable with imparting that knowledge.
&lt;/p&gt;
&lt;p&gt;
So, what should we do?
&lt;/p&gt;
&lt;p&gt;
For new teachers the solution will ultimately have to come
from pre-service programs but what we end up getting is going to
largely be dictated on what&amp;#39;s required by individual states. If states
merely require passing an exam like the Praxis CS exam which, from
what I can gather isn&amp;#39;t a horrible content exam then we&amp;#39;re going to
see CS teachers bumble through their early to mid careers while trying
to figure out how to teach CS much like I did way back when. If they
end up endorsing pre-service programs that are focused on specific
curricula - APCS-A for teachers, APCS-P for teachers, &lt;a href=&#34;https://cestlaz.github.io/posts/math-for-math-teachers/&#34;&gt;Math for Math
teachers&lt;/a&gt; if you will but for CS, we&amp;#39;re also not going to get strong
well prepared pedagogues. On the other hand if you can design a
program that has a strong pedagogical component to go along with the
content, you have a chance. Even with a well designed program
implementation will still be a challenge. Who will teach it? Education
professors who don&amp;#39;t have CS backgrounds? CS professors with little
pedagogical training? Neither of those groups necessarily have any
real experience as actual K12 teachers. If you can find honest to
goodness experienced, strong K12 CS teachers to teach your pedagogy
courses that&amp;#39;s a big win but that&amp;#39;s going to be hard in most cases.
&lt;/p&gt;
&lt;p&gt;
I think we designed a great program at Hunter and have a practical and
strong implementation plan. If you&amp;#39;re going to be
at CSTA2018 you can hear all about it and why we designed it as we did
in the talk I&amp;#39;m giving.
&lt;/p&gt;
&lt;p&gt;
For the more experienced I don&amp;#39;t have a universal answer but I can say
what I&amp;#39;m planning. Teachers in NY have to complete 100 CTLE hours
every five years. For beginners, there are plenty of options, at least
content wise. For teachers who know CS, not so much. I was at a meetup
talking to a few friends a couple of weeks ago and one mentioned that
they get most of their hours in Math for America CS
workshops. Unfortunately more than a few of my CS teacher friends who
are in MFA tell me that the CS content in these workshops, while they
do satisfy the hours, are somewhat lacking on the CS / CS pedagogy
side.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I&amp;#39;m planning - we (Hunter) will host a once a month
dinner/session for CS teachers who are a little farther along CS
wise. I haven&amp;#39;t worked out all the details yet but I&amp;#39;ve got a few tech
companies that are already interested in sponsoring and helping out
should we need anything and we&amp;#39;ll probably set most of our agenda for
the year at the first session where I&amp;#39;ll make my best guess at a
useful agenda. This is something I&amp;#39;m pretty excited about. It should
help create a network of more experienced CS teachers which will both
help bolster that segment of the community and provide a long term
resource to newcomers and it should be a lot of fun.
&lt;/p&gt;
&lt;p&gt;
In some ways, this is why I ended up joining Hunter. Regardless of
what the city and state do, we&amp;#39;re going to prepare the teachers and if
you have a well prepared teacher, you&amp;#39;ve got a shot.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should CS for All be implemented at the college level?</title>
      <link>https://cestlaz.github.io/posts/csforall-in-college/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csforall-in-college/</guid>
      <description>&lt;p&gt;
There&amp;#39;s been a lively discussion on pushback to CS for All at the K12
level over on Facebook. &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; started a sub thread asking if CS
for All should first be implemented at the undergrad level rather than K12.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s an interesting question and as good as anything to get me out of
my month long non-blogging rut.
&lt;/p&gt;
&lt;p&gt;
Mark was right when he said that if Colleges implement CS for All, K12 will
likely do so to follow - just look at AP. Colleges have been saying
that students should take more AP classes (while giving less credit)
and we all know where that&amp;#39;s led.
&lt;/p&gt;
&lt;p&gt;
On the other hand, can colleges really do CS for All, what does it
mean and what would it look like.
&lt;/p&gt;
&lt;p&gt;
Much like there is no single K12 - it&amp;#39;s 50 states and who knows how
many independent school districts, there won&amp;#39;t be a single CS for All
at the college level but let&amp;#39;s think about how things could play out.
&lt;/p&gt;
&lt;p&gt;
Many colleges have distribution requirements. Students must take one
course from bucket A, two from bucket B etc. Many schools that I&amp;#39;ve
looked at already  count CS courses in one of their distribution
buckets. This doesn&amp;#39;t mean every student will take CS but in theory
means they can. Colleges could in theory create a required CS bucket
or even a required CS course but I don&amp;#39;t think it&amp;#39;s as easy as
that. It might be at a private institution but while I don&amp;#39;t know all
the ins and outs of Hunter&amp;#39;s governance rules I do know that adding a
universal student requirement is a HUGE undertaking.
&lt;/p&gt;
&lt;p&gt;
So my take is that while it might be easy for a private college
to add a CS requirement I&amp;#39;m guessing other public institutions are
more similar to Hunter and it&amp;#39;s not going to be an easy task.
&lt;/p&gt;
&lt;p&gt;
Regardless, let&amp;#39;s say we have a required class on the books. Will we
have the capacity to teach it? It seems that schools are struggling to deal
with their existing CS majors and running sufficient electives and
courses for them. Just a month or so ago there was an article about a
college ending its CS minor due to lack of resources. It doesn&amp;#39;t sound
like a radically different problem then that faced in K12. Maybe it&amp;#39;s
harder given that at least in NY, there is &lt;a href=&#34;http://cestlaz.github.io/posts/room-for-csforall&#34;&gt;room for a required CS
course&lt;/a&gt; if you can find the teacher.
&lt;/p&gt;
&lt;p&gt;
Even so, assuming we have the capacity to enroll every undergrad in a
CS course what would that be? I think most people would be in
agreement that it shouldn&amp;#39;t be CS 101. Maybe existing pre-major
courses but even there I don&amp;#39;t know if that&amp;#39;s always the best
path. There could be a great pre-major course to give students the
basics and lead some into the major but what about a CS course for
students in majors that need some deeper but focussed programming
skills. The appropriate course for them isn&amp;#39;t the same as a
general/pre-major course. Using Statistics as an example, at Hunter,
many majors require a statistics course which is off loaded to the
Stats department. Each major has slightly different requirements. Over
years, the end result is a course that it seems that nobody is happy
with - a least common denominator course. CS for All at the college level
could give us a least common denominator course that doesn&amp;#39;t serve
anyone.
&lt;/p&gt;
&lt;p&gt;
Now, if you have the resources, none of these are issues. A well
heeled private institution can run tons of sections of specialized
classes no problem but this means just like on the K12 level we&amp;#39;ll
get the CS for All tale of two cities that I see coming in NY where
the rich schools have good programs and the poor get a substandard
experience.
&lt;/p&gt;
&lt;p&gt;
With all of this said, I&amp;#39;m finally getting to the big red flag with
college CS for All and it&amp;#39;s an issue that everyone conveniently
ignores. I&amp;#39;m talking about teacher quality. One of my big takeaways
from SIGCSE is that college faculty are well behind K12 teachers in
terms of pedagogy and I don&amp;#39;t see this changing anytime soon. This is
to be expected given that professor&amp;#39;s career advancement is really
based on research. Having a good teacher is always important but it&amp;#39;s
even more important for non-major students since a student in the
professor&amp;#39;s major will at least be passionate about the subject
area. To me, this is not a recipe for success.
&lt;/p&gt;
&lt;p&gt;
One can certainly make the claim that we aren&amp;#39;t any better off right
now at the K12 level because we don&amp;#39;t have teachers who know either
the subject nor how to teach it and at least at the college level they
know the subject matter. This is very true and it&amp;#39;s why pre-service CS
teacher preparation is so critical to getting this right even though
it will take time. That&amp;#39;s something that both Mark and I have been
vocal about but more on that subject next time.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>No Magic Bullets - Discovery Learning</title>
      <link>https://cestlaz.github.io/posts/no-magic-bullets-constructivism/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/no-magic-bullets-constructivism/</guid>
      <description>&lt;p&gt;
The most recent NYC CSTA chapter meeting was &amp;#34;How do I assess CS?&amp;#34; I
wanted to go but it&amp;#39;s been such a crazy month I was just too wiped
out. Fortunately, the meetup was &lt;a href=&#34;https://www.youtube.com/watch?v=XIMKAZbHAiA&amp;amp;index=83&amp;amp;list=WL&amp;amp;t=1796s&#34;&gt;recorded&lt;/a&gt;. I was able to watch the
first half this morning while working out on my &lt;a href=&#34;https://www.staczero.com/hero&#34;&gt;stationary trainer&lt;/a&gt;
which leads me to today&amp;#39;s rare Saturday morning blog
post. The meetup consisted of two panels. The first was made up of K12
teachers who taught CS. I can&amp;#39;t talk about the second panel yet since I&amp;#39;m
only halfway through but there were a couple of points made by my
friend &lt;a href=&#34;https://twitter.com/KatieJergens&#34;&gt;Katie Jergens&lt;/a&gt; who teaches at Dalton that I thought were worth
talking about.
&lt;/p&gt;
&lt;p&gt;
The first was when Katie noted that through working with the panel,
one of her takeaways was that:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Giving students an explicit strategy for solving a problem - &amp;#34;this is
how I would do it….,&amp;#34; - giving them an explicit strategy first and then giving them a
problem for which that strategy would apply is much more effective than
having them discover it on their own.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was refreshing to hear after being beaten over the head on
discovery learning and constructivism for the past five or so
years as being the magic bullet for teachers. I shared more thoughts
on this a few weeks ago when I wrote about a SIGCSE paper presented by
&lt;a href=&#34;https://cestlaz.github.io/posts/sigcse2018-bootstrap/&#34;&gt;Bootstrap World&lt;/a&gt; that I very much liked.
&lt;/p&gt;
&lt;p&gt;
Katie went on to talk about how the group found that while &amp;#34;discovery
learning&amp;#34; can be effective it can also be frustrating and lose kids
along the way. It also takes a lot of time and preparation, something
that&amp;#39;s short on supply in most public schools.
&lt;/p&gt;
&lt;p&gt;
This made me think about the recent flurry
of discussion around the debunking of learning styles which had
previously been the magic bullet. When I started, the secret sauce was cooperative
learning.
&lt;/p&gt;
&lt;p&gt;
Of course any good teacher knows there&amp;#39;s no magic bullet. You fill
your tool belt and chest with as much as you can and use what&amp;#39;s
best based on your strengths as a teacher combined with what will work
best with your students.
&lt;/p&gt;
&lt;p&gt;
Another point that Katie made that I found refreshing had to do with
something she does with her classes. A good portion of a student&amp;#39;s grade is
based on what she calls a &amp;#34;booster.&amp;#34; Each student has to work one on
one with her on some project. The student either scores a 0 or a 100 -
the student keeps working with the direct support of the teacher until
it&amp;#39;s perfect.
&lt;/p&gt;
&lt;p&gt;
The important thing that Katie said with respect to this is &amp;#34;I can
do this because my largest class is sixteen students.&amp;#34; No way could
this ever scale to a public school where a teacher can meet with over
150 students a day and barely has time eat lunch let alone
work one on one with a student in a suitably quiet place like an
office. The refreshing thing to hear was the acknowledgment of the
fact that what works in a rich private school won&amp;#39;t work in a public
school.
&lt;/p&gt;
&lt;p&gt;
All to often education and yes, CS Ed is driven by people who
really have no clue. They&amp;#39;re anointed as thought leaders but they
don&amp;#39;t walk the walk. Some have some knowledge and experience but many
don&amp;#39;t. Until you&amp;#39;ve gotten a few years under your belt in a strap
cashed public school that takes all comers, don&amp;#39;t tell them how they
should do it. Katie didn&amp;#39;t - she acknowledged the problem - too bad so
many others don&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m looking forward to watching the rest of the video during a future
workout and might have more to share then. For now, take a look for
yourself.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tools and Complexity</title>
      <link>https://cestlaz.github.io/posts/tools-and-complexity/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tools-and-complexity/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt; wrote about &lt;a href=&#34;http://blog.acthompson.net/2018/04/thoughts-on-where-cs-education-tools.html&#34;&gt;CS education tools&lt;/a&gt; earlier today. I&amp;#39;ve
also been meaning to write on the topic but from a different point of
view.
&lt;/p&gt;
&lt;p&gt;
I do my best to keep up with the latest and greatest in the CS world
both on the academic side as well as the professional one. That&amp;#39;s not
really possible, but I do my best. When I have a small project to work
on I&amp;#39;ll some times use it as an excuse to play with some recent
technology. Over December, I wanted to write an application viewer to
use for company / student internship matching. I started by looking at
&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; but ended up using &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; which I liked much more for a variety
of reasons.
&lt;/p&gt;
&lt;p&gt;
The viewer served it&amp;#39;s purpose but I think it can be turned into a
much more comprehensive student / employer internship platform. I
tried to steal a few minutes over this past week&amp;#39;s spring break to
start a rewrite using another toolset, Clojure, Clojurescript and
Reagent. I&amp;#39;m really liking the Clojure stack and using
Emacs and Cider for the IDE is really blowing me away.
&lt;/p&gt;
&lt;p&gt;
What I&amp;#39;ve noticed is that for every new language of framework you also
have to learn a whole set of ancillary tools.
&lt;/p&gt;
&lt;p&gt;
It didn&amp;#39;t used to be that way. Back in the day, things were much
simpler. I remembering doing work at Goldman Sachs, it was as simple
as typing something on the command line like &lt;code&gt;cc file1.c file2.c
file3.c&lt;/code&gt;. I of course had to be cutting edge and use fancy modern
tools like &lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;Make&lt;/a&gt;. What&amp;#39;s more, the tools I used in industry were very
similar to what I used in college.
&lt;/p&gt;
&lt;p&gt;
We now live in very different times.
&lt;/p&gt;
&lt;p&gt;
If you go to the getting started guides for React or Vue it&amp;#39;s pretty easy to
get hello world up and running but beyond that you start to fall in to
the Javascript tooling hole. To start you need either &lt;strong&gt;npm&lt;/strong&gt; or &lt;strong&gt;yarn&lt;/strong&gt;
just to manage packages and dependencies. Then you need a build system
or bundler like &lt;strong&gt;webpack&lt;/strong&gt;, &lt;strong&gt;browserify&lt;/strong&gt;, or &lt;strong&gt;parcel&lt;/strong&gt; and that&amp;#39;s not even
considering older options like &lt;strong&gt;gulp&lt;/strong&gt; and &lt;strong&gt;grunt&lt;/strong&gt; and ancillary tools
like &lt;strong&gt;babel&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
A typical React or Vue project is going to need a &lt;a href=&#34;https://github.com/krasimir/react-webpack-starter/blob/master/package.json&#34;&gt;project.json&lt;/a&gt; and
&lt;a href=&#34;https://github.com/krasimir/react-webpack-starter/blob/master/webpack.config.js&#34;&gt;webpack.config.js&lt;/a&gt; file and sometimes some other files as well. Check
out the links. They&amp;#39;re from a simple project template I found
online. Far from simple.
&lt;/p&gt;
&lt;p&gt;
When I was playing with Vue.js a couple of months ago, I ended up
using Webpack to convert the source code into the final JS, take care
of live-reloading, and in general manage the project. I still have no
idea how most of it works. I don&amp;#39;t know if it&amp;#39;s just me but I&amp;#39;m very
uncomfortable relying on tools that I really don&amp;#39;t fully understand to
build my systems.
&lt;/p&gt;
&lt;p&gt;
The Clojure world is little better with Leiningen and Boot. If you
don&amp;#39;t believe me, try to make heads or tails of &lt;a href=&#34;https://github.com/bhauman/figwheel-template/blob/master/src/leiningen/new/figwheel/project.clj&#34;&gt;this&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s true that as a professional you&amp;#39;ll likely use one set of
tools on a day to day basis and you&amp;#39;ll eventually get to know them
that doesn&amp;#39;t mean it&amp;#39;s not a good idea to prepare kids for what&amp;#39;s to
come.
&lt;/p&gt;
&lt;p&gt;
On the K12 side we have drag and drop languages, specialized learning
IDEs like BlueJ, simple cut down IDEs like Dr Racket and completely
online environments like repl.it. All great starter tools that
insulate beginners from the complexities to come. College&amp;#39;s
might get closer to the &amp;#34;real world&amp;#34; but just a tad.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong, I like many of the tools used in K12
classes and there&amp;#39;s far too much complexity in the professional world to
throw at beginners. If we look at a student&amp;#39;s entire school
career, classes are already so packed with material it would be hard to
really prepare kids for the real world within their classes. You could
take that tried and true teacher / professor technique of just
requiring it and having the kids figure it out on their own but that&amp;#39;s
really just downright abusive.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have an answer for this one.
&lt;/p&gt;
&lt;p&gt;
I have my kids use tools like Git and GitHub early along with using
testing frameworks and external libraries. I also try to move my
students to a general purpose programmable platform like Emacs or
Vim. I think these are sound practices but students will still have a
big learning curve when they finally get to industry.
&lt;/p&gt;
&lt;p&gt;
What I really would love it to see the tooling become simpler and
documentation better. &lt;a href=&#34;https://github.com/parcel-bundler/parcel&#34;&gt;Parcel&lt;/a&gt;, a Javascript bundler is one of the newer
kids on the block and is much simpler and cleaner than alternatives
like Webpack. The new version of Clojure has it&amp;#39;s own command line
tool which is also simpler than the alternatives. Maybe we are already
moving in the right direction and this entire rant will become moot in a couple of years.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NYC CS4All - This Is Not The CS We&#39;re Looking For</title>
      <link>https://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</guid>
      <description>&lt;p&gt;
It&amp;#39;s no secret that I&amp;#39;m something of an old curmudgeon in the K12 CS
Education world and I&amp;#39;ve been critical of a number of initiatives and
organizations over the years but I&amp;#39;ve been pretty quiet on the CS4All
movement in NYC Department of Education. I&amp;#39;ve had and any number of
concerns though.
&lt;/p&gt;
&lt;p&gt;
This past week at the inaugural meeting of New York City&amp;#39;s CSTA
chapter we got a taste of the &lt;a href=&#34;http://blueprint.cs4all.nyc/&#34;&gt;NYC CS4All Blueprint&lt;/a&gt;. A highlight was
this video:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe src=&amp;#34;&lt;a href=&#34;https://player.vimeo.com/video/224494221&#34;&gt;https://player.vimeo.com/video/224494221&lt;/a&gt;&amp;#34; width=&amp;#34;640&amp;#34; height=&amp;#34;360&amp;#34; frameborder=&amp;#34;0&amp;#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Along with the &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/3/%0A&#34;&gt;supporting web page&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
TL;DR - in a elementary school CS class, the students kept tapping out
drumbeats on the desk because they had drumming class the period
prior. Now the drumming teacher is teaching rhythms that match
segments of HTML so the students can tap and chant the line as a
memory aid.
&lt;/p&gt;
&lt;p&gt;
Sure, it&amp;#39;s nice when teachers can work together to support each other
but at the end of the day this is a mnemonic aid to memorize
HTML. Nothing particularly innovative here. Mnemonics like this are
great until there are too many to keep track of or ones that are too
similar.
&lt;/p&gt;
&lt;p&gt;
The part that saddened me was that this  was the video that was
chosen  as a highlight, an exemplar. It was OK but there was
nothing new or innovative. What was worse was that there was no
computer science.
&lt;/p&gt;
&lt;p&gt;
The kids were memorizing HTML. As we watched the video, my neighbor
nudged me and asked &amp;#34;why are they memorizing HTML?&amp;#34; I would ask the
same question. Now, I do think that HTML or some other mechanism to
create content that can be shared with the world is important. Having
students get there work out in the word can be tremendously rewarding
and motivating. Also, although I&amp;#39;m not sold on it, some say that HTML
is a good stepping stone to CS but still.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s try an experiment.
&lt;/p&gt;
&lt;p&gt;
Imagine that lesson but instead of HTML the kids were learning
Microsoft word so instead of a chant for &lt;code&gt;&amp;lt;a href=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; you have a
chant for putting a link into a word document or instead of a chant
for &lt;code&gt;&amp;lt;b&amp;gt;somethingbold&amp;lt;/b&amp;gt;&lt;/code&gt; you have a chant like
&lt;code&gt;control-b-typestuff-then-control-b&lt;/code&gt;. Same lesson, same technique,
still no CS. You could also say that this was just one video and maybe
most of the year is about real CS. Maybe, but then why highlight this
on the CS4All web site as a featured resource.
&lt;/p&gt;
&lt;p&gt;
This was disappointing but not surprising.
&lt;/p&gt;
&lt;p&gt;
Some will say that kids aren&amp;#39;t ready for hardcore CS at that
age. That&amp;#39;s fine. We can have that discussion but if CS is appropriate
for whatever grade was in the video then it should be real CS. We can
also have endless discussing about what that is but memorizing HTML is
not it.
&lt;/p&gt;
&lt;p&gt;
I wondered if the video was representative so I looked at &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/5/&#34;&gt;another&lt;/a&gt;. It
turned out this was also a lesson on HTML and again the video could of
been about any number of subject areas. I will give this one credit
for highlighting that you can do &amp;#34;unplugged&amp;#34; activities but it wasn&amp;#39;t
really a CS activity.
&lt;/p&gt;
&lt;p&gt;
Then there was &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/15/&#34;&gt;this one&lt;/a&gt;. No video here but how we structure a CS
lesson. We have this outline:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Warm-up
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Mini lesson
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Independent work time
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Share session
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Or, as we used to say back in the stone age:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Do Now
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Instructional activity
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
practice
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
summary
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Nothing new and nothing CS here. I used that model when I taught math
but deviated from it more and more as I developed my CS teaching
chops.
&lt;/p&gt;
&lt;p&gt;
Finally I looked at &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/24/%0A&#34;&gt;this one&lt;/a&gt;. For full disclosure I have to say that
Eric, the teacher, is a friend of mine and I &lt;strong&gt;&lt;strong&gt;know&lt;/strong&gt;&lt;/strong&gt; he&amp;#39;s a dynamite
teacher and I know he knows his stuff.
&lt;/p&gt;
&lt;p&gt;
This video, however was all about differentiation. Just like the other
resources, there&amp;#39;s nothing wrong with them per se but there&amp;#39;s not
really about CS. You could reskin them for any subject.
&lt;/p&gt;
&lt;p&gt;
I also agree with a lot of what Eric says in the video but as CS
Standards take hold and standardized exams become the norm we&amp;#39;ll find
that individualized instruction and meeting students where they are
is in direct conflict with the testing that comes with standards. I&amp;#39;ll
talk more about that in my standards rant that I keep putting off
writing.
&lt;/p&gt;
&lt;p&gt;
Sure, the resources site has  a page with concepts like algorithms and
many schools, for better or worse, in the upper grades just fall back
on AP offerings but the more I dig the more it&amp;#39;s apparent to me that
CS4All in NY will be more about getting something into every classroom
rather than something appropriate and good.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Cost of AP Exams</title>
      <link>https://cestlaz.github.io/posts/cost-of-ap-exams/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cost-of-ap-exams/</guid>
      <description>&lt;p&gt;
Now that I&amp;#39;m back from vacation and summer&amp;#39;s winding down I thought
I&amp;#39;d start getting back to more classroom related posts. I still have a
few summer topics I want to write about – standards and side projects
in particular but I&amp;#39;m also looking forward to talking more about the
classroom since, after all, at my core, I&amp;#39;m a teacher. When I saw &lt;a href=&#34;http://www.slate.com/articles/technology/future_tense/2017/08/how_online_textbooks_could_help_more_students_take_ap_exams.html&#34;&gt;this&lt;/a&gt;
article in my inbox this morning I thought I&amp;#39;d talk about it.
&lt;/p&gt;
&lt;p&gt;
In the piece, Lindsey Tepe since more kids are taking AP classes and
they&amp;#39;re very expensive, schools should look to lower other costs
related to AP classes so as to provide financial support so that
students can take that oh so important end of year exam:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
While the College Board continues to reimburse about one-third of the
test cost for eligible low-income students, only about half of states
are now offering any further financial assistance for students.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ms. Tepe&amp;#39;s solution? Lower text book costs. As a way of lowering
school costs, I&amp;#39;m all for it. I&amp;#39;ve used free online resources in lieu
of textbooks for years but the savings should go somewhere where it
can make a difference. Perhaps lowering class sizes. The fatal flaw in
Ms. Teps&amp;#39;s piece is that it continues spinning the misplaced narrative
that AP Exams are a very important part of a child&amp;#39;s education.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s be reminded of something: The AP Exam is one thing - an exam - a
single test at the end of the year.
&lt;/p&gt;
&lt;p&gt;
The narrative is that students should take more and more AP classes,
that they&amp;#39;re somehow better for kids. Part of this is due to the
potential college credit and part is because the public has been
bamboozled by the ridiculous school ratings that give credit for AP
classes taken. Back in &amp;#34;the day,&amp;#34; AP classes were basically early
college. You could then argue that they were the most rigorous classes
offered in a school. AP Calc was basically college Calc. Same for
APCS-AB, AP-Bio and the rest. Now, with classes like APCS-P aimed to
be accessible to typical high school students in the lower grades,
they can&amp;#39;t (but still will) make that claim. In fact, at Stuy, my
former school, there are plenty of non AP classes that are more
rigorous than AP classes and the best AP teachers don&amp;#39;t always cover
the whole syllabus because they&amp;#39;re more concerned with their students
actually learning rather than scoring 5 on an exam.
&lt;/p&gt;
&lt;p&gt;
On the college credit front, if a student has a high probability of
saving money through AP credit then I&amp;#39;m all for it but otherwise, it&amp;#39;s
just money going to the college board.
&lt;/p&gt;
&lt;p&gt;
It seems ridiculous for me to have to write this but the important
part of a class is, you know, the class. Not the single exam given by
an outside agency at the end and graded after the semester concludes.
&lt;/p&gt;
&lt;p&gt;
My suggestion? Offer college level work to students that are ready for
it but don&amp;#39;t push the AP exam. This would save a ton of money. What value
does the college board actually bring to the table? Remember, they&amp;#39;re
making a pretty penny on all of this testing. A math teacher should be
able to teach calculus with or without AP. A good text being used by
that teacher in class - be it free or paid for is actually much more
important to a student learning calculus than a single exam taken at
the end of the year. I&amp;#39;d go further and say that I&amp;#39;d trust the
teacher&amp;#39;s exam more than the college board&amp;#39;s. If a teacher knows the
math but needs to see some sample syllabi, they&amp;#39;re a web search
way. The same is true for most other college courses that have AP
equivalents and maybe even more so for computer science.
&lt;/p&gt;
&lt;p&gt;
At the end of the day it should be about students learning not about
students taking high stakes exams.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A friendly reminder to use the right language when describing CS</title>
      <link>https://cestlaz.github.io/posts/languages-or-cs/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/languages-or-cs/</guid>
      <description>&lt;p&gt;
I was part of this conversation the other day:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;When science teachers asked me if I taught AP Java I&amp;#39;d always respond by asking them if they taught AP Microscope.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/883327927831711745&#34;&gt;July 7, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I always use that line to emphasize that I teach CS - a way of
thinking and problem solving and looking at the world. The languages
we use in our classes are tools to help us communicate ideas not the
ends but rather a means.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve spent the past couple of days at the CSTA conference. It&amp;#39;s been a
lot of fun. I&amp;#39;ve been spending the time with old friends and meeting
new ones and as everyone who knows me knows - I love talking shop.
&lt;/p&gt;
&lt;p&gt;
I overheard a conversation today. One CS teacher describing what they
did to a few others. I overheard:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
We teach Scratch then Swift and C++ and also teach Python
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I heard statements like this describing programs more than a couple of
times. I know we&amp;#39;re at a conference of CS Educators but even in this
community we have everything from beginners getting their feet wet to
hardcore computer scientists to everything in between.
&lt;/p&gt;
&lt;p&gt;
We shouldn&amp;#39;t be teaching languages as an ends unto themselves and the
majority of us don&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
What many of us do, though, is take the easy path and use the name of
a programming language to describe what we do rather than really
define what we do. This is why we hear &amp;#34;I teach Java&amp;#34; or &amp;#34;I teach a
class in Swift&amp;#34; even when the teacher teaching Java might really be
teaching Object Oriented program design and development or data
structures or something similar just using Java as the language or
tool.
&lt;/p&gt;
&lt;p&gt;
I too fall into this trap but I try to catch myself. I try not to say
&amp;#34;I teach Scheme&amp;#34; but rather I&amp;#39;ll say &amp;#34;I teach Scheme. Actually, we&amp;#39;re
studying functional programming using Scheme as the language but for
convenience, I&amp;#39;ll just say Scheme for the rest of this talk….&amp;#34;
&lt;/p&gt;
&lt;p&gt;
The words we use to describe our field set the tone. If we&amp;#39;re sloppy
and say &amp;#34;we teach Java,&amp;#34; it&amp;#39;s just like biology teacher saying &amp;#34;I
teach microscope.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
As we try to define our field in the K12 space and seek equal footing
with established subject areas it&amp;#39;s important that we use the right
language so that other educators and policy makers don&amp;#39;t get the wrong
idea.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Plea to AP teachers- don&#39;t measure yourself by your scores</title>
      <link>https://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</guid>
      <description>&lt;p&gt;
AP scores just came out. As usual, I see the posts and take part in
conversations where teachers talk about their results. Some are happy
about their results, some aren&amp;#39;t, some don&amp;#39;t really care.
&lt;/p&gt;
&lt;p&gt;
I just want to make a plea to all AP teachers out there:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;Don&amp;#39;t let your value be dictated by the college board or any other
exam.&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I never really cared much about my students&amp;#39; actual AP scores. There
were a number of years when I never even saw the results. Of course, I
had a population that would do reasonably well regardless of teacher
so I was never placed under any pressure to &amp;#34;do better.&amp;#34; One year -
while the APCS-AB exam was still offered, my principal called me down
to discuss the results to see if we could get more kids scoring 4s and
5s (which most of the kids already did). I told him that I thought
we were doing fine, explained why I couldn&amp;#39;t advocate more teaching to
the test (such as more than paying lip service to the case study or
more rote practice on the multiple choice), and told him how I
measured our success as a program. He was happy with my answer and
that was that.
&lt;/p&gt;
&lt;p&gt;
The AP exam is one test on one day and in my opinion the least
valuable measure of my students&amp;#39; achievement. This is one of
the reasons I was so dismayed by the CSEd community&amp;#39;s efforts in
pushing the AP exams - not the class or the subject but the actual exam.
&lt;/p&gt;
&lt;p&gt;
So, how should you judge your success? That&amp;#39;s up to you. I can only
tell you how I judge myself.
&lt;/p&gt;
&lt;p&gt;
First and foremost - and I know this sounds cheesy - are you a &amp;#34;force
for good&amp;#34; in your student&amp;#39;s lives. Do you leave them in a better
place? Have you opened the door to a possible future for them? Have
you helped them grow? Beyond that, have they progressed in your
subject and as students in general.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had kids &amp;#34;fail&amp;#34; the AP exam and go on to wonderful careers in
tech and come back to thank me for giving them their start. I&amp;#39;ve also
had kids that have gone into other fields but appreciate what we&amp;#39;ve
done for them. I&amp;#39;ve also had my failures and I do mean my
failures. Students I couldn&amp;#39;t reach or couldn&amp;#39;t figure out how to
help.
&lt;/p&gt;
&lt;p&gt;
As teachers, we work day to day trying to improve but we can get a
great overview of how we&amp;#39;re doing by using a much longer feedback
loop - looking at what our graduates are up to. When young teachers
would comment on former students coming back or running into them at
tech events that they would have graduates of their own in a few years
and invariably they do.
&lt;/p&gt;
&lt;p&gt;
To really evaluate how you&amp;#39;re doing you have to go with the long
game. Very few people get that. I remember talking to a Google
Executive while I was designing CAPE 2010. He said something to the
effect of &amp;#34;I know we won&amp;#39;t know if this program works for about ten
years but we&amp;#39;ll have to come up with something short term to satisfy
the powers that be.&amp;#34;  That so few &amp;#34;get it&amp;#34; and need instant feedback
is one of the reasons that our society is so test driven. We shouldn&amp;#39;t
be. Our focus should be on helping the students learn and progress.
&lt;/p&gt;
&lt;p&gt;
So don&amp;#39;t get distressed over AP results and don&amp;#39;t get to high on them
either. Certainly don&amp;#39;t use them to drive what and how you teach. Let
your students and your conscience be your guide.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - Recap</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-recap/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-recap/</guid>
      <description>
&lt;p&gt;
As a high school teacher, I was never able to attend SIGCSE, the
conference of the ACM&amp;#39;s Special Interest Group on Computer Science
Education. Between the number of instructional days I would lose and
the cost, I could never justify going. Instead I looked over the
proceedings and read many of the papers.
&lt;/p&gt;
&lt;p&gt;
Now that I&amp;#39;m at Hunter, I was finally able to attend. This year in
Seattle, the conference ran from Wednesday through Saturday. I was
part of a panel on &amp;#34;Tools we can&amp;#39;t live without.&amp;#34; Over the next few
weeks, I hope to blog about a number of things I thought and talked
with people about over the conference including:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The path I use to teach git and why GitHub a good teaching tool
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
(my talk).
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The relationship of different CS Ed stakeholders - teachers,
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
researchers, organizations, etc.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Teaching at the high school level vs college - perceptions and
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
reality.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The challenges of tech tool adoption in schools.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What&amp;#39;s going on in K12 CS Certification.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Maybe some other stuff.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Today, some overall thoughts.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
The good
&lt;/h2&gt;
&lt;p&gt;
As with many conferences, the &amp;#34;hallway track&amp;#34; along with receptions
sponsored by &lt;a href=&#34;https://csnyc.org/our-work/cs4all&#34;&gt;the CS4All consurtium&lt;/a&gt;, &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt;, &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt; were terrific. I
was able to finally meet in person many people who I&amp;#39;ve only known
virtually and got to know many more as well. I left the conference
with a much larger address book and a long list of follow up
items. Being in Seattle, I also enjoyed being able to spend time with
people from &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt; and &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt;, two of the CS Ed groups working hard
to do some real good (yes - I do like and support these guys even
though I call them out on things I disagree with, but that&amp;#39;s the
subject of another post).
&lt;/p&gt;
&lt;p&gt;
I attended sessions on CS certification, teacher preparation,
assessments, POGIL based instruction to name a few. They ranged from
valuable to interesting and to be honest, a couple of &amp;#34;what were they
thinking&amp;#34; but the overall experience was very much worth the trip. I
also got to speak to a number of wonderful students at the
poster sessions.
&lt;/p&gt;
&lt;p&gt;
The keynotes are also well worth a read (sorry if you don&amp;#39;t have ACM
digital library access). &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025045&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Jeannette Wing&lt;/a&gt; talked about the importance of
probability and statistics in CS Ed, and aspects of  &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025047&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Gail Chapman&lt;/a&gt;&amp;#39;s talk
&amp;#34;Inspire, Innovate, and Improve…&amp;#34; keynote and &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025046&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Mitch Resnick&lt;/a&gt;&amp;#39;s
&amp;#34;Fulfilling Papert&amp;#39;s Dream&amp;#34; both spoke to the educator inside me.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The bad
&lt;/h2&gt;
&lt;p&gt;
The biggest downside to me was that I found very little value added in
a number of the paper sessions over just reading the papers. Part of
this is probably because of my own over-inflated expectations given the
number of years I&amp;#39;ve waited to attend. Part of it though, was the fact
that sessions were so tightly packed that I didn&amp;#39;t have time to follow
up with presenters before having to run to the next
thing. Unfortunately, in some
cases, it was because the presenter merely
&amp;#34;read&amp;#34; the paper much as a professor sometimes just reads the slides
or the book to his class.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Other thoughts
&lt;/h2&gt;
&lt;p&gt;
One paper presentation I very much liked was &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3017701&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Exam Wrappers: Not a
Silver Bullet&lt;/a&gt; presented by &lt;a href=&#34;https://michellecraig.github.io/&#34;&gt;Michelle Craig&lt;/a&gt; and &lt;a href=&#34;http://pages.cpsc.ucalgary.ca/~bdstephe/&#34;&gt;Ben Stephenson&lt;/a&gt;. I
actually came in late since I was hustling over from the Code.org
lunch. The result was that I didn&amp;#39;t actually know what &amp;#34;Exam Wrappers&amp;#34;
were until well after the talk when I ran into &lt;a href=&#34;https://twitter.com/jkhuggins&#34;&gt;Jim Huggins&lt;/a&gt;. Exam
wrappers, in short, are merely when you require the students fill out something
for some credit when picking up their exams. The funny thing is that
it&amp;#39;s a strategy that high school teachers have used for years without
a special name and we already knew the good and bad of it without the
research but that&amp;#39;s not what I want to get at here. What I loved about
the talk, besides the fact that Ben and Michelle are clearly strong
presenters is that this was a negative result that was being
presented. I also loved the fact that they didn&amp;#39;t present their
research as gospel but rather pointed out the strengths and weaknesses
of their approach - they made a case to what and why we should pay
attention to and what should be taken with a grain of salt.
&lt;/p&gt;
&lt;p&gt;
This was a major breath of fresh air after being exposed to so much
education &amp;#39;research&amp;#39; over the course of my life that the author or
presenter felt was just as strong as a mathematical proof rather than
an indication based on a specific experience or small set of
experiences.
&lt;/p&gt;
&lt;p&gt;
I also felt a little weird at times during the week when west coast people seemed
to know me. I know I&amp;#39;m a loud mouthed curmudgeon and I go on my
periodic ed rants but given the dearth of comments on this blog I was
really surprised to get as many as &amp;#34;great to meet you in person after
reading your blog&amp;#34; or &amp;#34;we know you and your work&amp;#34; all week. It was
weird and somewhat humbling.
&lt;/p&gt;
&lt;p&gt;
Finally, another highlight f`or me was that I got to catch up with
some of family.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse-seattle.jpg&#34; alt=&#34;/img/sigcse-seattle.jpg&#34; title=&#34;/img/sigcse-seattle.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
Already planning to submit something to present at SIGCSE 2018 in Baltimore.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Student Projects 2014 - Let&#39;s go to the video tape</title>
      <link>https://cestlaz.github.io/posts/2014-06-23-softdev-videos-2014/</link>
      <pubDate>Mon, 23 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-06-23-softdev-videos-2014/</guid>
      <description>&lt;!DOCTYPE html&gt;



&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Just completed the second time through for my Software Development
course. Last year we had a great time at our Demo Night hosted at
Google.
&lt;/p&gt;

&lt;p&gt;
This year, unfortunately, due to a variety of reasons, we couldn&#39;t get
the event together. Still, the kids did great work so I thought I&#39;d
share.
&lt;/p&gt;

&lt;p&gt;
This year, I asked each group to make a short video.
&lt;/p&gt;

&lt;p&gt;
First up, we&#39;ve got bit&amp;lt;&amp;lt;shift - a search engine for code. Nice idea
and a really slick interface.
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/98697078&#34; width=&#34;500&#34; height=&#34;281&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href=&#34;http://vimeo.com/98697078&#34;&gt;bitshift: a source code search engine&lt;/a&gt; from &lt;a href=&#34;http://vimeo.com/ear&#34;&gt;Ben Kurtovic&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
Next up, we&#39;ve got Socialpedia - our answer to Klout -
&lt;/p&gt;


&lt;div class=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/uhLZBsZWQGk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
And then Twitch Rock-em-Sock-em Robots -
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;//www.youtube.com/embed/Am3PTB_FvNs&#34; frameborder=&#34;0&#34;
allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
There were a bunch of other neat projects including a site that
crowd-sources 311 trash related problems and a version of the game
&#34;Frozen Synapse&#34; where you can program your forces using an embedded
Lisp interpreter.
&lt;/p&gt;

&lt;p&gt;
Very cool stuff.
&lt;/p&gt;

&lt;p&gt;
Good job guys!!!!!
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Build it first</title>
      <link>https://cestlaz.github.io/posts/2013-11-19-build_it/</link>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-19-build_it/</guid>
      <description>&lt;p&gt;The subtitle of this post is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;and why my students are going to hate me tomorrow.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When my good friend Gerry Seidman talks to my classes, he frequently
says &amp;ldquo;never use a data structure or algorithm you couldn&amp;rsquo;t build yourself.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This doesn&amp;rsquo;t mean that you have to write everything from scratch, just
that you should have some knowledge as to what&amp;rsquo;s going on under the
hood. I find that all too often young programmers just rely on APIs
and libraries and really don&amp;rsquo;t know how their computers and programs are working.&lt;/p&gt;
&lt;p&gt;And it&amp;rsquo;s never too early to start.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve been spending time talking about arrays recently. Now, most of
my students have some exposure to Python and so we started talking
about the flexibility and power of the Python list vs the limited
facilities of the Java array.&lt;/p&gt;
&lt;p&gt;How to solve the problem and make Java easier to work with? Let&amp;rsquo;s
write our own list class. We started simple:&lt;/p&gt;
&lt;p&gt;public class myList {
private int[] data;
private int numItems;&lt;/p&gt;
&lt;p&gt;public myList() {
data = new int[5];
numItems = 0;
}&lt;/p&gt;
&lt;p&gt;// append to the end of the list
public add(int d) {
if (numItems &amp;gt;= data.length) {
tmp = new int[data.length+data.length/2];
for (int i=0;i&amp;lt;numItems;i++)
tmp[i]=data[i];
data = tmp;
}&lt;/p&gt;
&lt;p&gt;data[numItems]=d;
numItems = numItems + 1;
}
}&lt;/p&gt;
&lt;p&gt;from there we added functionality such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inserting in arbitrary locations&lt;/li&gt;
&lt;li&gt;Removing items from the list&lt;/li&gt;
&lt;li&gt;Searching for an item&lt;/li&gt;
&lt;li&gt;Setting the item at a location to a value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And of course we were also able to talk about things like refactoring
out growing the array into a private method.&lt;/p&gt;
&lt;p&gt;And tonight the classes are changing the internal array from int[] to String[].&lt;/p&gt;
&lt;p&gt;Of course, what we&amp;rsquo;re building is an ArrayList. Tomorrow we&amp;rsquo;ll reveal
that little fact and of course the classes will all hate me, but then,
they&amp;rsquo;ll really understand what&amp;rsquo;s going on under the hood.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Back to Work</title>
      <link>https://cestlaz.github.io/posts/2012-11-02-back-to-work/</link>
      <pubDate>Fri, 02 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-11-02-back-to-work/</guid>
      <description>&lt;h3 id=&#34;on-going-back-to-work-today&#34;&gt;On going back to work today&lt;/h3&gt;
&lt;p&gt;Since school was still out due to Sandy, we ran a second online class
yesterday. At the end of the session, which I&amp;rsquo;ll summarize below, I
told the class what I wanted them to accomplish today and over the
weekend. One student queried &amp;ldquo;you mean no class on Friday :-(?&amp;rdquo; Alas
no &amp;ndash; while students aren&amp;rsquo;t reporting to school this morning, teachers
are.&lt;/p&gt;
&lt;p&gt;Of course the logic as to why is far from sound. Some schools are
fine, some not, in our case, there&amp;rsquo;s no subway service south of 34th
street or coming in from Brooklyn and we&amp;rsquo;re located near the tip of
Manhattan.&lt;/p&gt;
&lt;p&gt;What are we going to do? Who knows. We don&amp;rsquo;t have lessons to plan and
while Stuy has power, phones and internet are out. Professional
development? Even when planned extensively, I&amp;rsquo;ve found it to be mostly
useless (I always have to sit through math PD, for example, learning
how to use a graphing calculator).&lt;/p&gt;
&lt;p&gt;So, we&amp;rsquo;re going to report in for no real purpose. Best I can figure,
the city wants teachers in so they can call it a professional
development day then they can try to change things so that students
will report during Brooklyn Queens day next semester thus restoring
one instructional day lost this week. Not a bad idea to recapture the
day but to make teachers - coming from all over the area - trudge in
for no purpose just to play politics is distasteful but unfortunately typical.&lt;/p&gt;
&lt;p&gt;To add to the insult, not only are us teachers still in the dark as to
what&amp;rsquo;s going on, we weren&amp;rsquo;t even told when to report until after
midnight yesterday. I woke up at my usual 5:00am to exercise but first
checked my email &amp;ndash; waiting was an email from Chancellor Dennis
Walcot. I recieved it at 12:52 this morning. This was when I was first
told that I was to report to school at 10:00am. I can&amp;rsquo;t believe this
decision couldn&amp;rsquo;t have been made and emailed out a few hours
earlier. In any event, I&amp;rsquo;m waiting until 10:00 to get in - I&amp;rsquo;ve often
found the building locked when I&amp;rsquo;ve shown up before official opening hours.&lt;/p&gt;
&lt;p&gt;So now for the part of my job that I actually enjoy:&lt;/p&gt;
&lt;h3 id=&#34;how-did-yesterdays-online-class-go&#34;&gt;How did yesterday&amp;rsquo;s online class go?&lt;/h3&gt;
&lt;p&gt;Today&amp;rsquo;s class was a wrapup of a mini project &amp;ndash; basically an
add-a-line story site. You can see an unfinished version that two of
the students put together &lt;a href=&#34;http://ml7.stuycs.org:5200&#34;&gt;here&lt;/a&gt;. You can
see more of the stuff we are using on our &lt;a href=&#34;http://github.com/organizations/stuycs-ml7&#34;&gt;class github
page&lt;/a&gt;. The students are
using &lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask&lt;/a&gt; which is a python website
generator along with &lt;a href=&#34;http://www.mongodb.org&#34;&gt;MongoDB&lt;/a&gt;. We had to tie
up some loose ends.&lt;/p&gt;
&lt;p&gt;We again broadcast a Google+ hangout live through YouTube and we again
used a google doc as a chat space. This time we used the right hand
side bar for comments and only used the document for more permanent
material (a web refernce for example). It worked much better.  The
vertical flow of comments on the sidebar were much easier to track and
work with than a freeform document.&lt;/p&gt;
&lt;p&gt;The session still had the time delay problem and the feedback loop is
still a killer but the students again seemed to enjoy the
experience. This is clearly not a replacement for in person teaching,
but again, better than nothing on a day off.&lt;/p&gt;
&lt;h3 id=&#34;and-a-note-on-the-stuy-cs-culture&#34;&gt;And a note on the Stuy CS Culture&lt;/h3&gt;
&lt;p&gt;The seniors were game for this experiment and would be happy to go
again today if we were able to.  They also continually surprise me in
little ways. When we started this mini project, we all had to learn
how to use MongoDB (myself included). At first I had a hard time
confirming that they had done the outside work to learn the MongoDB
specifics. Only as they continually gave me better alternatives to my
approaches did I know that they were on top of things.&lt;/p&gt;
&lt;p&gt;On the other hand, my sophomores were much less receptive to an online
class during the hurricane days. A handful wanted to give it a go, but
the majority never responded to my email. Why was that?&lt;/p&gt;
&lt;p&gt;I have a few thoughts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A big reason is that I&amp;rsquo;ve only been with my sophomores for a short
time. We haven&amp;rsquo;t yet built the rapport and culture that exists in my
senior classes. I always notice a difference in class attitude around
Halloween but we really don&amp;rsquo;t have the feeling of family until late
November or some time in December.&lt;/li&gt;
&lt;li&gt;The sophomores are in a required course, the seniors an elective. I
think this is secondary to the culture / rapport but I&amp;rsquo;m sure it has
an effect.&lt;/li&gt;
&lt;li&gt;I believe the seniors have a better understanding that what we&amp;rsquo;re doing in class is to their benefit and the sophomores are still&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m going to have to pay more attention to the time line from when
students come into my class and when they become part of &amp;ldquo;the family.&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sandy Bridge and Screen Casting</title>
      <link>https://cestlaz.github.io/posts/2012-10-31-sandy-bridge/</link>
      <pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-10-31-sandy-bridge/</guid>
      <description>&lt;!DOCTYPE html&gt;


Here&#39;s what the bridge leading across the West Side Highway over to
Stuy during the storm. Hence the title with the weak tech reference.

&lt;div align=&#34;center&#34;&gt;
&lt;img  width=&#34;300&#34; src=&#34;https://cestlaz.github.io/img/hurricane-bridge.jpg&#34;&gt;
&lt;/div&gt;

The storm has kept the schools closed all week so it&#39;s as good a
time as any to try to resurrect this blog.
&lt;p&gt;
As you can see, I&#39;ve moved from blogger to a Jekyll based blog hosted
on Github. I&#39;m really liking the way it works but more on that at a
later date.
&lt;p&gt;
Some time Monday evening or Tuesday morning, I asked Batya if she
thought my seniors would be up for a livestreamed class (Batya, my
daughter, for anyone who doesn&#39;t know, is in one of the sections of
the class). It turned out they were all in.
&lt;p&gt;
I&#39;ve got to say that I&#39;ve got amazing classes -- the fact that they&#39;re
into the same brand of insanity as I am and even willing to go again tomorrow isawesome.
&lt;p&gt;
So, here was today&#39;s experiment:
&lt;p&gt;
A Google+ hangout based live stream of Stuyvesant&#39;s
Software Development class. In my favor was the fact that I was just
going to introduce CSS - not a subject that lends itself to deep
classroom discussion. Against me was the use of technologies I haven&#39;t
used before and the fact that we have about 64 students that I was
hoping to reach.
&lt;p&gt;
So, how did it go?
&lt;p&gt;

&lt;h3&gt;First, let&#39;s talk about the technical side.&lt;/h3&gt;

Here&#39;s the basic setup:

&lt;img src=&#34;https://cestlaz.github.io/img/screenshot.png&#34;&gt;

I&#39;ve got two monitors and Google would only broadcast the screenshot
from the smaller one on the right. It had Emacs and a chrome going
most of the time with an occasional shell. While teaching about CSS, I
also introduced the students
to &lt;a href=&#34;https://github.com/magit/magit/downloads&#34;&gt;Magit&lt;/a&gt; as
well as
Emacs &lt;a href=&#34;https://github.com/skeeto/impatient-mode&#34;&gt;impatient&lt;/a&gt;
mode both of which are awesome. On the left hand screen I had the
actual Hangout as well as the Google shared doc.
&lt;p&gt;
It turns out that you can&#39;t make a public Hangout and also stream it
live on YouTube, you can only invite people in your circles. Since
most of my students aren&#39;t in my circles, only a few could &#34;join&#34; the
Hangout. Most watched the YouTube stream and we all connected to a
shared Google Doc for notes and questions.
&lt;p&gt;
The Google Doc turned out not to be the best idea. It got everyone
writing in the same document but people ended up writing all over the
document. If something wasn&#39;t on the screen I wouldn&#39;t see it. We&#39;re
going to try something more sequential tomorrow -- maybe disqus
comments.
&lt;p&gt;
The other two problems were the low resolution of the screenshot
broadcast and the lag. I really had to blow up the font size. If
anyone has any ideas how to do this well, please share. The lag was
also a problem since it kept me from having anything resembling a reasonable feedback loop.
&lt;p&gt;
On the other hand, my students were left with this enduring image of me:


&lt;div align=center&gt;&lt;img width=50% src=&#34;https://cestlaz.github.io/img/monocle.jpg&#34;&gt;&lt;/div&gt;

&lt;h3&gt;And the view from a teacher&lt;/h3&gt;

On the one hand, it was pretty cool to be at home and able to work
with my students but there were some major deficiencies:

&lt;dl&gt;
&lt;dt&gt;Can&#39;t see the audience&lt;/dt&gt;
&lt;dd&gt;Even at best, with the Hangout you can only see 10 people. I&#39;m guessing it feels like a stage actor doing a movie. I was talking but couldn&#39;t see my audience. No nodding heads, no nodding off heads, just talking to a screen. It was a little disconcerting. Teachers adjust to their class all the time both consciously and subconsciously. You might do something overt like call on a particular student or maybe sense it&#39;s time for a joke or even little things like how or where you stand. All of this was lost.&lt;/dd&gt;
&lt;dt&gt;Need a better chatroom&lt;/dt&gt;
&lt;dd&gt;I mentioned that the Google Doc wasn&#39;t a great idea. I think
something that&#39;s more vertical like a chatroom will work better. I&#39;ll
know tomorrow.&lt;/dd&gt;
&lt;dt&gt;An shared board space would be very cool&lt;/dt&gt;
&lt;dd&gt;The other missing piece is a way for the students to directly interact with what I&#39;m presenting. A shared Emacs would be amazing.&lt;/dd&gt;
&lt;dt&gt;The delay is a killer&lt;/dt&gt;
&lt;dd&gt;This was also a problem. I found myself saying or doing something then waiting until something came through the document. This hurt the flow considerably&lt;/dd&gt;

I really found the experience enlightening. People keep talking about
recorded lectures and MOOCS and all that but if anything, today&#39;s
experience just confirms to me that there&#39;s nothing like an in class
teacher, particularly with a small group of students.

That said, I think this was a good experience and my students seem to
agree. We spent part of an otherwise unproductive day in a productive
manner and we&#39;re planning on doing it again tomorrow.

&lt;p&gt;
Since Students will be home until Monday, I&#39;d like to go for a third
class on Friday but I&#39;ll be back at work so it looks like no class
after tomorrow until Monday.

&lt;p&gt;
Comments?


</description>
    </item>
    
    <item>
      <title>Anyone can cook</title>
      <link>https://cestlaz.github.io/posts/2012-04-15-anyone-can-cook/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-04-15-anyone-can-cook/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span style=&#34;font-size: x-large;&#34;&gt;Anyone can cook&lt;/span&gt; - Chef Gusteau&lt;/div&gt;&lt;br /&gt;These days the rage seems anyone can code.&lt;br /&gt;&lt;br /&gt;On line attempts to teach coding and computing abound.&lt;br /&gt;&lt;br /&gt;We&#39;ve got Udacity and Coursera trying to bring college level academic offerings to the masses on one extreme and more down to earth &#34;learn to code&#34; efforts with Codecademy getting the most press.&lt;br /&gt;&lt;br /&gt;While I applaud any effort to make knowledge more accessible, there are a lot of unanswered questions as to the effectiveness of these latest attempts. Recent posts by&amp;nbsp;&lt;a href=&#34;http://blog.mrmeyer.com/?p=13213&#34;&gt;Dan Meyer&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;http://hackeducation.com/2012/04/14/udacity-cs101/&#34;&gt;Audrey Watters&lt;/a&gt;&amp;nbsp;have started to raise questions and in my opinion some of the hype has worn off.&lt;br /&gt;&lt;br /&gt;At some point, I plan to talk at length about the Udacity and Coursera offerings as well as attempts to increase on line course offerings at the high school levels. I&#39;ll talk about the difficulties and dangers that lie ahead.&lt;br /&gt;&lt;br /&gt;Today, I&#39;d like to talk about the more vocational offerings such as what Codecademy is doing.&lt;br /&gt;&lt;br /&gt;The premise seems to be that anyone can code and that everyone should code. I&#39;ve been thinking about this for a while and I keep coming back to the question, &#34;what&#39;s the endgame?&#34;&lt;br /&gt;&lt;br /&gt;Teaching Javascript, HTML and the like narrowly focuses on creating web pages. Even if we forget about difficulties of on line learning that include lack of an interactive feedback loop, lack of follow up, &amp;nbsp;a narrow curriculum, and the fact that programming beyond the basics is not easy, what&#39;s the goal? While I find making an interactive web site cool, I don&#39;t know how much it benefits the masses.&lt;br /&gt;&lt;br /&gt;One could argue that the mental exercise of programming is a benefit and having a better understanding of how a computer works is a good thing. I&#39;d agree, but what we really could benefit from is a different paradigm in terms of how we approach using computers. A new approach would make even rudimentary scripting skills of greater value to all.&lt;br /&gt;&lt;br /&gt;Most of us use computers as program loaders. That is, we sit down, load our word processor, edit something, and exit the word processor. Load our web browser, search the web, exit, load the next program, do something, etc. We might have multiple programs up at the same time, but we use them in isolation.&lt;br /&gt;&lt;br /&gt;This is how most people&#39;s computing experience has evolved.&lt;br /&gt;&lt;br /&gt;With this mindset, I&#39;m not sure how useful coding will be for the masses. People might benefit from some rudimentary scripting a la Excel macros or Google App Scripts, but power users already do this. I don&#39;t think that the ability to program within the constraints of scripting individual applications will be a game changer. &amp;nbsp;To make rudimentary programming skills valuable we must use computers in a way that allows us to use simple techniques to tie together powerful applications.&lt;br /&gt;&lt;br /&gt;A few years ago, right before our Christmas break, I stopped over in the Math Chairman&#39;s office to wish him a good holiday. Danny was hard at work. He was frantically trying to change the math web site before he left.&lt;br /&gt;&lt;br /&gt;The math site was a mess. It consisted of a few dozen loosely arranged folders each with multiple sub folders. Danny was looking in each folder for old sample final exams, each saved as a Tiff file. He would load the file into Photoshop, convert it to another format and save it. He would then change the corresponding HTML file to reference the new file. He had been at it for hours with no end in sight. I said &#34;Danny, I&#39;ve got this, go home.&#34;&lt;br /&gt;&lt;br /&gt;I went to my office, wrote a small shell script, maybe 10 lines, hit enter, got on my bike and rode home. When I got there, the job was done.&lt;br /&gt;&lt;br /&gt;Now Danny&#39;s a really smart guy and he&#39;s technically savvy. The difference is that I was taught to try to tie programs together through the command line while he was taught to do things in the Windows/Mac way of loading one program and using it in isolation. I used a simple shell script to tie together a number of powerful Linux applications (find, imagemagick, sed) rather than pointing and clicking over and over again.&lt;br /&gt;&lt;br /&gt;I&#39;ve seen this &#34;program loader&#34; mind set time and time again and in surprising places. My good friend and colleague&amp;nbsp;&lt;a href=&#34;http://garyrubinstein.teachforus.org/&#34;&gt;Gary Rubenstein&lt;/a&gt;&amp;nbsp;has done a lot of work debunking the &#34;educational reformers&#34; that are currently in power. Gary had been using Excel to do all his analysis until I pointed out that he could download his data and use simple Python scripts to greater effect. Why was I&amp;nbsp;surprised that Gary wasn&#39;t already doing this? Well, in addition to being an amazing math teacher, Gary holds a Masters degree in Computer Science and had worked as a professional programmer in a prior life.&lt;br /&gt;&lt;br /&gt;Of course, our life isn&#39;t made any easier with closed file formats and vendors that try to isolate their data, but if we could re-educate people to use computers across applications, that would make rudimentary programming useful to all and then indeed there would be a reason for everyone to code.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-448488222916899193?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CS Stress</title>
      <link>https://cestlaz.github.io/posts/2012-01-29-cs-stress/</link>
      <pubDate>Sun, 29 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-01-29-cs-stress/</guid>
      <description>&lt;!DOCTYPE html&gt;

I&#39;ve been mostly underwater for the last couple of weeks.&lt;br /&gt;&lt;br /&gt;End of term issues combined with the Academy of Software Engineering announcement has pretty much eaten up all of my out of class time.&lt;br /&gt;&lt;br /&gt;It&#39;s going to be a week or so before I can finish writing the posts I was planning on, but it looks like a storm is brewing around Stuyvesant and Computer Science so I thought I&#39;d put up this short semi-related post.&lt;br /&gt;&lt;br /&gt;Stuyvesant has a reputation of being something of a pressure cooker. The day can be as long as ten periods and it&#39;s not uncommon for a student to take three or more AP classes, even before the senior year. The question of student workload and stress has been a hot topic for a number of years.&lt;br /&gt;&lt;br /&gt;There&#39;s frequently tension over how many courses and which courses a student should be allowed to take. &amp;nbsp;Usually, this revolves around the school placing a limit on the number of classes, or more specifically, the number of A.P. classes a student can take. Most recently, the conversation looks to be turning to the number of classes a student can take overall.&lt;br /&gt;&lt;br /&gt;Given that most A.P. classes fall within a Stuyvesant student&#39;s required sequence of classes - that is, Calculus is just &#34;the next math class&#34; and A.P. U.S. History is slotted in place of a students regular U.S. History course, limiting the number of classes a student can take, A.P. or otherwise could have a major impact on Computer Science at Stuyvesant.&lt;br /&gt;&lt;br /&gt;What&#39;s most disturbing is that limiting student options in terms of courses may not do anything to decrease stress and workload. No one has looked at what is actually going on in student&#39;s required classes.&lt;br /&gt;&lt;br /&gt;I decided to collect some information from our students. I sent out a survey to five of our seven A.P. C.S. classes (three of mine, two of JonAlf&#39;s -- the other two classes don&#39;t have a mailing list). I asked them to rate the work load and stress factor for A.P. CS, their typical Stuy course and their typical Stuy A.P.course. So far, I&#39;ve gotten 80 responses (out of about 150 students emailed). Here&#39;s what we got (ratings were on a 1-10 scale):&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;A.P. C.S.&lt;/th&gt;&lt;th&gt;Reg. Class&lt;/th&gt;&lt;th&gt;A.P. Class&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Workload avgs   &lt;/td&gt;&lt;td&gt;4.97    &lt;/td&gt;   &lt;td&gt;6.65    &lt;/td&gt;   &lt;td&gt;7.13    &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Workload dev   &lt;/td&gt;&lt;td&gt;1.94    &lt;/td&gt;   &lt;td&gt;1.41   &lt;/td&gt;   &lt;td&gt;1.52   &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stress avgs   &lt;/td&gt;&lt;td&gt;4.67   &lt;/td&gt;   &lt;td&gt;6.39    &lt;/td&gt;   &lt;td&gt;6.94   &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stress dev   &lt;/td&gt;&lt;td&gt;2.24   &lt;/td&gt;   &lt;td&gt;1.63    &lt;/td&gt;   &lt;td&gt;1.64    &lt;/td&gt;   &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;I know this isn&#39;t really hard data, but it seems that our A.P. C.S. classes are considered to be both easier and less stressful than other classes at Stuyvesant. Given that our kids do very well at C.S., we&#39;re probably doing something right and it will be a shame if student opportunities become limited. I&#39;ll certainly write more on this as the situation develops.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For you educators out there, is stress an issue at your schools and how do you deal with making room for students to take CS at your schools?&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-7465860293098412736?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Reboot</title>
      <link>https://cestlaz.github.io/posts/2011-11-27-reboot/</link>
      <pubDate>Sun, 27 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2011-11-27-reboot/</guid>
      <description>&lt;!DOCTYPE html&gt;

A couple of weeks ago, I attended the K-12 workshop at the Grace Hopper Celebration of Women in Computing Conference. It was great to reconnect with some old friends, make some new ones, and talk shop for the weekend.&lt;br /&gt;&lt;br /&gt;One result was that I promised to start blogging again.&lt;br /&gt;&lt;br /&gt;I&#39;ve got a number of ideas for posts lined up. Some on pedagogy, some technical, and some cultural. Hope you enjoy them.&lt;br /&gt;&lt;br /&gt;Earlier today Ben Chun tweeted about this post:&amp;nbsp;&lt;a href=&#34;http://worrydream.com/SomeThoughtsOnTeaching/&#34;&gt;http://worrydream.com/SomeThoughtsOnTeaching/&lt;/a&gt;. &amp;nbsp;To summarize -- teachers should practice what they preach. In the post, Bret Victor wonders if there are calculus teachers who spend their evenings doing calculus.&lt;br /&gt;&lt;br /&gt;I know a number of math teachers who spend a considerable amount of their free time working on problems and refining their math skills, I also know many who don&#39;t.&lt;br /&gt;&lt;br /&gt;I know wonderful, inspirational teachers in both camps. I&#39;ve also known weak teachers that fall into both categories. Great teachers in both categories also spend large amounts of time working on how to best deliver instruction.&lt;br /&gt;&lt;br /&gt;Before I started developing the computer science program at Stuyvesant, there were one or two sections of A.P. Computer Science. They were taught by a terrific teacher -- one of my mentors and role models, but he was a math guy and not passionate about CS. When I took over, the enrollment&amp;nbsp;immediately&amp;nbsp;shot up. Not because I was any great shakes, and Dave, the previous teacher was legendary. Rather, the students knew I loved CS. Part of that love was that I enjoy solving problems with computers, coding and what have you. The students can tell.&lt;br /&gt;&lt;br /&gt;The fact that I code is a byproduct of my passion and part of the whole package that defines me as a teacher and a person. Whatever success I achieve is a result of this package. It&#39;s something I enjoy, and it also keeps me current with the field.&lt;br /&gt;&lt;br /&gt;I&#39;ve seen &#34;naturals&#34; who are just great teachers and get by without a passion for their subjects. More often than not, there&#39;s a ceiling in terms of what they can give their students either in terms of content, or more importantly, in terms of&amp;nbsp;inspiration. Some times the ceiling is high enough that there isn&#39;t a problem.&lt;br /&gt;&lt;br /&gt;Over the years, my &#34;practice&#34; has taken different shapes. Early on, while my students were working on&amp;nbsp;&lt;a href=&#34;http://www.usaco.org/&#34;&gt;USACO&lt;/a&gt;&amp;nbsp;problems. I figured I had better be able to represent, so I started doing them. Later on, I would write systems to support my teaching.&lt;br /&gt;&lt;br /&gt;More recently, I&#39;ve been lucky enough to be surrounded by a number of like minded educators. We frequently share little projects we work on.&lt;br /&gt;&lt;br /&gt;This semester, I&#39;ve been taking the Stanford on line&amp;nbsp;&lt;a href=&#34;http://ai-class.org/&#34;&gt;AI&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;http://ml-class.org/&#34;&gt;ML&lt;/a&gt;&amp;nbsp;classes -- both have been lots of fun.&lt;br /&gt;&lt;br /&gt;This is just what I do and who I am and it is reflected in how I teach.&lt;br /&gt;&lt;br /&gt;Of course, time and job constraints make coding difficult during the school year. With ~150 students, lesson planning, grading, and ancillary responsibilities take their tolls.&lt;br /&gt;&lt;br /&gt;So, I guess I&#39;m an example of what Bret Victor was talking about. I&#39;m not sure I fully agree with his thesis, but it seems to work for me.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1460836429704454417?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s Next</title>
      <link>https://cestlaz.github.io/posts/2010-02-18-whats-next/</link>
      <pubDate>Thu, 18 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-02-18-whats-next/</guid>
      <description>&lt;!DOCTYPE html&gt;

Just a short follow up on the last post.&lt;br /&gt;&lt;br /&gt;In thinking about how I frequently programs, once I have a plan, I work on one part of the project, and then ask myself &#34;what&#39;s next?&#34; That is, what is the next step towards completion.&lt;br /&gt; &lt;br /&gt;It reminded me about a guest speaker we had a about a year and a half ago at one of our &#34;professional development&#34; days. For the past two years, our school has had &#34;writing across the curriculum&#34; as one of it&#39;s goals. While it&#39;s a laudable idea, I find the rationale for this goal to be poorly communicated to our faculty and the implementation weak at best.&lt;br /&gt;&lt;br /&gt;Regardless, the guest speaker, &lt;a href=&#34;http://en.wikipedia.org/wiki/William_Zinsser&#34;&gt;William Zinsser&lt;/a&gt;, made a few good points.&lt;br /&gt;&lt;br /&gt; The most important reason for most of us to write is to convey ideas or arguments. In short, communication. Many students have problems organizing and ordering their thoughts and as a result, their writing is all over the place. Zinsser simplified it to the following:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;What does the audience know?&lt;/li&gt;&lt;li&gt;What do they need to know next?&lt;/li&gt;&lt;/ol&gt;That drives your next sentence. You continue this 1-2 punch until you&#39;ve communicated your ideas.&lt;br /&gt;&lt;br /&gt;This makes loads of sense, but here I was 40 years old and it was the first time I heard writing explained this way. What really struck me, however was that this concept wasn&#39;t new at all. Every ninth or tenth grader goes through this process time and time again.&lt;br /&gt;&lt;br /&gt;Think about geometric proof. We have some given information and a conclusion we wish to prove. At each step along the way its:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;What do we know so far?&lt;/li&gt;&lt;li&gt;What&#39;s the next step to get us closer to the conclusion?&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;Same idea.&lt;br /&gt;&lt;br /&gt;The same can be said for program development.&lt;br /&gt;&lt;br /&gt;Of course this makes tremendous sense since all thee things: writing, proof, and programming, are methods of communication.&lt;br /&gt;&lt;br /&gt;Just something to think about.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1983623605693836355?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>They teach programming, don&#39;t they?</title>
      <link>https://cestlaz.github.io/posts/2010-02-15-they-teach-programming-dont-they/</link>
      <pubDate>Mon, 15 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-02-15-they-teach-programming-dont-they/</guid>
      <description>&lt;!DOCTYPE html&gt;

One evening, many years ago, when I was in college, I had an epiphany. Maybe not as enlightening as the epiphany I had while watching &#34;The Mummy Returns&#34;&amp;nbsp; many years later, but that&#39;s a story for another day.&lt;br /&gt;&lt;br /&gt;While working on some class project, I realized that soon, within a couple of&amp;nbsp; years, I&#39;d be working for a real company and I&#39;d actually have to write code that &lt;b&gt;REALLY&lt;/b&gt; works. Not just something that gets past the grader, or answers all the test cases. Something well designed, well written, maintainable, and reliable.&amp;nbsp; Scary thought.&lt;br /&gt;&lt;br /&gt;I&#39;ve thought about this a lot since I started teaching computer science. We teach programming languages, algorithms, and assign projects. Maybe the students hear something like &#34;comment your code,&#34; or &#34;use good variable names,&#34; but we never really give them the tools to take a project from description to completion.&lt;br /&gt;&lt;br /&gt;Too often young programmers rush to the keyboards and write copious amounts of code without any plan and with little discipline. In short they do everything they can to set themselves up for a difficult road ahead.&lt;br /&gt;&lt;div style=&#34;text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;There are probably a number of reasons for this. When we teach introductory&amp;nbsp; programming, assignments are so short and simple that we can&#39;t easily model good programming techniques, and if we do, it&#39;s difficult to get students to &#34;buy in&#34; since it&#39;s hard for them to see the value. As complexity increases, we&#39;re faced with limited time to actually cover the prescribed course content, leaving little room for a protracted unit on &#34;program development.&#34;&lt;br /&gt;&lt;br /&gt;I&#39;m certainly not going to be so bold as to say that I have the answer to the problem, but I&#39;ve tried some things to help address it.&lt;br /&gt;&lt;br /&gt;We&#39;ll take a few class days to take a project from beginning to end. Something that can be done incrementally but isn&#39;t particularly difficult. &lt;br /&gt;&lt;br /&gt;This semester, I attempted this with my AP students. We wrote a series of text filters in Java. I lifted the topic from Kernighan and Plauger&#39;s &#34;Software Tools.&#34; We wrote versions of character count, word count, detabbing a file, run length encoding and a simple version of tr. Nothing too heavy, but it allowed us to focus on the development piece rather than coming up with clever algorithms and data structures (which is what the rest of the class is for). The problem may be a little contrived, but I hope the benefits outweighed any issues with the choice of problem.&lt;br /&gt;&lt;br /&gt;We start by talking about the importance of understanding the problem, which includes finding out what &#34;the client&#34; wants and not making our own assumptions. Some times, I try to leave a little ambiguity to give us a platform to discuss the &#34;what the client wants&#34; issue.&lt;br /&gt;&lt;br /&gt;From there comes design, which might be mixed with writing some code to make sure we understand certain aspects of the problem and the environment we&#39;ll be working in.&lt;br /&gt;&lt;br /&gt;Once we have a design and a plan we can start incremental development. This is what I think is most important for the youngsters. I try to model and emphasize the idea of coding one &#34;concept&#34; at a time. Frequently testing that concept and only moving on once it&#39;s completed. &lt;br /&gt;&lt;br /&gt;I&#39;ll also talk about things that have worked for me along the way. I always like to put consistent comment blocks at the top of my functions, trying to keep functions a &#34;screen length&#34; or shorter, my preferences for naming, indentation, etc. Of course, I&#39;m careful to emphasize that my way works for me, but it&#39;s just one approach. I try to present alternatives when possible.&lt;br /&gt;&lt;br /&gt;Other ideas I try to emphasize is actually reading ones code and having others read it. Last semester I experimented with &#34;pair programming&#34; and while I have no idea how good it is as a professional development technique, I like it from a pedagogical point of view.&lt;br /&gt;&lt;br /&gt;I think presenting these ideas while actually developing the project helps to drive in the concepts.&lt;br /&gt;&lt;br /&gt;I&#39;d like to think adding units like this helps to develop stronger programmers. Any teachers out there -- your thoughts?&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;center&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table style=&#34;width: auto;&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;http://picasaweb.google.com/lh/photo/ljE9q55t6ltZzZVKwTzA9g?authkey=Gv1sRgCOSJ5YGwwb7e_AE&amp;amp;feat=embedwebsite&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/S3m2eJx5aiI/AAAAAAAAFj4/I57gKwaFxzQ/s144/2010-02-15%2008.49.59.jpg&#34; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/center&gt;&lt;br /&gt;&lt;br /&gt;In an unrelated note, yesterday was valentines day. We don&#39;t really do anything to celebrate it, but in anticipation of her new loom, Devorah had to clear off some room in the apartment. She stumbled upon love letters sent between my parents back in the fifties. If you&#39;d like a small taste of the past, you can see here post on squidknits &lt;a href=&#34;http://squid-knits.blogspot.com/2010/02/love-letters.html&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Although we have gained all this immediacy with the electronics age, it sometimes feels that somethings been lost.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-3365288827630860097?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>