<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/github/</link>
    <description>C&#39;est la Z (github)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Feb 2020 12:53:59 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/github/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Github Org Explorer - now with oauth</title>
      <link>https://cestlaz.github.io/post/github-org-explorer-oauth/</link>
      <pubDate>Sun, 16 Feb 2020 12:53:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-org-explorer-oauth/</guid>
      <description>&lt;p&gt;
A while ago I wrote about a small side project - &lt;a href=&#34;https://cestlaz.github.io/post/github-org-explorer/&#34;&gt;GitHub Org Explorer&lt;/a&gt; -
a small tool to make it easier to manager GitHub repositories based on
organization. I&amp;#39;m using it as a replacement for the GitHub provided
Classroom Assistant. I find it more flexible in terms of exporting
assignments to my own machine and it allows me to delete repos en
masse which is critical after the semester is over.
&lt;/p&gt;
&lt;p&gt;
Shortly after I released it I found that GitHub was going to sunset
the basic authentication I was using so I had to convert the
application to support oauth.
&lt;/p&gt;
&lt;p&gt;
So, here it is. 
&lt;/p&gt;
&lt;p&gt;
Along the way I had a few headaches. I wrote about them &lt;a href=&#34;https://cestlaz.github.io/post/my-code-works/&#34;&gt;here&lt;/a&gt;. Mostly
versioning issues surrounding the node ecosystem. I still haven&amp;#39;t
figured it all out but I think I&amp;#39;ve gotten everything working
alright. 
&lt;/p&gt;
&lt;p&gt;
If you want to check it out, you can grab it off GitHub. Here&amp;#39;s the
repo: &lt;a href=&#34;https://github.com/zamansky/github-org-explorer&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/github-org-explorer&#34;&gt;https://github.com/zamansky/github-org-explorer&lt;/a&gt;&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the short runthrough video I made. Logging in looks different
but everything operates the same way:
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;https://www.youtube.com/embed/e-gNzuBG3mU&#34; frameborder=&#34;0&#34;
allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Org Explorer</title>
      <link>https://cestlaz.github.io/post/github-org-explorer/</link>
      <pubDate>Fri, 03 Jan 2020 14:40:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-org-explorer/</guid>
      <description>&lt;p&gt;
I&amp;#39;m a big fan of &lt;a href=&#34;https://classroom.github.com&#34;&gt;GitHub Classroom&lt;/a&gt; and use it for all of my class
assignments. It&amp;#39;s great for organizing, distributing, and collecting
assignments and gets the kids used to using real world tools at the
same time. I&amp;#39;ve written a bunch of posts on how I use it:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/github-classroom/&#34;&gt;How I use GitHub Classroom&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/communicating-with_students/&#34;&gt;Communicating with Students - meybe GitHub to the rescue&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4/&#34;&gt;GitHub as a tool for education&lt;/a&gt; (part of a 4 part series)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
As well as a couple of others.
&lt;/p&gt;
&lt;p&gt;
Since I like doing things on the command line I&amp;#39;ve been using GitHub&amp;#39;s
&lt;a href=&#34;https://github.com/education/classroom-assistant&#34;&gt;Classroom Assistant&lt;/a&gt; to download repos. It&amp;#39;s a nice tool - I can
download any or all repos for any given assignment at once.
&lt;/p&gt;
&lt;p&gt;
Still, this leaves me wanting in three areas. 
&lt;/p&gt;
&lt;p&gt;
First is roster integration. They have some rudimentary work done on
this but it&amp;#39;s not quite there yet.
&lt;/p&gt;
&lt;p&gt;
Second is being able to download repos based on other criteria. For
example, downloading all of the assignments from a single student.
&lt;/p&gt;
&lt;p&gt;
Third is deleting repos. GitHub Classroom uses GitHub organizations to
store submissions. You get one per student (or group) per
assignment. This gets really big really fast and it pollutes your
GitHub account with lots of repos that, quite frankly, I don&amp;#39;t want
once the semesters done.
&lt;/p&gt;
&lt;p&gt;
If only there was a way to address thisâ€¦.
&lt;/p&gt;
&lt;p&gt;
Well, given that the good people at GitHub publish their &lt;a href=&#34;https://developer.github.com/&#34;&gt;APIs&lt;/a&gt; one can
write their own applications to use with or integrate with GitHub. 
&lt;/p&gt;
&lt;p&gt;
I wrote a small app, still experimental but functional. It&amp;#39;s an
&lt;a href=&#34;https://electronjs.org&#34;&gt;Electron&lt;/a&gt; app (another thanks to GitHub) written in Clojurescript. I
might write about creating it later but for now, I just wanted to
share the app in case it&amp;#39;s useful to anybody.
&lt;/p&gt;
&lt;p&gt;
Once you log in you can go to any of your GitHub organizations. Since
GitHub Classrooms are based on organizations this will present you
with all the repos for a given one. Then you can filter via regular
expressions and then either export or delete them. For me it&amp;#39;s the
missing piece. I plan to add roster support some time in the future.
&lt;/p&gt;
&lt;p&gt;
If anyone&amp;#39;s interested, here&amp;#39;s the GitHub repo: &lt;a href=&#34; https://github.com/zamansky/github-org-explorer&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/github-org-explorer&#34;&gt;https://github.com/zamansky/github-org-explorer&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And a short video walkthrough of how it works.
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;https://www.youtube.com/embed/e-gNzuBG3mU&#34; frameborder=&#34;0&#34;
allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Using GitHub issues for class communicatoin</title>
      <link>https://cestlaz.github.io/post/git-issues/</link>
      <pubDate>Sun, 17 Nov 2019 16:17:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/git-issues/</guid>
      <description>&lt;p&gt;
Last week I talked about using &lt;a href=&#34;https://cestlaz.github.io/post/communicating-with_students/&#34;&gt;GitHub issues&lt;/a&gt; as a mechanism for class
communication. I thought it might be helpful to follow up on it and
also felt that a video would be better than text.
&lt;/p&gt;
&lt;p&gt;
So, here it is, 16 minutes on how you can use GitHub issues for class
communication. I don&amp;#39;t show examples of everything like @ tagging but
I think it shows some of the power of using GitHub and GitHub
classroom beyond just a software repo and versioning.
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/SNsjMKYoLr8&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2019 - Using GitHub as a CMS</title>
      <link>https://cestlaz.github.io/post/csta-2019-github/</link>
      <pubDate>Wed, 26 Jun 2019 12:09:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2019-github/</guid>
      <description>&lt;p&gt;
With ISTE ending, the next big event for CS treachers is the annual
&lt;a href=&#34;https://www.csteachers.org/page/2019conference&#34;&gt;CSTA Conference&lt;/a&gt;. I first attended two years ago in Baltimore. Last
year the conference, in Omaha was bigger and better in every way
imaginable. I expect this year to be the best yet.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t go to a lot of conferences so I don&amp;#39;t have much to compare
CSTA with but I like the fact that it&amp;#39;s is about half the size of
SIGCSE. At about 1000 attendees it still feels small enough to be
intimate but at the same time large enough so that there&amp;#39;s something
for everyone and plenty of people to learn and share from and with.
&lt;/p&gt;
&lt;p&gt;
Just like last year, I&amp;#39;ll be spending a lot of time at the GitHub
booth so if you want to talk about how to use GitHub to support your
students make sure to stop by and say hello.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll also be giving a session with my long time partner in crime
JonAlf. 
&lt;/p&gt;
&lt;p&gt;
Most of us know that Git is a version control system and that
GitHub is pretty much the industry standard platform for using
Git. Many of us also know that GitHub for Education has a great
toolset to support using GitHub with your classes. Tools that help
organize, distribute, collect, and assess assignments.
&lt;/p&gt;
&lt;p&gt;
Fewer people know that GitHub can be used to really easily create a
web presence and as a way to distribute class material and you don&amp;#39;t
even have to use the command line if you don&amp;#39;t want to. I use GitHub
as a lightweight CMS with my classes, to host full blown web sites,
and also to host this blog.
&lt;/p&gt;
&lt;p&gt;
Come join JonAlf and me on Tuesday at 11:15 in West 106C and we&amp;#39;ll
show you how you can use GitHub as a web presence as well.
&lt;/p&gt;
&lt;p&gt;
I also want to briefly mention that my better half, Devorah, is going
to be with us at the GitHub booth running a really cool
knitting/crocheting for  charity project (thanks to both CSTA and
GitHub for facilitating this). I&amp;#39;ll write more about it in a day or so
but if you&amp;#39;re going to be at CSTA2019 and you knit or crochet or want
to learn, you can check the project out here:
&lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;&lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;http://blanketstatementproject.com/&lt;/a&gt;&lt;/a&gt; (note that the site is hosted on
GitHub and the source is &lt;a href=&#34;https://github.com/blanketstatementproject/blanketstatementproject.github.io&#34;&gt;here&lt;/a&gt;). 
&lt;/p&gt;
&lt;p&gt;
GitHub is also holding a pre-conference reception on July 7 from
5:30 - 8:00. You can sign up &lt;a href=&#34;https://csta-github-meetup.confetti.events/&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Hope to see many of you in a couple of weeks in Phoenix.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How I use Github Classroom</title>
      <link>https://cestlaz.github.io/post/github-classroom/</link>
      <pubDate>Sun, 17 Feb 2019 16:42:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-classroom/</guid>
      <description>&lt;p&gt;
It&amp;#39;s been an amazingly unproductive weekend. Mostly because I&amp;#39;ve been
sick with the flu. It sucks but since the rest of the family&amp;#39;s away
anway at least I&amp;#39;m not making everyone miserable.
&lt;/p&gt;
&lt;p&gt;
I did manage to stage my next couple of classes and figured that
writing this post wouldn&amp;#39;t take too much energy since it&amp;#39;s mostly a
video.
&lt;/p&gt;
&lt;p&gt;
Earlier, I talked about using &lt;a href=&#34;https://cestlaz.github.io/post/github-classroom-travis/&#34;&gt;GitHub and TravicCI&lt;/a&gt; and this time around
I show how I use GitHub classroom to set up, disseminate, and collect
assignments.
&lt;/p&gt;
&lt;p&gt;
Here are the important links you&amp;#39;ll need to set things up yourself:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
To register an organization (so that you can use private repos for
free): &lt;a href=&#34;https://education.github.com/discount_requests/new&#34;&gt;https://education.github.com/discount_requests/new&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The main GitHub education page with lots of good stuff and links: &lt;a href=&#34;https://education.github.com/&#34;&gt;https://education.github.com/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
GitHub Classroom: &lt;a href=&#34;https://classroom.github.com/&#34;&gt;https://classroom.github.com/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
GitHub Classroom Assistant: &lt;a href=&#34;https://classroom.github.com/assistant&#34;&gt;https://classroom.github.com/assistant&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The video goes through the entire process but doesn&amp;#39;t really much into
grading. For grading I usually do something like the following:
&lt;/p&gt;
&lt;p&gt;
First I make a file named &lt;strong&gt;repos&lt;/strong&gt; with the names of all the submitted
repos:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cd THEDIRECTORYWITHALLTHEREPOS
ls &amp;gt; repos&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Then I&amp;#39;ll use a script that looks something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat repos&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
      cd /tmp/235-assignment-02-02-16-2019-07-25-00/$i
      NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;** Name: &amp;#34;&lt;/span&gt; Readme.org | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s/** Name: //g&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================= &lt;/span&gt;$NAME&lt;span style=&#34;color:#e6db74&#34;&gt; ====================&amp;#34;&lt;/span&gt;
      make test
      ./test -s
      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n------------------------------------\n\n&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; &amp;gt; report&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
First I &lt;code&gt;cd&lt;/code&gt; into the repo. Each repo has a file named &lt;strong&gt;Readme.org&lt;/strong&gt; 
which has a line that looks like this &lt;code&gt;** Name: Students Name&lt;/code&gt;. The
line that starts &lt;strong&gt;NAME=&lt;/strong&gt; pulls out the student&amp;#39;s name. It then echos a
separator line with the sutdent&amp;#39;s name in it, builds and runs the
tests. &lt;code&gt;./test -s&lt;/code&gt; runs the doctest tests. The &lt;code&gt;-s&lt;/code&gt; says to print out
the passing tests as well as the failing ones. The output of the whole
loop is saved to a file named report.
&lt;/p&gt;
&lt;p&gt;
From there I can look at the report and get a quick overview of who&amp;#39;s
submissions worked and who&amp;#39;s didn&amp;#39;t. I still have to look at the
students actual code but I usually navigate all of that in Emacs.
&lt;/p&gt;
&lt;p&gt;
Finally, for grades, I just use a Google Spreadsheet with a script I
wronte to email grades to the students -
&lt;a href=&#34;https://cestlaz.github.io/posts/google-sheets/.&#34;&gt;https://cestlaz.github.io/posts/google-sheets/.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You can easily adapt this processto use other languages wether you use Unit
Tests or not. 
&lt;/p&gt;
&lt;p&gt;
So, GitHub classroom - check it out. 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/2PuXdb8OLYo&#34;&gt;https://www.youtube.com/embed/2PuXdb8OLYo&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Helps Me Help Students</title>
      <link>https://cestlaz.github.io/post/github-helps-me-help-students/</link>
      <pubDate>Mon, 11 Feb 2019 18:55:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-helps-me-help-students/</guid>
      <description>&lt;p&gt;
Earlier today I was reminded why I love GitHub in support of my
classes. One of my students posted a question about our current
lab. They posted a synopsis of the problem along with the error
message.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re all working on GitHub the student&amp;#39;s work was already up
online Since I started using &lt;a href=&#34;https://classroom.github.com&#34;&gt;GitHub Classroom&lt;/a&gt; I was able to quickly
navigate to the repo. This might have been enough but to really in to
the students work I cloned the repo and went into Emacs. Using &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-47-magit/&#34;&gt;Magit&lt;/a&gt;,
Emacs&amp;#39;s Git interface I was quickly able to navigate the project and
also see recent changes or in fact any changes to any of the student&amp;#39;s
project files. I didn&amp;#39;t use it this time but &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-42-git-gutter/&#34;&gt;Git Timemachine&lt;/a&gt; gives an
even slicker way to see the history of changes for a specific file.
&lt;/p&gt;
&lt;p&gt;
With these tools it took almost no time to get the lay of the land and
figure out where the student hit the wall. From there I posted a hint to nudge the student in the
right direction.
&lt;/p&gt;
&lt;p&gt;
GitHub classroom makes the student repo management easy but the other
tools were just plain old Git and Emacs. 
&lt;/p&gt;
&lt;p&gt;
Of course, for this to work, students have to play their part. If a
student doesn&amp;#39;t push their changes regularly up to GitHub I won&amp;#39;t be
able to see the diffs and help. When they do, it&amp;#39;s a real world tool
that once again has proven to be great at supporting education.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Github Classroom and Travis CI</title>
      <link>https://cestlaz.github.io/post/github-classroom-travis/</link>
      <pubDate>Sat, 02 Feb 2019 09:44:29 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-classroom-travis/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been using GitHub with my classes since GitHub&amp;#39;s early days. Over
time I&amp;#39;ve gotten my &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4/&#34;&gt;workflows down&lt;/a&gt;. I use a combination of shell
scripts - many just written on the fly, GitHub organizations, and some
naming conventions and protocols that have served me well. 
&lt;/p&gt;
&lt;p&gt;
A few years ago, the &lt;a href=&#34;https://education.github.com/&#34;&gt;GitHub Education team&lt;/a&gt; started &lt;a href=&#34;https://classroom.github.com/&#34;&gt;GitHub
Classroom&lt;/a&gt;. I looked at it at the time. It was pretty cool but I had my
workflow so I didn&amp;#39;t adopt it. I still very much liked GitHub, the
education team, and the product so I kept tabs on the project as time
passed. 
&lt;/p&gt;
&lt;p&gt;
This semester I decided to go all in on GitHub Classroom. Why? A
combination of my changing my workflow and part due to the GitHub
education tools and community. At it&amp;#39;s core, GitHub classroom does two
things well:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Assignment creation and distribution
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Repo management and organization.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I thought I&amp;#39;d do a couple of posts and videos to show how I&amp;#39;m using
everything. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the first one.
&lt;/p&gt;
&lt;p&gt;
Interestingly enough I&amp;#39;m not going to talk at all about GitHub
classroom for the remainder of this post. Instead I&amp;#39;m going to talk
about TravisCI (&lt;a href=&#34;https://travis-ci.com/&#34;&gt;&lt;a href=&#34;https://travis-ci.com/&#34;&gt;https://travis-ci.com/&lt;/a&gt;&lt;/a&gt;,
&lt;a href=&#34;https://travis-ci.org/&#34;&gt;https://travis-ci.org/&lt;/a&gt;). Travis is a platform for continuous
intergration. The idea is pretty simple. After setting things up,
whenever you push code to a repo that Travis is watching, Travis
starts a container for your repo and runs one or more scripts against
the repo. This usually means tests. It turns out that this can be a
useful sanity check for students. It&amp;#39;s true that they can run tests on
their assignments before submitting them but this way it&amp;#39;s done
automatically and after they submit. They can be sure that what
they&amp;#39;ve submitted actually works.
&lt;/p&gt;
&lt;p&gt;
First you have to link your GitHub accoutn with Travis. To do this,
just go to travis-ci.org and log in using GitHub. You can then set a
bunch of options including which repos to run Travis on. The interface
at travis-ci.com looks similar but a bit nicer. The .org site is free
for open source or public repos  (as is the .com site, I think) but
the good people at Travis will give you rights to use private repos
for educational purposes for free. 
&lt;/p&gt;
&lt;p&gt;
The only other thing you have to do is create a &lt;a href=&#34;https://yaml.org/&#34;&gt;YAML&lt;/a&gt; file named
 &lt;code&gt;.travis.yml&lt;/code&gt; in your repo. Here&amp;#39;s one I&amp;#39;m using to test C++ projecs:
&lt;/p&gt;
&lt;div class=&#34;src src-yaml&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;language&lt;/span&gt;: cpp
&lt;span style=&#34;color:#66d9ef&#34;&gt;compiler&lt;/span&gt;: clang
&lt;span style=&#34;color:#66d9ef&#34;&gt;script&lt;/span&gt;:
  - make test
  - ./test&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This tells Travis to use the clang compiler (as opposed to, say g++)
and then run &lt;code&gt;make test&lt;/code&gt; and then &lt;code&gt;./test&lt;/code&gt;. If all the tests pass you
get a green check and an email and you&amp;#39;re good to go. If they don&amp;#39;t
you get a red X and also an email. Of course for this particular
configuration to work you need &lt;code&gt;Makefile&lt;/code&gt; and everything else needed
to build the tests in the repo. In my case, I&amp;#39;m using &lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt; for tests.
&lt;/p&gt;
&lt;p&gt;
Travis has support for a whole bunch of languages including Java,
Python, and JavaScript and all of those have nice testing frameworks
so regardless of what you&amp;#39;re teaching with, Travis could be easily
integrated. 
&lt;/p&gt;
&lt;p&gt;
In this video I show how I&amp;#39;m using TravisCI and also a simple Python
setup. In the next post I&amp;#39;ll get back to GitHub classroom and how
TravisCI integrates into it.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/-J8A5oWazvE&#34;&gt;https://www.youtube.com/embed/-J8A5oWazvE&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pull Requests and Other People&#39;s Code</title>
      <link>https://cestlaz.github.io/posts/pull-requests/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pull-requests/</guid>
      <description>&lt;p&gt;
One of the things I&amp;#39;ve heard for years from former students - both
those looking for jobs and those looking to hire is that colleges
don&amp;#39;t really do a good job preparing students for careers in
tech. Sure they teach the algorithms and the theory but ther are a lot
of missing pieces, particularly on the practical end. I&amp;#39;m certainly
not advocating turning CS programs into coding schools but there are
many low cost opportunities to bring practical real world best
practices in to the CS classroom. I most recently wrote about &lt;a href=&#34;http://cestlaz.github.io/posts/testing-part2%0A&#34;&gt;unit
testing&lt;/a&gt; and had earlier about using &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4&#34;&gt;GitHub as an educational
tool&lt;/a&gt;. I&amp;#39;ve been happy with the way I introduce students to Git and
how we use GitHub in my classes but I&amp;#39;ve never found a smooth way to
introduce Pull Requests. A pull request is basically a mechanism by
which one can suggest a change to a project even if you don&amp;#39;t own
it. The project owner can then decide to merge it in or not.
&lt;/p&gt;
&lt;p&gt;
Being comfortable with the pull request work flow is an important part
of contributing to open source projects. The basic process is that you
make a copy of the project you want to work on by forking it, make
your changes, then issue a pull request back to the project. For a
beginner, there are a lot of moving parts. Instead, I teach my
students branching and merging within a project. It&amp;#39;s much easier and
arguably more useful for day to day projects. I&amp;#39;d like my kid to learn the
pull request mechanics but I haden&amp;#39;t thought of a good way to do it.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also wanted to give kids more real world experiences in class and
one experience they rarely get is working in other people&amp;#39;s code
bases. In school you largely write your own projects be they group or
solo or work off a hopefully tried and true code base provided by the
instructor. In the real world you&amp;#39;re frequently working off of someone
elses code and it&amp;#39;s rarely in a polished state.
&lt;/p&gt;
&lt;p&gt;
I finally found a way to kill both birds with one stone. A couple of
weeks ago my class&amp;#39; lab was rather lengthy. It involved reading in a
source file and reformating it in a sensible way. I knew most of the
students wouldn&amp;#39;t finish it in the allotted time and even if they did,
this was an easy assignment to extend. On lab day I had students
create a new repo for this lab (normally they just add a folder in a
their &amp;#34;labs&amp;#34; repo) and get as much done as they could. The rule was
simple - push what you&amp;#39;ve got up to GitHub at the end of class and
then you can&amp;#39;t push anything else. I also made it clear that I didn&amp;#39;t
expect a completed lab..
&lt;/p&gt;
&lt;p&gt;
We continued the lab in the next class session. This time. I randomly
assigned repos to students so that they would fork someone elses
lab. They then had to complete the lab on the other students code base
and then issue a pull request back to the original
&lt;/p&gt;
&lt;p&gt;
This was the first time I&amp;#39;ve tried this so it was a little
klunky. I&amp;#39;ll do a much better job specifying the assignment and
instructions next time around but even so I think the class went
well. By the end of the class the students had sucesfully forked a
project, issued a pull request, and merged one in to their own
project. The only think I wasn&amp;#39;t happy with was that many of the
merges happened automatically. I have to figure out how to set things
up so that there are merge conflicts since I want my students to
experience that.
&lt;/p&gt;
&lt;p&gt;
Overall,  I was very happy with the way things worked out. The
students were able to experience important real workd software
engineering techniques without removing any of the academic CS in the
class.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Collaborative Coding or Cheating</title>
      <link>https://cestlaz.github.io/posts/collaborative-coding-or-cheating/</link>
      <pubDate>Fri, 20 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/collaborative-coding-or-cheating/</guid>
      <description>&lt;p&gt;
I haven&amp;#39;t been teaching this past semester. That&amp;#39;s why I haven&amp;#39;t been
writing much about lessons. I miss working with students but that will
resume in the fall and this semester has allowed me to get a jump on
new projects.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also allowed me to look at some student issues from a bit of a
distance.
&lt;/p&gt;
&lt;p&gt;
One issue that keeps coming up is cheating.
&lt;/p&gt;
&lt;p&gt;
Some of it, classroom cheating. my friend &lt;a href=&#34;https://twitter.com/cscheerleader&#34;&gt;Ria&lt;/a&gt; recently asked a
question on Facebook about it. A nice thread ensued but unfortunately,
it&amp;#39;s locked in the Facebook silo. I&amp;#39;ve got a lot to say on that and
hope to explore it soon but today let&amp;#39;s focus on project
cheating - something that could just as easily apply to homeworks and
student essays and research papers as well.
&lt;/p&gt;
&lt;p&gt;
One part of the question is on students using code they find out in
the wild. &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred&lt;/a&gt; wrote a bit about it on his blog &lt;a href=&#34;http://blog.acthompson.net/2016/05/copying-codesteal-from-best.html&#34;&gt;here&lt;/a&gt; where he points
out some pluses, some minuses, and raises some good thought points.
&lt;/p&gt;
&lt;p&gt;
I want to keep it in the class - code sharing amongst students,
project and source code submission, and group projects.
&lt;/p&gt;
&lt;p&gt;
Teachers have all sorts of options these days including:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Using a CMS like Blackboard or Moodle
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Dropbox based solutions
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Emailing projects
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Using development tools and sites such as git with GitHub, BitBucket
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
or other repository hosting services
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve always been a fan of having the kids learn real software
engineering skills along with the CS so Git, GitHub and public repos
have been my weapon of choice.
&lt;/p&gt;
&lt;p&gt;
Interesting enough, I&amp;#39;ve gotten an earful both from fellow teachers
and professors and online for my stance on public repos.
&lt;/p&gt;
&lt;p&gt;
I keep hearing &amp;#34;the kids will copy from each other&amp;#34; or something like
that.
&lt;/p&gt;
&lt;p&gt;
As Alfred said in his post: &amp;#34;Students have been copying from
classmates for years.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Students who want to copy assignments have done so long before we&amp;#39;ve
been teaching CS and they&amp;#39;ll be doing it for years to come.
&lt;/p&gt;
&lt;p&gt;
Using a hidden submission system doesn&amp;#39;t help and could hurt.
&lt;/p&gt;
&lt;p&gt;
Far better to create an open environment. You get an opportunity to
talk about code sharing, attribution, learning from each other,
supporting each other, and where to draw the line.
&lt;/p&gt;
&lt;p&gt;
On top of that, the students learn a real tool set and have a chance
to learn real development methodologies.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a win all around.
&lt;/p&gt;
&lt;p&gt;
Will open repos stop cheating and irresponsible copying? Certainly
not. It could, however, raise awareness.
&lt;/p&gt;
&lt;p&gt;
So what do I do on the cheating front?
&lt;/p&gt;
&lt;p&gt;
Besides trying to create a culture where cheating is discouraged,
cooperation is encouraged but where students know the line, I will try
to keep them honest.
&lt;/p&gt;
&lt;p&gt;
Frequently, the day a big project is due, I&amp;#39;ll give a quiz on the
project. Students will have to describe parts of the project and what
they did. Either a student will have had to contributed or at least
will have had to have studied the rest of the teams code to pass the
quiz.
&lt;/p&gt;
&lt;p&gt;
GitHub also gives tools that help.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the GitHub graph for a project:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/github-graph.png&#34; alt=&#34;/img/github-graph.png&#34; title=&#34;/img/github-graph.png&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
You can see who did what and when. The teacher can drill down further
to examine the diffs â€“ what code did each student write, when, and
from where. If two students submit very similar code, the commit
timestamps will even tell you who was first.
&lt;/p&gt;
&lt;p&gt;
The tooling for teachers could be better but the infrastructure is
there.
&lt;/p&gt;
&lt;p&gt;
Technology isn&amp;#39;t going to prevent cheating and more often than not, it
seems that measures taken don&amp;#39;t stop the bad guys but inconvenience
those trying to do it right.
&lt;/p&gt;
&lt;p&gt;
Much better to build a class culture where the kids want to do it the
right way.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>