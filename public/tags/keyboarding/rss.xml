<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>keyboarding on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/keyboarding/</link>
    <description>C&#39;est la Z (keyboarding)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jul 2018 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/keyboarding/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Keyboarding and the Digital Divide</title>
      <link>https://cestlaz.github.io/posts/keyboarding-dig-divite/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/keyboarding-dig-divite/</guid>
      <description>&lt;p&gt;
My friend Adam posted this link to an article on &lt;a href=&#34;http://www.asahi.com/ajw/articles/AJ201803290068.html&#34;&gt;the new digital
divide&lt;/a&gt; the other day. It&amp;#39;s talking about young people who do
everything on the phone so aren&amp;#39;t familiar or comfortable with a
traditional keyboard/mouse computer setup. In the comments there were
some of us who lamented about the term &amp;#34;digital natives&amp;#34; and the idea
that kids these days know all about computers and technology.
&lt;/p&gt;
&lt;p&gt;
This led me to think about a couple of things. First was a
conversation I had a few years ago with someone who taught lower
grades. I forget if it was upper elementary or middle school. He asked
if his school should continue to teach keyboarding. I thought about it
for a minute and decided it was probably a good thing. At some point,
kids will have to type things - papers, reports, programs and the kid
that doesn&amp;#39;t have to fight with the technology has a clear
advantage. I don&amp;#39;t remember who said this but one of the early
rationales for markup typesetting systems like LaTeX or HTML was that
the system takes care of the formatting so the author could focus on
the content. You shouldn&amp;#39;t stress about how large the type should be,
how to emphasize some text or how to number a section, just say you
want a section, let the system format it and you focus and writing
your content.
&lt;/p&gt;
&lt;p&gt;
In the case of HTML  you weren&amp;#39;t supposed to worry about the size of
the screen, if it could show graphics, or even if it was color,
grayscale or black and white - you just provided the content and
markup and the browser would render it correctly. Same with LaTeX. You
just labelled your document with things like §ion ⊂seciton,
\footnote \equation etc. and let the system typeset it. If you&amp;#39;re
publishing a book, just say it&amp;#39;s a book and it&amp;#39;ll render it correctly,
a paper, it&amp;#39;ll make the appropriate adjustments.
&lt;/p&gt;
&lt;p&gt;
All this meant you could just focus on your content.
&lt;/p&gt;
&lt;p&gt;
At a more basic level, the same is true for typing. If you&amp;#39;re hunting
for keys in words you&amp;#39;re distracted from thinking about sentences let
alone concepts, flow, etc. A kid who can type most certainly has an
advantage over one who does not.
&lt;/p&gt;
&lt;p&gt;
Meanwhile in the schools there&amp;#39;s frequently an assumption that kids
used computers all the time so they certainly can type. In my
experience that hasn&amp;#39;t been the case and as pointed out in the linked
article above things are probably going to get worse.
&lt;/p&gt;
&lt;p&gt;
Of course it&amp;#39;s true that typing might eventually go the way of the
dodo. Maybe swiping and tapping with thumbs will become the norm
through society or maybe we&amp;#39;ll go to mostly dictation (although that
has it&amp;#39;s own problems) but we won&amp;#39;t get there for a while.
&lt;/p&gt;
&lt;p&gt;
The article also made me think about the fact that kids these days use
computers all them time and don&amp;#39;t know how to do anything on
them. Almost sounds like a Yogiism. The truth is that, yes, kids grew
up using computers, tablets, and phones but they use them within the
walled silos of Facebook, snapchat etc.
&lt;/p&gt;
&lt;p&gt;
Back in the day, if you used computers you had to make an effort. If
you wanted to use a word processor you had to learn something about a
file system. If you wanted to do something on that new fangled thing
called the internet, you had to learn something about HTML and
transferring files. In general, if you were a teacher and a kid used a
computer for something they were probably pretty knowledgable about
computers and if they didn&amp;#39;t know something they could probably figure
it out.
&lt;/p&gt;
&lt;p&gt;
Now, everything is within a pre provided application. Kids can use
Google Docs or I&amp;#39;d guess Microsoft Office and have no idea what a file
system is. They put up pictures using Instagram, commuincate using
Facebook or Snapchat and in general don&amp;#39;t have to know anything about
the technology they&amp;#39;re using. Some argue that CS Education should
&lt;a href=&#34;https://www.rushkoff.com/books/program-or-be-programmed/&#34;&gt;address this&lt;/a&gt; but then we turn around and use integrated cloud based
environments so the kids learn some of the algorithmic side of
programming but nothing about the environment they&amp;#39;re working in.
&lt;/p&gt;
&lt;p&gt;
Personally, I think our kids should ahve at least a rudimentary
understanding of what&amp;#39;s under the hood but I could be wrong. I try to
address this by starting the kids in &lt;a href=&#34;https://ccl.northwestern.edu/netlogo/&#34;&gt;sheltered environments&lt;/a&gt; and then
graduate them up to the command line but that&amp;#39;s just me.
&lt;/p&gt;
&lt;p&gt;
The important takeaway is to remember that a &amp;#34;digital native&amp;#34; may very
know nothing about the technology that they&amp;#39;re using. We should
understand that and act accordingly.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>