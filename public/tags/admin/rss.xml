<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>admin on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/admin/</link>
    <description>C&#39;est la Z (admin)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Feb 2018 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/admin/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Google Sheets</title>
      <link>https://cestlaz.github.io/posts/google-sheets/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/google-sheets/</guid>
      <description>&lt;p&gt;
I make regular use of Google&amp;#39;s office suite. I use Google forms all
the time to collect data, Google docs when I have to leave Emacs for
document preparation - usually when I have to collaborate with others
online and I use Google Sheets as my greadebook.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t do a lot of data processing using Google sheets. For that I
download the data and write small scripts. On the other hand it turns
out that you can do some pretty nifty things by scripting right in
Google sheets.
&lt;/p&gt;
&lt;p&gt;
Google sheets can be scripted using Javascript and Google&amp;#39;s APIs. For
example, adding &amp;#34;hello&amp;#34; and &amp;#34;world&amp;#34; to the two bottom leftmost cells
in your active spreadsheet can be done by running a function like
this:
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In general, it&amp;#39;s pretty easy to grab, modify, or otherwise manipulate
cells from a spreadsheet with simple javascript.
&lt;/p&gt;
&lt;p&gt;
You can also send email from a Google app script. For me this was a
big win. I use it for emailing grades to students and also as a poor
man&amp;#39;s mailmerge. The key call is:
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here&amp;#39;s a video walking through sending emails to a list of people from
a spreadsheet. The code is underneath.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/EvQC1N9JMs0&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>