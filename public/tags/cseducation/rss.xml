<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cseducation on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/cseducation/</link>
    <description>C&#39;est la Z (cseducation)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Apr 2019 08:12:54 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/cseducation/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>CS Teacher PD at Grow with Google</title>
      <link>https://cestlaz.github.io/post/pd-at-gwg/</link>
      <pubDate>Fri, 12 Apr 2019 08:12:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-at-gwg/</guid>
      <description>&lt;p&gt;
Yesterday we held our third monthly Professional Development session
for teachers of &amp;#34;APCS-A, Similar, and Beyond.&amp;#34; It&amp;#39;s great to see that
we&amp;#39;re starting to form a core of a community of CS teachers teaching
some of the more advanced classes as there is a core group that keeps
coming back for more. Even better is the fact that we&amp;#39;re gaining a
couple of new teachers at each session.
&lt;/p&gt;
&lt;p&gt;
Last time, we were at &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt;, a cloud provide that has been
very involved in education since their creation  and has been a
tremendous boon to my education projects over the years. 
&lt;/p&gt;
&lt;p&gt;
This time we were hosted at &lt;a href=&#34;https://events.withgoogle.com/grow-with-google-in-nyc/#content&#34;&gt;Grow with Google&lt;/a&gt;&amp;#39;s new New York City
space. It&amp;#39;s a great space on the first two floors of Google&amp;#39;s main
building in Chelsea - 111 8th avenue. GWG looks like it will be a
terrific resource for New Yorkers with workshops ranging from coding,
resume writing, digital skills, and more. They also have offerings for
both kids and adults. 
&lt;/p&gt;
&lt;p&gt;
They were also great hosts, providing a great room for us to run our
session as well as a nice dinner to keep the teachers fueled.
&lt;/p&gt;
&lt;p&gt;
As usual, we had two major themes for our PD. First the pedagogy. My
former colleage Topher started with a pair programming workshop. 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/gwg-topher.jpg&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Pair programming is a pretty common technique but it&amp;#39;s deceptively
difficult to do well. It&amp;#39;s not as simple as &amp;#34;work in groups of two&amp;#34;
and it can be a challenge to make sure both students are engaged and
progressing while using this practice.
&lt;/p&gt;
&lt;p&gt;
Topher ran the group through a pair programming exercise and led a
discussion as to some of the strategies he uses and some of the
challenges he&amp;#39;s face. I found it very helpful. Even small suggestions
like when he has each pair draw their &amp;#34;team flag&amp;#34; on a piece of paper
which they&amp;#39;ll hold up if they want to ask for help. In the discussion
after the workshop I mentioned that I&amp;#39;ve had more success with pair
programming when I relate it to a series of code review lessons I&amp;#39;ve
been doing and that if people were interested I&amp;#39;d talk about those
lessons at a future session.
&lt;/p&gt;
&lt;p&gt;
Then we had dinner after which I did the content piece.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/gwg-z.jpg&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
We first look at a bit of &lt;a href=&#34;https://ccl.northwestern.edu/netlogo/&#34;&gt;NetLogo&lt;/a&gt; for image procesing mostly so I
could introduce the participants to NetLogo since it&amp;#39;s really an
underused, underappreciated environment. Then we talked a bit about
the APCS-A image lab. This led to the meat of the content piece. We
took a look at &lt;a href=&#34;https://www.youtube.com/watch?v=6NcIJXTlugc&amp;amp;list=WL&amp;amp;index=44&amp;amp;t=0s&#34;&gt;this video&lt;/a&gt; on seam carving. When I first saw it, I was
blown away. Now it&amp;#39;s an old technique but I&amp;#39;m still blown away by how
it can be used as both motivation and a a platform to teach some
dynamic programming. We then did a brief overview behind the basic
ideas of dynamic programming and then developed the dynamic
programming algorith that&amp;#39;s used in Seam Carving. I&amp;#39;ll probably write
all of this up in more detail in a future post.
&lt;/p&gt;
&lt;p&gt;
Overall it was a great event. We have one more PD scheduled for May
and then we&amp;#39;ll start it up again in the Fall.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s great to have amazing partners like Google and Digital Ocean to
help support our CS teachers and I&amp;#39;m looking forward to work with both
of them for years to come.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Implicit Curricula</title>
      <link>https://cestlaz.github.io/post/implicit-curricula/</link>
      <pubDate>Sun, 07 Apr 2019 16:23:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/implicit-curricula/</guid>
      <description>&lt;p&gt;
The state got back to us the other week on our CSEd programs. Still no
approval. 
&lt;/p&gt;
&lt;p&gt;
One of the requirements is that we have 12 graduate CS
credits in our program and that in those courses these five major
areas:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Algorithms and programming
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Computing systems
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data and analysis
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Impacts of computing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Networks and the internet
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
as described in the &lt;a href=&#34;https://k12cs.org/&#34;&gt;K12 CS Framework&lt;/a&gt;. Even though many of the items
described in the framework fit better in an education side course NY
is requiring that it&amp;#39;s all covered in CS courses offered by a CS
department.  The state has more information &lt;a href=&#34;http://www.nysed.gov/college-university-evaluation/computer-science-certificate-coursework-guidance&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
To be honest, I&amp;#39;m not a fan of the K12 Framework and others have also
voiced their concerns about it. Ultimately I think many states will
use it as a certification guide and it will open the door to
substandard preservice programs that will certify teachers lacking in
CS content knowledge.
&lt;/p&gt;
&lt;p&gt;
Still, the programs we designed at Hunter more than covered all the
required bases. 
&lt;/p&gt;
&lt;p&gt;
So, why did the state come back asking for clarification? Because not
everything was explicit in our sample syllabi. As we all know, Syllabi
are usually rather terse documents with just a couple of lines per
topic, maybe also an assignment and some readings. If they contained
all the richness of all the lessons they&amp;#39;d be volumes rather than the
usual page or two. So, to provide the requested clarifications I&amp;#39;ve been spending
the weekend breaking them out to show more detail.
&lt;/p&gt;
&lt;p&gt;
This got me thinking about the concept of implicit items in 
curricula. Much of the richness of a lesson comes not from the
description of the topic in the syllabus but also from related and
ancillary items that aren&amp;#39;t specifically listed - implicit items. One
example I wrote about before is &lt;a href=&#34;https://cestlaz.github.io/posts/2010-01-10-towers-of-hanoi.html/&#34;&gt;the Towers of Hanoi&lt;/a&gt;. When I teach it,
on the one hand, it&amp;#39;s a lesson about a recursive solution to a problem
but on the other hand there&amp;#39;s all sorts of other richness to the
lesson. We talk about
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Proof
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Run time
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Hard problems
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Moores law and the limits f computing power
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Alternate approaches to problems
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
None of which is in a typical Towers of Hanoi lesson plan nor in most
text books yet to me they&amp;#39;re the most important, interesting parts of
the lesson. 
&lt;/p&gt;
&lt;p&gt;
Another example is when I talk about changing the data structure
rather than the code when I teach &lt;a href=&#34;https://cestlaz.github.io/posts/2014-02-26-change-the-data/&#34;&gt;search&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
In our Ed proposals one such place was when we move from using an
online IDE to a local development environment and discuss all sorts of ramifications
another is when we create a web application in our topics class and
things like authentication and security are discussed.
&lt;/p&gt;
&lt;p&gt;
I spent most of this weekend going through our proposals and  making
sure it was clear everywhere we covered something relating to those &amp;#34;5
areas&amp;#34; of computer science.
&lt;/p&gt;
&lt;p&gt;
The unfortunate thing is that of curricular material and  knowledge
isn&amp;#39;t easy to collect and share with others.
&lt;/p&gt;
&lt;p&gt;
I and others have written about lesson ideas on our blogs but there&amp;#39;s
no searchable, shareable, discoverable  place for either basic lesson
material or these rich implicit items. I wrote about &lt;a href=&#34;https://www.engage-csedu.org/&#34;&gt;EngageCS&lt;/a&gt; and
&lt;a href=&#34;http://nifty.stanford.edu/&#34;&gt;Nifty Assignments&lt;/a&gt; &lt;a href=&#34;https://cestlaz.github.io/post/adapting-a-nifty-assignment/&#34;&gt;before&lt;/a&gt; but they&amp;#39;re really core lesson ideas and
aren&amp;#39;t really easy to find grab and use.
&lt;/p&gt;
&lt;p&gt;
I guess the closest project moving in this direction is probably
&lt;a href=&#34;https://cssplice-cm.github.io/&#34;&gt;CSSplice Curriculum Materials Working Group&lt;/a&gt; that I found out about
from &lt;a href=&#34;https://twitter.com/AustinCorgiBart&#34;&gt;Cory Bart&lt;/a&gt; at this past SIGCSE.
&lt;/p&gt;
&lt;p&gt;
Check out the project link and if you&amp;#39;ve got a great lesson with lots
of implicit learnings going on, please share it in the comments.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter College Winter Codefest 2019</title>
      <link>https://cestlaz.github.io/post/code-fest-2019/</link>
      <pubDate>Wed, 20 Feb 2019 17:34:00 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/code-fest-2019/</guid>
      <description>&lt;p&gt;
It&amp;#39;s great to see how much Hunter CS has developed since starting here
there years ago. The latest endeavor is Winter Codefest. During the
fall I was approached by one of my students who had asked an older
Hunter CS student about their portfolio and found that the senior&amp;#39;s
portfolio was lacking. This student said we should do something to
help encourage younger students to build that portfolio. 
&lt;/p&gt;
&lt;p&gt;
The result was Winter Codefest. A team of organizers was formed and
they came up with the plan. Have students register teams right after
Fall finals and have teams work on independent projects over the
course of January before the Spring semester started. We&amp;#39;d then have an
event where everyone would show off their work. We decided to limit
participants to my Daedalus scholars this time around but planned from
the get go to make it Hunter wide in the future.
&lt;/p&gt;
&lt;p&gt;
We ended up with about 24 participants spanning all three Daedalus
cohorts with most of the participants in the second year group. 
&lt;/p&gt;
&lt;p&gt;
Due to the scheduling we couldn&amp;#39;t hold the end of competition event
until today. A bunch of us gathered along with some of our friends
from the tech community to review the projects, network, and generally
talk tech. All in all the event was a real success. All the
participants learned new  technologies and now have one more show
piece to talk about in interviews.
&lt;/p&gt;
&lt;p&gt;
This year was unquestionably a success and it&amp;#39;s going to be a bigger
one next year. The CS department is working on creating 1 and 2 credit
projects courses that will be offered during the winter session. This
will enable students to take the courses to develop a Winterfest
project with the support of a class around it. We&amp;#39;re also going to
make the event available to all Hunter CS students. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s really exciting to be part of developing programs like Hunter
College CS, Programs that can be super transformative for young New
Yorkers. It&amp;#39;s even more exciting when your students take active
leadership roles and help make our programs even more special.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS For All The Time</title>
      <link>https://cestlaz.github.io/post/cs4allthetime/</link>
      <pubDate>Fri, 07 Dec 2018 08:20:42 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs4allthetime/</guid>
      <description>&lt;p&gt;
A question that frequently comes up with respect to CS for All is what
does it mean? 
&lt;/p&gt;
&lt;p&gt;
To me it means giving all students some fundamental exposure to
computer science so that they can:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Make use of those thinking skills, problem solving approaches, and
practical tools regardless of their future paths. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Provide a path for the subset of &amp;#34;all&amp;#34; that desire to further pursue
computer science.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
But even with this, how do you do it?
&lt;/p&gt;
&lt;p&gt;
Does it mean that you require computer science? If so, do we require it every
year? some years? One time only?
&lt;/p&gt;
&lt;p&gt;
Does it mean you offer it as an elective? If so, when?
&lt;/p&gt;
&lt;p&gt;
I think about this a fair amount but decided to write something up
when I saw this tweet:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;STEM related career interests are largely developed before high school (Sadler, Sonnert, Hazari, &amp;amp; Tai, 2012) &lt;a href=&#34;https://twitter.com/hashtag/csforall?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#csforall&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/csedweek?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#csedweek&lt;/a&gt; &lt;a href=&#34;https://t.co/TiAUvpP3bQ&#34;&gt;https://t.co/TiAUvpP3bQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Lana Peterson (@tyLanasaurusrex) &lt;a href=&#34;https://twitter.com/tyLanasaurusrex/status/1070475730562084864?ref_src=twsrc%5Etfw&#34;&gt;December 6, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I responded that I&amp;#39;ve seen many kids get their first exposure in high
school and from that go on to careers in tech so it&amp;#39;s clear to me that
high school isn&amp;#39;t too late. I was reminded that I was talking about
kids who went through my required HS CS class so the kids had no
choice but to be exposed to CS but the people advocating starting at
an elementary level are talking about a compulsory experience so to
compare a required elementary experience against an elective high
school one is really apples to oranges.
&lt;/p&gt;
&lt;p&gt;
Even thought it&amp;#39;s an unfair comparison there are a lot of things it
can lead one to consider.
&lt;/p&gt;
&lt;p&gt;
Should we teach CS in every grade? Probably not. How about every band?
Maybe. For those of you not living in the K12 world &amp;#34;by band&amp;#34; usually
refers to a set of grades - kindergarten to 2, 3 through 5, 6-8, and
then high school. Where should it be required and where an elective?
&lt;/p&gt;
&lt;p&gt;
Teaching a required CS class in every grade or band is going to be a
huge undertaking. I&amp;#39;m also not sure it&amp;#39;s required. To get the best
bang for your buck you want to expose the kids to CS in a way and at a
time when they might pursue it further. If you&amp;#39;re having only one
required experience, I don&amp;#39;t think the elementary grades are the
place.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s that point in time, I think around first through third grade
where dinosaurs are all the rage. Maybe more so in NYC where we have
access to the &lt;a href=&#34;https://www.amnh.org/&#34;&gt;American Museum of Natural History&lt;/a&gt; but still. Lots of
young kids want to be paleontologists but it doesn&amp;#39;t hold. Okay. maybe
I&amp;#39;m being a little silly here but I think the basic point is
accurate. Kids are exposed to many things in the early grades that
just fade away. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying that we shouldn&amp;#39;t do CS or CS related things in grade
school. Things like the activity &lt;a href=&#34;https://twitter.com/fredwilson&#34;&gt;Fred Wilson&lt;/a&gt; described in his post on
this year&amp;#39;s &lt;a href=&#34;https://avc.com/2018/12/la-hora-del-codigo/&#34;&gt;Hour of Code&lt;/a&gt; or the problem solving and logic games good
teachers do if given the time and resources. Things that have
always been done by some teachers in some schools but are now being
relabled CS or Computational Thinking. These are great practices and
should be made available to all students as part of their elementary
education but I doubt that they&amp;#39;ll lead to many kids following CS as a
career path. I&amp;#39;m not an elementary school expert but to me, even
though I see great value in the early logic / problem solving stuff, I
don&amp;#39;t see hyping CS early as making a difference unless there&amp;#39;s some
follow up before the interest fades.
&lt;/p&gt;
&lt;p&gt;
That brings us to the middle school bands. I&amp;#39;ve dabbled a little here
but it&amp;#39;s also not my wheelhouse. In my experience, kids in lower
middle school can dabble in DnD tools and start to develop some 
coding skills and explore some of the CS concepts that they&amp;#39;ll see in
late HS or college and those in upper middle school can play with the
text based languages to do the same. What I also noticed is that what
can be accomplished in a month with those kids in middle school can be
done in a week or two when the kids are a year or two older and with
greater understanding and retention. 
&lt;/p&gt;
&lt;p&gt;
As a side note, before people get up in arms with &amp;#34;I teach middle
school kids APCS-A and they all master it&amp;#34; let me say that I&amp;#39;m
describing my experience across a range of middle school kids. There
will always be few outliers who can do more when younger. That said
I&amp;#39;m betting that most people who say that any middle school kid can
indeed master APCS-A hasn&amp;#39;t done so in an inner city poor public
school. Have you done it while teaching a class of 34?  With a class
of low income students with all the disadvantages and challenges
inherent to that population? What&amp;#39;s more did you then have to teach
them a data structures course a year or two later to see if they
really mastered the original material.
&lt;/p&gt;
&lt;p&gt;
This brings us to high school. As with my original tweet, in my
experience if you give kids a good first CS experience in high school
you can indeed give them everything needed for CS for All and it&amp;#39;s
close enough to college so that they might very well continue on the
CS career path.
&lt;/p&gt;
&lt;p&gt;
So where does this leave us? We certainly should embed computational
thinking practices (whatever that actaully means) in the elementary
school, particularly if we can do it in a way that also supports other
academic areas and while it&amp;#39;s nice to have a CS middle school
experience and if we can afford to offer one that&amp;#39;s wonderful. On the
other hand, I don&amp;#39;t think it&amp;#39;s as important as elementary exposure and
high school exposure so if we have to cut a corner, that&amp;#39;s the
place. To me, and of course I&amp;#39;m biased, the critical time for a
requirement is high school. Sure, if it&amp;#39;s an elective kids won&amp;#39;t take
it but that&amp;#39;s true of a lot of subjects. I don&amp;#39;t know what the
research says but people do indeed change directions. How many of us
are doing what we thought we&amp;#39;d be doing in grade school or middle
school. Heck, even high school. I have a friend that did computer work
in his twenties and thirties, then went to law school and practiced
law for a bunch of years and then in his forties started a production
company in LA. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a big believer in CS for All but to me it doesn&amp;#39;t mean it has to
be in every grade or every band. If I could only do it in one place it
would be required in the high school. If in two I&amp;#39;d add the elementary
school piece and then finally the middle school.
&lt;/p&gt;
&lt;p&gt;
As a final point I&amp;#39;d like to add that school is a zero sum game. There
are only so many minutes in the day and as we add CS we remove
something else. I believe we can add CS or, more specifically CT to
the elemntary schools without cutting anything and I know there&amp;#39;s room
in high schools in NY. I&amp;#39;m not sure about middle schools. In any
event, I&amp;#39;d hate to see music and art programs - already decimated by
budget cuts and misguided policies like the small schools movement
take a further hit so as to get CS everywhere.
&lt;/p&gt;
&lt;p&gt;
Just some food for thought.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TEALS Time</title>
      <link>https://cestlaz.github.io/posts/teals-time/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teals-time/</guid>
      <description>&lt;p&gt;
Everybody know&amp;#39;s I&amp;#39;m the Statler and Waldorf of the CS Education
world.
&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://media1.giphy.com/media/nPxVvyTWo1aIU/giphy.gif&#34; alt=&#34;https://media1.giphy.com/media/nPxVvyTWo1aIU/giphy.gif&#34; title=&#34;https://media1.giphy.com/media/nPxVvyTWo1aIU/giphy.gif&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been known to be &amp;#34;prickly,&amp;#34; which is a nice way of putting it and
I&amp;#39;m openly critical of many programs out there.
&lt;/p&gt;
&lt;p&gt;
One program, however, that I very much like is &lt;a href=&#34;https://www.tealsk12.org/&#34;&gt;TEALS&lt;/a&gt;. They&amp;#39;ve been
around since 2009 founded by &lt;a href=&#34;https://twitter.com/KevinKWang&#34;&gt;Kevin Wang&lt;/a&gt;, a former teacher. The basic
idea was to have tech professionals go to a school on the way to work
and team teach a CS class with one of the school&amp;#39;s teachers. The tech
person would provide the CS expertise and the teacher would provide
the education chops. They&amp;#39;d both learn from each other and the
students from both of them. I didn&amp;#39;t know what to make out of it when I
first heard about them and in general, I am  pretty skeptical about drop in
programs.
&lt;/p&gt;
&lt;p&gt;
After a couple of years, I started hearing from my former students. As
it turns out, a number of them had independently discovered TEALS and
become volunteers. They all talked about how rewarding the experience
was and how much the kids were getting that they wouldn&amp;#39;t have gotten
otherwise.
&lt;/p&gt;
&lt;p&gt;
I was sold.
&lt;/p&gt;
&lt;p&gt;
TEALS has expanded considerably in the decade since they started. Now
they support multiple classes at multiple levels, have different
models from the original team teaching to a model where the volunteer
is more of a general tech / programming resource and the teacher is
more self sufficient.
&lt;/p&gt;
&lt;p&gt;
Most importantly, they provide quality training and materials to both
the teachers and the tech volunteers.
&lt;/p&gt;
&lt;p&gt;
No drop in program can ever replace well prepared knowledgeable
teachers but in K12 CS very few of those teachers exist and it will
take us years to produce them.
&lt;/p&gt;
&lt;p&gt;
Until then, TEALS is one of the best programs to get CS education to
our kids and even when we do get there, their ability to connect
schools with volunteers and resources can&amp;#39;t be understated.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re a tech professional and want to do some real good, volunteer
with TEALS - here&amp;#39;s a link to more information:
&lt;a href=&#34;https://www.tealsk12.org/volunteers/&#34;&gt;&lt;a href=&#34;https://www.tealsk12.org/volunteers/&#34;&gt;https://www.tealsk12.org/volunteers/&lt;/a&gt;&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - Recap</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-recap/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-recap/</guid>
      <description>
&lt;p&gt;
As a high school teacher, I was never able to attend SIGCSE, the
conference of the ACM&amp;#39;s Special Interest Group on Computer Science
Education. Between the number of instructional days I would lose and
the cost, I could never justify going. Instead I looked over the
proceedings and read many of the papers.
&lt;/p&gt;
&lt;p&gt;
Now that I&amp;#39;m at Hunter, I was finally able to attend. This year in
Seattle, the conference ran from Wednesday through Saturday. I was
part of a panel on &amp;#34;Tools we can&amp;#39;t live without.&amp;#34; Over the next few
weeks, I hope to blog about a number of things I thought and talked
with people about over the conference including:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The path I use to teach git and why GitHub a good teaching tool
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
(my talk).
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The relationship of different CS Ed stakeholders - teachers,
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
researchers, organizations, etc.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Teaching at the high school level vs college - perceptions and
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
reality.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The challenges of tech tool adoption in schools.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What&amp;#39;s going on in K12 CS Certification.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Maybe some other stuff.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Today, some overall thoughts.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
The good
&lt;/h2&gt;
&lt;p&gt;
As with many conferences, the &amp;#34;hallway track&amp;#34; along with receptions
sponsored by &lt;a href=&#34;https://csnyc.org/our-work/cs4all&#34;&gt;the CS4All consurtium&lt;/a&gt;, &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt;, &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt; were terrific. I
was able to finally meet in person many people who I&amp;#39;ve only known
virtually and got to know many more as well. I left the conference
with a much larger address book and a long list of follow up
items. Being in Seattle, I also enjoyed being able to spend time with
people from &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt; and &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt;, two of the CS Ed groups working hard
to do some real good (yes - I do like and support these guys even
though I call them out on things I disagree with, but that&amp;#39;s the
subject of another post).
&lt;/p&gt;
&lt;p&gt;
I attended sessions on CS certification, teacher preparation,
assessments, POGIL based instruction to name a few. They ranged from
valuable to interesting and to be honest, a couple of &amp;#34;what were they
thinking&amp;#34; but the overall experience was very much worth the trip. I
also got to speak to a number of wonderful students at the
poster sessions.
&lt;/p&gt;
&lt;p&gt;
The keynotes are also well worth a read (sorry if you don&amp;#39;t have ACM
digital library access). &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025045&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Jeannette Wing&lt;/a&gt; talked about the importance of
probability and statistics in CS Ed, and aspects of  &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025047&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Gail Chapman&lt;/a&gt;&amp;#39;s talk
&amp;#34;Inspire, Innovate, and Improve…&amp;#34; keynote and &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025046&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Mitch Resnick&lt;/a&gt;&amp;#39;s
&amp;#34;Fulfilling Papert&amp;#39;s Dream&amp;#34; both spoke to the educator inside me.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The bad
&lt;/h2&gt;
&lt;p&gt;
The biggest downside to me was that I found very little value added in
a number of the paper sessions over just reading the papers. Part of
this is probably because of my own over-inflated expectations given the
number of years I&amp;#39;ve waited to attend. Part of it though, was the fact
that sessions were so tightly packed that I didn&amp;#39;t have time to follow
up with presenters before having to run to the next
thing. Unfortunately, in some
cases, it was because the presenter merely
&amp;#34;read&amp;#34; the paper much as a professor sometimes just reads the slides
or the book to his class.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Other thoughts
&lt;/h2&gt;
&lt;p&gt;
One paper presentation I very much liked was &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3017701&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Exam Wrappers: Not a
Silver Bullet&lt;/a&gt; presented by &lt;a href=&#34;https://michellecraig.github.io/&#34;&gt;Michelle Craig&lt;/a&gt; and &lt;a href=&#34;http://pages.cpsc.ucalgary.ca/~bdstephe/&#34;&gt;Ben Stephenson&lt;/a&gt;. I
actually came in late since I was hustling over from the Code.org
lunch. The result was that I didn&amp;#39;t actually know what &amp;#34;Exam Wrappers&amp;#34;
were until well after the talk when I ran into &lt;a href=&#34;https://twitter.com/jkhuggins&#34;&gt;Jim Huggins&lt;/a&gt;. Exam
wrappers, in short, are merely when you require the students fill out something
for some credit when picking up their exams. The funny thing is that
it&amp;#39;s a strategy that high school teachers have used for years without
a special name and we already knew the good and bad of it without the
research but that&amp;#39;s not what I want to get at here. What I loved about
the talk, besides the fact that Ben and Michelle are clearly strong
presenters is that this was a negative result that was being
presented. I also loved the fact that they didn&amp;#39;t present their
research as gospel but rather pointed out the strengths and weaknesses
of their approach - they made a case to what and why we should pay
attention to and what should be taken with a grain of salt.
&lt;/p&gt;
&lt;p&gt;
This was a major breath of fresh air after being exposed to so much
education &amp;#39;research&amp;#39; over the course of my life that the author or
presenter felt was just as strong as a mathematical proof rather than
an indication based on a specific experience or small set of
experiences.
&lt;/p&gt;
&lt;p&gt;
I also felt a little weird at times during the week when west coast people seemed
to know me. I know I&amp;#39;m a loud mouthed curmudgeon and I go on my
periodic ed rants but given the dearth of comments on this blog I was
really surprised to get as many as &amp;#34;great to meet you in person after
reading your blog&amp;#34; or &amp;#34;we know you and your work&amp;#34; all week. It was
weird and somewhat humbling.
&lt;/p&gt;
&lt;p&gt;
Finally, another highlight f`or me was that I got to catch up with
some of family.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse-seattle.jpg&#34; alt=&#34;/img/sigcse-seattle.jpg&#34; title=&#34;/img/sigcse-seattle.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
Already planning to submit something to present at SIGCSE 2018 in Baltimore.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017/</guid>
      <description>&lt;p&gt;
Tomorrow morning I fly out to Seattle for SIGCSE 2017. For those of
you not in the CS Education space, SIGCSE is the ACM (Association for
Computing Machinery) special interest group for computer science education.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve wanted to go for years but have never been able. It&amp;#39;s hard for a
high school teacher to miss a week in mid March, particularly in
places with a school calendar similar to New York. NY city schools are
already closed for a week in February and then Spring Break is right
around the corner. If you&amp;#39;re teaching an AP course with the exam in
early May, losing a week in March is really not an option. Even if you
can take the time, you&amp;#39;ll probably have to foot the bill out of
pocket.
&lt;/p&gt;
&lt;p&gt;
Now that I&amp;#39;m at Hunter, I&amp;#39;ve got more flexibility in terms of schedule
and attending is probably even more important given my current roles.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m looking forward to the talks and events but probably even more
looking forward to seeing old friends, meeting new ones and seeing
face to face friends that til now I&amp;#39;ve only known through the web.
&lt;/p&gt;
&lt;p&gt;
On Saturday I&amp;#39;ll be part of a panel (thanks &lt;a href=&#34;https://twitter.com/cscheerleader&#34;&gt;Ria&lt;/a&gt;) titled &amp;#34;Tools we
can&amp;#39;t live without.&amp;#34; I&amp;#39;ll probably talk about the way I use git and
GitHub and how I get my students up to speed but there are lots of
tools I can talk about.
&lt;/p&gt;
&lt;p&gt;
I plan to write up a series of posts on how I use GitHub (and how it
evolved from other versioning systems) as well as thoughts about other
tools I&amp;#39;ve used and some I&amp;#39;ve struggled with.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re going to be at SIGCSE drop me a line, I&amp;#39;d love to connect.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>