<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>problems on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/tags/problems/</link>
    <description>C&#39;est la Z (problems)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Oct 2017 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/tags/problems/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Early Interesting Problems - Happy Ladybugs</title>
      <link>https://cestlaz.github.io/posts/happy_ladybug/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/happy_ladybug/</guid>
      <description>&lt;p&gt;
We all love interesting problems. The trouble is that it&amp;#39;s hard to
find suitably interesting problems for students when they&amp;#39;re just
learning the basics. In the very beginning the problems practically
dictate the solution:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
loop over a list and add all the elements or calculate the sum of a
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
list of integers.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Determine if  number is prime
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Convert a word into pig-Latin
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
It&amp;#39;s not that there&amp;#39;s no thought involved in solving these but the
students already know the mechanics of solving these by hand so it&amp;#39;s a
direct translation into a program.
&lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t a bad thing and it is important but it&amp;#39;s fun when we get to the next
level. I&amp;#39;ve found that a number of the &lt;a href=&#34;http://hackerrank.com&#34;&gt;Hacker Rank&lt;/a&gt; archived
competitions have &amp;#34;easy&amp;#34; problems that can be a good fit for
beginners. One that I found and really like is &lt;a href=&#34;https://www.hackerrank.com/challenges/happy-ladybugs&#34;&gt;Happy Ladybugs&lt;/a&gt; problem.
&lt;/p&gt;
&lt;p&gt;
The problems is basically as follows:
&lt;/p&gt;
&lt;p&gt;
You get a string of letters. Each letter represents a ladybug of a
different color. Each letter also represents a location of the
ladybug.  A space (or underscore in the actual problem) represents a
free space. For example &amp;#34;AABC DDA&amp;#34; is a line of 2 A colored ladybugs
followed by a B colored one, C colored one, a blank space, 2 D colored and then one
more A colored.
&lt;/p&gt;
&lt;p&gt;
You can rearrange the line of ladybugs by swapping any ladybug with a
blank space.
&lt;/p&gt;
&lt;p&gt;
A ladybug is happy if it is next to another ladybug of the same
color. The challenge is to determine if all the ladybugs can be made
happy.
&lt;/p&gt;
&lt;p&gt;
I like this problem because while it is non-trivial it is very
approachable.
&lt;/p&gt;
&lt;p&gt;
To me, the key is that while you can rearrange the list you
don&amp;#39;t have to. You only have to determine if it is possible to make
the ladybugs happy. You don&amp;#39;t actually have to do so.
&lt;/p&gt;
&lt;p&gt;
The edge cases are pretty easy to deal with - a string of length one
or two but then a little thought is required.
&lt;/p&gt;
&lt;p&gt;
The first insight is that if there are no spaces, you can&amp;#39;t rearrange
the ladybugs so all you have to do is scan through the string to test
to see if every ladybug has a neighbor of the same color.
&lt;/p&gt;
&lt;p&gt;
The next insight, and the big one is that if you have at least one
space you can arbitrarily re-order the string. You can show this is
possible  by using a single space to swap any two elements.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The final insight is that since you can arbitrarily re-order the
ladybugs as long as you have at least 2 of each color, you can make
them all happy.
&lt;/p&gt;
&lt;p&gt;
Since my class is currently just starting dictionaries in Python we
solved this with lists and then transitioned to dictionaries.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a dictionary based solution:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I love problems like these.
&lt;/p&gt;
&lt;p&gt;
I just wish there was an easy way to find all contest problems of a
certain level like &amp;#34;easy&amp;#34; or &amp;#34;medium.&amp;#34; If anybody knows please share
in the comments.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>