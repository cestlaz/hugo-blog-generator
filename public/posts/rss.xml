<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/posts/</link>
    <description>C&#39;est la Z (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Sep 2018 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/posts/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Blight Move</title>
      <link>https://cestlaz.github.io/posts/blight-move/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/blight-move/</guid>
      <description>&lt;p&gt;
It was Jon and Amy&amp;#39;s wedding. Jon was my student back in the day so
there were a handful of Stuy alums there to celebrate the
occasion. Some, like Jon, I had stayed in touch with and now count as
friends. Others, I knew but hadn&amp;#39;t kept up with.
&lt;/p&gt;
&lt;p&gt;
I was with a cluster of guests and for some reason the conversation
turned to chess computers. I started telling a  story about the my former
teacher &lt;a href=&#34;https://cestlaz.github.io/posts/2012-05-09-my-favorite-year-teacher.html&#34;&gt;Herb Greenhut&lt;/a&gt;&amp;#39;s Talking Chess Challenger computer. You would
type in your move using modern algebraic chess notation using a kaypad
and the program would not only respond by displaying it&amp;#39;s move in said
notation but also speak it in it&amp;#39;s best &lt;a href=&#34;https://www.imdb.com/title/tt0086567/&#34;&gt;War Games&lt;/a&gt; voice.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
D5 TO E6 - PAWN TAKES ROOK
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Herb had a friend Dan,  who was a decent chess player but nowhere good
enough to compete with someone at the theoretical level of the Chess
Challenger at it&amp;#39;s higher levels. Even so he came up not only with a way
to beat the computer but also to cause it to have a nervous breakdown.
&lt;/p&gt;
&lt;p&gt;
Dan figured that the computer assumed a sensible opponent so when it
considered its next move it built a tree assuming the human player
would try to find strong moves. Dan would play crazy outlandish moves
so that the computer would have to spend all its time working through
game trees and then settle on a bad move having not found the right
move path. Dan didn&amp;#39;t know anything about computer science, search
trees or Alpha Beta pruning but he was a smart guy and just figured it
out.
&lt;/p&gt;
&lt;p&gt;
At one point, he made a crazy move and the computer responded
something like &amp;#34;C4 TO E5&amp;#34; and all of a sudden, I hear blurted out from
a voice from across the wedding reception &amp;#34;BLIGHT MOVE!!!!!!!!&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I looked over and it was Mikey, a former student who I had not kept in
contact with who had finished the story. What had happened is that the
computer had started to create new pieces. In this case a &amp;#34;blight&amp;#34;
which we eventually determined could move as either a bishop or a
knight.
&lt;/p&gt;
&lt;p&gt;
The cool thing to me was that this was a dumb story I told my classes in
1994 or 5 and here we were some twenty years later and Mikey
remembered it.
&lt;/p&gt;
&lt;p&gt;
You really never know what your students will remember about you or
your classes years into the future.
&lt;/p&gt;
&lt;p&gt;
I was reminded of this when I saw this tweet the other day:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;For anyone wondering, this poll was in response to the quote:&lt;br&gt;&lt;br&gt;&amp;quot;They may forget what you said, but they will never forget how you made them feel.&amp;quot; &lt;a href=&#34;https://t.co/QHMXTxjeLA&#34;&gt;https://t.co/QHMXTxjeLA&lt;/a&gt;&lt;/p&gt;&amp;mdash; Adam Boxer (@adamboxer1) &lt;a href=&#34;https://twitter.com/adamboxer1/status/1041051593255411713?ref_src=twsrc%5Etfw&#34;&gt;September 15, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I don&amp;#39;t know the context of the quote but &lt;a href=&#34;https://twitter.com/adamboxer1&#34;&gt;Adam Boxer&lt;/a&gt;&amp;#39;s reply in the
tweet stream seems to indicate that it comes from the thought that
they won&amp;#39;t remember the content so it isn&amp;#39;t important as long as the
kids feel good about themselves. The truth is that as a K12 teacher
we&amp;#39;re responsible for both the students development in the subject and
also as a person and while people might not remember the name of the
teacher that taught them anything in particular and in spite of people
saying they learned &amp;#34;nothing in school&amp;#34; the truth is there&amp;#39;s quite a
bit that most people do learn from their teachers.
&lt;/p&gt;
&lt;p&gt;
In terms of how students feel, I&amp;#39;m guessing there are some kids who
felt that I made them feel smart or capable and probably some that I
ended up inadvertently turning off but the majority probably didn&amp;#39;t
feel much of an impact in terms of how I made them feel.
&lt;/p&gt;
&lt;p&gt;
On the other hand, it&amp;#39;s pretty amazing the range of things they do
remember. Some academic, some ancillary, some just plain silly.
&lt;/p&gt;
&lt;p&gt;
I heard through a secondary source that Liz, mamy years out still
remembers the recursive sock puppets I use. Since Liz is a successful
software engineer I&amp;#39;m guessing she remembers the recursion as well.
&lt;/p&gt;
&lt;p&gt;
Blake told me last year that the short edit, save, test, commit cycle
I used made an impact on him. That&amp;#39;s something I mention but really
mostly model in class.
&lt;/p&gt;
&lt;p&gt;
A couple of years ago, when out in California, I was visiting with
Pawel who was in my class in the early 90s. He reminded me of a lesson
that really made an impact on him. It was on a day when I decided to
throw the planned lesson out the window and ended up working thorugh
how I would approach and try to solve one of the recent USACO problems
going from reading the problem to working solution.
&lt;/p&gt;
&lt;p&gt;
Of course they all remember the Halloween costumes but that&amp;#39;s neither
here nor there.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had students tell me other things they remember. Sometimes, I
don&amp;#39;t even recall saying them. That&amp;#39;s an important point. It might be a
throwaway line for us as teachers but it can have a huge impact or at
least be really memorable for the listener.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s just another reminder of the impact we can have and the
responsibility we must take seriously as teachers.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating a school for CS</title>
      <link>https://cestlaz.github.io/posts/creating-a-school/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/creating-a-school/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;http://blog.acthompson.net/2018/09/do-we-really-need-cs-focused-high.html&#34;&gt;Do we really need CS focused high schools?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the question Alfred Thompson asked partly in reaction to my
&lt;a href=&#34;https://cestlaz.github.io/posts/that-time-bill-gates-visited-afse&#34;&gt;post&lt;/a&gt; talking about Bill Gates&amp;#39; visit to &lt;a href=&#34;http://afsenyc.org&#34;&gt;AFSE&lt;/a&gt;, a NYC public school
with a CS focus.
&lt;/p&gt;
&lt;p&gt;
On both posts, &lt;a href=&#34;https://twitter.com/reallymdp&#34;&gt;Michael Preston&lt;/a&gt; shared some important and good points about
AFSE as a starting point and gateway that helped lead to CS4All in NYC
and also specifically about AFSE.
&lt;/p&gt;
&lt;p&gt;
In response to Alfred&amp;#39;s question I thought it was time I shared a bit
about what I was pushing for AFSE back when I was involved. I wasn&amp;#39;t
able to talk publicly about any of this at the time because I was
warned very sternly by one DOE person involved that I shouldn&amp;#39;t talk
to &amp;#34;outsiders&amp;#34; about my concerns or designs. In retrospect, since I
stopped getting replies to my emails and was apparently dropped from
email lists after they selected their founding principal, I probably
should have been more public about my critiques. On the other hand, I
should have been more politic internally prior to getting to that
point.
&lt;/p&gt;
&lt;p&gt;
Reading Alfred&amp;#39;s post, what I was pushing for AFSE at the time cuts
right to Alfred&amp;#39;s question so I thought I&amp;#39;d write about it today.
&lt;/p&gt;
&lt;p&gt;
Before starting though I want to be &lt;strong&gt;absolutely clear&lt;/strong&gt; about one
thing. This is not a critique of AFSE as it stands. There are some
great teachers and wonderful students there and I do what I can to
support both whenever I can. This is a post about my design vs the
DOE&amp;#39;s design and later implementation. Also note that the numbers,
sizes, restrictions and designs are all based on NY state and NYC
requirements along with what one can typically do in a NYC public
school.
&lt;/p&gt;
&lt;p&gt;
Even though it&amp;#39;s the least important issue with respect to a CS school
or not, let&amp;#39;s start by getting the dirty word out of the way. Given
the stated mission of the school (at the time) I wanted a screen. Not
a &amp;#34;Stuy test&amp;#34; screen but something. Probably something more along the
lines of the screen used by the Manhattan Science Hunter High
School. We never got that far in discussing it. My contention was and
still is that if you want to produce &amp;#34;Google ready&amp;#34; software engineers
by high school graduation, particularly in a small school, you can&amp;#39;t
start with kids 2 or 3 years behind in math. Now, if your goal isn&amp;#39;t
&amp;#34;Google ready engineers&amp;#34; but rather to use CS to engage a population
that isn&amp;#39;t otherwise engaged, I can get behind that and you don&amp;#39;t need
a screen. It&amp;#39;s important however to note it&amp;#39;s a different mission.
&lt;/p&gt;
&lt;p&gt;
The DOE would maintain that you don&amp;#39;t need any screen and kids can
start out years behind and by the end of their senior year they&amp;#39;d be
years ahead. It doesn&amp;#39;t work that way.
&lt;/p&gt;
&lt;p&gt;
They&amp;#39;d ask tech people at meetings what they looked for in employees
knowing that they&amp;#39;d get back &amp;#34;teamwork, creativity etc.&amp;#34; I would of
course follow up with &amp;#34;where do you look for these candidates&amp;#34; and
they&amp;#39;d say &amp;#34;MIT, Cal Tech, Harvard.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
The DOE insisted on no screen. This is fine but it&amp;#39;s no surprise that
Google&amp;#39;s not beating down the doors for AFSE graduates right out of
high school and the math regents show that you indeed can&amp;#39;t take kids
from multiple years behind and end up with them multiple years ahead
given typical school resources. They&amp;#39;re doing really good work there
but there&amp;#39;s no such thing as a miracle school just hard work and
incremental progress. I have heard more than once that the founding
principal had lobbied for a screen so I feel my original assessment
was correct.
&lt;/p&gt;
&lt;p&gt;
Next up, size. The DOE insisted on a small school focused on CS. They
wanted a school of around 136 kids per grade, which makes for 4
&amp;#34;homerooms,&amp;#34; and that the school would focus on CS. My proposal was
very different. I advocated for a school with about 340 kids per grade
and not specifically focused on CS but rather with a great model CS
program - a Software Engineering Institute at the blah blah school if
you would.
&lt;/p&gt;
&lt;p&gt;
A small school can&amp;#39;t support a wide range of classes. With 4 classes
of kids per grade you don&amp;#39;t have a lot of schedule flexibility in
terms of class levels or electives. You also have very few teachers
per subject - for a subject taught for a full year every year for a
single period, you&amp;#39;d have one teacher per grade in that subject. If
you&amp;#39;re a school for CS you&amp;#39;re not going to be able to offer a robust
schedule of music or arts classes. Likewise an arts school is going to
be hard pressed to offer a suite of science electives. Remember,
public schools are not flush with money and can&amp;#39;t just offer loads of
courses for a handful of kids.
&lt;/p&gt;
&lt;p&gt;
What we end up with is a school with limited offerings beyond CS and
we&amp;#39;re asking kids to decide in 8th grade if that&amp;#39;s the career path for
them. This is a hidden problem of all small schools. Kids shouldn&amp;#39;t
have to decide on their future in the 8th grade. They should all be
able to go to schools that offer a wide range of subjects to a good
degree of depth. Only large public schools can do this. I know that
public schools come with their own problems but this is one of the
trade offs. I believe that having this selection done in 8th grade
along with the tech stereotypes and preconceptions is a big part of
the schools difficulty in appealing to girls.
&lt;/p&gt;
&lt;p&gt;
Now even if every student who applied and is randomly accepted into
AFSE does indeed want to be a CS person then we&amp;#39;ve also lost because
we&amp;#39;ve done nothing to get more kids into the pool. It could still
potentially function as a model school in terms of courses or possibly
pedagogy but it won&amp;#39;t expose and inspire anyone new with respect to
tech.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s contrast that with what I proposed. I wanted around 340 kids per
grade or 10 &amp;#34;homerooms.&amp;#34; How did I arrive at that number? It wasn&amp;#39;t
just a guess. Schools like Stuyvesant or Brooklyn Tech are clearly too
large and impersonal but small 136 kids per grade schools are too
small. The 10 homeroom per grade school seems to be the best
compromise. There are enough teachers so that there&amp;#39;s institutional
memory when one leaves, enough of them and students for a varied set
of electives. It also means that there are enough teachers to avoid
bad fits between teacher and student. At the same time, it&amp;#39;s not so
large that kids get lost. I also spoke with some of the best
programmers I know - not computer programmers but people who schedule
students for classes in schools and this seems to be the best
compromise size range. Also, with this size you don&amp;#39;t necessarily need
a screen if you want &amp;#34;Google ready&amp;#34; software engineers. There will be
enough of a range kids that come in behind and kids that come in ahead
can get what they need.
&lt;/p&gt;
&lt;p&gt;
I also didn&amp;#39;t want it to be a CS school but rather a school with great
CS. That way it would appeal to a range of students. Kids who think
they want to do CS and those who don&amp;#39;t. At the end of they day some of
the kids that think they wanted CS won&amp;#39;t want it and those kids will
have other options. At the same time some of the non-tech kids will
take the required CS and find out that &amp;#34;this is neat stuff&amp;#34; and we get
to increase the number of people in the tent.
&lt;/p&gt;
&lt;p&gt;
I still believe my design would have worked out better but that&amp;#39;s not
to say that I don&amp;#39;t think that AFSE has been and is important. As Mike
pointed out in his comment, AFSE was the first unscreened school to
offer legit and it did (and does) offer a place for CS kids that don&amp;#39;t
get into or don&amp;#39;t want to go to a place like Stuy which is very much a
large school and an unforgiving machine. It was also a showpiece that
helped pave the way for CS in all NYC schools. All of that&amp;#39;s good.
&lt;/p&gt;
&lt;p&gt;
I do regret parts of what went down between me and DOE. I don&amp;#39;t regret
sticking to my beliefs in terms of school design but I would like to
have been able to handle the politics of the situation better. Had I
remained involved I think I had more to offer. I don&amp;#39;t regret it too
much – at the time it went from the DOE telling me one week to &amp;#34;you
can have any role in the school you want&amp;#34; to the next week &amp;#34;we want to
introduce you to the person who we&amp;#39;re making principal&amp;#34; and I
recognize that I&amp;#39;d have a hard time putting that aside now and the me
of a decade ago would have found it impossible. That said, I think
everyone would have been better off if both sides could have played
things better.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d still love to have the chance someday to set up and run a school
of my design with my team. It&amp;#39;ll probably never happen but it would be
nice.
&lt;/p&gt;
&lt;p&gt;
&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>That Time Bill Gates Visited AFSE</title>
      <link>https://cestlaz.github.io/posts/that-time-bill-gates-visited-afse/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/that-time-bill-gates-visited-afse/</guid>
      <description>&lt;p&gt;
AFSE stands for the Academy for Software Engineering. It&amp;#39;s a public
school in New York City with a stated focus on, well, software
engineering. I have some history with the school and its creation but
that&amp;#39;s not what this post is about. In fact, this post isn&amp;#39;t really
about AFSE at all. I plan to neither praise or critique the
school. This is about what Bill Gates &lt;a href=&#34;https://www.gatesnotes.com/Education/My-visit-to-the-Academy-for-Software-Engineering&#34;&gt;wrote&lt;/a&gt; about his recent visit.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know the circumstances of the visit but I&amp;#39;m guessing it wasn&amp;#39;t
a surprise. More likely it was a scheduled visit and the school, at
least to some extent put on the usual dog and pony show. Teachers
know all about this – the superintendent&amp;#39;s coming - make sure your
bulletin boards are all set. Let&amp;#39;s nudge the guest to the right
classes, let&amp;#39;s make sure to show our best side. I could be wrong, this
could have been a surprise visit or Bill could have gone into random
classes talking to random students but that&amp;#39;s unlikely.
&lt;/p&gt;
&lt;p&gt;
Bill says that &amp;#34;Unlike some specialized schools there are no criteria
for admission.&amp;#34; First, it&amp;#39;s not a specialized school, it&amp;#39;s a themed
school just as all NYs small schools are. That&amp;#39;s just another way of
saying &amp;#34;small school that can&amp;#39;t support a robust elective program.&amp;#34;
Bill sounds to be still enamored with small schools. In the video
accompanying his post, Bill describes the school by saying &amp;#34;The idea
is it&amp;#39;s a small high school with teachers that want to engage students
on a very personal level and come up with a personalized learning
plan…&amp;#34; I guess teachers at larger schools don&amp;#39;t want to engage their
students at a personal level? Personal learning plan? That inherently
has nothing to do with small schools but it does sound like it has
something to do with software he can sell to other peoples kids.
&lt;/p&gt;
&lt;p&gt;
Bill talks about it being a diverse school while noting that it&amp;#39;s very
male heavy (80% in 2016) but I wonder what the culture of the school
is like compared to the greater tech community. Does it exhibit the
best of inclusive diversity or the worst or somewhere in between.
&lt;/p&gt;
&lt;p&gt;
Bill also talks about the unique curriculum noting how a history
teacher might allow a student to make a web page instead of preparing
an oral presentation. This isn&amp;#39;t unique at all. I know many teachers
across the city that do this. It also isn&amp;#39;t necessarily a good or
bad thing without context.
&lt;/p&gt;
&lt;p&gt;
The title of the piece is &amp;#34;How 3D printers are preparing students for
life after high school&amp;#34; and Bill gushes about a design class he
observed. A design class can be amazing and I&amp;#39;m guessing the one he
saw was, but the 3D printers are incidental. In fact, many educators
don&amp;#39;t think they&amp;#39;re particularly useful or valuable. They&amp;#39;re
expensive, they break, they use consumables which cost money and
printing time make instant gratification impossible. Sure, they&amp;#39;re
nice toys but when you&amp;#39;re stretching your budget to its breaking
point are they really worth it?
&lt;/p&gt;
&lt;p&gt;
As I read this I kept wondering if Bill had really learned anything
from his past failures in coercing public education to his whims. Then
I got to this: &amp;#34;The school enrolls fewer than 500 kids, so class sizes
are small, &amp;#34; That&amp;#39;s not how it works and if Bill was actually paying
attention or cared he&amp;#39;d know this. Small schools in NYC have around
544 kids. That&amp;#39;s four grades of 136 student each. Each grade is made
up of four classes of 34 students each which is the NYC class size. It
doesn&amp;#39;t matter if you have 500 in your school or 5000. The class size
will still be around 34 unless extra funds are available to lower
it. Bill further talks about teachers using a shared data portal and
advisors connecting with families and attributes all this to AFSE
being a small school when it really has to do with having more funds
per student and not the school size at all. He also doesn&amp;#39;t seem to
notice how his small schools can&amp;#39;t offer great art and music unless
they&amp;#39;re art and music themed.
&lt;/p&gt;
&lt;p&gt;
Why am I writing this? Because people like Bill Gates wield great
wealth and great power and Bill&amp;#39;s past efforts in education have
hurt schools much more than they&amp;#39;ve helped them.
&lt;/p&gt;
&lt;p&gt;
Has he learned anything? As far as I can tell, not a thing.
&lt;/p&gt;
&lt;p&gt;
I said this post wasn&amp;#39;t about AFSE and it isn&amp;#39;t but I will share a few
thoughts here at the end. As with all public schools with open
admission in NYC they face some pretty big challenges. They have some
great champions like founder and NYC mensch, Fred
Wilson along with other players in the tech industry. AFSE was also a
special project of the Bloomberg administration under which it was
created. I think this has meant that they&amp;#39;ve had resources that might
not be available as readily to other schools. Resources like the ones
mentioned &lt;a href=&#34;https://avc.com/2016/01/the-first-annual-afse-fundraiser/&#34;&gt;here&lt;/a&gt;. It&amp;#39;s great that the kids at AFSE have these resources
but sad that so many other kids don&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
As CS becomes a subject in all schools what will happen with AFSE?
Will they continue to be able to raise the necessary funds for the
extras?  Will it affect the kids who apply? Will it make them less
desirable to &amp;#34;techy&amp;#34; kids since CS will be available at many schools
or will it make it easier to get non tech types. Time will tell.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do you need to know binary for CS?</title>
      <link>https://cestlaz.github.io/posts/why-binary/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/why-binary/</guid>
      <description>&lt;p&gt;
Yesterday, Alfred Thompson asked &lt;a href=&#34;https://twitter.com/alfredtwo/status/1036982959587446784&#34;&gt;&amp;#34;Why is it important for CS students
to understand binary?&amp;#34;&lt;/a&gt; on Twitter which led to a number of interesting
responses. Alfred summarized and wrote his own thoughts on &lt;a href=&#34;http://blog.acthompson.net/2018/09/why-teach-binary-in-computer-science.html&#34;&gt;his blog&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I wanted to add a comment but I already wrote a post for yesterday so
put it off until today.
&lt;/p&gt;
&lt;p&gt;
First let me say that you can have a very successful career in tech
and not really know binary or number bases other than 10. That career
could be as as programmer, software engineer, network specialist,
devops or in many other areas that fall on the CS side of tech.
&lt;/p&gt;
&lt;p&gt;
You also can&amp;#39;t really get through a CS program without learning about
binary. If you&amp;#39;re self taught or go to a code school then that&amp;#39;s
another story.
&lt;/p&gt;
&lt;p&gt;
The question is, is it worth the time spent.
&lt;/p&gt;
&lt;p&gt;
One can easily argue that systems - that is low level, close to the
metal knowledge is one of the two &amp;#34;latins&amp;#34; of CS, the other being CS
theory. You might not explicitly use either but they give you a
stronger foundation in everything. You also can&amp;#39;t study systems without a
good knowledge of binary so if you want to do anything low level, you
need it.
&lt;/p&gt;
&lt;p&gt;
What about beyond those easy but not all to convincing to new students
answers?
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s loo at a few things we can do with binary.
&lt;/p&gt;
&lt;p&gt;
A big part of binary notation is that you can look at data as a string
of bits. You can also manipulate that data using things like &lt;code&gt;and&lt;/code&gt;,
&lt;code&gt;or&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;, and &lt;code&gt;xor&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
At it&amp;#39;s core &lt;code&gt;and&lt;/code&gt; let&amp;#39;s you turn off bits. &lt;code&gt;And&lt;/code&gt; any bit with a 0 and
it will become a 0. &lt;code&gt;And&lt;/code&gt; it with a 1 and it stays the same.
&lt;/p&gt;
&lt;p&gt;
\begin{array}{ccccc}
&amp;amp;1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\
and &amp;amp;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\\hline
&amp;amp;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\
\end{array}
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Or&lt;/code&gt; is used to turn on bits. You &lt;code&gt;or&lt;/code&gt; any bit with a 1 and it gets
turned on. &lt;code&gt;Or&lt;/code&gt; it with a 0 and it stays as it was.
$$
\begin{array}{ccccc}
&amp;amp;1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\
or &amp;amp;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\\hline
&amp;amp;1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\
\end{array}
$$
&lt;code&gt;Xor&lt;/code&gt; a bit with a 1 and the bit flips, with a 0 it stays the same.
$$
\begin{array}{ccccc}
&amp;amp;1 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\\
xor &amp;amp;0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 1\\\hline
&amp;amp;1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\\
\end{array}
$$
&lt;/p&gt;
&lt;p&gt;
What can we do with this? For one thing, image processing. Students
frequently play with images where each pixel is represented as a 24
bit color. Three bytes, one each for red, green, and blue. Each byte
is really 8 bits. We can use bitwise operations on the binary digits
to turn on or off color.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s say we have this rgb triple: (200, 15, 80) which in hexadecimal
is C8 0F 50 or 10111000 00001111 01010000 in binary. If we want to
turn off the reddest reds we could &lt;code&gt;and&lt;/code&gt; the color with 00001111
11111111 11111111 or 0FFFFF:
&lt;/p&gt;
&lt;p&gt;
$$
\begin{array}{cccc}
&amp;amp; 10111000 &amp;amp; 00001111 &amp;amp; 01010000\\
and &amp;amp; 00001111 &amp;amp; 11111111 &amp;amp; 11111111\\\hline
&amp;amp; 00001000 &amp;amp; 00001111 &amp;amp; 01010000\\
\end{array}
$$
Yes, you could just use the base 10
values and keep on calling color setting and conversion functions but
if you understand binary it&amp;#39;s quicker and easier and what&amp;#39;s going on
will actually make sense.
&lt;/p&gt;
&lt;p&gt;
Of course you probably wouldn&amp;#39;t write out the binary but would rather
use the hex notation which once a student realizes is just 4 bit
groupings of binary becomes really easy. As a bonus, once you&amp;#39;re used
to binary and hex those hexadecimal color values will all of a sudden
make sense.
&lt;/p&gt;
&lt;p&gt;
This is just the tip of the image processing and graphics iceberg with
respect to binary.
&lt;/p&gt;
&lt;p&gt;
Related although I haven&amp;#39;t played with it myself, I&amp;#39;d imagine you could use
these types of bitwise operations on images to play with
steganography.
&lt;/p&gt;
&lt;p&gt;
Another use of binary is in cybersecurity. Things like buffer
overflows and blowing the stack all make much more sense if you know
how memory is arranged and that&amp;#39;s easier to understand if you
understand binary, bytes, and word sizes. I do experiments with my
classes when we use C or C++ where they access arrays off the ends and
end up messing with neighboring variables. It seems like magic unless
you know about memory and to know memory you need to know binary.
&lt;/p&gt;
&lt;p&gt;
How about image file formats? Many image file formats start with a
fixed size header. Here&amp;#39;s the header definition for the GIF file
format:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;align-right&#34;&gt;Offset&lt;/th&gt;
&lt;th&gt;Length&lt;/th&gt;
&lt;th&gt;Contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td&gt;3  bytes&lt;/td&gt;
&lt;td&gt;&amp;#34;GIF&amp;#34;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td&gt;3  bytes&lt;/td&gt;
&lt;td&gt;&amp;#34;87a&amp;#34; or &amp;#34;89a&amp;#34;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td&gt;2  bytes&lt;/td&gt;
&lt;td&gt;&amp;lt;Logical Screen Width&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;8&lt;/td&gt;
&lt;td&gt;2  bytes&lt;/td&gt;
&lt;td&gt;&amp;lt;Logical Screen Height&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;10&lt;/td&gt;
&lt;td&gt;1  byte&lt;/td&gt;
&lt;td&gt;bit0: Global Color Table Flag (GCTF)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;bit&lt;/td&gt;
&lt;td&gt;1..3:  Color&lt;/td&gt;
&lt;td&gt;Resolution&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;bit&lt;/td&gt;
&lt;td&gt;4:  Sort&lt;/td&gt;
&lt;td&gt;Flag to Global Color Table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;bit&lt;/td&gt;
&lt;td&gt;5..7:  Size&lt;/td&gt;
&lt;td&gt;of Global Color Table:2^(1+n)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;11&lt;/td&gt;
&lt;td&gt;1  byte&lt;/td&gt;
&lt;td&gt;&amp;lt;Background Color Index&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;12&lt;/td&gt;
&lt;td&gt;1  byte&lt;/td&gt;
&lt;td&gt;&amp;lt;Pixel Aspect Ratio&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;13&lt;/td&gt;
&lt;td&gt;?  bytes&lt;/td&gt;
&lt;td&gt;&amp;lt;Global Color Table(0..255 x 3 bytes)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;?&lt;/td&gt;
&lt;td&gt;bytes  &amp;lt;Blocks&amp;gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td&gt;bytes  &amp;lt;Trailer&amp;gt;&lt;/td&gt;
&lt;td&gt;(0x3b)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
The header info is defined bit by bit so you have to know about binary
and know how to manipulate data on a bit level.
&lt;/p&gt;
&lt;p&gt;
Those were three biggies but there are other places where knowing
binary makes tons of sense:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
flag type parameters
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
understanding floating point numbers
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
using shifts for quick doubling and halving of data
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Does this mean that binary has to be or should be in a first course?
No. Should it be somewhere? Certainly and rather than doing binary
because it&amp;#39;s on the test or because &amp;#34;you should know it&amp;#34; you can pick
and choose your spots and cover it when it will be fun and interesting
for your kids.
&lt;/p&gt;
&lt;p&gt;
world
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wishing all K12 teachers a great year</title>
      <link>https://cestlaz.github.io/posts/starting-school-2018/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/starting-school-2018/</guid>
      <description>&lt;p&gt;
Today was the first day of school for all NYC teachers. Students come
back tomorrow. That&amp;#39;s a quick turnaround. Some years, they get a day
or two before the kids come in. That&amp;#39;s much easier.
&lt;/p&gt;
&lt;p&gt;
The first day is usually dominated by meetings. In a large school like
Stuy you&amp;#39;ll typically have a long faculty meeting in the morning and a
department meeting in the afternoon. Not much time to actually get
ready for classes. You might think that it shouldn&amp;#39;t be a big deal
since you had all summer but in NYC where budgets don&amp;#39;t come out until
the summer for teachers not to know exactly what or when they&amp;#39;re
teaching until the first day back.
&lt;/p&gt;
&lt;p&gt;
Things started at Hunter college last week but things are different
there. I was excited to my students but the overall energy isn&amp;#39;t the
same. We&amp;#39;re two weeks in and I still haven&amp;#39;t seen most of my CS
colleagues. In the high school, everyone comes back at once.
&lt;/p&gt;
&lt;p&gt;
In any event. It&amp;#39;s an exciting time in what should be an exciting year
for CS teachers and students.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to rehash everything that&amp;#39;s going on since I&amp;#39;m sure most
readers already already know what&amp;#39;s going on but I&amp;#39;ll add one
thing. Many New York teachers need ongoing professional development -
CTLE hours. It seems that teachers in specific programs like New York
City&amp;#39;s Software Engineering Pilot (SEP) have a number of PD
opportunities provided to them and there also seems to be a good
amount of PD at the entry level.
&lt;/p&gt;
&lt;p&gt;
There doesn&amp;#39;t seem to be much for the teacher ready for that next
step.
&lt;/p&gt;
&lt;p&gt;
To address this, we&amp;#39;ll be offering once a month sessions through
Hunter for CS teachers who are ready to move beyond the basics both in
content and pedagogy.
&lt;/p&gt;
&lt;p&gt;
The plan is to start some time in October.
&lt;/p&gt;
&lt;p&gt;
In the meantime to all the teachers meeting their students tomorrow -
have a great semester!!!!!
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class Rules</title>
      <link>https://cestlaz.github.io/posts/class-rules/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/class-rules/</guid>
      <description>&lt;p&gt;
Classes started up again today so I thought I&amp;#39;d talk about my class
rules.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t seem to recall many class rules in college. Sure, there was a
grading policy governing homework and the like but not much beyond
that. In K12 there are usually more. When you can talk, how you set up
your notebook, how to do homework, bathroom policy etc.
&lt;/p&gt;
&lt;p&gt;
For years, I&amp;#39;ve used the same set of class rules and I always talk
about the rules with my classes.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have a lot of rules.
&lt;/p&gt;
&lt;p&gt;
Just two.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Don&amp;#39;t be a bum and don&amp;#39;t be a jerk&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;img height=100px width=100px  src=&amp;#34;&lt;img src=&#34;https://bamfstyle.files.wordpress.com/2016/04/dude6-main.jpg&#34; alt=&#34;https://bamfstyle.files.wordpress.com/2016/04/dude6-main.jpg&#34; title=&#34;https://bamfstyle.files.wordpress.com/2016/04/dude6-main.jpg&#34; /&gt;&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;img height=100 width=100px  src=&amp;#34;&lt;img src=&#34;https://cdn-images-1.medium.com/max/1600/0*x6Y-uVduUOWmYngr.jpg&#34; alt=&#34;https://cdn-images-1.medium.com/max/1600/0*x6Y-uVduUOWmYngr.jpg&#34; title=&#34;https://cdn-images-1.medium.com/max/1600/0*x6Y-uVduUOWmYngr.jpg&#34; /&gt;&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Not only are they good class rules, they&amp;#39;re also good life rules. I
tell my classes that if they follow these two rules everything else
takes care of itself.
&lt;/p&gt;
&lt;p&gt;
So, what do they mean?
&lt;/p&gt;
&lt;p&gt;
Being a bum means you&amp;#39;re doing something detrimental to yourself.
&lt;/p&gt;
&lt;p&gt;
You don&amp;#39;t hand in an assignment? You&amp;#39;re being a bum.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t prepare for an exam? You&amp;#39;re being a bum.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t ask for an extension until right before a project&amp;#39;s due because
you didn&amp;#39;t even look at it until the night before? Bum.
&lt;/p&gt;
&lt;p&gt;
Being a jerk means you&amp;#39;re doing something detrimental to someone
else.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re meeting a bunch of friends to see a movie and you leave them
waiting for you on a cold corned February since you can&amp;#39;t bother to be
on time, you&amp;#39;re being a jerk.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t hold up your end of a group project? You&amp;#39;re being a jerk.
&lt;/p&gt;
&lt;p&gt;
Hold up the class by asking the same question that was just asked and
answered, not because you didn&amp;#39;t understand but because you weren&amp;#39;t
listening? You&amp;#39;re being a jerk.
&lt;/p&gt;
&lt;p&gt;
I have my students fill out an information form at the start of the
semester. I give them a day or two to do it but there is a
deadline. Don&amp;#39;t fill it out on time and you&amp;#39;re being a bum. You&amp;#39;re
also being a jerk. Why? Because I use that list to set up my
grade book as well as mailing lists and other resources. If I don&amp;#39;t
have the data from all my students I either have to wait on setting up
my systems or I have to go back later and manually add the
stragglers. Making more work for the teacher because you couldn&amp;#39;t be
bothered to finish a two minute assignment? That falls under the &amp;#34;jerk&amp;#34; category.
&lt;/p&gt;
&lt;p&gt;
Every interaction makes an impression and even small actions can have
effects on people that you don&amp;#39;t realize.
&lt;/p&gt;
&lt;p&gt;
You do something the right way, people will notice. You do things that adversely affect
people? They&amp;#39;ll notice that as well. I want my students to start to
become aware of how they act, how they affect the people around
them, and the reputations they build through small actions - both
positive and negative.
&lt;/p&gt;
&lt;p&gt;
We also talk about why I don&amp;#39;t need to hear excuses when you violate
either of these rules. If you do things the right way - you don&amp;#39;t act
like a bum or a jerk - you build your credibility. If at some point
later, something happens - you miss an assignment because a last
minute emergency - you&amp;#39;ve got the positive reputation so you don&amp;#39;t
need an excuse. If you&amp;#39;ve been a bum all along, the excuse carries no
weight.
&lt;/p&gt;
&lt;p&gt;
None of this has anything to do with computer science but it does have
to do with our students growth as people so in many ways it&amp;#39;s more
important. Do I make in impact with any of this? I can&amp;#39;t be sure but
I think it&amp;#39;s important enough to make the effort.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Artifacts Have Stories</title>
      <link>https://cestlaz.github.io/posts/artifacts-have-stories/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/artifacts-have-stories/</guid>
      <description>&lt;p&gt;
Earlier today I was asked about my avatar:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hero-z.jpg&#34; alt=&#34;/img/hero-z.jpg&#34; title=&#34;/img/hero-z.jpg&#34; align=&#34;&#34; center=&#34;&#34; height=&#34;250&#34;/&gt;
&lt;p&gt;
I&amp;#39;ve been using it for most services for a few months now. It&amp;#39;s an
image that I&amp;#39;ve had for ages. I started thinking about using it about
a year ago
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the story?
&lt;/p&gt;
&lt;p&gt;
It was back in 1993. I had just started at Stuy. I taught some CS when
I was at Seward Park but at the time, I was teaching all math at
Stuy. Mostly Geometry to ninth graders but also a smattering of
Algebra 2 / Trig and Linear Algebra.
&lt;/p&gt;
&lt;p&gt;
The math department had the fourth floor and some of the third but
since I was the new guy I taught most of my classes in the hinterlands
of the 7th and 8th floor. At least I had great views of the lower
Hudson and the Statue of Liberty.
&lt;/p&gt;
&lt;p&gt;
My math classes were somewhat more formulaic and structured than my
computer science classes would end up. Start with a &amp;#34;Do Now&amp;#34; while I
checked homework. Kids then present homework that they put on the
board. We then did the Do Now which hopefully led into the lesson. I
was never super strict but it was pretty structured.
&lt;/p&gt;
&lt;p&gt;
In one class I had a young man, let&amp;#39;s call him Charles since I don&amp;#39;t
know if he&amp;#39;s comfortable with my sharing his true identity. He sad in
the last two or three rows right next to the window on the south side
of classroom. Charles would constantly doodle throughout the
class. This never really bothered me. He was always prepared, did well
on all assessments and was also ready and able to take part in class
discussion regularly.
&lt;/p&gt;
&lt;p&gt;
Apparently, his other teachers weren&amp;#39;t as tolerant of his doodling. At
the end of the semester he gave me the picture. and said he really
appreciated me not hassling him about the doodling. I thanked him and
explained that since it didn&amp;#39;t adversely affect his performance (and
might have helped) and didn&amp;#39;t distract anyone else, why would I give
him a hard time
&lt;/p&gt;
&lt;p&gt;
The semester ended and I didn&amp;#39;t think much more about it although once
I got my own office I put the picture in a frame and added it to my
collection of office trinkets.
&lt;/p&gt;
&lt;p&gt;
Last year, now at Hunter, I was looking at the picture and I wondered
what ever happened to Charles. I hadn&amp;#39;t seen him after he was in my
class as a freshman. I had started to teach CS and we started to developed our
cult so I didn&amp;#39;t end up keeping in touch with many of my students from
those freshmen math classes.  It turned out I was able to find him on
Facebook. I don&amp;#39;t think he remembered me but he accepted the friend
request and we caught up. His family moved out of NY after his
freshman year so it made even more sense that I never saw him again.
&lt;/p&gt;
&lt;p&gt;
I keep the picture because it&amp;#39;s fun and also to remind me of the
circumstances under which I go it. I always appreciate it when a
student takes the time to say thanks even when they don&amp;#39;t remember
anything about the class 30 years later. When I would get little gifts
during the holidays, if I&amp;#39;m being honest, I&amp;#39;ll have to say that I
would frequently throw the gift card or present on the pile but I&amp;#39;d
keep and cherish the notes and letters.
&lt;/p&gt;
&lt;p&gt;
Over the years, I accumulated quite a collection of esoteric from
former students. From the custom mouse pad with Dave, Spike, Igor, and
Oy on it to the Squirtle from Larry to Orion&amp;#39;s pinhead, every artifact
has a story. They remind me of a person time and place. A connection I
had and in many cases I still have. It also creates a bridge to the
past both for me and my students.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been derided for hanging t-shirts donated by former students from
their companies when I had my own classroom at Stuy:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/shirts-307.jpg&#34; alt=&#34;/img/shirts-307.jpg&#34; title=&#34;/img/shirts-307.jpg&#34; align=&#34;&#34; center=&#34;&#34; height=&#34;200&#34;/&gt;
&lt;p&gt;
Those naysayers are wrong. Each shirt has a story. It could be Joy&amp;#39;s
Apple shirt and how she agonized over her employment options, Pawel&amp;#39;s
Google shirt and his adventures going from Bloomberg LP to the French
West Indies to now being a senior programmer at Google or a Digital
Ocean shirt from Ben and Moisey and the stories they evoke are far two
numerous to list. They create a history and perpetuate the
culture. Each has a story.
&lt;/p&gt;
&lt;p&gt;
Looking back, I&amp;#39;m glad that I&amp;#39;ve kept many mementos from the
past. The objects are incidental but the stories give context and
inspiration to current students while at the same time reminding me of
my past and my shared journey with so many of my students.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Software Longevity</title>
      <link>https://cestlaz.github.io/posts/software-longevity/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/software-longevity/</guid>
      <description>&lt;p&gt;
Writing about &lt;a href=&#34;http://cestlaz.github.io/posts/rite-of-passage-projects/#.W3l-fxhKhhE&#34;&gt;old projects&lt;/a&gt; got me thinking of my first programming gig
and software longevity. It was a part time after school / full time
summer job at Arcus-Simplex-Brown. I started in my senior year in high
school and continued through most of my first year in college. It
wasn&amp;#39;t my first job - that was being a delivery boy at &lt;a href=&#34;http://videoroom.net/&#34;&gt;Video Room&lt;/a&gt;, an
independent video store that&amp;#39;s survived from the old VHS/Betamax days
through DVDs and is still, somehow or other, surviving in this day and
age of streaming video. My job at Arcus-Simplex-Brown was my first job
as a programmer. I got it through my buddy Ben who got it from one of
our math teachers at Stuy. Ben had found a job closer to home so
passed this one along to me.
&lt;/p&gt;
&lt;p&gt;
Arcus-Simplex-Brown was (is?) a ticket printing company
&lt;/p&gt;
&lt;img src=&#34;https://i.ebayimg.com/images/g/nxYAAOSwHUhaGYw3/s-l1600.png&#34; alt=&#34;https://i.ebayimg.com/images/g/nxYAAOSwHUhaGYw3/s-l1600.png&#34; title=&#34;https://i.ebayimg.com/images/g/nxYAAOSwHUhaGYw3/s-l1600.png&#34; align=&#34;center&#34; height=&#34;100&#34;/&gt;
&lt;img src=&#34;https://i.pinimg.com/originals/c1/f0/ec/c1f0ec2f524c9e3e65c5e8b50fc7226a.png&#34; alt=&#34;https://i.pinimg.com/originals/c1/f0/ec/c1f0ec2f524c9e3e65c5e8b50fc7226a.png&#34; title=&#34;https://i.pinimg.com/originals/c1/f0/ec/c1f0ec2f524c9e3e65c5e8b50fc7226a.png&#34; align=&#34;center&#34; height=&#34;100&#34;/&gt;
&lt;p&gt;
They also did tickets for sporting events like the Knicks and
Rangers at the Garden. More recently, this was 1983, they had started
selling computer printed tickets and that&amp;#39;s where I came in. They had
a dot matrix line printer. Not the small kind used by personal
computer owners and small businesses:
&lt;/p&gt;
&lt;p align=&#34;center&#34; height=&#34;100&#34;&gt;
[[&lt;img src=&#34;https://global.epson.com/company/corporate_history/milestone_products/img/11_product.jpg&#34; alt=&#34;https://global.epson.com/company/corporate_history/milestone_products/img/11_product.jpg&#34; title=&#34;https://global.epson.com/company/corporate_history/milestone_products/img/11_product.jpg&#34;/&gt;
&lt;/p&gt;
&lt;p&gt;
Printers like the &lt;a href=&#34;https://global.epson.com/company/corporate_history/milestone_products/11_mx80.html&#34;&gt;Epson MX 80&lt;/a&gt; pictured above had a print head that
moved across a line at a time much like a modern desktop ink jet
printer. The difference was that it had a print head that had a matrix
of pins which fired and hit an ink ribbon which left the ink
impression on the paper.
&lt;/p&gt;
&lt;p&gt;
Rather, they had a big heavy duty one where the print head went across
the entire width of the paper and it literally printed a line at a
time
&lt;/p&gt;
&lt;img src=&#34;https://cdn8.bigcommerce.com/s-a1x7hg2jgk/images/stencil/1280x1280/products/21296/120659/printronix-p5008-800-lpm-proline-series-5-line-matrix-printer-1.35__97003.1490181342.jpg&#34; alt=&#34;https://cdn8.bigcommerce.com/s-a1x7hg2jgk/images/stencil/1280x1280/products/21296/120659/printronix-p5008-800-lpm-proline-series-5-line-matrix-printer-1.35__97003.1490181342.jpg&#34; title=&#34;https://cdn8.bigcommerce.com/s-a1x7hg2jgk/images/stencil/1280x1280/products/21296/120659/printronix-p5008-800-lpm-proline-series-5-line-matrix-printer-1.35__97003.1490181342.jpg&#34; align=&#34;center&#34; height=&#34;100&#34;/&gt;
&lt;p&gt;
and a computer attached. I think it was an old &lt;a href=&#34;https://en.wikipedia.org/wiki/North_Star_Computers&#34;&gt;North Star&lt;/a&gt;
computer. It ran &lt;a href=&#34;https://en.wikipedia.org/wiki/CP/M&#34;&gt;CP/M&lt;/a&gt; which was like a primitive version of
MS-DOS. 64K of memory  and
two floppy drives. It had a basic interpreter built in and they
also had a basic compiler.
&lt;/p&gt;
&lt;p&gt;
They had a program that was supposed to print the tickets but it
didn&amp;#39;t really work. My first job was to get it working, It was a HUGE
mess of a program. God knows how many lines of BASIC code with a few
gosubs and a ton of gotos. I don&amp;#39;t think there were too many
comments. It didn&amp;#39;t help that in addition to having to deal with
custom theater seating plans and ticket policies you had to know all
sorts of magical incantations to get the printer to do the special
fonts correctly and I don&amp;#39;t recall us having a printer manual so it
all had to be divined from the non-working code.
&lt;/p&gt;
&lt;p&gt;
On top of all this, the program was so complex that only the simplest
test cases could be run via the interpreter interactively. Any real
change had to go through the compiler and it took about 40 minutes to
compile the program. Whenever I wanted to take a long break, I set up
a compile.
&lt;/p&gt;
&lt;p&gt;
Somehow or other, I got the thing to work. The code started as a mess
and I didn&amp;#39;t improve it any I really had no idea what I was
doing. Still, it did work and we were able to reliably print tickets
for all sorts of things.
&lt;/p&gt;
&lt;p&gt;
I stopped working at Arcus-Simplex-Brown once I got a job at NYU. That
gig ultimately turned into a full time job which enabled me to work my
way through school. It was the right move but I had a great time and
learned a lot at Arcus.
&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t think much about the work I did at Arcus over the years. I
finished college, went to Goldman, then some consulting and ultimately
teaching career.
&lt;/p&gt;
&lt;p&gt;
One day at Stuy, I noticed this:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/arcus-ticket.jpg&#34; alt=&#34;/img/arcus-ticket.jpg&#34; title=&#34;/img/arcus-ticket.jpg&#34; align=&#34;center&#34; height=&#34;400&#34;/&gt;
&lt;p&gt;
This was now Spring 2012 - almost 30 years later. Judging from the dot
pattern  of the letters it looked like the same printer and was
probably the same program!!!!!!! I couldn&amp;#39;t believe it. Stuy didn&amp;#39;t
use these tickets back in my day so I was really surprised. It looked
like some horrible code I wrote as a kid was still being used
productively almost three decades later!!!!!! They could have
continued to use it because it basically worked or maybe because they
were afraid that touching it would break everything.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t remember what the code looked like but know it was
horrible. If I had it, I&amp;#39;d be to embarrassed to share and that&amp;#39;s saying
something.
&lt;/p&gt;
&lt;p&gt;
The lesson of all this? You never know how long your code is going to
live. It might surprise you. Hopefully in a good way.
&lt;/p&gt;
&lt;p&gt;
All the more reason to do better than I did and learn how to do it
right.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rite Of Passage Projects</title>
      <link>https://cestlaz.github.io/posts/rite-of-passage-projects/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/rite-of-passage-projects/</guid>
      <description>&lt;p&gt;
JCS&amp;#39;s &lt;a href=&#34;https://irreal.org/blog/?p=7414#comment-4045190612&#34;&gt;post&lt;/a&gt; on Irreal today brought me back. It was about &lt;a href=&#34;https://en.wikipedia.org/wiki/Brief_(text_editor)&#34;&gt;Brief&lt;/a&gt; which
was the editing hotness back in the day. I played with it a little
really mostly used Emacs clones for real work when I was stuck on
MS-DOS systems. Usually either &lt;a href=&#34;https://en.wikipedia.org/wiki/JOVE&#34;&gt;JOVE&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Epsilon_(text_editor)&#34;&gt;Epsilon&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In the comments Jon reminded me about the &lt;a href=&#34;https://en.wikipedia.org/wiki/MKS_Toolkit&#34;&gt;MKS Toolkit&lt;/a&gt;
which brought most everyday Unix tools to DOS along with a shell and
a version of Vi. I didn&amp;#39;t use Vi much and I only used their shell
until I wrote my own.
&lt;/p&gt;
&lt;p&gt;
This got me thinking about &amp;#34;rite of passage&amp;#34; projects. I was in
college in the mid to late 80s. It was the heyday of the
IBM-PC. Schools still used older time sharing systems like DEC-20s and
Vaxen but the PC was all the rage. The cool thing about them was that
you had full control and access to the machine and it was simple
enough to get your head around pretty much everything about it. The
downside was that MS-DOS was very limited and of course there was
little to no networking going on.
&lt;/p&gt;
&lt;p&gt;
On the one hand, you could dive into the low level machine language
stuff very easily. Get Norton&amp;#39;s book:
&lt;/p&gt;
&lt;img src=&#34;https://covers.openlibrary.org/b/id/7446489-L.jpg&#34; alt=&#34;https://covers.openlibrary.org/b/id/7446489-L.jpg&#34; title=&#34;https://covers.openlibrary.org/b/id/7446489-L.jpg&#34; align=&#34;center&#34; height=&#34;250&#34;/&gt;
&lt;p&gt;
and you&amp;#39;re on your way.
&lt;/p&gt;
&lt;p&gt;
On the other hand many student&amp;#39;s graduated with no concept of time
sharing and the ramifications of sharing a system or resources were
foreign to many kids.
&lt;/p&gt;
&lt;p&gt;
Even though we always look back to the &amp;#34;good old days,&amp;#34; in many ways
things weren&amp;#39;t much different. I got a very strong background in
academic CS from NYU (Courant Institute) but just like today, there
was no real preparation for the real world.If you wanted to really develop your
coding chops you had to work on side projects.
&lt;/p&gt;
&lt;p&gt;
I seem to recall, a typical &amp;#34;rite of passage&amp;#34; side project was writing
your own shell. It didn&amp;#39;t have to be anything as powerful as BASH or
ZSH but it would typically be much more powerful than DOS and much
more Unixy.
&lt;/p&gt;
&lt;p&gt;
I recall writing my first shell down in UC-49 of Tisch Hall when the
computer labs weren&amp;#39;t busy. I wrote it in C which was what the cool
kids used back then. Specifically I used the &lt;a href=&#34;https://en.wikipedia.org/wiki/Mark_Williams_Company&#34;&gt;Let&amp;#39;s C&lt;/a&gt; compiler from the
Mark Williams company. This was before Turbo C 2.0 so Let&amp;#39;s C was
pretty much the only game in town for a cheap Unix style C compiler
for DOS. There was also Run/C but that was a C interpreter, not a
compiler. I also used that to learn C. Funny story - I certainly
didn&amp;#39;t know this at the time but Run/C was written by Peter
Brooks. Peter and I would later meet when he became my colleague at
Stuyvesant teaching CS and I now have the privilege of being able to
call him friend. I joke that I owe him ~ $100 for the interpreter from
back in the day.
&lt;/p&gt;
&lt;p&gt;
Since this was on DOS, I couldn&amp;#39;t do real Unix style pipes like
&lt;code&gt;cat file | sort | uniq -c | sort -n&lt;/code&gt; but I did simulate it with redirection and temporary
files. It also supported aliases, simple scripts and I think a few
other things.
&lt;/p&gt;
&lt;p&gt;
I was pretty happy with it and used it for a couple of years. It was
also one of the first substantial programs I wrote. I learned a lot
from doing it.
&lt;/p&gt;
&lt;p&gt;
Another &amp;#34;rite of passage&amp;#34; program that was common back then was a
text based window library. Somethig like ncurses that would allow you
to make text based windows and menus on the text only screen. I also
wrote one of these and actually got to use it for a project when I
started working at Goldman.
&lt;/p&gt;
&lt;p&gt;
I guess the third &amp;#34;rite of passage&amp;#34; project I remember was writing a C
compiler but that was different because it was for a class. It was a
significant project but the class didn&amp;#39;t really help with writing a
large program in general - it was all about the compiler and all the
theory behind it. Great course but not one in software engineering.
&lt;/p&gt;
&lt;p&gt;
Nowadays the projects have changed. Text based windowing is long gone
and while I still think writing a shell is a useful and rewarding
exercise it&amp;#39;s not scratching an itch the way it did back when we were
stuck on DOS. I guess writing a full stack web app is probably a
pretty typical one for students these days.
&lt;/p&gt;
&lt;p&gt;
Any others?
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Early Code Reuse</title>
      <link>https://cestlaz.github.io/posts/early-code-reuse/</link>
      <pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/early-code-reuse/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been following the tweets coming out of &lt;a href=&#34;https://icer.acm.org/&#34;&gt;ICER2018&lt;/a&gt;. I&amp;#39;ve never been
to ICER but now am thinking about trying to get funding to go next
year. One set of tweets involved students writing or using APIs or
Libraries. This overlaps with Owen Astrachan&amp;#39;s talk from this past
year&amp;#39;s CSTA conference on sorting. I was planning on writing a post
about Owen&amp;#39;s talk but I thought I&amp;#39;d leave it for the school year
closer to when sorting is typically covered.
&lt;/p&gt;
&lt;p&gt;
The points alluded to in the tweets go far deeper than can be
addressed in one blog post and are more suited to the sorting post
I&amp;#39;ll write later on but I thought I&amp;#39;d share a lab that I stole from a
friend of mine years ago to try to get the kids to abstract code into
functions or methods early and to start to think about reusing blocks
of code.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve talked about abstracting out and reusing code &lt;a href=&#34;https://cestlaz.github.io/posts/refactoring&#34;&gt;before&lt;/a&gt;, after
students have covered repetition but this lab
can be done even earlier.  Part of the motivation is the age old
problem of objects / functions / methods early or control structures
early. With o/f/m early kids think about decomposition, layers, and
abstractions but they don&amp;#39;t have the tools to do a whole lot of
interesting things. On the other hand, with control structures early,
kids tend to get in the mindset of throwing everything in &amp;#34;main&amp;#34; at
the top level.
&lt;/p&gt;
&lt;p&gt;
This lab tries to get the kids abstracting out and reusing or sharing
code but doesn&amp;#39;t require much more than methods or functions.
&lt;/p&gt;
&lt;p&gt;
The idea is to create an ASCII art robot or something similar. Of
course, this could also be done in a graphical environment:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;

######################
#                    #
#   XX          XX   #
#                    #
#       XXXXX        #
#                    #
######################
###
###
#############
#           #
########           ########
#           #
#           #
#           #
#############
##      ##
##      ##
##      ##
_
&lt;/pre&gt;
&lt;p&gt;
This can easily be done with a series of output instructions or
possibly by building a string with embedded newlines.
&lt;/p&gt;
&lt;p&gt;
The interesting part comes when you have the student write different
functions for the parts of the robot - the head, body, and legs.
&lt;/p&gt;
&lt;p&gt;
Students end up with routines like this:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and then can generate their robot:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now for the fun part. Students can make a variety of heads, legs, and
bodies. Going further, introduce if statements and random numbers and
they can generate random robots:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Not the most elegant code but this can be done VERY early when the
students don&amp;#39;t know more advanced constructs and techniques.
&lt;/p&gt;
&lt;p&gt;
The class can also share robot &amp;#34;components&amp;#34; as long as there&amp;#39;s a
simple code sharing mechanism - perhaps using &lt;a href=&#34;https://help.github.com/articles/about-gists/&#34;&gt;gists&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Finally, this can be revisited if desired later on once the class has
covered more advanced language constructs.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class Communications</title>
      <link>https://cestlaz.github.io/posts/class-communications/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/class-communications/</guid>
      <description>
&lt;p&gt;
Right now I&amp;#39;m on vacation in Harrogate England. Natan  is here taking part in the International Gilbert and Sullivan
Festival so Devorah and I came along as tourists. Today we went to Knaresborough:
&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/knaresborough.jpg&#34; alt=&#34;/img/knaresborough.jpg&#34; title=&#34;/img/knaresborough.jpg&#34; width=&#34;500px&#34; align=&#34;center&#34;/&gt;
&lt;figcaption&gt;
The River Nidd as seen from Knaresborough Castle
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;
Normally when traveling I try to get everything in and that leaves me
pretty exhausted at the end of each day. Since this time we&amp;#39;ll be here
for around two weeks, I&amp;#39;m trying a less hectic pace. Do some touring
along with some rest and relaxation. I actually gave myself the time
to do some recreational reading and just finished &lt;a href=&#34;https://www.amazon.com/Comeback-LeMond-American-Cycling-Legendary-ebook/dp/B075VDQD2W/ref=sr_1_1?ie=UTF8&amp;amp;qid=1533756774&amp;amp;sr=8-1&amp;amp;keywords=the+comeback+de+vise&#34;&gt;The Comeback&lt;/a&gt; by
Daniel de Vise and have a big queue of what&amp;#39;s next.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also going to try to get a blog post or two out.
&lt;/p&gt;
&lt;p&gt;
One thing I&amp;#39;ve been meaning to blog about for a while is class
communication and having seen &lt;a href=&#34;https://medium.com/bucknell-hci/how-i-use-slack-in-my-courses-a-3-year-reflection-888c7e742d04&#34;&gt;this&lt;/a&gt; the other day, I guess it&amp;#39;s time.
&lt;/p&gt;
&lt;p&gt;
In the article, Evan Peck talks about his experience using Slack as a
means of class communications and why he likes it.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my take:
&lt;/p&gt;
&lt;p&gt;
Class communication takes many forms. It can be the dissemination of
information such as assignments or announcements, assignment collection,
presenting feedback either on assignments or in general, specific
interactions between the instructor and the students, group
discussions, and cross student interactions.
&lt;/p&gt;
&lt;p&gt;
For sharing and collecting code as well as providing feedback, I like
using &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4/&#34;&gt;Git and GitHub&lt;/a&gt;. I use it for homework, projects, sharing class
code - pretty much anything involving code or student work. That
leaves all of the basic communication platforms. The popular ones
include:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The schools CMS – Moodle, Blackboard etc.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Piazza or other forum platforms
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Slack and other chat platforms
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Facebook groups
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
old school mail lists
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Blackboard or your school&amp;#39;s CMS
&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
First up, Blackboard.
&lt;/p&gt;
&lt;p&gt;
Just no.
&lt;/p&gt;
&lt;p&gt;
In my experience, they&amp;#39;re all slow and clunky and usually have an
awkward interface. I&amp;#39;ve always found them hard to navigate and use and
I find little value added.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Piazza and forum software
&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://piazza.com/&#34;&gt;Piazza&lt;/a&gt; is a free to use discussion platform. Many schools use
it. Personally, I don&amp;#39;t like Piazza but it does have some good points:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The Q&amp;amp;A format works pretty well.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
It allows anonymous posting which is sometimes desirable.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
You can look at participation reports
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
TAs or instructors can approve questions and answers
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
There really is a lot to like about it but it doesn&amp;#39;t work for
me. Personally, I don&amp;#39;t like the interface but that wouldn&amp;#39;t be the
deal breaker for me if my kids liked it. The deal breaker for me is
that kids have to actively go to the site. Yes, they can set their
preferences for alerts but if they don&amp;#39;t and they don&amp;#39;t check the site
regularly they&amp;#39;ll miss things. This is a big deal to me. If I send out
something important I have no idea if or when people will check in on
it. For me personally, it&amp;#39;s yet another site that I have to actively
and regularly check.
&lt;/p&gt;
&lt;p&gt;
Another interesting thing I learned about Piazza has to do with
students honesty about platforms. Back at Stuy a colleague used Piazza
regularly and was getting good results with it - many active
students. I couldn&amp;#39;t get as much buy in. The teacher told me that the
kids said they really liked the platform. A year or two later, I
surveyed the kids in my class – they were in his and other teachers
the previous year or two. I asked them about platforms they used and
how they felt about them. The results were that they used Facebook
groups on their own (I&amp;#39;ll talk about them later) and used whatever
platform we required because we required it. Even if they said they
liked it, they really didn&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
Last semester I set up a &lt;a href=&#34;https://www.discourse.org/&#34;&gt;Discourse&lt;/a&gt; server for HunterCS. Discourse is
another discussion platform. I liked the
fact that I could run the server and had ownership of the data. I also
liked the way the forum software worked in general. On the other hand,
it had similar overall problems as Piazza.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Slack
&lt;/h2&gt;
&lt;p&gt;
A hot contender and the one that Mr. Peck uses is Slack. It&amp;#39;s a chat
platform. It can be a separate app running on your phone or desktop or
you can use a web interface. It has channels for topics, can thread
discussions, it does alerts well and can integrate with tools like
calendars and GitHub. Just like with Piazza, there&amp;#39;s a lot to like.
&lt;/p&gt;
&lt;p&gt;
My problem with Slack is that it&amp;#39;s really for live communication not
asynchronous after hours communication. It works best when you&amp;#39;re
working on something and you have your slack window open, you have a
question so you type it in and get immediate answers. It just doesn&amp;#39;t
seem to work as well when you don&amp;#39;t use it live. You can read the
messages posted since you last checked but it can be really hard to
follow unless people explicitly use the threading.
&lt;/p&gt;
&lt;p&gt;
Slack also shares the issue of being another site or application to
use but since it does alerts well it doesn&amp;#39;t bother me as much.
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Facebook groups
&lt;/h2&gt;
&lt;p&gt;
Facebook groups seem to have been the student go to for a while
now. They create their own teacher/professor free student groups. I
think it&amp;#39;s great that they create resources like this and as I tell
them, it&amp;#39;s important for them to have a forum that&amp;#39;s free from the
teacher&amp;#39;s eyes. I mean, how can they plan that surprise party for me
on the class chatroom that I have access to :-). On the other hand,
Facebook groups have some downsides:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Not searchable or discoverable. I&amp;#39;ve seen kids only find out about
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
them at the end of semesters.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
In some cases, each year a new group is created so no institutional
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
memory develops.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
All the info stays in Facebook
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Mail lists
&lt;/h2&gt;
&lt;p&gt;
This all brings me to old school mailing lists. I&amp;#39;ve been using them
for decades and I keep coming back to them. Since they&amp;#39;re just email,
no one has to check a separate app or site. Since they&amp;#39;re email, they
support threading. Also as email, they can be public to the list or
private to just one or a few people.
&lt;/p&gt;
&lt;p&gt;
Again, they&amp;#39;re not perfect - I can&amp;#39;t easily set up long term
categories or channels like you can with Slack or Piazza and they
don&amp;#39;t integrate with tools like calendars so as with everything else,
there&amp;#39;s always some compromise.
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
What do you use?
&lt;/h2&gt;
&lt;p&gt;
I think I might try Slack again this semester if the students want to
go for it or maybe discourse. If they don&amp;#39;t want to try those, then
it&amp;#39;ll be back to mailing lists.
&lt;/p&gt;
&lt;p&gt;
What do all of you use? What are the strong and weak points of your
chosen platform and what would make the ideal platform for class
communication?
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Ready To Go Back</title>
      <link>https://cestlaz.github.io/posts/getting-ready-to-go-back-2018/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/getting-ready-to-go-back-2018/</guid>
      <description>
&lt;p&gt;
It&amp;#39;s August 3rd and I&amp;#39;ve been giving a lot of thought to the start of
the semester. Normally I wouldn&amp;#39;t think about the Fall term this
early. While I&amp;#39;ve been working on and off since last semester ended, I
don&amp;#39;t officially &amp;#34;go back&amp;#34; until August 23rd with classes starting on
the 27th. The difference is that for the first time in forever we&amp;#39;re
taking a longish trip between now and then.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re heading over to Harrogate England. We&amp;#39;ve never been but Natan&amp;#39;s
taking part in the &lt;a href=&#34;http://www.gsfestivals.org/&#34;&gt;International Gilbert and Sullivan Festival&lt;/a&gt; so we
figured we&amp;#39;d follow and play tourist while he was rehearsing and
otherwise doing the festival. I&amp;#39;m looking forward to the trip but
don&amp;#39;t expect to get much prep work done while we&amp;#39;re there.
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s coming this semester?
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Classes
&lt;/h2&gt;
&lt;p&gt;
Hunter&amp;#39;s honors program has grown big time so I&amp;#39;ll be teaching two
classes instead of one this semester. One section will be our
pre-major CS course and one will be our CS1. I&amp;#39;ve done both before so
I won&amp;#39;t need a lot of advance prep. Besides, I learned long ago that
no matter how much prep you do, everything changes once you get in the
classroom with a new batch of kids. Better just to have starter
material and a direction since everything&amp;#39;s going to change after day
one anyway.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Teacher Ed stuff
&lt;/h2&gt;
&lt;p&gt;
On the teacher education program front, we&amp;#39;ve got to send a few items
back through governance for approval. Instead of having teachers in my
programs take a separate fieldwork course, I integrated it into my
curriculum development course. Another change that we have to make,
believe it or not, is to remove the words &amp;#34;for teachers&amp;#34; and &amp;#34;for
educators&amp;#34; from two of the pure computer science courses in the
program. Fortunately, I&amp;#39;ve done all the prep work needed to get these
going come late August. We&amp;#39;re still planning on starting our first
cohort in the Spring.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Other stuff
&lt;/h2&gt;
&lt;p&gt;
Here&amp;#39;s where a lot of the fun stuff is happening. Like last year, I&amp;#39;m
planning on doing a lot of outreach to high schools to talk about
colleges, tech, and Hunter. The outreach&amp;#39;s &lt;a href=&#34;https://cestlaz.github.io/posts/hunter-cs-year-two/&#34;&gt;really made a difference&lt;/a&gt;
but it take a lot of time since it&amp;#39;s all about school visits. I&amp;#39;m
hoping to get to some parents association meetings as well this year.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also planning a number of new things for our Hunter CS students
and I&amp;#39;d love to jump on the planning now but these things really have
to wait until the term starts. Here&amp;#39;s some of what&amp;#39;s on tap:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
A monthly CTLE session for CS teachers.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A monthly tech talk / meetup at Hunter for CS students.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Finding more and more internship opportunities for the kids.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A series of open source workshops I&amp;#39;m coordinating with MongoDB.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
I&amp;#39;m hoping to work out some workshops for the kids with [[&lt;a href=&#34;https://www.redballoonsecurity.com/][Red&#34;&gt;https://www.redballoonsecurity.com/][Red&lt;/a&gt; Balloon
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Security]]
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
And a new tech mentoring program I&amp;#39;m hoping to get off the ground.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I&amp;#39;m sure some of these plans will change. I think I&amp;#39;m pretty ready to
go for the fall but I&amp;#39;ll still mull things over for the next few
weeks.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two Faces of Project Based Learning</title>
      <link>https://cestlaz.github.io/posts/two-faces-of-pbl/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/two-faces-of-pbl/</guid>
      <description>&lt;p&gt;
If one looks at my twitter feed they&amp;#39;ll notice that in addition to CS
Ed, another issue I&amp;#39;m passionate about is school reform or rather
resistance to what is popularly known as and mislabeled as school reform. I&amp;#39;m anti
vouchers, charter schools, high stakes testing and more. One of the
heroes of this resistance is education historian Diane Ravitch. I&amp;#39;m a
big fan of Diane&amp;#39;s and she&amp;#39;s one of the true great champions of public
schools, kids, and teachers. She blogged today about how a superintendent on Long Island &lt;a href=&#34;https://dianeravitch.net/2018/07/27/new-york-district-on-long-island-shows-that-problem-based-curriculum-produces-better-results-than-test-prep/&#34;&gt;replaced test
prep with project based learning&lt;/a&gt;. The post which talks about how this
superintendent improved test results  is worth a read. My only
quibble was that we shouldn&amp;#39;t read anything into the results for a
variety of reasons including the fact that the group of students who
did the project based learning (PBL) units instead of test prep were
self selecting volunteers.
&lt;/p&gt;
&lt;p&gt;
One of the comments caught my eye:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
PBL is just another “student-centered” fad…
&lt;/p&gt;
&lt;p&gt;
PBL operates on the myth of “transference” perpetuated by non-educators.
&lt;/p&gt;
&lt;p&gt;
…
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The comment continues on with a number of good points.
&lt;/p&gt;
&lt;p&gt;
Why am I writing about it here? Because PBL is a big CS Ed buzzword
and like most buzzwords there&amp;#39;s both truth at the root of the hype and
hype that distorts the truth.
&lt;/p&gt;
&lt;p&gt;
When done right with the right group of kids, project based learning
can be wonderful but it takes a lot of time and effort. You can&amp;#39;t just
set the kids loose to learn. You&amp;#39;ve got to train them to work
together, set up the project, as the teacher, you&amp;#39;ve got to know the
subject so as to know when to guide, when to tell, when to prod, and when to leave
them alone. Doing it right, at least for most students, is certainly
not giving them the instruction sheet and going off the check your
email.
&lt;/p&gt;
&lt;p&gt;
On the other hand, it&amp;#39;s easy to do it wrong. If you&amp;#39;ve got high
performing kids, they&amp;#39;ll figure things out. If you&amp;#39;ve got a few high
performing kids, they can mask the fact that the majority of a group
isn&amp;#39;t getting things. You might have an assignment where a kid figures
out a formula from discovered data and might be able to then use it to
make predictions but there&amp;#39;s a good chance they won&amp;#39;t understand why
it works or it&amp;#39;s root derivation. That&amp;#39;s where we need the teacher.
&lt;/p&gt;
&lt;p&gt;
One of the dangers of bad PBL is that it&amp;#39;s sexy. Kids are engaged and
it appears to work - particularly when the teacher doesn&amp;#39;t know the
subject area. This is my great fear whenever I hear things about
teachers being &amp;#34;Lead Learners.&amp;#34; Sure, when you&amp;#39;re a converted
something else teacher moving into CS you won&amp;#39;t know the subject
matter but that has to change over time. I&amp;#39;ve seen enough instances of
cases where teachers never develop their chops and just throw projects
at the kids augmented by scripted curricula or computer driver
content. The kids get through the class or program but are not
prepared for the next class or next level. I&amp;#39;ve seen this with the old
Cisco curriculum, any number of after school and summer programs -
some VERY highly regarded ones and I think we&amp;#39;ll see more and more of
this in states that are pushing CSforAll without developing the
necessary pre and in service programs for their teachers.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t let my last two paragraphs leave you feeling that I&amp;#39;m anti
PBL. I&amp;#39;m not. It&amp;#39;s great when done right and if you have thee time and
resources in your school and classes you should be using it when
appropriate.
&lt;/p&gt;
&lt;p&gt;
If you want some pointers on how to get going in the right direction with PBL in CS  check out &lt;a href=&#34;https://www.amazon.com/Computer-Science-K-12-Imagining-possibilities-ebook/dp/B07DYDXBSH/ref=sr_1_1?ie=UTF8&amp;amp;qid=1532808363&amp;amp;sr=8-1&amp;amp;keywords=doug+bergman&#34;&gt;this
book&lt;/a&gt; by my buddy Doug Bergman. It&amp;#39;s a great getting started guide by a
great teacher. He&amp;#39;s basically Mr. PBL and he does it right.  If you&amp;#39;re new to CS you&amp;#39;ll still need to learn content
and if you&amp;#39;re new to teaching, you&amp;#39;ll be developing your chops for
your entire career but it&amp;#39;s a great resource to get you and then your
kids started on the journey.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keyboarding and the Digital Divide</title>
      <link>https://cestlaz.github.io/posts/keyboarding-dig-divite/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/keyboarding-dig-divite/</guid>
      <description>&lt;p&gt;
My friend Adam posted this link to an article on &lt;a href=&#34;http://www.asahi.com/ajw/articles/AJ201803290068.html&#34;&gt;the new digital
divide&lt;/a&gt; the other day. It&amp;#39;s talking about young people who do
everything on the phone so aren&amp;#39;t familiar or comfortable with a
traditional keyboard/mouse computer setup. In the comments there were
some of us who lamented about the term &amp;#34;digital natives&amp;#34; and the idea
that kids these days know all about computers and technology.
&lt;/p&gt;
&lt;p&gt;
This led me to think about a couple of things. First was a
conversation I had a few years ago with someone who taught lower
grades. I forget if it was upper elementary or middle school. He asked
if his school should continue to teach keyboarding. I thought about it
for a minute and decided it was probably a good thing. At some point,
kids will have to type things - papers, reports, programs and the kid
that doesn&amp;#39;t have to fight with the technology has a clear
advantage. I don&amp;#39;t remember who said this but one of the early
rationales for markup typesetting systems like LaTeX or HTML was that
the system takes care of the formatting so the author could focus on
the content. You shouldn&amp;#39;t stress about how large the type should be,
how to emphasize some text or how to number a section, just say you
want a section, let the system format it and you focus and writing
your content.
&lt;/p&gt;
&lt;p&gt;
In the case of HTML  you weren&amp;#39;t supposed to worry about the size of
the screen, if it could show graphics, or even if it was color,
grayscale or black and white - you just provided the content and
markup and the browser would render it correctly. Same with LaTeX. You
just labelled your document with things like §ion ⊂seciton,
\footnote \equation etc. and let the system typeset it. If you&amp;#39;re
publishing a book, just say it&amp;#39;s a book and it&amp;#39;ll render it correctly,
a paper, it&amp;#39;ll make the appropriate adjustments.
&lt;/p&gt;
&lt;p&gt;
All this meant you could just focus on your content.
&lt;/p&gt;
&lt;p&gt;
At a more basic level, the same is true for typing. If you&amp;#39;re hunting
for keys in words you&amp;#39;re distracted from thinking about sentences let
alone concepts, flow, etc. A kid who can type most certainly has an
advantage over one who does not.
&lt;/p&gt;
&lt;p&gt;
Meanwhile in the schools there&amp;#39;s frequently an assumption that kids
used computers all the time so they certainly can type. In my
experience that hasn&amp;#39;t been the case and as pointed out in the linked
article above things are probably going to get worse.
&lt;/p&gt;
&lt;p&gt;
Of course it&amp;#39;s true that typing might eventually go the way of the
dodo. Maybe swiping and tapping with thumbs will become the norm
through society or maybe we&amp;#39;ll go to mostly dictation (although that
has it&amp;#39;s own problems) but we won&amp;#39;t get there for a while.
&lt;/p&gt;
&lt;p&gt;
The article also made me think about the fact that kids these days use
computers all them time and don&amp;#39;t know how to do anything on
them. Almost sounds like a Yogiism. The truth is that, yes, kids grew
up using computers, tablets, and phones but they use them within the
walled silos of Facebook, snapchat etc.
&lt;/p&gt;
&lt;p&gt;
Back in the day, if you used computers you had to make an effort. If
you wanted to use a word processor you had to learn something about a
file system. If you wanted to do something on that new fangled thing
called the internet, you had to learn something about HTML and
transferring files. In general, if you were a teacher and a kid used a
computer for something they were probably pretty knowledgable about
computers and if they didn&amp;#39;t know something they could probably figure
it out.
&lt;/p&gt;
&lt;p&gt;
Now, everything is within a pre provided application. Kids can use
Google Docs or I&amp;#39;d guess Microsoft Office and have no idea what a file
system is. They put up pictures using Instagram, commuincate using
Facebook or Snapchat and in general don&amp;#39;t have to know anything about
the technology they&amp;#39;re using. Some argue that CS Education should
&lt;a href=&#34;https://www.rushkoff.com/books/program-or-be-programmed/&#34;&gt;address this&lt;/a&gt; but then we turn around and use integrated cloud based
environments so the kids learn some of the algorithmic side of
programming but nothing about the environment they&amp;#39;re working in.
&lt;/p&gt;
&lt;p&gt;
Personally, I think our kids should ahve at least a rudimentary
understanding of what&amp;#39;s under the hood but I could be wrong. I try to
address this by starting the kids in &lt;a href=&#34;https://ccl.northwestern.edu/netlogo/&#34;&gt;sheltered environments&lt;/a&gt; and then
graduate them up to the command line but that&amp;#39;s just me.
&lt;/p&gt;
&lt;p&gt;
The important takeaway is to remember that a &amp;#34;digital native&amp;#34; may very
know nothing about the technology that they&amp;#39;re using. We should
understand that and act accordingly.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time To Create An Ethics Course</title>
      <link>https://cestlaz.github.io/posts/time-to-create-an-ethics-course/</link>
      <pubDate>Sat, 21 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/time-to-create-an-ethics-course/</guid>
      <description>&lt;p&gt;
I think it&amp;#39;s time for me to start developing a CS Ethics class.
&lt;/p&gt;
&lt;p&gt;
An ethics course isn&amp;#39;t a replacement for having teachers that live and
model good behavior and weave ethical issues throughout the curriculum
but still, adding a separate course on top of that has its merits.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not in a rush to create this course. I might be done in a month or
it might take a couple of years. When I&amp;#39;m done, I&amp;#39;ll add it as an
option in my CS Teacher education programs but hopefully it will be an
attractive course for undergrad CS majors as well.
&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s easy enough to come up with possible topics - privacy,
moral responsibilities, biased algorithms, net neutrality and on and
on I&amp;#39;m looking for this course to have a serious coding component. I
want the students to build things to really understand the
implications of what they&amp;#39;re studying.
&lt;/p&gt;
&lt;p&gt;
One topic I definitely want to cover is &lt;a href=&#34;https://news.harvard.edu/gazette/story/2011/10/youre-not-so-anonymous/&#34;&gt;anonimity&lt;/a&gt;. I&amp;#39;d love to find
the right combination of data sets and have the class discover that
some hidden information in the sets isn&amp;#39;t nearly as hidden as it seems
to be. When I was at Stuy, I was thinking about
having the kids give me permission to use their class schedules since
even with names removed we could probably identify many kids by
electives and overlapping classes. I have no idea what I&amp;#39;ll be able to
do at Hunter. If I can come up with something good I think this will
form the basis of a pretty amazing part of the class.
&lt;/p&gt;
&lt;p&gt;
Another project I&amp;#39;d love to put together is something dealing with a
biased algorithm. Again, I don&amp;#39;t know where this will go, maybe
something where I can seed the class so that different groups
implement some project differently and we can then analyze each groups
biases, hidden or otherwise.
&lt;/p&gt;
&lt;p&gt;
Beyond these two, I&amp;#39;m not sure.
&lt;/p&gt;
&lt;p&gt;
How about you? Anyone out there have any good ideas for programming
projects for an ethical CS course? If so, please share. It might be a
while but when I do finish putting this together I&amp;#39;ll be sure to
publish whatever the end result is.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A couple of Brian Kernighan videos</title>
      <link>https://cestlaz.github.io/posts/brian-kernighan-videos/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/brian-kernighan-videos/</guid>
      <description>&lt;p&gt;
I noticed a couple of short videos - interviews with &lt;a href=&#34;https://en.wikipedia.org/wiki/Brian_Kernighan&#34;&gt;Brian Kernighan&lt;/a&gt; -
on my YouTube home page the other day. This is probably because I
recently viewed a Kernighan video in the same series after reading
&lt;a href=&#34;http://irreal.org/blog/?p=7327%0A&#34;&gt;this&lt;/a&gt; post on the history of naming grep on JCS&amp;#39;s blog.
&lt;/p&gt;
&lt;p&gt;
For you youngsters out there, CS people of my generation relied on
Brian&amp;#39;s books &amp;#34;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_C_Programming_Language&#34;&gt;The C Programming Language&lt;/a&gt;&amp;#34; and &amp;#34;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Unix_Programming_Environment&#34;&gt;The Unix Programming
Environment&lt;/a&gt;&amp;#34;to get us started with C and Unix respectively.  Even
though they were both published in the 1970s I&amp;#39;d still consider the
both as &amp;#34;must reads.&amp;#34; The section on software development at the end
if the Unix book is still probably one of the best written
introductions to compilers out there. I&amp;#39;d also add a few more books he
co-authored to the &amp;#34;must read&amp;#34; list:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Elements_of_Programming_Style&#34;&gt;The Elements of Programmign Style&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.amazon.com/Software-Tools-Brian-W-Kernighan/dp/020103669X/ref=sr_1_2?ie=UTF8&amp;amp;qid=1532118607&amp;amp;sr=8-2&amp;amp;keywords=software+tools&#34;&gt;Software Tools&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Practice_of_Programming&#34;&gt;The Practice of Programming&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
and I&amp;#39;d even say &lt;a href=&#34;https://en.wikipedia.org/wiki/The_AWK_Programming_Language&#34;&gt;The AWK Programming Language&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I read these books in the 80s, 90s and post 2000 so even when reading
examples using ancient Fortran, the concepts still hold up and the
writing is extremely accessible.
&lt;/p&gt;
&lt;p&gt;
My Brian Kernighan story is that way back in the mid 1990s when I was
starting to design what would become Stuyvesant&amp;#39;s intro CS course, I
sent out emails to as many &amp;#34;thought leaders&amp;#34; as I could get a hold of
including both professionals and academics. I cold-emailed Brian based
on a conversation I had with a former student. My former student,
Bruce, had wandered into Brian&amp;#39;s office while in college for &amp;#34;office
hours&amp;#34; on a lark and ended up having a great conversation. He felt
Brian might respond.
&lt;/p&gt;
&lt;p&gt;
I shot off an email and a few days later got back pages and pages of
really useful thoughts and commentary. I was blown away by the
response. Either he took some serious time to think this out and
respond to some nobody teacher cold-emailing him or he&amp;#39;s just that
good that he can rattle off a tome length response to some random
teacher emailing him. Either way, it was a huge help. It also made an
impression so while I might fail at times, I try to be responsive when
people cold call or otherwise ask for help that I can provide.
&lt;/p&gt;
&lt;p&gt;
I met Brian a number of years later at Google and in addition to being
tolerant of my fanboy-ing, I found him to just a really special
individual
&lt;/p&gt;
&lt;p&gt;
Both these videos are short and I think both CS students and teachers
will find them very interesting.
&lt;/p&gt;
&lt;p&gt;
Part 1:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zmYhR8cUX90&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Part 2:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/VVpRj3Po6K4&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>How early for APCS</title>
      <link>https://cestlaz.github.io/posts/how-early-apcs/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/how-early-apcs/</guid>
      <description>
&lt;p&gt;
In what grade should students take APCS? This question comes up from
time to time.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve heard answers ranging from middle school through never. Infact,
years ago, my chairman relayed a conversation he had with Marvin
Minsky where he asked Minsky what the high schools should be teaching
with respect to CS. The answer was &amp;#34;nothing.&amp;#34; This was then amended to
&amp;#34;teach them to type.&amp;#34; Of course this was a long time ago but I believe
the sentiment was that college was the right time and the high schools
don&amp;#39;t know what they&amp;#39;re doing and will just screw up the
kids. Actually, I still see some of this attitude today and it gets
passed down where high school teachers sometimes don&amp;#39;t want the
middle schools to &amp;#34;mess up their kids&amp;#34; and on down the line.
&lt;/p&gt;
&lt;p&gt;
At this point, it&amp;#39;s pretty clear that you can do good CS at the high
school level and as things are being pushed down the grades we&amp;#39;ll
eventually figure out what&amp;#39;s right and when.
&lt;/p&gt;
&lt;p&gt;
Still, within the high school the question of what grade for APCS-A
remains.
&lt;/p&gt;
&lt;p&gt;
There isn&amp;#39;t a single right answer for this but I can share
my experience and what I ended up deciding when I developed things at
Stuy.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
MATH BOOKS and Physics First
&lt;/h2&gt;
&lt;p&gt;
As parents, my wife and I learned early on that we&amp;#39;d have to
supplement what our kids would learn in school, particularly in terms
of math and science. I was in charge of math. Since I used assorted
books to help, math time came to be known simply as &amp;#34;MATH BOOKS.&amp;#34; It&amp;#39;s
funny that now while my kids don&amp;#39;t look back super fondly on MATH BOOKS
they agree that it was an important thing for us to do.
&lt;/p&gt;
&lt;p&gt;
I discovered, as I&amp;#39;m sure many parents do, that there are times when a
kid is just not ready for a subject. At one point I tried to introduce
Algebra too early and saw it wasn&amp;#39;t going to take so I pulled back. A
while later, we tried again. This time it was clear that they could do
the mechanics and solve problems based on rules and formulae but they
really didn&amp;#39;t &amp;#34;get it.&amp;#34; A third attempt some time later, they were
ready. They mastered the subject with deep understanding easily. It
could be argued that the early exposure helped but I don&amp;#39;t think it
did.
&lt;/p&gt;
&lt;p&gt;
The takeaway here is that kids can do the mechanics and appear to
succeed but if it&amp;#39;s too early, they don&amp;#39;t really learn the subject.
&lt;/p&gt;
&lt;p&gt;
I saw this on a larger scale with &amp;#34;Physics First.&amp;#34; At Stuy, most
freshmen would take Bio in 9th grade followed by Chem and then Physics
in their Junior year. Physics first kids would take Physics in the 9th
grade. I don&amp;#39;t have any evidence for this but based on my inquiries
over the years it seemed that the kids who took physics in their
junior year had a deeper understanding of the subject.
&lt;/p&gt;
&lt;p&gt;
I also personally saw this when teaching math classes early on in my
career. Most Stuy freshmen take geometry. The math aces take
precalc or calc but a few weren&amp;#39;t math aces but were the star in their
middle school. They were pushed through geometry in 8th  grade and
started Stuy in Algebra 2 and Trig. The majority of these kids that I
taught could spit back all the formulas and theorems from geometry but
very few were actually ready for Alg2/Trig and struggled
considerably.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
APCS
&lt;/h2&gt;
&lt;p&gt;
So what about APCS? At Stuy we always taught a superset of the old
APCS-AB. It&amp;#39;s mostly APCS-A in the Fall semester and Data Structures
in the Spring. When I started, there was no prerequisite for APCS so I
had students in all grades. Mostly Juniors and Seniors but a few
Sophomores. I think I only had a freshman in APCS once and they were
an outlier.
&lt;/p&gt;
&lt;p&gt;
Some of my sophomores were ready, more could merely spit back material
and do the mechanics - enough to pass the APCS-AB exam but they really
didn&amp;#39;t get it. There were some, however that weren&amp;#39;t ready. These were
very bright kids and while I can&amp;#39;t say for sure, deep down I very much
suspect that if they took my class a year later they would have done
much better and they might have followed a very different path towards
their future.
&lt;/p&gt;
&lt;p&gt;
As a teachers we can change lives for the better and in fact save
lives. We can also do great damage. Because of the latter, teachers
should follow the mantra &amp;#34;first do no harm.&amp;#34; This led me to a general
rule of taking kids into APCS-AB until their junior year. If I were to
allow a sophomore in I wanted to be pretty sure that the kid was
ready.
&lt;/p&gt;
&lt;p&gt;
Later we were able to create a sophomore year CS requirement which
gave all kids exposure to CS prior to APCS-A (we still taught AB but
by now only the A exam was offered) and also gave us a platform to vet
the outliers who might be ready for APCS. For those kids, in addition
to an interview we had them self study APCS-A, do a project and sit
for the APCS-A final exam and then we&amp;#39;d add them to the second half of
our AP class.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Has it worked?
&lt;/h2&gt;
&lt;p&gt;
By and large the system has worked. Kids now get an intro in the 10th
grade followed by APCS in 11 and more electives if desired in the
12th. For the kid that&amp;#39;s truly ready for APCS in the 10th grade, we
have a path. We don&amp;#39;t make it easy but the path is there.
&lt;/p&gt;
&lt;p&gt;
Over the years we&amp;#39;ve had some CS superstars come through the
program. Some have pushed back – &amp;#34;why do I have to take the intro?&amp;#34;
&amp;#34;Why can&amp;#39;t i start right away in APCS?&amp;#34; – after all was said and
done, all but one came back to say that we did it the right way and
that they benefited from all our classes.
&lt;/p&gt;
&lt;p&gt;
At Stuy, it seems that for most students, 11th grade is right for our
APCS. Between academic maturity, other classes, scheduling and
everything else, it seems that this works the best for us.
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Why the rush?
&lt;/h2&gt;
&lt;p&gt;
Frequently the question as to when to teach APCS revolves around how
early it can be taught. I have to ask - why are we so caught up with
doing things so early?
&lt;/p&gt;
&lt;p&gt;
If we&amp;#39;re just pushing college level courses down to high school then
what&amp;#39;s the point? The kids will have to take the classes again if
they&amp;#39;re going to major in CS anyway.
&lt;/p&gt;
&lt;p&gt;
If you have a program that doesn&amp;#39;t duplicate college courses you might
want to have kids finish APCS-A earlier but I wonder how early you
really need.
&lt;/p&gt;
&lt;p&gt;
As a society we keep pushing things down younger and younger. We&amp;#39;re
pushing AP classes like history or APCS-P down to 10th grade or even
earlier. You have to ask, is a course that&amp;#39;s developmentally
appropriate for a 18-22 year old developmentally appropriate for a 14
or 15 year old? Probably not. You also have to ask that if it makes
more sense to push further ahead or if it&amp;#39;s better to do enrichment at
a level the kids can handle.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m an enrichment over acceleration guy but other people differ. Just
like the question of when for APCS, there&amp;#39;s probably not a single
right answer to this.
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Last words and what should you do?
&lt;/h2&gt;
&lt;p&gt;
As I said up front, there&amp;#39;s no right answer to this. I&amp;#39;m still
convinced that 11th grade is probably the best general entry point for
APCS-AB but if I were only teaching APCS-A maybe I&amp;#39;d shift it down a
year. My gut tells me no, partially based on teaching non APCS to 8th,
9th, and 10th graders but maybe. Of course, we all teach different
students in different environments so your mileage may vary.
&lt;/p&gt;
&lt;p&gt;
There are also those outlier kids that can truly master the subject at
an earlier age, I&amp;#39;m not really considering them here but they should
be accommodated when possible.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve been running a program for a while, look at the data - not
how many kids pass the exam - look at how many master the next level
material. If your kids next class is data structures in college, find
out how well prepared they were and see if and how it maps to the
grade in which they took APCS. If you&amp;#39;re just starting, I&amp;#39;d recommend
erring on the side of caution - remember &amp;#34;do no harm.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
If you have to teach CS and it turns out you have to teach it when the
kids are too young to master APCS-A then don&amp;#39;t teach APCS-A, teach
great CS at a level that&amp;#39;s appropriate.
&lt;/p&gt;
&lt;p&gt;
All of this will work itself out in time. Until we get there, there
will be some mis-steps - I know I&amp;#39;ve had mine. As long
as we continue to move the kids forward and give them something that they
wouldn&amp;#39;t have been getting otherwise while we figure all this out,
we&amp;#39;re doing pretty good.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2018 - Funding and Direction</title>
      <link>https://cestlaz.github.io/posts/csta-2018-future/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018-future/</guid>
      <description>&lt;p&gt;
In addition to everything I wrote about last time there were a couple
of other big announcements at this year&amp;#39;s CSTA conference. Both
announcements deal with funding.
&lt;/p&gt;
&lt;p&gt;
First, there is a new class of CSTA membership. The free tier remains
but now for $50 you can join &lt;a href=&#34;https://www.csteachers.org/page/cstaplus&#34;&gt;CSTA+&lt;/a&gt;. This new level of membership comes
with a bunch of extras that are probably good for K12 teachers but I
doubt I&amp;#39;ll use any of them. I did, however, get a snazzy CSTA+ water
bottle by joining at the conference. For me the interesting part is
that 50% of CSTA+ dues will go to support local chapters.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t exactly know what that means but it&amp;#39;s what got me to
join. Ultimately, local teaching communities are important and CSTA+
supports that, I&amp;#39;m all in.
&lt;/p&gt;
&lt;p&gt;
That said, what do chapters do? I know what goes on in NY but not
elsewhere. I bet the same is true for people all over the country. One
question that came up repeatedly at the conference, at least in my
circles was &amp;#34;what would the chapters use the money for?&amp;#34; I think it
would be wonderful if on the CSTA web site there was a page where
chapters could easily list activities funded by the central
organization. I&amp;#39;m not looking for a big write up - who has time to
read or write that. I&amp;#39;m looking for a line or two. What the chapter
did and maybe a few comments on details. Over time this could be  a
great way for chapters to steal ideas from each other.
&lt;/p&gt;
&lt;p&gt;
The other piece of big news was &lt;a href=&#34;https://www.linkedin.com/pulse/new-partnership-support-computer-science-teachers-mary-snapp-1c/?published=&#34;&gt;Microsoft pledging a big chunk of
change to the CSTA&lt;/a&gt;. I&amp;#39;ve often lamented that so many CS Education (and
education decisions in general) are decided by everyone except the
teachers. The CSTA is our teacher&amp;#39;s professional organization and our
best bet for teacher representation when policy is made and
implemented. Once again it appears that some of these funds will help
support local chapters.
&lt;/p&gt;
&lt;p&gt;
The Microsoft funding though got me thinking. The linked piece talks
about advocacy, professional development and curriculum. All important but
there&amp;#39;s an even greater need right around the corner. We need quality,
qualified CS teachers and we need them now. Taking a teacher with no
CS background and giving them some PD can be a stop gap but it isn&amp;#39;t a
solution. Long term we need pre and in service teacher preparation
programs similar to what we&amp;#39;re rolling out at Hunter. Programs that
include both pedagogy and content. As states begin to require these
programs, as they do in all other subject areas, teachers both new and
in service will have to take a number of graduate credits. In our
case, 18 for a certificate for an already licensed teacher and our MA
program is somewhere in the 30s.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d love to see money allocated to pay for CS teacher certification
through our public colleges as they (we) roll out programs.
&lt;/p&gt;
&lt;p&gt;
This said, the Microsoft commitment is great news for the CSTA and
CSTA is a great option for teachers that can afford it.
&lt;/p&gt;
&lt;p&gt;
Here in NY, our CSTA chapter is fairly young. I&amp;#39;m excited to see what
this year brings both on the local and national level.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Csta 2018 Report</title>
      <link>https://cestlaz.github.io/posts/csta-2018-report/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018-report/</guid>
      <description>&lt;p&gt;
I just got back from the CSTA (Computer Science Teacher&amp;#39;s Association)
conference. It&amp;#39;s the biggest annual conference dedicated to K12 CS
education. I think there were about 700 people attending. It felt much
larger than last year but compared to SIGCSE which is double the size,
CSTA still felt pretty intimate.
&lt;/p&gt;
&lt;p&gt;
The conference was in Omaha Devorah came along to play tourist and we both
came a day early to do some site seeing.
&lt;/p&gt;
&lt;p&gt;
First, we hit the &lt;a href=&#34;http://www.omahazoo.com/&#34;&gt;zoo&lt;/a&gt; and &lt;a href=&#34;https://www.lauritzengardens.org/&#34;&gt;Lauritzen Gardens&lt;/a&gt;. We&amp;#39;ve got the Bronx Zoo
here in NY an the NY and Brooklyn Botanical Gardens which are all
pretty impressive but even so, Omaha&amp;#39;s zoo and gardens are well worth
a visit. We then went over to the &lt;a href=&#34;https://durhammuseum.org/&#34;&gt;Durham Museum&lt;/a&gt; which was really
terrific. Housed in an old railroad station, the museum has lots of
great Omaha history as well as trains and other neat exhibits.
&lt;/p&gt;
&lt;p&gt;
We also walked all over and did our best to pick up on the local
flavor. One of our discoveries was a terrifically quirky
&lt;a href=&#34;https://www.omahanostalgia.com/&#34;&gt;retro/nostalgia/antiques&lt;/a&gt; store. It had an awesome working Pinball
museum
&lt;/p&gt;
&lt;img src=&#34;file:/img/csta-2018/pinball.jpg&#34; alt=&#34;file:/img/csta-2018/pinball.jpg&#34; title=&#34;file:/img/csta-2018/pinball.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
along with all the rubber ducks you&amp;#39;d ever want for debugging
&lt;/p&gt;
&lt;img src=&#34;file:/img/csta-2018/ducks.jpg&#34; alt=&#34;file:/img/csta-2018/ducks.jpg&#34; title=&#34;file:/img/csta-2018/ducks.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
and a whole lot more.
&lt;/p&gt;
&lt;p&gt;
By the river, we found both a statue and series of plaques honoring
labor:
&lt;/p&gt;
&lt;img src=&#34;file:/img/csta-2018/labor.jpg&#34; alt=&#34;file:/img/csta-2018/labor.jpg&#34; title=&#34;file:/img/csta-2018/labor.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
something I&amp;#39;m thinking a lot about now in light of the recent Janus
decision.
&lt;/p&gt;
&lt;p&gt;
As for the conference. It was 100% worth it.
&lt;/p&gt;
&lt;p&gt;
I spent a lot of time at the GitHub booth with my new friend  &lt;a href=&#34;https://twitter.com/JohnPhamous&#34;&gt;John&lt;/a&gt;
talking about how I use GitHub with my classes.
&lt;/p&gt;
&lt;img src=&#34;file:/img/csta-2018/git.jpg&#34; alt=&#34;file:/img/csta-2018/git.jpg&#34; title=&#34;file:/img/csta-2018/git.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
and as always one of the highlights was spending time with old friends
and making new friends while talking shop.
&lt;/p&gt;
&lt;p&gt;
I also gave a talk on the state of CS teacher certification in New
York State and what we&amp;#39;re rolling out at Hunter. that led to
discussions with people from all over. Texas, California, Indiana, and
other places. We had some great discussions as to what&amp;#39;s going on all
over the country. I also had a chance to talk to teachers from all
over NY State to let them know how Hunter can help them.
&lt;/p&gt;
&lt;p&gt;
There were also interesting sessions. I attended a BOF facilitated by
&lt;a href=&#34;https://twitter.com/Todd_Lash&#34;&gt;Todd Lash&lt;/a&gt; and others about mapping model lessons to CS standards. I&amp;#39;m
actually not a fan of &amp;#34;the standards&amp;#34; and have some serious concerns
about how standards are thrown around and used but it was a very
interesting session nonetheless.
&lt;/p&gt;
&lt;p&gt;
I also enjoyed a session by Owen Astrachan on teaching sorting. Owen
gives a great talk. I didn&amp;#39;t agree with some of how he approaches
teaching sorting but then we teach different classes and students and
could have slightly different goals leading to my view. In any case, it was very
interesting and I plan on  stealing the motivation he used. Owen
started with a list of top hits - their titles and artist names and
had us perform some mini data mining exercises on them in a
spreadsheet to motivate the concept of sorting.
&lt;/p&gt;
&lt;p&gt;
Probably the highlight of the conference for me was &lt;a href=&#34;https://twitter.com/mfh?lang=en&#34;&gt;Michelle Friend&lt;/a&gt;&amp;#39;s
keynote. She had me as soon as she encouraged us to question the value
of a lot of the education research out there. It got better when she
reminded the audience of teachers that they &lt;strong&gt;were&lt;/strong&gt; all education
researchers. they perform their practice every day, analyze the
results, and work to improve. So often, I hear education researchers
dismiss teachers - &amp;#34;that&amp;#39;s just anecdotal&amp;#34; they say while they
publish the &amp;#34;true way&amp;#34; while ignoring the thousands of complex factors
that actually affect education. There is some research that&amp;#39;s great
and some researchers I greatly respect but I&amp;#39;ve been forced to read
enough bunk and there&amp;#39;s been enough nonsense forced upon teachers over
the years that just doesn&amp;#39;t work in practice that a healthy dose of
skepticism is critical.
&lt;/p&gt;
&lt;p&gt;
Michelle also talked about assessment and how we test &amp;#34;what we can&amp;#34;
rather than what we should.
&lt;/p&gt;
&lt;p&gt;
It wasn&amp;#39;t a talk from on high but I think it&amp;#39;s what the audience
needed - a talk from someone who&amp;#39;s currently an academic but who at
her core, I think is a teacher. It was teacher to teacher and that&amp;#39;s
what, at least in my opinion CSTA should be about.
&lt;/p&gt;
&lt;p&gt;
A final highlight for me was when they awarded the Cutler Bell price
for high school students. I knew that Benjamin Spector &amp;amp; Michael
Truell were winners but I didn&amp;#39;t realize they&amp;#39;d be at the conference
to receive their award for their work  creating &lt;a href=&#34;https://halite.io/&#34;&gt;Halite&lt;/a&gt;. I had helped
them a bit along the way so knew the quality and impact of the project
and it was great to see Ben and Mike recognized and to be there to be
able to congratulate them in person.
&lt;/p&gt;
&lt;p&gt;
Now it&amp;#39;s back home and back to reality. The organizing committee
really outdid themselves this year. Great job on CSTA 2018. I&amp;#39;m
already looking forward to next year.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I&#39;m not going to congratulate you on your AP results</title>
      <link>https://cestlaz.github.io/posts/ap-2018/</link>
      <pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-2018/</guid>
      <description>&lt;p&gt;
While busy finishing off my sides for my talk at CSTA2018 this weekend
I noticed a Facebook post about APCS exam grades now or shortly being
available.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m no longer teaching high school but still fancy myself a teacher
first and part of the K12CS community. We&amp;#39;re a growing community and
we&amp;#39;re growing fast.
&lt;/p&gt;
&lt;p&gt;
Usually, at this time of year we see a number of people posting their
results. &amp;#34;I had 16 test takers, had 5 fives, 6 fours etc.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I decided that not only won&amp;#39;t I be congratulating anyone on their
results this year but decided to write this quick post to say no one
should.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying that hundreds of teachers out there don&amp;#39;t deserve
congratulations - they do. The problem is, for everyone who&amp;#39;s kids
got all fours and fives, somewhere out there was a teacher who
possibly through no fault of their own had students scoring ones, twos
and threes.
&lt;/p&gt;
&lt;p&gt;
When I was at Stuy, almost all of my kids got fours or fives when the
exam was the old AB exam. When it went to A only, it was almost
exclusively fives with a few fours and maybe a single one. That wasn&amp;#39;t
me. It was the kids. The AP CS teacher before me got similar results
as did all of my colleagues and the teachers who are still
there. Again, it was the kids.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s not to say that I didn&amp;#39;t add value. I know I spent a career at
Stuy doing right by those kids regardless of test scores.
&lt;/p&gt;
&lt;p&gt;
The fact is that there&amp;#39;s only so much a teacher can do.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Was APCS (A or principles) their first course?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What other demands are placed on the students?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How about the teacher?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How many kids in a class? How much time?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Is APCS an elective or required??
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Is the teacher getting the support they need?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
And the list goes on. I know some great teachers who never had classes
with great AP results and meh teachers that did. Actually, I know some
APCS and Calc teachers that consistently had classes with good scores
through drill and kill and building student speed. Of course, at the
same time these teachers totally turned the kids off from the subjects
&lt;/p&gt;
&lt;p&gt;
Our teachers do deserve praise and congratulations.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Praise for getting through another year.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Praise for forging a path in this new subject area.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Praise for doing more with less.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Praise for inspiring kids and starting them on a path.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Praise for changing lives for the better.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
And so on
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If your kids left with more than they came in with you did a great job
and deserve congratulations. If you set a seed that will later grow
you&amp;#39;ve done an enormous amount of good.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s like I would always tell my kids when they won an award. I was
never proud of them actually winning the award. I was proud of how they carried
themselves, prepared, performed or whatever. The award was just some
outsider also noticing they&amp;#39;re awesome.
&lt;/p&gt;
&lt;p&gt;
Same thing here so I won&amp;#39;t be congratulating teachers on student test
results. The results coming in do provide some measure of closure for
the year though so I will congratulate you all on the year and your
work.
&lt;/p&gt;
&lt;p&gt;
Hope to see many of you this weekend at CSTA2018.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Certification The Old Way</title>
      <link>https://cestlaz.github.io/posts/certification-the-old-way/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/certification-the-old-way/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve taken part in a few conversations and read more than a few
threads on teacher certification exams recently. Specifically, CS
teacher certification exams. There are a bunch of them floating
around. There&amp;#39;s the &lt;a href=&#34;https://www.ets.org/praxis/prepare/materials/5651%0A&#34;&gt;Praxis&lt;/a&gt; offered by ETS, the one from the &lt;a href=&#34;https://www.nestest.com/TestView.aspx?f=HTML_FRAG/NT315_PrepMaterials.html%0A&#34;&gt;National
Evaluation Series&lt;/a&gt;,  the &lt;a href=&#34;https://www.west.nesinc.com/TestView.aspx?f=HTML_FRAG/WA073_PrepMaterials.html&#34;&gt;Washington Evaluator Test Series&lt;/a&gt; one and then
there&amp;#39;s what&amp;#39;s &lt;a href=&#34;https://www.weteachcs.org/&#34;&gt;going on in Texas&lt;/a&gt;. NY State says it will eventually
develop their own.
&lt;/p&gt;
&lt;p&gt;
I have mixed feelings about exams like these. From what I&amp;#39;ve seen some
of the content seems fine and the &amp;#34;stuff you have to know for the
test&amp;#34; isn&amp;#39;t necessarily the worst in the world. As a one time
gatekeeper, I&amp;#39;m not necessarily happy with them but they can provide a
test for a basic threshold of knowledge with out too much focus on
test prep.
&lt;/p&gt;
&lt;p&gt;
Of course, they&amp;#39;re just the tip of the iceberg, many states including
New York make their teacher candidates also take other exams. In NY
candidates must take the &lt;a href=&#34;https://dianeravitch.net/2013/06/03/what-is-edtpa-and-why-do-critics-dislike-it/&#34;&gt;edTPA&lt;/a&gt; which is expensive for the teacher
candidate but a big money maker for Pearsons.
&lt;/p&gt;
&lt;p&gt;
All of this came out of NCLB back in the day which also created
requirements like &amp;#34;must complete an approved program&amp;#34; as opposed to
just accruing a bunch of relevant education and content credits which
in turn led to more courses like &lt;a href=&#34;https://cestlaz.github.io/posts/math-for-math-teachers/&#34;&gt;Math for Math Teachers&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For you youngsters out there (which I guess is most of you), I thought
I&amp;#39;d share what it was like back in the day.
&lt;/p&gt;
&lt;p&gt;
Back then, New York City certified it&amp;#39;s own teachers as opposed
to now when everything&amp;#39;s done directly through the state. The system
was, in my opinion far superior.
&lt;/p&gt;
&lt;p&gt;
I came in as a career changer - I was doing computer work at the
time - and I came in as a math teacher since there was no CS. Since
math was an area of need it was a little easier for me to get my foot
in the door than it would have been for say an English teacher.
&lt;/p&gt;
&lt;p&gt;
To start I went down to the Board of Education in Brooklyn armed with
my college transcript and waited in line. I then met with someone who
evaluated my transcript. Normally, to get started, I would have needed
a certain number of education credits and a certain number of content
(math) credits. I think the magic number was 24 for the content. Since
math was an area of needed you could get started with a TPD license
(Temporary Per Diem) which required no education credits going in. You
had to get 18 graduate education credits within the first, I think two
years and take the National Teacher Exam. You also got one period off
to be mentored which was a pretty sweet deal. Of course it wouldn&amp;#39;t be
that simple. I only had 16 math credits so fell short but the
evaluator decided to give me credit for a couple of my more mathy CS
classes like Algorithms to get me over the hump.
&lt;/p&gt;
&lt;p&gt;
I then went to another line to get a brief mini physical and at some
point I was fingerprinted and I had my TPD. The BOE then ran a one
week &amp;#34;learn to teach&amp;#34; bootcamp and I was left to find my own job which
I was fortunately able to do.
&lt;/p&gt;
&lt;p&gt;
So, I had my foot in the door but as a TPD I had no job protections. I
was observed at least 6 times a year and could be fired at will. In
fact, TPD&amp;#39;s were annually given pink slips in the spring and had to be
rehired again in the Fall if their schools wanted them.
&lt;/p&gt;
&lt;p&gt;
I got my 18 education credits over the next two years and took the NTE
which was both the easiest and hardest exam I ever had to
take. Easiest content wise but hard because it was a FULL DAY of non
stop writing and my hand was cramped up into a club by days end. That
got me to the next level - the PPT - Preparatory Provisional License,
I think.  This allowed me to be appointed. Once appointed you had job
retention and seniority rights. Not tenure, but a step closer and you
did get some legit job protections. If you started the process with
education credits to go along with content credits you could have
started directly with the PPT.
&lt;/p&gt;
&lt;p&gt;
The final step to get that appointment with the PPT is that you had to
go for an interview with the &lt;strong&gt;Board of Examiners&lt;/strong&gt;. This was the good
part. After work one day I went down to Brooklyn Tech, waited my turn
and then was ushered into a classroom. A typical panel would have a
principal, an assistant principal in your subject area, and a couple
of teachers, again in your subject area. They could grill you on
anything they wanted.
&lt;/p&gt;
&lt;p&gt;
They could ask you general teaching questions (usually cached in a scenario):
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
how do yo u handle a mixed level class,
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
how do you handle a disruptive student
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Preparation questions:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
how would you motivate a  class on the Pythagorean Theorem?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How would you turn a lesson on solving quadratics in to a hands on
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
lab experience?
&lt;/p&gt;
&lt;p&gt;
or content questions:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
solve this calculus problem…
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Derive this theorem…
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I don&amp;#39;t remember how long the session lasted but afterwards I left and
a couple of weeks later, I had my PPT and was appointed.
&lt;/p&gt;
&lt;p&gt;
There were a couple of last steps - tenure, which pretty much just
happened since my AP and Principal were both happy with my performance
and I had to get my Masters. Back then you could get a Masters in
anything so I decided to get it in CS rather than Education.
&lt;/p&gt;
&lt;p&gt;
There was a lot to like about the old system. I&amp;#39;ve never been a big
fan of a lot of the education credits one has to get and while I still
needed a number of them, I&amp;#39;m glad I had the option to take mostly
content credits. I also like what amounted to being evaluated face to
face by an individual rather than an amorphous bureaucracy. I also
loved the mentoring I got but while the system gave me the class
relief time to allow it to happen I think much of the value was due to
my colleagues at Seward Park High School without whom I would have
washed out.
&lt;/p&gt;
&lt;p&gt;
The biggest thing I liked was the Board of Examiners. I found it
somewhat stressful since I was never a math guy but the idea that
you&amp;#39;ve got to prove yourself to a bunch of local city educators was
HUGE. You weren&amp;#39;t expected to give the &amp;#34;correct for the test&amp;#34; answer,
you had to convince people that you might have to work for or with
that you got the goods.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m sure we&amp;#39;ll never go back to the old days but I thought the current
generation might be interested in hearing what it was like back in the
day.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talking about CS teacher certification at CSTA 2018</title>
      <link>https://cestlaz.github.io/posts/csta-2018/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csta-2018/</guid>
      <description>&lt;p&gt;
As I mentioned in my last post, this coming weekend is the Computer
Science Teachers Association (CSTA) conference. I&amp;#39;ve been a member of
CSTA since the beginning but this will be only the second time I&amp;#39;ve
made it to the annual conference.
&lt;/p&gt;
&lt;p&gt;
The CSTA conference might be the largest conference specifically for
k12 computer science teachers and that makes it different from
conferences like SIGCSE which is for CS education and education
research at all levels or ISTE which seems to be more of an Ed Tech
conference.
&lt;/p&gt;
&lt;p&gt;
I really enjoyed the conference last year but as the sessions seemed
to be weighted towards beginning CS teachers and towards the CSTA
standards I found most of the value in the &amp;#34;hallway track&amp;#34; when I got
to meet and chat with CS teachers from all over the country.
&lt;/p&gt;
&lt;p&gt;
Glancing at the program, there looks to be a bunch of interesting
sessions and this time more sessions that I think I&amp;#39;ll personally be
interested in .
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also giving a talk. New York State just approved and created K12
Computer Science Teacher Certification and we&amp;#39;re currently making
plans to roll out our Masters and Certificate programs for CS teachers
as soon as we get state approval. The Masters program will be largely
for preservice teacher candidates and the certificate program for in
service teachers certified in other areas.
&lt;/p&gt;
&lt;p&gt;
The talk will cover a bit of the history of CS Education in New York,
what the state is doing and mostly what where building at Hunter and
why. It should be a fun talk. I&amp;#39;m hoping for some people from other
states attend so we can have a rich discussion during the session.
&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re going to be at the CSTA conference, I&amp;#39;d love to see
you either at my session or at the conference in general. I&amp;#39;ll be
spending most of my non session time there with my friends at GitHub
education.
&lt;/p&gt;
&lt;p&gt;
For those of you can&amp;#39;t make it, I hope to blog about the weekend and I
hope others do as well.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 50 - presentations</title>
      <link>https://cestlaz.github.io/posts/using-emacs-50-presentations/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-50-presentations/</guid>
      <description>&lt;p&gt;
Next weekend I&amp;#39;ll be attending the Computer Science Teachers
Association&amp;#39;s &lt;a href=&#34;https://www.csteachers.org/general/custom.asp?page=2018Conference&#34;&gt;annual conference.&lt;/a&gt; It&amp;#39;s probably the biggest conference
focussed on K12 Computer Science education. This year, in addition to
attending, I&amp;#39;ll be giving a talk on preservice and inservice CS
teacher preparation programs. I&amp;#39;ll be talking about the new New York
State certification requirements along with what we&amp;#39;re rolling out at
Hunter College.
&lt;/p&gt;
&lt;p&gt;
This means putting together a slide deck for the session. When I have
to work collaboratively with non-Emacs users, I will usually go to
Google Docs for presentations. It works and the collaborative aspects
are nice but tools like Google Docs and Powerpoint are designed around
composing slides manually. I much prefer to use a tool where I can
focus on writing my presentation and have the tool turn it into a
presentation.
&lt;/p&gt;
&lt;p&gt;
Org-mode is of course the ideal tool. As an outliner, it lends itself
to organizing a talk:
&lt;/p&gt;
&lt;div class=&#34;src src-org&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;,* topic 1
the content for slide one
,* topic 2
the content for slide two
,* topic 3
etc.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I can embed code, tables, images, and more. I can also cycle
visibility so I can focus on individual sections. Org-mode also has a
number of export options to take a plain org file which is just ascii
with markup and export it as a presentation. In the video, I&amp;#39;ll take a
quick look at &lt;code&gt;ox-beamer&lt;/code&gt;, which exports to a Beamer presentation in LaTeX and then a PDF,
&lt;code&gt;epresent&lt;/code&gt; which presents right in Emacs and finally &lt;code&gt;ox-reveal&lt;/code&gt; wich
creates a &lt;code&gt;reveal.js&lt;/code&gt; presentation. I ultimately decide to continue to
use &lt;code&gt;ox-reveal&lt;/code&gt; as it&amp;#39;s pretty simple and flexible and I can also directly serve
the final presentation from my own laptop, a usb drive, or directly
from GitHub.
&lt;/p&gt;
&lt;p&gt;
Check out the video to see how. If you want more information on using
&lt;code&gt;ox-reveal&lt;/code&gt; check out my earlier &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-11-reveal&#34;&gt;Using Emacs post and video&lt;/a&gt;.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/bRoSpJ23Kzk&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Hunter CS - a lot of progress in a short time</title>
      <link>https://cestlaz.github.io/posts/hunter-cs-year-two/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hunter-cs-year-two/</guid>
      <description>&lt;p&gt;
Yesterday I was back on campus for an early orientation session for
Hunter&amp;#39;s incoming Daedalus CS honors students. It was the first time
all of us got to meet face to face. The students I met with will be
my third cohort. I got to thinking how far we&amp;#39;ve come in under three
years.
&lt;/p&gt;
&lt;p&gt;
Hunter&amp;#39;s had a strong but little known undergraduate
CS program for as long as I&amp;#39;ve known. Much like any program, we&amp;#39;ve got
our strengths and weaknesses but you go through our program and
academically you&amp;#39;ll be as well prepared as from anywhere else. We have some
challenges being a commuter school, a liberal arts school and a school
not commonly thought of for CS but the core has always been there.
&lt;/p&gt;
&lt;p&gt;
Hunter has been making a concerted effort to up its computer science
game and my joining the team has been part of that. The Daedalus
program is an honors scholarship program. It&amp;#39;s similar to the well
known CUNY Macaulay program but it&amp;#39;s specific to Hunter and specific to
CS. Our kids get scholarships, laptops, special classes (with me),
activities and events and more. Our first cohort had 12. This past
year we had 23 but a funny thing happened right after we started. Hunter&amp;#39;s
Macaulay CS students heard about what was going on and wanted in. The
end result was that last years cohort had a total of 27 students
as we invited the incoming Hunter Macaulay CS students into the
fold. This year, we&amp;#39;re up to about 50 total and it looks to be a very
strong group. To be honest I&amp;#39;m a little
scared of growing this quickly. The kids will be great but it will be
a challenge building the community across multiple classes.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m really pleased with the first two cohorts performance both in
class and out. They&amp;#39;re progressing well through the academic program
and are ahead of schedule in terms of internships and outside
activities but I&amp;#39;m even happier that they&amp;#39;ve been working to level up
Hunter CS as a whole. They started a once a week Dojo last year where
all Hunter CS students could hang out and work on tech projects and
have a speaker series on tap for this coming year. For my part, I&amp;#39;ve
got a couple of new ideas up my sleeve but I&amp;#39;m going to keep them
under wraps for now.
&lt;/p&gt;
&lt;p&gt;
Three years ago Hunter wasn&amp;#39;t so much on the map for CS inclined high
school students and while there&amp;#39;s much work to be done, many of our
incoming cohort members chose us over other programs that have
traditionally been considered CS strongholds.
&lt;/p&gt;
&lt;p&gt;
At the same time, our efforts to connect Hunter CS to the NY Tech community have begun to
raise our profile on the other end of the pipeline.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s still a long rode ahead but I thought I&amp;#39;d give myself a day to
look back on how far we&amp;#39;ve come in a short time. Having a great public college option for CS
education is critical for NYC. This was one of the things I left Stuy to
accomplish and we&amp;#39;re well on our way.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PD for people who know CS</title>
      <link>https://cestlaz.github.io/posts/pd-for-cs/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pd-for-cs/</guid>
      <description>&lt;p&gt;
I saw a couple of tweets from Sarah Judd this morning:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A lot of CS Ed PD assumes you are new to CS. I really want CS Ed PD for people like us that came from a CS background and want to understand the pedagogy for CS in particular better. Do you know of some?&lt;/p&gt;&amp;mdash; Sarah Judd (@SarahEJudd) &lt;a href=&#34;https://twitter.com/SarahEJudd/status/1011785286693552139?ref_src=twsrc%5Etfw&#34;&gt;June 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Yes! I love SIGCSE and CSTA. I just feel like... Math teachers don&amp;#39;t get PD that starts with &amp;quot;and this is how you add and subtract!&amp;quot; and I&amp;#39;d love more CS PD that assumes the content is there, and can focus on the pedagogy.&lt;/p&gt;&amp;mdash; Sarah Judd (@SarahEJudd) &lt;a href=&#34;https://twitter.com/SarahEJudd/status/1011966102795059200?ref_src=twsrc%5Etfw&#34;&gt;June 27, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
It wasn&amp;#39;t the first time I&amp;#39;ve heard this refrain. Last year I attended
my first CSTA conference. I had numerous conversations with CS
teachers on the fact that everything was on an intro level in terms of
both content and teaching. Further conversations with local teachers
with stronger CS backgrounds led me to run a professional development
session at Hunter this past election day for more experienced CS
teachers at schools that offered more than the basics.
&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s not surprising that most of the PD opportunities for CS teachers are
rather rudimentary given that nationally most programs are new and
most teachers are new to the subject but there are a few deeper
reasons.
&lt;/p&gt;
&lt;p&gt;
To start, there are big players in the CS Ed movement that are pushing
curricula and specific programs and that leads to scripted PD for
their products and not depth of knowledge nor deep pedagogical content
knowledge let alone basic pedagogy. Add to this the fact that many of
the &amp;#34;thought leaders&amp;#34; in the space don&amp;#39;t have experience teaching CS
at the K12 level and in many cases don&amp;#39;t have a background either in
teaching nor tech and you can see where the problem comes from. On top
of this we have the erosion of respect for teaching as a profession
where reformers are trying to take the teacher out of teaching and are
trying to reduce pedagogy to following scripts. This problem goes well
beyond CS Ed but as the new kid on the block it probably hits us
hardest.
&lt;/p&gt;
&lt;p&gt;
In any case, preparing beginners is both necessary and appropriate for
the time being but we can and must do a better job than what&amp;#39;s
currently &amp;#34;state of the art.&amp;#34; At the same time we have to do something
with the CS teachers who indeed do have strong content knowledge but
don&amp;#39;t feel comfortable with imparting that knowledge.
&lt;/p&gt;
&lt;p&gt;
So, what should we do?
&lt;/p&gt;
&lt;p&gt;
For new teachers the solution will ultimately have to come
from pre-service programs but what we end up getting is going to
largely be dictated on what&amp;#39;s required by individual states. If states
merely require passing an exam like the Praxis CS exam which, from
what I can gather isn&amp;#39;t a horrible content exam then we&amp;#39;re going to
see CS teachers bumble through their early to mid careers while trying
to figure out how to teach CS much like I did way back when. If they
end up endorsing pre-service programs that are focused on specific
curricula - APCS-A for teachers, APCS-P for teachers, &lt;a href=&#34;https://cestlaz.github.io/posts/math-for-math-teachers/&#34;&gt;Math for Math
teachers&lt;/a&gt; if you will but for CS, we&amp;#39;re also not going to get strong
well prepared pedagogues. On the other hand if you can design a
program that has a strong pedagogical component to go along with the
content, you have a chance. Even with a well designed program
implementation will still be a challenge. Who will teach it? Education
professors who don&amp;#39;t have CS backgrounds? CS professors with little
pedagogical training? Neither of those groups necessarily have any
real experience as actual K12 teachers. If you can find honest to
goodness experienced, strong K12 CS teachers to teach your pedagogy
courses that&amp;#39;s a big win but that&amp;#39;s going to be hard in most cases.
&lt;/p&gt;
&lt;p&gt;
I think we designed a great program at Hunter and have a practical and
strong implementation plan. If you&amp;#39;re going to be
at CSTA2018 you can hear all about it and why we designed it as we did
in the talk I&amp;#39;m giving.
&lt;/p&gt;
&lt;p&gt;
For the more experienced I don&amp;#39;t have a universal answer but I can say
what I&amp;#39;m planning. Teachers in NY have to complete 100 CTLE hours
every five years. For beginners, there are plenty of options, at least
content wise. For teachers who know CS, not so much. I was at a meetup
talking to a few friends a couple of weeks ago and one mentioned that
they get most of their hours in Math for America CS
workshops. Unfortunately more than a few of my CS teacher friends who
are in MFA tell me that the CS content in these workshops, while they
do satisfy the hours, are somewhat lacking on the CS / CS pedagogy
side.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I&amp;#39;m planning - we (Hunter) will host a once a month
dinner/session for CS teachers who are a little farther along CS
wise. I haven&amp;#39;t worked out all the details yet but I&amp;#39;ve got a few tech
companies that are already interested in sponsoring and helping out
should we need anything and we&amp;#39;ll probably set most of our agenda for
the year at the first session where I&amp;#39;ll make my best guess at a
useful agenda. This is something I&amp;#39;m pretty excited about. It should
help create a network of more experienced CS teachers which will both
help bolster that segment of the community and provide a long term
resource to newcomers and it should be a lot of fun.
&lt;/p&gt;
&lt;p&gt;
In some ways, this is why I ended up joining Hunter. Regardless of
what the city and state do, we&amp;#39;re going to prepare the teachers and if
you have a well prepared teacher, you&amp;#39;ve got a shot.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 49 mu4e-conversation</title>
      <link>https://cestlaz.github.io/posts/using-emacs-49-mu4e-conversation/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-49-mu4e-conversation/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been using Emacs for email for a couple of years now. Not for
everything, for now my personal email is still Gmail but work is sent
and read through Emacs. I&amp;#39;m currently using &lt;a href=&#34;https://www.djcbsoftware.nl/code/mu/mu4e.html&#34;&gt;mu4e&lt;/a&gt; and while it has a
few quirks and limitations, I like it very much. You can take a look
on how I configure and use it &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-39-mu4e/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The other day I saw &lt;a href=&#34;https://www.reddit.com/r/emacs/comments/8qryri/mu4econversation_single_buffer_fullthread_display/&#34;&gt;this&lt;/a&gt; thread on Emacs about a new package -
&lt;a href=&#34;https://gitlab.com/ambrevar/mu4e-conversation&#34;&gt;mu4e-conversation&lt;/a&gt;. It&amp;#39;s a package that deals with email threads.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s pretty cool. You can invoke it whenever you&amp;#39;re in the headers
view you can just run &lt;code&gt;M-x mu4e-conversation&lt;/code&gt; and it combines all the
email messages in the current thread into a single buffer.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s pretty nice.
&lt;/p&gt;
&lt;p&gt;
You can navigate between messages in the thread with &lt;code&gt;C-c C-n&lt;/code&gt; and
&lt;code&gt;C-c C-p&lt;/code&gt; and use most if not all of the usual mu4e goodness but on
top of that you can also toggle what the author calls tree mode by
hitting &lt;code&gt;V&lt;/code&gt;. Tree mode turns the thread into an org-mode tree - also
extremely cool.
&lt;/p&gt;
&lt;p&gt;
On top of this, you can also make mu4e your default viewing mode by
setting a single variable with &lt;code&gt;(setq mu4e-view-func &amp;#39;mu4e-conversation)&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Although it&amp;#39;s very cool, I&amp;#39;m not sure if mu4e-conversation will find
its way into my workflow or not and probably won&amp;#39;t know for a
while. This is mostly due to the fact that it&amp;#39;s summer so work email
slows down and I won&amp;#39;t have too many long threads to play with this
on.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll report back once I give it a fair shake but in the meantime if
anyone out there has had the time to play with it, let us know what
you think.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/V5efS8uXANI&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>How I Grokked OOP</title>
      <link>https://cestlaz.github.io/posts/how-i-grokked-oop/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/how-i-grokked-oop/</guid>
      <description>&lt;p&gt;
Time to get back to CS and CS Ed related blogging.
&lt;/p&gt;
&lt;p&gt;
Last week, in Garth Flint&amp;#39;s post about his &lt;a href=&#34;https://gflint.wordpress.com/2018/06/01/747/&#34;&gt;summer plans&lt;/a&gt;, Garth
mentioned wanting to get his head around Object Oriented Programming
and possibly taking a course to help him get there. I thought I&amp;#39;d talk
a little about how I got my head around OOP here and some of the
difficulties I faced then and what people might face now.
&lt;/p&gt;
&lt;p&gt;
Nowadays, kids are faced with OOP pretty early on. If they take APCS-A
they&amp;#39;re using Java which is Object Oriented. Same if they start
at a college using Java. If they start with C++ or Python they may or
may not see objects early on. In any event, the nature of that first
course doesn&amp;#39;t really lend itself to really grokking OOP. Even if a
student takes a class prior to APCS-A or it&amp;#39;s college equivalent,
they&amp;#39;re pretty y raw. Small programs with just a few constructs don&amp;#39;t
really show the uses of OOP. Both inheritance and interfaces can feel
forced in a first year course and when the examples are artificial and
wonky and their are easier ways to accomplish the same task, it&amp;#39;s hard
for a student to really buy into the paradigm.
&lt;/p&gt;
&lt;p&gt;
Now, in all fairness, I&amp;#39;m not a big fan of Object Oriented Programming
and it&amp;#39;s usually not the first tool I go to. That said, it&amp;#39;s a useful
tool and it has it&amp;#39;s place.
&lt;/p&gt;
&lt;p&gt;
I cut my teeth in the 1980s. I went to the Courant Institute at
NYU. The core language back then was Pascal which had a number of
limitations including only supporting single file programs. Somewhere
along the line I taught myself C which most professors were happy to
accept assignments in. I never heard of OOP in my formal
schooling. Some time near or soon after I graduated I had heard of
this C++ thing but hadn&amp;#39;t used it.
&lt;/p&gt;
&lt;p&gt;
After working my way through school I spent some time as a developer
at Goldman Sachs. I was the only guy on my team doing Windows 2.1
development. Windows 2.1 was built on top of DOS. It&amp;#39;s big improvement
over Windows 1.0 was that it supported overlapping windows. Pretty cool.
&lt;/p&gt;
&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/en/8/8f/Windows_2.1.png&#34; alt=&#34;https://upload.wikimedia.org/wikipedia/en/8/8f/Windows_2.1.png&#34; title=&#34;https://upload.wikimedia.org/wikipedia/en/8/8f/Windows_2.1.png&#34; width=&#34;300px&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
I learned to program Windows like everyone else:
&lt;/p&gt;
&lt;img src=&#34;http://www.charlespetzold.com/oop/pw1.png&#34; alt=&#34;http://www.charlespetzold.com/oop/pw1.png&#34; title=&#34;http://www.charlespetzold.com/oop/pw1.png&#34; width=&#34;200px&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
It was all done in C. The big project I was on was for Global
Equities. Specifically, supporting trading of Japanese Warrants. I had
to write a trading system and in doing that implement among other
things a mini spreadsheet in C from bare metal.
&lt;/p&gt;
&lt;p&gt;
This was probably going to be the most complex thing I designed and
built from scratch to date. I had a bunch of cells that were
associated with either rows or columns or both and all sorts of
complex interactions. I needed a way to manage complexity and even
though I didn&amp;#39;t use the term at the time, manage state.
&lt;/p&gt;
&lt;p&gt;
C doesn&amp;#39;t have a lot of fancy in language constructs to help and I was
somewhat on an island - I taught myself C and there weren&amp;#39;t any
experienced C / Windows programmers in my group or on my floor so I
had to figure things out on my own.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I came up with, or rather something like what I came up
with – it was close to 30 years ago and I don&amp;#39;t even remember 100% of
what it was supposed to do.
&lt;/p&gt;
&lt;p&gt;
I decided to create a single file for each concept -
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
cell.c / cell.h for cells
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
row.c / row.h for rows
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
sheet.c / sheet.h for
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
In each, I would do something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-c&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-c&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The idea is that everything about a sheet is in &lt;code&gt;sheet.c&lt;/code&gt; and only a
few functions are made available to the rest of the program via the
header file.
&lt;/p&gt;
&lt;p&gt;
Shortly after I designed the program, I started to delve into OOP at
the encouragement of some colleagues. I read Meyer:
&lt;/p&gt;
&lt;img src=&#34;https://images.gr-assets.com/books/1392538685l/3328934.jpg&#34; alt=&#34;https://images.gr-assets.com/books/1392538685l/3328934.jpg&#34; title=&#34;https://images.gr-assets.com/books/1392538685l/3328934.jpg&#34; width=&#34;200px&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
and the first edition of Booch:
&lt;/p&gt;
&lt;img src=&#34;https://www.pearsonhighered.com/assets/bigcovers/0/8/0/5/0805353402.jpg&#34; alt=&#34;https://www.pearsonhighered.com/assets/bigcovers/0/8/0/5/0805353402.jpg&#34; title=&#34;https://www.pearsonhighered.com/assets/bigcovers/0/8/0/5/0805353402.jpg&#34; width=&#34;200px&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
I realized that in a way I was implementing singleton objects in
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
The file declared the object. The functions I exposed via the
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
header files were public, the other functions private and the &amp;#34;global&amp;#34;
variables that were local to the file, private class variables.
&lt;/p&gt;
&lt;p&gt;
There was no inheritance but it did help me encapsulate functionality
and state.
&lt;/p&gt;
&lt;p&gt;
It turns out I saw something like this when I briefly looked at Ada. I
think it was called Object Typed Programming - objects with only a
single instance and no inheritance.
&lt;/p&gt;
&lt;p&gt;
The books gave me the official names for things but the project I was
developing gave me the context to where it all made sense. I had a
problem to solve that didn&amp;#39;t lend itself to a low level imperative
language but you work with the tools you have and this is what I came
up with.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, it&amp;#39;s harder for beginners as projects are smaller and
while there are good small example of OOP there&amp;#39;s also so much going
on in a course like APCS-A. It gets more convoluted when you&amp;#39;re using
Python or C++ as you might be shown Objects in a C++ class while
professor is really teaching C with Objects rather than doing things
the C++ way.
&lt;/p&gt;
&lt;p&gt;
One thing that helps is using a language or tool where objects make
sense. NetLogo - used in Stuy&amp;#39;s intro course is a nice one. Turtles
and patches - the inhabitants of the NetLogo can be viewed as
objects. I&amp;#39;d draw heavily on NetLogo analogies when teaching APCS at
Stuy. There are also tools like BlueJ which is tied closely to objects
and is probably terrific at giving structure to help objects make
sense but I don&amp;#39;t like those types of tools for other reasons.
&lt;/p&gt;
&lt;p&gt;
At the end of the day, it is just a tool and to be honest, I&amp;#39;m not
really a big fan of OOP. I&amp;#39;ll use it but it&amp;#39;s not my go to paradigm.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll leave you with this video which talks about why:
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/QM1iUe6IofM&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Giving control of NYC&#39;s specialized schools to a political appointee</title>
      <link>https://cestlaz.github.io/posts/shsat-part2/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/shsat-part2/</guid>
      <description>&lt;p&gt;
Yesterday I shared my thoughts on Bill de Blasio&amp;#39;s plans to &amp;#34;fix&amp;#34; the
selection criteria for New York City&amp;#39;s specialized high schools. If
you haven&amp;#39;t read the post, you can find it &lt;a href=&#34;http://cestlaz.github.io/posts/shsat/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I was going to get back to CS and CS Ed related blogging today but
there&amp;#39;s more to the story.
&lt;/p&gt;
&lt;p&gt;
In spite of what BdB stated, it&amp;#39;s not enough for him to switch to another
measure - the middle school state exam along with some modifiers. This
is about ending the exam altogether and not replacing it with anything
better. Here&amp;#39;s a link to information on the proposed legislation for
&lt;a href=&#34;https://legiscan.com/NY/bill/A10427/2017&#34;&gt;New York Assembly Bill 10427&lt;/a&gt; including links to the actual text.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot of beurobabble but the end game is to basically allow
the chancellor (not sure if this means city or state) to do whatever
they want.
&lt;/p&gt;
&lt;p&gt;
Here are some of the key points:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Seats would ultimately go to the top 5 to 7 percent of each middle school&amp;#39;s
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
class.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
These students would have to also be classified in the top 25% city wide.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Top is defined by a composite score of multiple measures as
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
determined by the chancellor which means anything goes.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Remaining seats will be filled by
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
lottery of all students with a 3.7 GPA or greater.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s not clear how the students would be allocated to each of the
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
specialized schools.
&lt;/p&gt;
&lt;p&gt;
So, what does this all mean?
&lt;/p&gt;
&lt;p&gt;
Multiple measures could mean the state test + average. It could mean
average + recommendation. It could be shoe size + favorite color. The
chancellor also decides how to weight these multiple measures.
&lt;/p&gt;
&lt;p&gt;
This means that the politicians can do whatever they want to paint any
picture they want regardless of how their ideological and political
games hurt kids.
&lt;/p&gt;
&lt;p&gt;
Any teacher, in fact, any rational adult  will tell you that middle
schools are not interchangeable. The top students at one middle school
are typically not at the same level as top students at another
one. I&amp;#39;m sure you can cluster middle schools in terms of the students
they graduate, what the students know and can do and the clusters will
likely fall on economic lines. This is the problem that BdB should be
addressing not how to rig the specialized school admissions stats.
&lt;/p&gt;
&lt;p&gt;
Even if this is done right, you&amp;#39;re assuming an even distribution of
top gifted students across all the middle schools. If one school has
higher concentration of gifted students, they&amp;#39;re out of luck. The end
result is that if you attend an SP or other gifted program for eighth
grade you&amp;#39;ll likely be locked out of the specialized schools. What if
a particular middle school is attractive to all of our top math team
talent? Only a couple will get in to the specialized schools under the
new system since each school is allocated a fixed number of slots.
&lt;/p&gt;
&lt;p&gt;
I guess this does make sense if you don&amp;#39;t believe in gifted students
or gifted education but then why not just get rid of the specialized
schools to begin with rather than playing these games. This &amp;#34;solution&amp;#34;
will result in parents having to decide - do I send my kids to the
gifted middle school program and hurt their chances to get into a
specialized high school or do I try to find the lowest performing
school I can find and have my kid stand out. This is pretty messed up.
&lt;/p&gt;
&lt;p&gt;
At the end of the day, though, you have to remember that any change to
the process can help one group and hurt another. Stuy, for example has
46% of it&amp;#39;s students on free or reduced lunch and is about 70%
Asian. If in the new system you&amp;#39;re increasing the percent population
of an under represented group, you&amp;#39;re likely reducing the percentage
of Asian students. So, you&amp;#39;re creating opportunities for a number of as of yet
undetermined students (who might not be properly prepared for the
experience) at the expense of economically disadvantaged Asian
students who have proven to be prepared for the experience. Wouldn&amp;#39;t
a better solution be to fix the opportunities presented at the middle
schools rather than rig the system of high school acceptance.
&lt;/p&gt;
&lt;p&gt;
Going further, a response on another blog noted that BdB probably
refused to do anything with the admissions criteria of the non big
three because they all had numbers that he would consider more
diverse. The commenter provided the Black / Latino percentages, I added the
free and reduced lunch numbers:
&lt;/p&gt;
&lt;table border-spacing=&#34;10px&#34; frame=&#34;border&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;School&lt;/th&gt;
&lt;th&gt;Percent Black / Latino&lt;/th&gt;
&lt;th&gt;Free / Reduced Lunch&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brooklyn Latin&lt;/td&gt;
&lt;td&gt;28%&lt;/td&gt;
&lt;td&gt;61%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HSMSE&lt;/td&gt;
&lt;td&gt;26%&lt;/td&gt;
&lt;td&gt;46%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HSAS&lt;/td&gt;
&lt;td&gt;17%&lt;/td&gt;
&lt;td&gt;25%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Queens Sci&lt;/td&gt;
&lt;td&gt;12%&lt;/td&gt;
&lt;td&gt;64%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
All the more reason to run some tests or analysis there. Of course, if
you look further you&amp;#39;ll note that HSAS only has 25% of its students on
free or reduced lunch so is it really doing better than Stuy or Sci
with ~45% low income students  each  or Brooklyn Tech which supports
62% or are we to say that there&amp;#39;s low income and then there&amp;#39;s the
right low income?
&lt;/p&gt;
&lt;p&gt;
Certainly the education system needs work but the proposed legislation
is not a solution. It&amp;#39;s taking a flawed but objective measure and
replacing it with essentially chancellor&amp;#39;s discretion.
&lt;/p&gt;
&lt;p&gt;
If the legislation passes, by the year 2022 we will have admissions to
what used to be some of the nations finest high schools determined by
a political appointee rather than an objective test.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a shame. It was very important to my wife and me to have our kids
go to public schools and I was very happy to have been able to
navigate the system with them from first grade through high school
graduation with only a few bumps along the way. With this nonsense
from the political left and the privatization push from the political
right (or actually both sides) pretty soon there will be nothing left.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Changing Admissions to the NYC Specialized High Schools</title>
      <link>https://cestlaz.github.io/posts/shsat/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/shsat/</guid>
      <description>
&lt;p&gt;
Yesterday, Bill de Blasio, the current Mayor of New York City outlined
how he would &amp;#34;fix&amp;#34; our specialized schools. The schools he was
referring to were the &amp;#34;big three&amp;#34; of Stuyvesant, Bronx Science, and
Brooklyn Tech and then five additional schools - The High School  for
Math Science and Engineering at CCNY, The High School for American
Studies at Lehman, Brooklyn Latin, The Queens Arts and Science High
School at
York College, and Staten Island Tech.
&lt;/p&gt;
&lt;p&gt;
All use a single SAT style test, the SHSAT, for admission. The Big Three are
locked into that system unless there are changes made by the state
legislature. The Mayor can make changes to the admissions criteria of
the other five on his own.
&lt;/p&gt;
&lt;p&gt;
The problem, as stated by Chalkbeat writers Alex Zimmerman and  Monica
Disare is that:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
The city’s specialized high schools — considered some of the crown
jewels of New York City’s education system — accept students based on
a single test score. Over the last decade, they have come under fire
for offering admissions to few students of color: While two-thirds of
city students are black or Hispanic, only about 10 percent of
admissions offers to those schools go to black or Hispanic students.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I normally don&amp;#39;t write about things like this but given my history at
and with Stuyvesant I thought I should.
&lt;/p&gt;
&lt;p&gt;
Before getting started, my biases - I believe in public schools, not
charters, I also believe that a system should have gifted programs and
magnet schools and also a mix of large comprehensive schools and
smaller niche ones. Additionally, while I do believe in gifted
programs I&amp;#39;m not sure at what point it makes sense to start offering
them. When we were looking at elementary schools for our own kids we
opted for a neighborhood public school rather than applying to the
district gifted program as we felt it offered a better overall
education. On the other hand, had our kids not made Stuyvesant, I&amp;#39;m
not sure what we would have done. Part of that was due to the fact
that the Bloomberg administration destroyed just about all the large
comprehensive schools so, other than that large test schools and
LaGuardia, good luck finding a school that was strong in the
humanities, sciences and offered a robust music program.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
The overall picture
&lt;/h2&gt;
&lt;p&gt;
For reference, here are &lt;a href=&#34;http://www.theschoolboards.com/showthread.php/4324-Specialized-High-School-SHSAT-Cutoff-Scores-for-2018&#34;&gt;unofficial cutoff scores&lt;/a&gt; for the specialized
schools from 2018 along with the NY State data on free and reduced
lunch for 2017. Note that there&amp;#39;s overlap between the schools. I
separated out SI Tech since geography probably affects it&amp;#39;s numbers
more than the other schools and I separated the big three from the
remaining four because I think the three are all substantially larger. The
free and reduced lunch percent is important because I believe an
entire school qualifies for Title I funding if the number&amp;#39;s
over 40 so while these schools are not populated entirely by low
income students, all but HSAS has a substantial number and there&amp;#39;s a
chance, some say a good one that at best BdB&amp;#39;s plans will merely
shuffle which low income kids get in rather than actually solving the
root problem.
&lt;/p&gt;
&lt;table border-spacing=&#34;10px&#34; frame=&#34;border&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;School&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Lowest Score admitted&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;High Score&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Pct free or reduced lunch&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Stuyvesant&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;559&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;698&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;46&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bronx Science&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;518&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;637&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Brooklyn Tech&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;493&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;668&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HSMSE&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;516&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;616&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;46&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HSAS&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;516&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;633&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Brooklyn Latin&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;482&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;555&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;61&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Queens Sci&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;538&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;542&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SI Tech&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;519&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;660&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;40&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The plan
&lt;/h2&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Part 1 - test prep
&lt;/h3&gt;
&lt;p&gt;
There&amp;#39;s idea here is that test prep is rampant for SHSAT and that the
test can be gamed. This may or may not be true but if it is then it&amp;#39;s
safe to assume that a lot of low income kids are doing test
prep either by prioritizing test prep programs in family budgets,
working off of an SHSAT test prep book or by attending a middle school
that has some form of prep.
&lt;/p&gt;
&lt;p&gt;
There has long been a program on the books called &amp;#34;The Discovery
Program&amp;#34; which has a free city run test prep component and also a
summer component. The summer component is for low income students who
score within &amp;#34;a few points&amp;#34; of the school in question&amp;#39;s cutoff
score. At the end of the summer, I believe the students retest and in
general make the school in question.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;This program is a good thing and should be reinstated&lt;/strong&gt; but I don&amp;#39;t
know if it will result in the changes that BdB is looking for. More
likely Stuy will get its discovery kids from Science and Science from
Tech. As there are already many low income students at all of the
schools there&amp;#39;s no indication that this would increase the number of
under represented groups which is BdB&amp;#39;s goal.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also worth noting that there&amp;#39;s a sizable chunk of Brooklyn Tech
students that don&amp;#39;t perform particularly well on regents exams.
Everyone knows I&amp;#39;m not a fan of standardized tests and I don&amp;#39;t
believe that students that score a &amp;#34;few points&amp;#34; lower on the SHSAT are
any less qualified to be in a specialized school but at the lowest
performing end of these schools, one has to ask how specialized is it
really?
&lt;/p&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Part 2 - use state test scores instead of the SHSAT
&lt;/h3&gt;
&lt;p&gt;
This &lt;strong&gt;could be&lt;/strong&gt; a &lt;strong&gt;very&lt;/strong&gt; good thing with one major caveat.
&lt;/p&gt;
&lt;p&gt;
Twenty one middle schools produce over half the students that
ultimately are accepted to the specialized schools. For the rest,
there are a few reasons
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Many students don&amp;#39;t take the SHSAT.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
There have been stories of schools steering kids away from the
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
specialized schools.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
There&amp;#39;s no culture in those schools of striving for specialized
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
school acceptance or attendance.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The academic programs at those schools don&amp;#39;t prepare students for
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
the SHSAT exam for reasons that we&amp;#39;re not going to delve into here.
&lt;/p&gt;
&lt;p&gt;
All students already take the NY State middle school Math and English
exams. Yes, it would further raise the stakes for those exams but it
would ensure that the specialized schools are on the map for everyone,
&lt;/p&gt;
&lt;p&gt;
The big question here is &amp;#34;do the current state exams cover enough
material in enough depth to select and differentiate for gifted
programs.&amp;#34; I don&amp;#39;t know the answer to this question. If they don&amp;#39;t
then using state test scores will be a disaster. If they do, then they
could be a suitable alternative.
&lt;/p&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Part 3 - admissions from every middle school
&lt;/h3&gt;
&lt;p&gt;
This is the third part of BdB&amp;#39;s proposal - guarantee admissions to the
top 10% of students at every middle school.
&lt;/p&gt;
&lt;p&gt;
This could be a real disaster either for the students or for the
schools. There&amp;#39;s no question that students coming out of different
middle schools are at different levels of preparedness for the
specialized schools. Arguably the most obvious difference is that some
middle schools offer algebra and others don&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
For better or worse, the specialized school&amp;#39;s curricula, classes, and
overall programs have evolved hand in hand with the exam. If you all
of a sudden end up placing a large number of students with a
different and arguable weaker academic profile into these schools one
of two things will happen. Either the students will struggle immensely
or the school will have to lower its standards. There&amp;#39;s no two ways
about it.
&lt;/p&gt;
&lt;p&gt;
If you set standards for academic preparedness for the specialized
schools either by making a hard cutoff on an exam score be it state or
SHSAT and then spread those acceptances across all the schools maybe
it could work. If not, you&amp;#39;re setting up students with high grades at
schools with weak programs up for failure.
&lt;/p&gt;
&lt;p&gt;
Another problem is what to do with non-public school students -
private schools, charters which take public money but act as private
schools, parochial, and home school students. Where do they fall in to
this equation?
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Is one measure bad?
&lt;/h2&gt;
&lt;p&gt;
So there you have my thoughts on BdB&amp;#39;s specific proposals but I also
want to address his contention that a single measure is bad and makes
the comparison to colleges where they by and large use multiple
measures. This is a ridiculous comparison. Yes, colleges look at
multiple measures but after watching decades of Stuy students go off
to college, it&amp;#39;s clear to me that the process is by no means fair or
consistent. Elite schools can easily game their acceptances and
they still can have 100% of their applicants with off the charts SAT
scores.
&lt;/p&gt;
&lt;p&gt;
A single test might not be ideal but it can only be gamed by test prep
and test prep can be as cheap as buying a test prep book.
&lt;/p&gt;
&lt;p&gt;
As to other measures that come up from time to time - interviews,
portfolios, essays - who does that help? The low income kid or the
well to do one?
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re going to add another measure for admission it has to be
something that can&amp;#39;t be gamed or politically influenced,
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Alternatives
&lt;/h2&gt;
&lt;p&gt;
Should the city address the fact that there are groups that are under
represented at the specialized schools? Certainly, or rather, the city
should address deficiencies in opportunities that are like the causes
of this under representation.
&lt;/p&gt;
&lt;p&gt;
Should the city be doing things differently? Also yes. Here are some
thoughts on what the city can and should be doing.
&lt;/p&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
Do the experiments in the non-big three.
&lt;/h3&gt;
&lt;p&gt;
There are five specialized schools that aren&amp;#39;t covered by state
legislation. Why not run your experiments there. You&amp;#39;ve got  the big
three as a control group and what&amp;#39;s more if you look at the
&amp;#34;acceptance score windows&amp;#34; in the table above, you&amp;#39;ll see that there&amp;#39;s
enough overlap that you can probably get some real data out of these
experiments.
&lt;/p&gt;
&lt;p&gt;
Why not change the admissions criteria for one or two of them and see
how it goes before jumping in whole hog. Figure out if anything works first.
&lt;/p&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
Check existing data
&lt;/h3&gt;
&lt;p&gt;
We&amp;#39;ve got SHSAT results and State Test score results along with
student grades for years. Why not study correlations between
them. Rather than making a specious claim about middle school grades
in NYC Public Schools vs state tests vs the SHSAT, run the
numbers. Take a look at student high school performance based on these
predictions. This shouldn&amp;#39;t be guess work and city should have the
data to do better.
&lt;/p&gt;
&lt;h3 id=&#34;headline-10&#34;&gt;
Fix the middle schools
&lt;/h3&gt;
&lt;p&gt;
This one is more pie in the sky because no politician really wants to
take this one but you&amp;#39;ve got to look at what&amp;#39;s going on in the middle
schools and why.
&lt;/p&gt;
&lt;p&gt;
I tweeted this the other day:
&lt;/p&gt;
 &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;would love to see this experiment - take the entire staff / faculty / admin of one of the 20 or so middle schools that are the primary feeders to the spec schls and swap them with another middle school and see what happens.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/1003074760786501632?ref_src=twsrc%5Etfw&#34;&gt;June 3, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
The truth is that if you did this, the high performing school would
probably continue to be high performing and the low performing one
would still struggle. There&amp;#39;s only so much a teacher can do. A school
with a disadvantaged population needs the resources to succeed - lower
class sizes for a start. Add wraparound services, extensive after
school and weekend opportunities - make the schools a part of the
community and maybe we can get somewhere.
&lt;/p&gt;
&lt;p&gt;
Another question relating to our schools in general is to look at
attrition rates to private schools - how many students in our under
represented groups are being siphoned off to private schools on
scholarship. I don&amp;#39;t have any data for this. It could be an
insignificant amount or it could go a long way in explaining the
downturn in the numbers over the decades.
&lt;/p&gt;
&lt;h2 id=&#34;headline-11&#34;&gt;
So where are we
&lt;/h2&gt;
&lt;p&gt;
There are a lot of changes I&amp;#39;d love to see in our public schools and I
do believe BdB&amp;#39;s heart is in the right place. I&amp;#39;m concerned that some
of the solutions that he and other politicians come up with will hurt
the current low income students at the specialized schools and
unintentionally advantage the well to do while not helping those that
at least BdB may honestly want to help.
&lt;/p&gt;
&lt;p&gt;
He should enact Discovery and research the State Tests but proceed
with caution. The test schools have always been and continue to be a
gateway for poor and immigrant students and any changes that are
proposed should be weighed carefully and &lt;strong&gt;tested&lt;/strong&gt; before taking steps
that could real harm when good is intended.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Tech or the Teacher</title>
      <link>https://cestlaz.github.io/posts/tech-or-teacher/</link>
      <pubDate>Thu, 31 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tech-or-teacher/</guid>
      <description>&lt;p&gt;
Every morning one of the first things I do is quickly glance at my
emails and other notifications. I really should wait until I&amp;#39;m more
awake but old habits die hard.
&lt;/p&gt;
&lt;p&gt;
As some of you know over the past couple of years I&amp;#39;ve been making a
series of &lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;videos&lt;/a&gt; and related post on using my editor of choice,
Emacs. I&amp;#39;ve done 48 videos, have over 2500 subscribers on
YouTube and people seem to find some value from the series.
&lt;/p&gt;
&lt;p&gt;
This morning one of my emails was a new comment on one of my videos:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Thanks for not describing a single key combination and how that fits
into basic usage of org mode.  I was going to subscribe but if all
your videos are going to be about showing off how fast you are at
typing emacs commands on your annoyingly noisy keyborad, then no
thanks!﻿
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My first reaction was &amp;#34;you know, you could have said something like
&amp;#39;if you slow down an actually say the keys it would be much easier to
follow and would be more valuable&amp;#39; and it would be much better received&amp;#34; but
then I started to think about instructional videos in general. I
started to make these videos for my students. I thought they might be
helpful and then found that the Emacs community by and large liked
them. They&amp;#39;re not teaching anything deep or complicated just how I use
a programmable editor. Even so, I was reminded by this comment about
the limitations of videos and ed tech in general.
&lt;/p&gt;
&lt;p&gt;
Videos provide some nice features - you can watch them at any time,
you can pause and replay, and in some cases you can watch at super
speeds. What you can&amp;#39;t do is slow the video down and most importantly
you can&amp;#39;t ask questions or interact with the instructor. You can leave
comments if the video is on a platform like YouTube but that&amp;#39;s pretty
limited.
&lt;/p&gt;
&lt;p&gt;
On the other hand, if this was a class, we would have been able to
interact and I as the instructor would have had a much better chance
to make sure this &amp;#34;student&amp;#34; was up to speed.
&lt;/p&gt;
&lt;p&gt;
Of course, this wasn&amp;#39;t a class. I don&amp;#39;t have the time to teach tools
like Emacs in class and since it is a mechanical skill, it can be
offloaded to a video. The video has the ancillary benefit of living on
and being discoverable and viewable by the public at large. This is a
good thing. Videos are tech and tech scales. Unfortunately, good
education doesn&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
Videos are tech and tech is the rage. Lots of people are working hard
to get more tech in front of our kids - usually at the expense of
having a great teacher. This is something we don&amp;#39;t need. Technology is
nice but I&amp;#39;d rather have my kids in a small class with a knowledgable
teacher and a piece of chalk than all the tech in the world.
&lt;/p&gt;
&lt;p&gt;
As a computer science guy and a computer science teacher I think it&amp;#39;s
good to remind myself that tech is cool but a good teacher is way cooler.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching recursion early? Make sure to use a good tool.</title>
      <link>https://cestlaz.github.io/posts/recursion-early/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/recursion-early/</guid>
      <description>&lt;p&gt;
I replied this tweet yesterday and thought I&amp;#39;d expound a bit.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;We started kids using scheme on 10th grade at stuy so did recursion early. Not everyone got all of it but it think it made things much easier for those that you more CS later.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/1001508028439519233?ref_src=twsrc%5Etfw&#34;&gt;May 29, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
We introduced recursion very early in our intro course at Stuy and I
think it worked well. In that course we started by using Racket (nee
Scheme) as the first programming unit. Originally we
started the kids out first using NetLogo or StarLogo and followed with
Scheme but after a few years we switched the order.
&lt;/p&gt;
&lt;p&gt;
I wouldn&amp;#39;t always recommend Scheme for a first course and in fact
frequently don&amp;#39;t but given how the Stuy course was introduced and
developed it made sense and worked.
&lt;/p&gt;
&lt;p&gt;
Was it worth doing things this way? I think so. Prior to that intro
course becoming a requirement I got to see students coming in from
different pathways to APCS. Some came in raw with zero formal
experience, some self taught, some through that intro course and some
having taken another more traditional intro programming course or
experience. The kids who started on Scheme had no more difficulty
mastering loops and iteration but had an easier time getting to the
more advanced recursive techniques. This wasn&amp;#39;t a surprise - it wasn&amp;#39;t
their first rodeo. This also jived with reports I read at the time
that felt that when students did recursion first, iteration was just
as easy but when they did iteration first, recursion was harder.
&lt;/p&gt;
&lt;p&gt;
You can of course make a strong case that recursion isn&amp;#39;t necessary
for a kid that isn&amp;#39;t going to study more CS. I&amp;#39;ll merely argue that
what we did at Stuy worked with that population and I wouldn&amp;#39;t change
it. At the same time, I&amp;#39;ve helped a number of teachers design classes and programs
where we agreed that recursion first was not the way to go.
&lt;/p&gt;
&lt;p&gt;
In any event, it wasn&amp;#39;t that I specifically wanted to do recursion
early but rather, there were a number of things I wanted to do with
the class for which Scheme made sense and recursion was just one of
them.
&lt;/p&gt;
&lt;p&gt;
Some reasons to like (or for some, to dislike) Scheme early:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s functional – everything is a function. While this is
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
technically not true, we can fudge it a bit at this level. You put
things in parens so instead of add(a,b) you write (add a b) or
really (+ a b). You can also do (+ a b c). Things that would be
statements are also functions: (if Booelean TruePart FalsePart) is the &lt;strong&gt;if&lt;/strong&gt;
statement. For example &lt;code&gt;(if (&amp;gt;= a b) a b)&lt;/code&gt; returns the larger of a
and b.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Because it&amp;#39;s functional it avoids the issue kids have with &lt;code&gt;=&lt;/code&gt; being
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
for assignment rather than comparison.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
It has great support for list processing.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Recursion is much more natural.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s a super simple language with simple rules and a simple, small  syntax
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Of course, Scheme isn&amp;#39;t perfect and some people dislike the above
reasons. It&amp;#39;s also easy to come up with a number of other good reasons
not to use a language like Scheme.
&lt;/p&gt;
&lt;p&gt;
On the recursion front, it makes things much easier. There are no
loops so recursion develops as a natural form for repetition:
&lt;/p&gt;
&lt;div class=&#34;src src-scheme&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;define &lt;/span&gt;f (&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt;)
(* x  (&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt; (- x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)))))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This defines a function that takes one parameter and returns
&lt;code&gt;x*(x-1)*(x-2)...&lt;/code&gt;. It repeats, but never ends. This leads to adding
a base case:
&lt;/p&gt;
&lt;div class=&#34;src src-scheme&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;define &lt;/span&gt;f (&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt;)
(&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(&amp;lt; x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
(* x (&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt; (- x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))))))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Which is your basic factorial function.
&lt;/p&gt;
&lt;p&gt;
Since this use of recursion for repetition  develops naturally as we
introduce language concepts it&amp;#39;s easier for kids to get their heads
around it as opposed to when they&amp;#39;ve seen loops already and have an
&amp;#34;easier&amp;#34; alternative. You can make the case that you could introduce
recursion this way in a language with loops like Python but once loops
are available and particularly when loops are idiomatic, students will
find them and getting them to think recursively will be more
difficult.
&lt;/p&gt;
&lt;p&gt;
Scheme and most other functional programming languages also have
strong support for lists and list recursion. This means you don&amp;#39;t have
to limit yourself to mathy problems. Think about a todo list:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Go to the market
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Buy a gallon of milk
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
If they have eggs, get a dozen (heh heh)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Go home
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Processing a todo list is really a recursive problem:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
If the list is empty you&amp;#39;re done
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Take the first item off  the list
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Do it
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Recurse
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Once you start working with lists, you can play with all sorts of
recursive examples.
&lt;/p&gt;
&lt;p&gt;
At the end of the Scheme unit the big project is creating a sentence
generator. The kids don&amp;#39;t know it but they&amp;#39;re learning about grammars
and in fact are writing a recursive descent parser - they just think
they&amp;#39;re writing a program that creates silly sentences. It&amp;#39;s a really
nice project that uses recursion in a way that&amp;#39;s different and I&amp;#39;d
argue more fun and interesting than the usual approaches.
&lt;/p&gt;
&lt;p&gt;
I chose Scheme for a variety of reasons. I also chose NetLogo for
specific reasons. Unlike Scheme (or most other popular learning
languages), NetLogo is really all about agent based parallel
processing. There are concepts that we can explore easily and in depth
with NetLogo that would be tremendously difficult in any other
language and at the same time, there are things that are easy to
explore in other languages that Netlogo doesn&amp;#39;t lend itself to.
&lt;/p&gt;
&lt;p&gt;
So, in the end, this post really isn&amp;#39;t about when to teach
recursion. It&amp;#39;s more about how languages lend themselves to solving
different problems and teaching different concepts in different
ways. If all you have is a hammer, everything looks like a
nail. Fortunately, we can do better.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is Cs for All Worth Doing</title>
      <link>https://cestlaz.github.io/posts/is-cs4all-worth-doing/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/is-cs4all-worth-doing/</guid>
      <description>&lt;p&gt;
Last time I mentioned the pushback on CS for All. While many people
are all in for CS for All, resistance is coming from many
areas. There&amp;#39;s resistance from teachers of other subject areas, people
who think it&amp;#39;s merely job training for the tech industry (which it can be if done poorly),
people who feel it will be implemented at the expense of other
important subjects already on the chopping block like music and art,
and others.
&lt;/p&gt;
&lt;p&gt;
When I started the intro course at Stuy I tried to design something
that would be of value to all Stuy students and also inspire some to
continue on to more advanced CS classes. The class has been a
requirement for well over a decade at this point. I know that not
everyone loved the course but as they say, the proof is in the
pudding. It clearly got more people into the pool as gender numbers
for our more advanced CS courses got and remained much better since
the intro class became a requirement. I can&amp;#39;t tell you how many people
now in tech have told me that they never considered CS and only got
into it from our intro course.
&lt;/p&gt;
&lt;p&gt;
So, we had CS for All at Stuy before there was a CS for All and if
exposing more kids to CS was the only benefit it would have been worth
it but there&amp;#39;s more. In addition to getting more people and more
underrepresented people into tech, I&amp;#39;ve had scores of kids in a huge
range of fields come back to exclaim the value of having been forced
to take our intro course. These kids became authors, lawyers,
entrepreneurs, (non CS) teachers, journalists, venture capitalists,
Wall Street people, (non CS) professors and researchers, and more.
&lt;/p&gt;
&lt;p&gt;
The benefit of being in the latter stages of a career is that you can
look back at years of results and see the good and the bad.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s no doubt in my mind that the battle to get a good CS course to
every Stuy student was one worth fighting and winning.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should CS for All be implemented at the college level?</title>
      <link>https://cestlaz.github.io/posts/csforall-in-college/</link>
      <pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/csforall-in-college/</guid>
      <description>&lt;p&gt;
There&amp;#39;s been a lively discussion on pushback to CS for All at the K12
level over on Facebook. &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; started a sub thread asking if CS
for All should first be implemented at the undergrad level rather than K12.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s an interesting question and as good as anything to get me out of
my month long non-blogging rut.
&lt;/p&gt;
&lt;p&gt;
Mark was right when he said that if Colleges implement CS for All, K12 will
likely do so to follow - just look at AP. Colleges have been saying
that students should take more AP classes (while giving less credit)
and we all know where that&amp;#39;s led.
&lt;/p&gt;
&lt;p&gt;
On the other hand, can colleges really do CS for All, what does it
mean and what would it look like.
&lt;/p&gt;
&lt;p&gt;
Much like there is no single K12 - it&amp;#39;s 50 states and who knows how
many independent school districts, there won&amp;#39;t be a single CS for All
at the college level but let&amp;#39;s think about how things could play out.
&lt;/p&gt;
&lt;p&gt;
Many colleges have distribution requirements. Students must take one
course from bucket A, two from bucket B etc. Many schools that I&amp;#39;ve
looked at already  count CS courses in one of their distribution
buckets. This doesn&amp;#39;t mean every student will take CS but in theory
means they can. Colleges could in theory create a required CS bucket
or even a required CS course but I don&amp;#39;t think it&amp;#39;s as easy as
that. It might be at a private institution but while I don&amp;#39;t know all
the ins and outs of Hunter&amp;#39;s governance rules I do know that adding a
universal student requirement is a HUGE undertaking.
&lt;/p&gt;
&lt;p&gt;
So my take is that while it might be easy for a private college
to add a CS requirement I&amp;#39;m guessing other public institutions are
more similar to Hunter and it&amp;#39;s not going to be an easy task.
&lt;/p&gt;
&lt;p&gt;
Regardless, let&amp;#39;s say we have a required class on the books. Will we
have the capacity to teach it? It seems that schools are struggling to deal
with their existing CS majors and running sufficient electives and
courses for them. Just a month or so ago there was an article about a
college ending its CS minor due to lack of resources. It doesn&amp;#39;t sound
like a radically different problem then that faced in K12. Maybe it&amp;#39;s
harder given that at least in NY, there is &lt;a href=&#34;http://cestlaz.github.io/posts/room-for-csforall&#34;&gt;room for a required CS
course&lt;/a&gt; if you can find the teacher.
&lt;/p&gt;
&lt;p&gt;
Even so, assuming we have the capacity to enroll every undergrad in a
CS course what would that be? I think most people would be in
agreement that it shouldn&amp;#39;t be CS 101. Maybe existing pre-major
courses but even there I don&amp;#39;t know if that&amp;#39;s always the best
path. There could be a great pre-major course to give students the
basics and lead some into the major but what about a CS course for
students in majors that need some deeper but focussed programming
skills. The appropriate course for them isn&amp;#39;t the same as a
general/pre-major course. Using Statistics as an example, at Hunter,
many majors require a statistics course which is off loaded to the
Stats department. Each major has slightly different requirements. Over
years, the end result is a course that it seems that nobody is happy
with - a least common denominator course. CS for All at the college level
could give us a least common denominator course that doesn&amp;#39;t serve
anyone.
&lt;/p&gt;
&lt;p&gt;
Now, if you have the resources, none of these are issues. A well
heeled private institution can run tons of sections of specialized
classes no problem but this means just like on the K12 level we&amp;#39;ll
get the CS for All tale of two cities that I see coming in NY where
the rich schools have good programs and the poor get a substandard
experience.
&lt;/p&gt;
&lt;p&gt;
With all of this said, I&amp;#39;m finally getting to the big red flag with
college CS for All and it&amp;#39;s an issue that everyone conveniently
ignores. I&amp;#39;m talking about teacher quality. One of my big takeaways
from SIGCSE is that college faculty are well behind K12 teachers in
terms of pedagogy and I don&amp;#39;t see this changing anytime soon. This is
to be expected given that professor&amp;#39;s career advancement is really
based on research. Having a good teacher is always important but it&amp;#39;s
even more important for non-major students since a student in the
professor&amp;#39;s major will at least be passionate about the subject
area. To me, this is not a recipe for success.
&lt;/p&gt;
&lt;p&gt;
One can certainly make the claim that we aren&amp;#39;t any better off right
now at the K12 level because we don&amp;#39;t have teachers who know either
the subject nor how to teach it and at least at the college level they
know the subject matter. This is very true and it&amp;#39;s why pre-service CS
teacher preparation is so critical to getting this right even though
it will take time. That&amp;#39;s something that both Mark and I have been
vocal about but more on that subject next time.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is there room for CS for All</title>
      <link>https://cestlaz.github.io/posts/room-for-csforall/</link>
      <pubDate>Sun, 29 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/room-for-csforall/</guid>
      <description>&lt;p&gt;
A fear revolving around CS For All concerns where will the money
come from and how will we fit in the new classes.
&lt;/p&gt;
&lt;p&gt;
One suggested solution is to integrate CS into other subjects. I
thought I&amp;#39;d write today about why I don&amp;#39;t think the fear is valid and
while integrating CS into other classes can have value, it probably
isn&amp;#39;t a long term solution for CS education.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s start with the integration solution. The idea is to bring CS
into an existing class. &lt;a href=&#34;http://www.bootstrapworld.org/&#34;&gt;Bootstrap&lt;/a&gt;, a program I&amp;#39;ve written about before
and one of the programs I like does this, primarily in Algebra. The
idea is that this supports the student&amp;#39;s learning Algebra while
exposing them to CS. It&amp;#39;s a nice program but a math teacher using
Bootstrap shouldn&amp;#39;t be confused with a computer science
teacher. They&amp;#39;re bringing some CS to their student and engaging the
students in a different way mathematically and that&amp;#39;s all great but in
general you can&amp;#39;t take two classes worth of material and concepts and
fit them into one class and the number of teachers who are truly
knowledgable in any two academic subject areas both in content and
pedagogical content knowledge is few. I&amp;#39;m guessing that one of the
reasons that Bootstrap works in Algebra is the alignment of the
toolset and Algebra and how you can teach it. The other is that
Algebra is frequently given more time for fewer topics. In some
struggling schools, students might have two years of algebra or a
double period so there&amp;#39;s time to add in some CS.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m all for cross curricular work. You can look at applications of
science in math classes, do mathy work in a CS class, run stats and
data analysis in math and CS classes on materials from History classes
and all of this is great. You can even create great combined curricula
where you do indeed teach multiple subjects in an integrated way but
to think that you can take what is typically taught in two different
classes and you can combine both so that they&amp;#39;re taught in one class
with one teacher sounds fishy to me.
&lt;/p&gt;
&lt;p&gt;
So, at the end of the day, if you go the integration approach you&amp;#39;re
either going to have to dedicate a similar set of resources both in
time and personel to having independent courses. The alternative is
that CS will be the second class subject.
&lt;/p&gt;
&lt;p&gt;
So, let&amp;#39;s look at actually bringing in CS For All as a separate
course.
&lt;/p&gt;
&lt;p&gt;
Here are the New York State Graduation Requirements [fn::The state
lists by credits which are a year, I doubled the numbers to map to semesters]:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Subject&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Number of semesters&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;English&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Soc Studies&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Science&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Math&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LOTE&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Arts&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Phys Ed&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Health&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Electives&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;44&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
It can be difficult to fit Phys Ed in since it has to be offered every
semester so let&amp;#39;s double the Phys Ed requirement to 8 semesters. What
is actually normally done is to have 7.5 periods of science a week and
2.5 periods of Gym.
&lt;/p&gt;
&lt;p&gt;
This means that the basic student program uses 48 class slots and
includes 7 elective slots.
&lt;/p&gt;
&lt;p&gt;
In terms of exit exams, students have to pass the following Regents:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
English
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Any single math (Algebra, Geometery, Alg 2 / Trig)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Any single Social Studies (US History or Global History
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Any single Science (Living Env (bio), Chem, Phys, Earth Science)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Any additional Regents exam
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The requirement of passing a single Math regents is what leads to the
extra time allocated to Algebra that I mentioned when discussing
integrating CS into Algebra above.
&lt;/p&gt;
&lt;p&gt;
To get an Advanced Regents diploma you have to pass additional exams -
both history, all three math, three science and maybe more.
&lt;/p&gt;
&lt;p&gt;
Using a Typical 7 period plus lunch day, we have room for 56 single
semeter classes in a high school career. This means that assuming
students aren&amp;#39;t failing too many classes, even with the extra Phys Ed
allocation I mentioned above  we can easily fit computer
science into our day. In fact, we can technically fit in four full
years assuming a student doesn&amp;#39;t have to repeat any class.
&lt;/p&gt;
&lt;p&gt;
So in New York state we certainly have the time but what about the
budget? That&amp;#39;s not an issue either. The state also requires that
students recieve 5.5 hours of instruction a day exclusive of
lunch. At 47 minute periods, that translates to students being
assigned 7 instructional classes a day which means we can&amp;#39;t just give
the kids the required 44. We have to fill all 56 available class slots
over those four years.
&lt;/p&gt;
&lt;p&gt;
Of course it&amp;#39;s not really that simple. Students fail classes and have
to repeat them and some classes might be assigned more time than
others but it looks to me like we should be able to fit
computer science in without any big budgetary or scheduling
changes. The challenge will be finding the teacher and working the
internal politics and policies since as computer science comes in it
will mean removing some electives even if those electives are additional years
of science, math, or English.
&lt;/p&gt;
&lt;p&gt;
Programs like &lt;a href=&#34;https://www.tealsk12.org/&#34;&gt;TEALS&lt;/a&gt; and Bootstrap are important transitional programs
and even when we do have qualified CS teachers they will play an
important role - TEALS in providing industry support and resources and
Bootstrap by integrating curricular areas and over time as preservice
programs start to appear the rest will work itself out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unfunded Mandates and CS For All</title>
      <link>https://cestlaz.github.io/posts/unfunded-mandates/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/unfunded-mandates/</guid>
      <description>&lt;p&gt;
This morning, &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; wrote about &lt;a href=&#34;https://computinged.wordpress.com/2018/04/27/lack-of-funding-leads-to-lack-of-teachers-leads-to-lack-of-cs-classes-we-may-need-to-change-our-strategy/&#34;&gt;unfunded mandates and CS for
All&lt;/a&gt;. Unfunded mandates frequently wreak havoc on schools in a number
of ways but in the long run, I don&amp;#39;t think it should have a severe
effect on CS for All. Rather, it could have a big impact on the number
of CS courses we offer beyond that.
&lt;/p&gt;
&lt;p&gt;
Mark relay&amp;#39;s a story from the Cambridge Rindge and Latin School where
at the time many students wanted more CS classes but the school wasn&amp;#39;t
planning on hiring a new CS teacher. The money quote is:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Over 50 percent of students signing up for Level 2 [computer science] courses next year identify as African Americans,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, I&amp;#39;m not talking about the diversity issue raised by the quote, I&amp;#39;m
talking about &lt;strong&gt;Level 2 [computer science]&lt;/strong&gt;. This implies that the
students already had &lt;strong&gt;Level 1 computer science&lt;/strong&gt;. Level 1 would cover
CS For All so now we&amp;#39;re talking about CS electives vs other
electives. This is something I had to deal with for most of my career
even after we got a CS requirement at Stuy. It was always a battle to
hire enough CS teachers to meet demand. The hard part was politics -
there were always older more entrenched subject areas who would rather
force kids into their electives rather than allow them to take my CS
electives. This is a whole other kettle of fish than CS for All. It&amp;#39;s
an issue for some schools now and will become a &lt;strong&gt;BIG&lt;/strong&gt; issue in five to
fifteen years when a single CS required course is more the norm. The
issue raised here is a new CS elective vs entrenched teachers and
classes which shuld lead to a discussion of the relative value of CS
electives vs other electives. That said, the reality is that it
usually comes down to school and local power and politics. Also to be
considered is the potential ebb and flow of interest - there might be
demand for 5 more CS classes and 5 less something else this year but
there might not be next year and then we&amp;#39;re in real trouble staffing
wise.
&lt;/p&gt;
&lt;p&gt;
Schools, public high schools in particular are zero sum endeavors. You
have a fixed number of periods a day, specific class requirements, and
certain mandates as to a the minimum and maximum number of classes a
student can take. In New York City, I believe students are required to
have a &amp;#34;full&amp;#34; schedule which basically means they can&amp;#39;t come in for
English, Math, and History and then go home.
&lt;/p&gt;
&lt;p&gt;
With CS for All, you&amp;#39;re basically allocating reallocating some amount
of time to computer science. It might be hard to find a qualified
teacher. particularly in a small school where the population won&amp;#39;t
support a full time CS teacher and it might ruffle the feathers of the
teachers that will be losing the time but it shouldn&amp;#39;t make much of a
dent or really any dent on the budget.
&lt;/p&gt;
&lt;p&gt;
Mark also raises the possibility of embedding CS into other subject
classes. &lt;a href=&#34;http://www.bootstrapworld.org/&#34;&gt;Bootstrap&lt;/a&gt; is a program that I&amp;#39;m rather fond of that does
just this in Algebra classes (although more recently they&amp;#39;re working
to branch out into other subject areas). Even though I&amp;#39;m a big
Bootstrap fan I don&amp;#39;t think that&amp;#39;s the answer to CS for All or CS in
the high schools in general. I think that one of the reasons why
Bootstrap works so well is the alignment between the CS tool they use
and the way Algebra is or can be taught. Another reason is the fact
that while Algebra is the lowest level of the traditional high school
classes, it&amp;#39;s frequently the one for which the most time is
allocated. Students in low performing schools might take Algebra over
two years or have a double period. This won&amp;#39;t be the case for other
subject areas. What this means is that there&amp;#39;s more likely extra time
to embed another subject, cs, into the Algebra class. Long term,
embedding CS into another subject area requires:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
a teacher that really knows both subjects
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
enough time so you can add all the cool CS content while still
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
preparing the students for both the next level of whatever subject
you&amp;#39;re embedded in  as well as for whatever standardized
assessments come at the end of the year.
&lt;/p&gt;
&lt;p&gt;
As I said, I&amp;#39;m a Bootstrap fan but I don&amp;#39;t think that&amp;#39;s the answer for
CS in K12.
&lt;/p&gt;
&lt;p&gt;
Back to the original topic there are certainly issues with
implementing CS for All but I don&amp;#39;t think school funding is the
biggest hurdle. For me there are other big challenges. One is having a
supply of qualified teachers. In the long run as states outline CS
requirements and pre-service programs crop up this will work itself
out. Until then, yes, we will have an issue and yes it will take some
funding for stop gap and transitional teacher preperation. A second issue is
working the internal politics. Adding CS does mean removing something
else or more likely a piece of something else. The third one is what
I&amp;#39;m noticing in NY where CS for all seems to at times forget about
the CS. If we have knowledgeable teachers we can work around that one
but I still think that might be my biggest concern.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pull Requests and Other People&#39;s Code</title>
      <link>https://cestlaz.github.io/posts/pull-requests/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pull-requests/</guid>
      <description>&lt;p&gt;
One of the things I&amp;#39;ve heard for years from former students - both
those looking for jobs and those looking to hire is that colleges
don&amp;#39;t really do a good job preparing students for careers in
tech. Sure they teach the algorithms and the theory but ther are a lot
of missing pieces, particularly on the practical end. I&amp;#39;m certainly
not advocating turning CS programs into coding schools but there are
many low cost opportunities to bring practical real world best
practices in to the CS classroom. I most recently wrote about &lt;a href=&#34;http://cestlaz.github.io/posts/testing-part2%0A&#34;&gt;unit
testing&lt;/a&gt; and had earlier about using &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4&#34;&gt;GitHub as an educational
tool&lt;/a&gt;. I&amp;#39;ve been happy with the way I introduce students to Git and
how we use GitHub in my classes but I&amp;#39;ve never found a smooth way to
introduce Pull Requests. A pull request is basically a mechanism by
which one can suggest a change to a project even if you don&amp;#39;t own
it. The project owner can then decide to merge it in or not.
&lt;/p&gt;
&lt;p&gt;
Being comfortable with the pull request work flow is an important part
of contributing to open source projects. The basic process is that you
make a copy of the project you want to work on by forking it, make
your changes, then issue a pull request back to the project. For a
beginner, there are a lot of moving parts. Instead, I teach my
students branching and merging within a project. It&amp;#39;s much easier and
arguably more useful for day to day projects. I&amp;#39;d like my kid to learn the
pull request mechanics but I haden&amp;#39;t thought of a good way to do it.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also wanted to give kids more real world experiences in class and
one experience they rarely get is working in other people&amp;#39;s code
bases. In school you largely write your own projects be they group or
solo or work off a hopefully tried and true code base provided by the
instructor. In the real world you&amp;#39;re frequently working off of someone
elses code and it&amp;#39;s rarely in a polished state.
&lt;/p&gt;
&lt;p&gt;
I finally found a way to kill both birds with one stone. A couple of
weeks ago my class&amp;#39; lab was rather lengthy. It involved reading in a
source file and reformating it in a sensible way. I knew most of the
students wouldn&amp;#39;t finish it in the allotted time and even if they did,
this was an easy assignment to extend. On lab day I had students
create a new repo for this lab (normally they just add a folder in a
their &amp;#34;labs&amp;#34; repo) and get as much done as they could. The rule was
simple - push what you&amp;#39;ve got up to GitHub at the end of class and
then you can&amp;#39;t push anything else. I also made it clear that I didn&amp;#39;t
expect a completed lab..
&lt;/p&gt;
&lt;p&gt;
We continued the lab in the next class session. This time. I randomly
assigned repos to students so that they would fork someone elses
lab. They then had to complete the lab on the other students code base
and then issue a pull request back to the original
&lt;/p&gt;
&lt;p&gt;
This was the first time I&amp;#39;ve tried this so it was a little
klunky. I&amp;#39;ll do a much better job specifying the assignment and
instructions next time around but even so I think the class went
well. By the end of the class the students had sucesfully forked a
project, issued a pull request, and merged one in to their own
project. The only think I wasn&amp;#39;t happy with was that many of the
merges happened automatically. I have to figure out how to set things
up so that there are merge conflicts since I want my students to
experience that.
&lt;/p&gt;
&lt;p&gt;
Overall,  I was very happy with the way things worked out. The
students were able to experience important real workd software
engineering techniques without removing any of the academic CS in the
class.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do the students finish the tests or does the test finish the students</title>
      <link>https://cestlaz.github.io/posts/tests-finish-students/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tests-finish-students/</guid>
      <description>
&lt;p&gt;
I tweeted this the other day:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Why don&amp;#39;t so many  teachers and professors understand that the test or assignment you can do in 15 minutes will take your beginning students at least an hour and probably a lot more to complete.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/986609723557404673?ref_src=twsrc%5Etfw&#34;&gt;April 18, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
What led to the tweet was a discussion I was having with some students
about not having enough time on tests which led to a discussion of
having to drop everything to spend every waking hour on a project.
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
Let&amp;#39;s talk about tests.
&lt;/h3&gt;
&lt;p&gt;
I&amp;#39;m not saying that tests are the best forms of assessment - most of
the time I&amp;#39;d much rather have students work on projects. There are,
however, times when tests make sense or are otherwise appropriate.
&lt;/p&gt;
&lt;p&gt;
In any event, writing a test is hard. Rather, writing good test is
hard. It&amp;#39;s certianly easy enough to put a bunch of multiple choice or
short answer questions on paper and it&amp;#39;s easy enough to give a hard
equation to solve or some code to write but creating a good test is a
task and half. You first have to figure out what you&amp;#39;re trying to
assess - memory, thought process, synthesizing concepts? Then you want
to construct questions that give you insights into your students
knowledge and thought process.
&lt;/p&gt;
&lt;p&gt;
Some things that I consider when putting together a test:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Does it ramp up in difficulty - that is, are there some &amp;#34;gimme
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
questions&amp;#34; and some challenges.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Are questions all or nothing - if a kid doesn&amp;#39;t see things my way
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
are they dead in the water.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Will the test repeatedly penalize or reward the same concept over
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and over again on the test.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Do I cover all the concepts I want to assess.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Do you make kids waste time with boilerplate code.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Do the questions take so long to read and digest that there&amp;#39;s little
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
time to form and write down answers.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Do the answers convey anything about the students thought process or
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
just correctness.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Is it easy or impossible to grade and grade fairly.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
What about length? To me a well crafted test should be completed by
the average student with a few minutes to spare - enough time to check
a couple of answers. This is not to say that they&amp;#39;ll ace the exam,
just finish it. Far too many teachers make tests an assessment of
speed and accuracy at speed rather than understanding. That might
actually be important in certain contexts - preparing for the APCS-A
multiple choice section as an example but in general, it&amp;#39;s not a good
way of assessing what a student really knows.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also important that the the average student can achieve a score
that you expect from an average student. That&amp;#39;s probably in the 80s on
a 0-100 scale or a B. Yes, I know, C is supposed to be average but
with grade inflation being what it is…
&lt;/p&gt;
&lt;p&gt;
You should &lt;strong&gt;NOT&lt;/strong&gt; give an assessment where the average score is
something like 17 out of 100 with the top student earning a 37. Sure,
you can curve it but it also places a lot of stress on the
students. You might do this from time to time - you might misjudge the
difficulty of a test or your class but it shouldn&amp;#39;t be a regular
occurence. Teachers sometimes forget about the psychological affect
that a unfair test can have on a student even if the teacher &amp;#34;fixes&amp;#34; it
after the fact.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Don&amp;#39;t be afraid to experiment or have some fun.
&lt;/h3&gt;
&lt;p&gt;
It&amp;#39;s also ok to try different things. One year, having just completed
a unit on Cellualar Automata I decided to give a quiz. I figured it
would take the kids 10 to 15 minutes so I gave them 30. The quiz was
something like the following:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
You have 30 minutes to compose something on a sheet of paper that when
I review it convinces me that you know something about the Cellular
Automata Unit we just completed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Some kids loved the quiz, some hated it. The ones that hated it had
been trained for years as expert standardized test takers and this
level of freedom really freaked the out.
&lt;/p&gt;
&lt;p&gt;
Another time, I gave a multi page test of serious questions mixed with
crazy shenanigans. Question one would be some CS problem followed by
some instructions like &amp;#34;stand up, do 5 jumping jacks and sit down&amp;#34; or
&amp;#34;shout out your favorite olde timey exclamation&amp;#34; or even &amp;#34;stand up, if
or when you see another student standing, switch seats with the and
continue the test.&amp;#34; The test started with explicit instructions not to
read ahead but to read and do each question in order. The last page
was the answer key and I asked the kids to self-grade. Interestingly
enough the grading was pretty honest. After that one, I received a few
apology emails from kids who read to the end first encouraging me to
give them failing grades for cheating. Wow, I wasn&amp;#39;t expecting
that. The test was something of an end of year goof. The CS questions
were really easy - I wanted to reward them with something silly and
easy - a guaranteed A after a year of hard work.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Tests to drive instruction and future practice
&lt;/h3&gt;
&lt;p&gt;
As a final point to ponder, tests shouldn&amp;#39;t only be about grades. A
well crafted test should drive instruction. Kids will get answers
wrong - will your questions be crafted so that you can gain insights
into why the got them wrong.
&lt;/p&gt;
&lt;p&gt;
In an early class you might notice things like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
kids printing rather than returning answers
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
kids not understanding scope
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
kids having difficulty with idioms like &lt;code&gt;i=i+1&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
kids needing more scaffolding to approach a problem
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
This can drive instruction moving forward.
&lt;/p&gt;
&lt;p&gt;
Over time you&amp;#39;ll also learn how to fine tune your tests and other
assessments.
&lt;/p&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Next time, we&amp;#39;ll talk about projects
&lt;/h3&gt;
&lt;p&gt;
Unless of course I get distracted by another blog topic or shiny
object.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 48 Silversearcher</title>
      <link>https://cestlaz.github.io/posts/using-emacs-48-silversearcher/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-48-silversearcher/</guid>
      <description>&lt;p&gt;
A couple of days ago I wrote about on my &lt;a href=&#34;http://cestlaz.github.io/posts/unit-tests-grading-workflow&#34;&gt;lab grading workflow&lt;/a&gt;. In the
post I mentioned that I used Emacs to easily navigate between student
folders and files so I can actually look at their work in addition to
their programs output and test results.
&lt;/p&gt;
&lt;p&gt;
The key is a combination of &lt;code&gt;dired&lt;/code&gt; and &lt;a href=&#34;https://github.com/Wilfred/ag.el&#34;&gt;ag&lt;/a&gt;, Emacs&amp;#39;s interface to &lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;the
Silver Searcher&lt;/a&gt; which is something like a recursive code grep on
steroids. I also briefly try to show &lt;a href=&#34;https://github.com/mhayashi1120/Emacs-wgrep&#34;&gt;wgrep&lt;/a&gt; in the video which allows
you to edit Emacs grep buffers, effectively allowing you to make
changes across a set of files all at once. It ended up not working
with silversearcher - if anyone out there knows why, please chime in.
&lt;/p&gt;
&lt;p&gt;
Enjoy:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-sFTkCQ774o&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>No Magic Bullets - Discovery Learning</title>
      <link>https://cestlaz.github.io/posts/no-magic-bullets-constructivism/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/no-magic-bullets-constructivism/</guid>
      <description>&lt;p&gt;
The most recent NYC CSTA chapter meeting was &amp;#34;How do I assess CS?&amp;#34; I
wanted to go but it&amp;#39;s been such a crazy month I was just too wiped
out. Fortunately, the meetup was &lt;a href=&#34;https://www.youtube.com/watch?v=XIMKAZbHAiA&amp;amp;index=83&amp;amp;list=WL&amp;amp;t=1796s&#34;&gt;recorded&lt;/a&gt;. I was able to watch the
first half this morning while working out on my &lt;a href=&#34;https://www.staczero.com/hero&#34;&gt;stationary trainer&lt;/a&gt;
which leads me to today&amp;#39;s rare Saturday morning blog
post. The meetup consisted of two panels. The first was made up of K12
teachers who taught CS. I can&amp;#39;t talk about the second panel yet since I&amp;#39;m
only halfway through but there were a couple of points made by my
friend &lt;a href=&#34;https://twitter.com/KatieJergens&#34;&gt;Katie Jergens&lt;/a&gt; who teaches at Dalton that I thought were worth
talking about.
&lt;/p&gt;
&lt;p&gt;
The first was when Katie noted that through working with the panel,
one of her takeaways was that:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Giving students an explicit strategy for solving a problem - &amp;#34;this is
how I would do it….,&amp;#34; - giving them an explicit strategy first and then giving them a
problem for which that strategy would apply is much more effective than
having them discover it on their own.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was refreshing to hear after being beaten over the head on
discovery learning and constructivism for the past five or so
years as being the magic bullet for teachers. I shared more thoughts
on this a few weeks ago when I wrote about a SIGCSE paper presented by
&lt;a href=&#34;https://cestlaz.github.io/posts/sigcse2018-bootstrap/&#34;&gt;Bootstrap World&lt;/a&gt; that I very much liked.
&lt;/p&gt;
&lt;p&gt;
Katie went on to talk about how the group found that while &amp;#34;discovery
learning&amp;#34; can be effective it can also be frustrating and lose kids
along the way. It also takes a lot of time and preparation, something
that&amp;#39;s short on supply in most public schools.
&lt;/p&gt;
&lt;p&gt;
This made me think about the recent flurry
of discussion around the debunking of learning styles which had
previously been the magic bullet. When I started, the secret sauce was cooperative
learning.
&lt;/p&gt;
&lt;p&gt;
Of course any good teacher knows there&amp;#39;s no magic bullet. You fill
your tool belt and chest with as much as you can and use what&amp;#39;s
best based on your strengths as a teacher combined with what will work
best with your students.
&lt;/p&gt;
&lt;p&gt;
Another point that Katie made that I found refreshing had to do with
something she does with her classes. A good portion of a student&amp;#39;s grade is
based on what she calls a &amp;#34;booster.&amp;#34; Each student has to work one on
one with her on some project. The student either scores a 0 or a 100 -
the student keeps working with the direct support of the teacher until
it&amp;#39;s perfect.
&lt;/p&gt;
&lt;p&gt;
The important thing that Katie said with respect to this is &amp;#34;I can
do this because my largest class is sixteen students.&amp;#34; No way could
this ever scale to a public school where a teacher can meet with over
150 students a day and barely has time eat lunch let alone
work one on one with a student in a suitably quiet place like an
office. The refreshing thing to hear was the acknowledgment of the
fact that what works in a rich private school won&amp;#39;t work in a public
school.
&lt;/p&gt;
&lt;p&gt;
All to often education and yes, CS Ed is driven by people who
really have no clue. They&amp;#39;re anointed as thought leaders but they
don&amp;#39;t walk the walk. Some have some knowledge and experience but many
don&amp;#39;t. Until you&amp;#39;ve gotten a few years under your belt in a strap
cashed public school that takes all comers, don&amp;#39;t tell them how they
should do it. Katie didn&amp;#39;t - she acknowledged the problem - too bad so
many others don&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m looking forward to watching the rest of the video during a future
workout and might have more to share then. For now, take a look for
yourself.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unit Tests Grading Workflow</title>
      <link>https://cestlaz.github.io/posts/unit-tests-grading-workflow/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/unit-tests-grading-workflow/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve talked before about unit testing (&lt;a href=&#34;http://cestlaz.github.io/posts/testing-testing&#34;&gt;here&lt;/a&gt;, and &lt;a href=&#34;http://cestlaz.github.io/posts/testing-part2&#34;&gt;here&lt;/a&gt;). My premise is
that in addition to being an important industry technique, it&amp;#39;s a
sound practice for students studying CS. I also contend that it can
make grading easier on the teacher. Maybe not as easy as an
auto-grader but those have &lt;a href=&#34;https://cestlaz.github.io/posts/2015-10-16-graders.html/#.WtplHHXwZhE&#34;&gt;their own problems&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Since I spent most of today grading I thought I&amp;#39;d share my current
workflow and how unit tests have made me more efficient.
&lt;/p&gt;
&lt;p&gt;
I have each student make a single GitHub repo for all individual
homeworks, labs and small projects. They&amp;#39;ll make additional repos for
larger and group projects. They fill out a Google form to give me the
repo link. I download the form and end up with a CSV file something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-csv&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-csv&#34; data-lang=&#34;csv&#34;&gt;Doe, John, git@github.com:johndoe/mymoework.git
Doe, Jane, git@github.com:janedoe/labs.git
etc.&lt;/code&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
My goal is to clone each students repo into a directory and then
throughout the term, they add assignments to their own repos using the
names and specifications I give them. For example, after assigning
three assignments, I could pull everything from their repos and I
would have a directory structure something like this:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
hw
├── doe_jane
│   ├── hw_01
│   ├── hw_02
│   └── hw_03
│
└── doe_john
├── hw_01
└── hw_02
&lt;/pre&gt;
&lt;p&gt;
To get there, I have to change the csv file to a small shell script:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone git@github.com:johndoe/mymoework.git doe_john
git clone git@github.com:janedoe/labs.git doe_jane
etc.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I usually do this in Emacs with a macro.
&lt;/p&gt;
&lt;p&gt;
Now I&amp;#39;m ready to go.
&lt;/p&gt;
&lt;p&gt;
Whenever there&amp;#39;s a new assignment, I just have to update all the
repos. I go into the root hw directory and loop through all the
subdirectoryes:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cs /path/to/hw_root
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
cd /path/to/hw_root/$i
git pull
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
At this point I could go into each repo but we can do better. Since I
have all of my students submit a Makefile with a default target to
build an executable named &lt;code&gt;main&lt;/code&gt; and also a target named &lt;code&gt;tests&lt;/code&gt; which
will build an executable to run the unit tests named &lt;code&gt;tests&lt;/code&gt; I do this
instead of a straight pull:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cs /path/to/hw_root
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
cd /path/to/hw_root/$i
git pull
cd hw_03 &lt;span style=&#34;color:#75715e&#34;&gt;# or whatever assignment I&amp;#39;m grading&lt;/span&gt;
make tests
make
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now, if I want, I can go into each directory, run the tests by typing
&lt;code&gt;./tests&lt;/code&gt;  and the hw or project with &lt;code&gt;./main&lt;/code&gt;. I can also add a
couple of lines to the for loop above like:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt; Test Report\n----------------\n&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /path/to/hw_root/test_report
./tests &amp;gt;&amp;gt; /path/to/hw_root/test_rport
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;----------------------\n\n&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This gives me a single file with everyone&amp;#39;s test results. Either by
doing this or by running the tests in each folder manually I can
quickly see what works and what doesn&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
While I&amp;#39;m doing this, I have Emacs up and with &lt;strong&gt;dired mode&lt;/strong&gt; and more
specifically &lt;strong&gt;ag-dired-regexp&lt;/strong&gt; which lets me easily
navigate to any student&amp;#39;s files. Combined with the test results I can
quickly evaluate the entire assignment.
&lt;/p&gt;
&lt;p&gt;
Put all of this together and it makes grading somewhat bearable. I can
work through well written, correct assignments extremely quickly and
drill down into the other projects efficiently as well.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TEALS Time</title>
      <link>https://cestlaz.github.io/posts/teals-time/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teals-time/</guid>
      <description>&lt;p&gt;
Everybody know&amp;#39;s I&amp;#39;m the Statler and Waldorf of the CS Education
world.
&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://media1.giphy.com/media/nPxVvyTWo1aIU/giphy.gif&#34; alt=&#34;https://media1.giphy.com/media/nPxVvyTWo1aIU/giphy.gif&#34; title=&#34;https://media1.giphy.com/media/nPxVvyTWo1aIU/giphy.gif&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been known to be &amp;#34;prickly,&amp;#34; which is a nice way of putting it and
I&amp;#39;m openly critical of many programs out there.
&lt;/p&gt;
&lt;p&gt;
One program, however, that I very much like is &lt;a href=&#34;https://www.tealsk12.org/&#34;&gt;TEALS&lt;/a&gt;. They&amp;#39;ve been
around since 2009 founded by &lt;a href=&#34;https://twitter.com/KevinKWang&#34;&gt;Kevin Wang&lt;/a&gt;, a former teacher. The basic
idea was to have tech professionals go to a school on the way to work
and team teach a CS class with one of the school&amp;#39;s teachers. The tech
person would provide the CS expertise and the teacher would provide
the education chops. They&amp;#39;d both learn from each other and the
students from both of them. I didn&amp;#39;t know what to make out of it when I
first heard about them and in general, I am  pretty skeptical about drop in
programs.
&lt;/p&gt;
&lt;p&gt;
After a couple of years, I started hearing from my former students. As
it turns out, a number of them had independently discovered TEALS and
become volunteers. They all talked about how rewarding the experience
was and how much the kids were getting that they wouldn&amp;#39;t have gotten
otherwise.
&lt;/p&gt;
&lt;p&gt;
I was sold.
&lt;/p&gt;
&lt;p&gt;
TEALS has expanded considerably in the decade since they started. Now
they support multiple classes at multiple levels, have different
models from the original team teaching to a model where the volunteer
is more of a general tech / programming resource and the teacher is
more self sufficient.
&lt;/p&gt;
&lt;p&gt;
Most importantly, they provide quality training and materials to both
the teachers and the tech volunteers.
&lt;/p&gt;
&lt;p&gt;
No drop in program can ever replace well prepared knowledgeable
teachers but in K12 CS very few of those teachers exist and it will
take us years to produce them.
&lt;/p&gt;
&lt;p&gt;
Until then, TEALS is one of the best programs to get CS education to
our kids and even when we do get there, their ability to connect
schools with volunteers and resources can&amp;#39;t be understated.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re a tech professional and want to do some real good, volunteer
with TEALS - here&amp;#39;s a link to more information:
&lt;a href=&#34;https://www.tealsk12.org/volunteers/&#34;&gt;&lt;a href=&#34;https://www.tealsk12.org/volunteers/&#34;&gt;https://www.tealsk12.org/volunteers/&lt;/a&gt;&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Math For Math Teachers - watering down CS Ed before we even start</title>
      <link>https://cestlaz.github.io/posts/math-for-math-teachers/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/math-for-math-teachers/</guid>
      <description>&lt;p&gt;
Last Thursday I attended an event - the release of &amp;#34;Priming the
Computer Science Teacher Pump: Integrating CS Education into Schools
of Ed.&amp;#34; &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; wrote about it &lt;a href=&#34;https://computinged.wordpress.com/2018/04/16/finding-a-home-for-cs-ed-in-schools-of-ed-priming-the-cs-teacher-pump-report-released/&#34;&gt;here&lt;/a&gt;. You can also download the
actual report &lt;a href=&#34;http://www.computingteacher.org/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I agree with a number of the challenges in creating CS teacher
preparation programs that were outlined in the report and I also agree
with the idea that a strong CS teacher preparation program should
prepare teachers to teach any (and in the case of the programs I
designed, create new) curriculum but I wanted to focus on one specific
item that was brought up last Thursday. The item deals with how much
CS content a K12 CS teacher actually needs.
&lt;/p&gt;
&lt;p&gt;
The speaker at the event - I forget which one pointed out that a K12
CS teacher doesn&amp;#39;t need the same content knowledge as a full CS major
let alone graduate student. This is something I wholeheartedly agree
with. The speakers throughout the event also emphasized that CS
teachers need enough content knowledge to be &amp;#34;generalists&amp;#34; and teach
any reasonable CS experience. Again, a point on which I agree.
&lt;/p&gt;
&lt;p&gt;
The point that concerned me - not in terms of the presenters intent
but rather in how I feel things will play out was when the presenter
said something to the affect (and I&amp;#39;m paraphrasing here):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Math teachers don&amp;#39;t need the same level of math content knowledge as
math majors. That&amp;#39;s why we have &amp;#34;math for math teachers.&amp;#34;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was immediately reminded of a conversation I had once with a
colleague. He was looking over a student&amp;#39;s college transcript and
noticed a course &amp;#34;Math for Math Teachers&amp;#34; and thought, &amp;#34;I always
thought that it was just math!!!!!&amp;#34;
&lt;/p&gt;
&lt;p&gt;
To many teachers, titles like &amp;#34;Calculus for Math Teachers&amp;#34; like
those similar courses &amp;#34;Calculus for Poets&amp;#34; or, the famous &amp;#34;Math
for Trees&amp;#34; are code for watered down math for non-math majors courses. From what I can
gather many of these courses are more Math Ed courses than Math but
offered through a school&amp;#39;s Mathematics Department rather than through
an Ed school or department. They make sure that candidates  fill the &amp;#34;enough graduate
math credits&amp;#34; bucket. Everyone goes along with a nod and a wink and
life moves on. I want to emphasize that there&amp;#39;s nothing inherently bad
with many of these courses - many are quite good but they&amp;#39;re content
heavy education courses masquerading as pure content courses.
&lt;/p&gt;
&lt;p&gt;
I managed to avoid doing any of that in my programs current design but
I did have to add a graduate algorithms class that I&amp;#39;m not entirely
happy with - I feel that it&amp;#39;s requiring a level of depth that K12 CS
teachers will never  need.
&lt;/p&gt;
&lt;p&gt;
Across all subject areas we should just acknowledge that K12 teachers
don&amp;#39;t need a huge amount of graduate subject area credits. In my view,
teachers need depth a bit beyond the most advanced core course their
students will take and a good deal of breadth. Wouldn&amp;#39;t it be nice if
we didn&amp;#39;t have to play this song and dance this dance of creating
&amp;#34;special&amp;#34; subject courses for teachers.
&lt;/p&gt;
&lt;p&gt;
The real thing to watch out for is how this is already playing out in
computer science. Colleges are starting to offer classes for K12
computer science teachers. I&amp;#39;ve seen a few course descriptions and
syllabi and spoken to a number of people involved with some of these
classes. It&amp;#39;s typical to see something like &amp;#34;Java Programming for CS
Teachers&amp;#34; as opposed to a &amp;#34;first in CS sequence programming course
using Java.&amp;#34; Look  under the hood and you&amp;#39;ll find it&amp;#39;s really &amp;#34;APCS-A
for teachers&amp;#34; - not creating a generalist teacher but rather  taking
us right back to preparing them to ape specific curricula and
sequences.
&lt;/p&gt;
&lt;p&gt;
We can do better.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Strong K12 Teacher Certification is Important</title>
      <link>https://cestlaz.github.io/posts/strong-teacher-certification/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/strong-teacher-certification/</guid>
      <description>&lt;p&gt;
About a week ago New York State&amp;#39;s new regulation creating a &lt;a href=&#34;http://www.crainsnewyork.com/article/20180327/NEWS/180329893/new-york-will-finally-have-certified-computer-science-teachers&#34;&gt;K12 CS
teacher certification&lt;/a&gt; went live. Just the other day I was honored to be
interviewed by  &lt;a href=&#34;https://twitter.com/mflamm_reporter&#34;&gt;Matt Flamm&lt;/a&gt; of Crain&amp;#39;s New York in a &lt;a href=&#34;http://www.crainsnewyork.com/article/20180410/TECHNOLOGY/180419999/asked-answered-teacher-changed-jobs-to-push-for-new-york-states-new&#34;&gt;follow up piece&lt;/a&gt;
about it.
&lt;/p&gt;
&lt;p&gt;
Having K12 CS teacher certification is big and having quality programs
that lead to certification is &lt;strong&gt;HUGE&lt;/strong&gt;. In my view, it&amp;#39;s a game changer.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s Focus on high school, my wheelhouse.
&lt;/p&gt;
&lt;p&gt;
From a course offerings point of view it&amp;#39;s the wild west. I don&amp;#39;t mean
this as a bad thing, it&amp;#39;s just that there&amp;#39;s a huge range of offerings
from AP to home brew, physical computing, game based, cyber security,
you name it, there&amp;#39;s a curriculum. The long and short of this is that
schools need teachers to teach all of these experiences. Without a
strong certification pathway we&amp;#39;re going to be stuck with the current
training based model where teachers are trained to deliver canned
curricula rather than truly teach. With strong teacher preparation
programs teachers will be prepared not only to deliver all the
existing curricula but, arguable more importantly design their own
learning experiences appropriate for the populations they work with.
&lt;/p&gt;
&lt;p&gt;
This is important and alone would make having CS certification
worthwhile but to me the BIG win is that it creates a viable career
path.
&lt;/p&gt;
&lt;p&gt;
People say we&amp;#39;ll never find enough CS teachers because the tech
industry pays so well. I&amp;#39;ve never believed that. We find math teachers
even though many could flee to finance and chem teachers in spite of
big pharma&amp;#39;s call so why can&amp;#39;t we find CS teachers? Because we&amp;#39;ve
never provided a path into the profession and a viable career track.
&lt;/p&gt;
&lt;p&gt;
Certification means that over time schools will be able to build CS
teachers and the discipline will be treated as the other
subjects. Prior to certification, a CS teacher might be cut if a
school&amp;#39;s math department downsized. With certification, the career
track for a CS teacher is the same as the track for any other teacher.
&lt;/p&gt;
&lt;p&gt;
It also means that young people starting out who are interested in
both teaching and computer science will have a way of getting into the
profession - something that has never before existed.
&lt;/p&gt;
&lt;p&gt;
Having CS certification alone won&amp;#39;t woo a
plethora of current tech professionals into teaching but over time,
we&amp;#39;ll start to have CS Ed majors or CS majors pursuing CS ED Masters
degrees and entering the profession. This won&amp;#39;t happen in a press or
election cycle but it will happen.
&lt;/p&gt;
&lt;p&gt;
This all hinges on quality prep programs. I think I&amp;#39;ve hit the sweet
spot with what I&amp;#39;ve designed at Hunter. The critical components are of
course content and pedagogy. Teacher candidates must have both
sufficient depth and breadth in the subject and all the pedagogical
content knowledge that comes along with it. I don&amp;#39;t agree with the
common approach of taking a course to teach a course - that is, having
courses like &amp;#34;APCS - Principles for teachers&amp;#34; or &amp;#34;APCS - A for
teachers.&amp;#34;  I want my teachers to be able to teach any reasonable
curriculum or design their own so we&amp;#39;ll be rolling out courses that
examine the commonly offerd curricula but prepare teachers for a whole
lot more.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been an exciting week in NY CS Ed and there&amp;#39;s a lot more to come.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 47 - Magit</title>
      <link>https://cestlaz.github.io/posts/using-emacs-47-magit/</link>
      <pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-47-magit/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been holding off on doing a &lt;a href=&#34;https://magit.vc/&#34;&gt;Magit&lt;/a&gt; video for a while. Mostly
because I wasn&amp;#39;t using it exclusively and also because there are
already a number of good Magit videos and resources out there.
&lt;/p&gt;
&lt;p&gt;
What changed? Along with the new version of Magin, Jonas Bernoulli
wrote up &lt;a href=&#34;https://emacsair.me/2017/09/01/magit-walk-through/&#34;&gt;a walkthrough of the Magit interface&lt;/a&gt;. For whatever reason,
it all finally clicked.
&lt;/p&gt;
&lt;p&gt;
In spite of what the documentation says, Magit &lt;strong&gt;is not&lt;/strong&gt; an interface
for git. Magit is a &lt;strong&gt;command and control&lt;/strong&gt; center for git. You can
launch it just to execute some git commands but you can also leave it
up and running in an Emacs window or frame as a constant project
overview.
&lt;/p&gt;
&lt;p&gt;
Wow. Mind blown!!!
&lt;/p&gt;
&lt;p&gt;
If you use Emacs for Deveopment, you &lt;strong&gt;have to&lt;/strong&gt; use Magit. If you don&amp;#39;t
use Emacs, you can load it on the side for Magit. If you&amp;#39;re not a
developer, learn to code so you can use Magit!!!!!
&lt;/p&gt;
&lt;p&gt;
I tried to do justice to the package in the video. Magit along with &lt;a href=&#34;https://orgmode.org/&#34;&gt;Org
Mode&lt;/a&gt; are arguably Emacs killer apps - enough in and of themselves to
justify using Emacs.
&lt;/p&gt;
&lt;p&gt;
Check out the video:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/1IYsiHXR620&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Competitions and Hackathons</title>
      <link>https://cestlaz.github.io/posts/hs-competitions/</link>
      <pubDate>Fri, 06 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hs-competitions/</guid>
      <description>&lt;p&gt;
Today&amp;#39;s the last day of spring break. After the weekend it&amp;#39;s back to
the grind. It really hasn&amp;#39;t been much of a spring break. The rain and
the snow made for very little spring and between working on the Hunter
/ CUNY2X Internship program and reviewing applications for my Hunter
Daedalus CS Honors program there has been very little break.
&lt;/p&gt;
&lt;p&gt;
Today was no exception - I spent much of the day working but I did
take a few hours to head over to Cornell Tech on Roosevelt
Island. Why? To check out the &lt;a href=&#34;https://www.cs.cornell.edu/events/cornell-high-school-programming-contest&#34;&gt;Cornell High School Progrmaming
Contest&lt;/a&gt; - first time in NYC.
&lt;/p&gt;
&lt;p&gt;
I was invited by my friend and organizer &lt;a href=&#34;https://twitter.com/diane_levitt&#34;&gt;Diane Levitt&lt;/a&gt;. I only stayed
for an hour or so but it was shaping up to be a great event. It looked
like around a hundred kids from maybe a dozen or so schools and it was
run simultaneously with high schoolers on the Ithaca campus where the
competition has been running for a few years.
&lt;/p&gt;
&lt;p&gt;
The format was similar to other high school programming competitions
I&amp;#39;ve been to. Teams of two or three sharing a single computer to solve
a number of programming problems that varied in difficulty. You can
check out a few &amp;#34;warm up&amp;#34; problems on the competition &lt;a href=&#34;https://www.cs.cornell.edu/events/cornell-high-school-programming-contest&#34;&gt;site&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The competition reminded me of the &lt;a href=&#34;https://www.sjcny.edu/long-island/academics/programs-departments/mathematics-and-computer-science/programming-competition&#34;&gt;St. Joseph&amp;#39;s High School
Programming Competition&lt;/a&gt; held every spring but in NYC so more
convenient for city dwellers. I went to the St. Joseph&amp;#39;s competition a
few times and I&amp;#39;m a big fan. I particularly like the awards luncheon
after the competition. If I were to make one suggestion to the
organizers there it would be to mix the seating at the luncheon so
that kids get to sit with and spend time with kids from different
schools.
&lt;/p&gt;
&lt;p&gt;
These competitions contrast nicely with hackathons like &lt;a href=&#34;http://stuyhacks.com/%0A&#34;&gt;StuyHacks&lt;/a&gt;
for which I acted as a judge a couple of months ago. Competitions are, well,
competitive. Hackathons can be but don&amp;#39;t have to be. Competitions are
about solving problems, hackathons, building things. Each can speak to
a different kind of student.
&lt;/p&gt;
&lt;p&gt;
Both competitions and hackathons have problems as well. On the competition
side we have:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Schools with more developed CS programs dominate
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A single strong student can carry a team
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Some kids don&amp;#39;t like or do well in the competitive environment
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
And on the hackathon side:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
24 hours of straight work is just a bad idea and a bad thing to
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
encourage.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Big advantage to teams that bring prefab code.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Big advantage to kids with experience.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Both types of events are great opportunities for young
programmers. They&amp;#39;re celebrate academic work, bring tech kids together
as a community and when done right are
something of a CS party. Neither type of event speaks to all kids so
it&amp;#39;s great to have both competitions and hackathons to go along with
other types of events available for our kids.
&lt;/p&gt;
&lt;p&gt;
Another thing I love abut the Cornell and St, Joseph&amp;#39;s competitions
along with StuyHacks is that they&amp;#39;re open to all schools and hence all
students. There&amp;#39;s room for the novice and also the expert and you
don&amp;#39;t have to be in a particular school or program to participate.
&lt;/p&gt;
&lt;p&gt;
There are other events beyond these three. There are online
competitions like &lt;a href=&#34;http://www.usaco.org/&#34;&gt;the USACO&lt;/a&gt;, competitions on HackerRank and Topcoder,
&lt;a href=&#34;http://halite.io&#34;&gt;Halite&lt;/a&gt; along with it&amp;#39;s hackathon which is great but specialized and in
person ones that are farther away like the &lt;a href=&#34;http://pclassic.org/%0A&#34;&gt;PClassic&lt;/a&gt; in Philidelphia
and Rowan&amp;#39;s &lt;a href=&#34;http://elvis.rowan.edu/rupc/%0A&#34;&gt;HS programming competition&lt;/a&gt; in New Jersey but it&amp;#39;s great to
see great local opportunities like these emerging and hopefully
running for years to come.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tools and Complexity</title>
      <link>https://cestlaz.github.io/posts/tools-and-complexity/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/tools-and-complexity/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt; wrote about &lt;a href=&#34;http://blog.acthompson.net/2018/04/thoughts-on-where-cs-education-tools.html&#34;&gt;CS education tools&lt;/a&gt; earlier today. I&amp;#39;ve
also been meaning to write on the topic but from a different point of
view.
&lt;/p&gt;
&lt;p&gt;
I do my best to keep up with the latest and greatest in the CS world
both on the academic side as well as the professional one. That&amp;#39;s not
really possible, but I do my best. When I have a small project to work
on I&amp;#39;ll some times use it as an excuse to play with some recent
technology. Over December, I wanted to write an application viewer to
use for company / student internship matching. I started by looking at
&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; but ended up using &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; which I liked much more for a variety
of reasons.
&lt;/p&gt;
&lt;p&gt;
The viewer served it&amp;#39;s purpose but I think it can be turned into a
much more comprehensive student / employer internship platform. I
tried to steal a few minutes over this past week&amp;#39;s spring break to
start a rewrite using another toolset, Clojure, Clojurescript and
Reagent. I&amp;#39;m really liking the Clojure stack and using
Emacs and Cider for the IDE is really blowing me away.
&lt;/p&gt;
&lt;p&gt;
What I&amp;#39;ve noticed is that for every new language of framework you also
have to learn a whole set of ancillary tools.
&lt;/p&gt;
&lt;p&gt;
It didn&amp;#39;t used to be that way. Back in the day, things were much
simpler. I remembering doing work at Goldman Sachs, it was as simple
as typing something on the command line like &lt;code&gt;cc file1.c file2.c
file3.c&lt;/code&gt;. I of course had to be cutting edge and use fancy modern
tools like &lt;a href=&#34;https://www.gnu.org/software/make/&#34;&gt;Make&lt;/a&gt;. What&amp;#39;s more, the tools I used in industry were very
similar to what I used in college.
&lt;/p&gt;
&lt;p&gt;
We now live in very different times.
&lt;/p&gt;
&lt;p&gt;
If you go to the getting started guides for React or Vue it&amp;#39;s pretty easy to
get hello world up and running but beyond that you start to fall in to
the Javascript tooling hole. To start you need either &lt;strong&gt;npm&lt;/strong&gt; or &lt;strong&gt;yarn&lt;/strong&gt;
just to manage packages and dependencies. Then you need a build system
or bundler like &lt;strong&gt;webpack&lt;/strong&gt;, &lt;strong&gt;browserify&lt;/strong&gt;, or &lt;strong&gt;parcel&lt;/strong&gt; and that&amp;#39;s not even
considering older options like &lt;strong&gt;gulp&lt;/strong&gt; and &lt;strong&gt;grunt&lt;/strong&gt; and ancillary tools
like &lt;strong&gt;babel&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
A typical React or Vue project is going to need a &lt;a href=&#34;https://github.com/krasimir/react-webpack-starter/blob/master/package.json&#34;&gt;project.json&lt;/a&gt; and
&lt;a href=&#34;https://github.com/krasimir/react-webpack-starter/blob/master/webpack.config.js&#34;&gt;webpack.config.js&lt;/a&gt; file and sometimes some other files as well. Check
out the links. They&amp;#39;re from a simple project template I found
online. Far from simple.
&lt;/p&gt;
&lt;p&gt;
When I was playing with Vue.js a couple of months ago, I ended up
using Webpack to convert the source code into the final JS, take care
of live-reloading, and in general manage the project. I still have no
idea how most of it works. I don&amp;#39;t know if it&amp;#39;s just me but I&amp;#39;m very
uncomfortable relying on tools that I really don&amp;#39;t fully understand to
build my systems.
&lt;/p&gt;
&lt;p&gt;
The Clojure world is little better with Leiningen and Boot. If you
don&amp;#39;t believe me, try to make heads or tails of &lt;a href=&#34;https://github.com/bhauman/figwheel-template/blob/master/src/leiningen/new/figwheel/project.clj&#34;&gt;this&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s true that as a professional you&amp;#39;ll likely use one set of
tools on a day to day basis and you&amp;#39;ll eventually get to know them
that doesn&amp;#39;t mean it&amp;#39;s not a good idea to prepare kids for what&amp;#39;s to
come.
&lt;/p&gt;
&lt;p&gt;
On the K12 side we have drag and drop languages, specialized learning
IDEs like BlueJ, simple cut down IDEs like Dr Racket and completely
online environments like repl.it. All great starter tools that
insulate beginners from the complexities to come. College&amp;#39;s
might get closer to the &amp;#34;real world&amp;#34; but just a tad.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong, I like many of the tools used in K12
classes and there&amp;#39;s far too much complexity in the professional world to
throw at beginners. If we look at a student&amp;#39;s entire school
career, classes are already so packed with material it would be hard to
really prepare kids for the real world within their classes. You could
take that tried and true teacher / professor technique of just
requiring it and having the kids figure it out on their own but that&amp;#39;s
really just downright abusive.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have an answer for this one.
&lt;/p&gt;
&lt;p&gt;
I have my kids use tools like Git and GitHub early along with using
testing frameworks and external libraries. I also try to move my
students to a general purpose programmable platform like Emacs or
Vim. I think these are sound practices but students will still have a
big learning curve when they finally get to industry.
&lt;/p&gt;
&lt;p&gt;
What I really would love it to see the tooling become simpler and
documentation better. &lt;a href=&#34;https://github.com/parcel-bundler/parcel&#34;&gt;Parcel&lt;/a&gt;, a Javascript bundler is one of the newer
kids on the block and is much simpler and cleaner than alternatives
like Webpack. The new version of Clojure has it&amp;#39;s own command line
tool which is also simpler than the alternatives. Maybe we are already
moving in the right direction and this entire rant will become moot in a couple of years.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Passover April 1 And Indiana Jones</title>
      <link>https://cestlaz.github.io/posts/passover-april-1-and-indiana-jones/</link>
      <pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/passover-april-1-and-indiana-jones/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve never done much in terms of the April Fools thing but frequently
enjoy other peoples shenanigans.
&lt;/p&gt;
&lt;p&gt;
For those of you similarly inclined I share my son Natan&amp;#39;s take on
that Passover staple, Echad Mi Yodea.
&lt;/p&gt;
&lt;p&gt;
Enjoy: &lt;a href=&#34;http://seccorecit.blogspot.com/2018/04/a-historically-informed-echad-mi-yodea.html&#34;&gt;A Historically Informed Echad Mi Yodea&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do It The Dumb Way</title>
      <link>https://cestlaz.github.io/posts/do-it-the-dumb-way/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/do-it-the-dumb-way/</guid>
      <description>&lt;p&gt;
There&amp;#39;s so much to like in the shape drawing lessons I talked about
in my &lt;a href=&#34;http://cestlaz.github.io/posts/refactoring/&#34;&gt;refactoring&lt;/a&gt; post that I thought I&amp;#39;d share a little more here.
&lt;/p&gt;
&lt;p&gt;
It can be argued that the most important things for a program to do is work. The
most clever, elegant, creative program is worthless if it doesn&amp;#39;t
produce the desired result. All too often, beginners and hot shot beginners in particular try to
be too clever too early and get themselves into trouble.
&lt;/p&gt;
&lt;p&gt;
When doing the shape drawing lessons the first couple of shape are
pretty easy
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;

| ****            |    | *               |
| ****            |    | **              |
| ****            |    | ***             |
| ****            |    | ****            |
| ****            |    |                 |
|                 |    |                 |
&lt;/pre&gt;
&lt;p&gt;
but things get more interesting with the right justified triangle:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
----*       *
---**      **
--***     ***
-****    ****
*****   *****
&lt;/pre&gt;
&lt;p&gt;
For this triangle, students want to come up with the formula for the
number of spaces. They usually figure out something like this with
&lt;code&gt;h-i-1&lt;/code&gt; spaces and &lt;code&gt;i+1&lt;/code&gt; stars:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The formulas become harder to figure out as the shapes become more
complex and sometimes students get stymied.
&lt;/p&gt;
&lt;p&gt;
The truth is that while they&amp;#39;re struggling to find the perfect
solution, it&amp;#39;s sometimes better to do it the dumb way.
&lt;/p&gt;
&lt;p&gt;
Consider drawing a trapezoid like this example of height 5 and
starting width 12:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
************
**********
********
******
****
&lt;/pre&gt;
&lt;p&gt;
A student could come up with the &amp;#34;formulas&amp;#34; for spaces and stars but
sometimes there&amp;#39;s a more straightforward way.
&lt;/p&gt;
&lt;p&gt;
Consider the number of spaces on each line on the left hand side of
the shape. First line is 0 then 1, 2 etc. Why not start a variable
&lt;code&gt;spaces&lt;/code&gt; at 0 and increment it on each loop iteration.
&lt;/p&gt;
&lt;p&gt;
For the number of stars, it&amp;#39;s starting at the width and being reduced
by 2 each time.
&lt;/p&gt;
&lt;p&gt;
This leads to a solution similar to this (using the line routine from
the earlier refactoring post):
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This solution is simple to construct, simple to understand, and quite
frankly, hard to get wrong.
&lt;/p&gt;
&lt;p&gt;
It can also lead a student to discovering a pattern or &amp;#34;formula&amp;#34; such
as what was used to solve the earlier problems.
&lt;/p&gt;
&lt;p&gt;
This might seem to some as a cheap way out, the dumb approach -
creating extra variables and have them count along the way but I
don&amp;#39;t. There&amp;#39;s nothing wrong with simple and straightforward. Yes, you
could come up with an elegant formula but the bottom line is you need
something to count 0,1,2,3… so create a variable to do it. You need
something to count 12,10,8,… create one for that as well.
&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;m not advocating writing 100 if statements rather than a loop
but I think you get the idea.
&lt;/p&gt;
&lt;p&gt;
The best solution is one that works and Sometimes the &amp;#34;dumb&amp;#34; approach is the best approach.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ethics In CS Education</title>
      <link>https://cestlaz.github.io/posts/ethics-in-cs/</link>
      <pubDate>Sun, 25 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ethics-in-cs/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been meaning to write about ethics in CS education for a
while. Probably since I saw &lt;a href=&#34;https://www.nytimes.com/2018/02/12/business/computer-science-ethics-courses.html?smid=fb-share&#34;&gt;this article&lt;/a&gt; in the NY Times but got sidetracked.
&lt;/p&gt;
&lt;p&gt;
I was reminded when I saw this tweet by Hadi the other day:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;This message is bigger than Facebook. Computer science faces an ethics crisis. That’s why &lt;a href=&#34;https://twitter.com/codeorg?ref_src=twsrc%5Etfw&#34;&gt;@codeorg&lt;/a&gt; covers ethics and digital citizenship in our computer science courses. (And we’re thankful that most of the largest tech companies support us) &lt;a href=&#34;https://t.co/roSkAzANQM&#34;&gt;https://t.co/roSkAzANQM&lt;/a&gt;&lt;/p&gt;&amp;mdash; Hadi Partovi (@hadip) &lt;a href=&#34;https://twitter.com/hadip/status/977673429485731840?ref_src=twsrc%5Etfw&#34;&gt;March 24, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I think we can all agree that bringing ethics and digital citizenship
and, frankly, citizenship in general to our students is important. What I wonder is
what approaches will lead to meaningful results and what methods will
lead us to checking off the &amp;#34;covered that&amp;#34; box.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m skeptical of throwing an ethics course into the curriculum as some
places seem to be doing. A class might be required, might fulfill an
elective requirement or it might just be an extra course. If it&amp;#39;s
required, what does it replace or are you just going to add more to
the student load. If it fulfills an elective credit, will it be
perceived as &amp;#34;the easy course&amp;#34; as opposed to say, theory and if it&amp;#39;s
just an extra course, who&amp;#39;s going to take it? Will it just become
preaching to the choir.
&lt;/p&gt;
&lt;p&gt;
Better is what Hadi mentioned in his tweet - embed ethics throughout
all of your courses and while I think this type of embedding is
important and I&amp;#39;d argue necessary, I&amp;#39;m still betting it won&amp;#39;t be
enough to make a difference.
&lt;/p&gt;
&lt;p&gt;
When teaching a course, teachers cover the curriculum but when you
drill down to where they focus their time, it comes down to:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
what they think is important for the kids to know.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
what they think the kids will need for that high stakes exam.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If a teacher feels embedding ethical concerns is important they&amp;#39;ll
spend time on it, if not, it will be lip service. Even if it&amp;#39;s on the
high stakes exam, unless the teacher really believes that this is
important it will just be teaching to the test.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d argue that it has to go even further since teachers can only do so
much. How many schools have honor codes and how many of us know
graduates from those schools who exhibit less than ethical behaviour.
&lt;/p&gt;
&lt;p&gt;
So what do we do?
&lt;/p&gt;
&lt;p&gt;
Well, of course we do have to embed ethical concerns across the
curriculum. Teachers should be armed with both the materials and time
needed to address ethical concerns but beyond that, we need teachers
for which ethical CS is important.
&lt;/p&gt;
&lt;p&gt;
My friend &lt;a href=&#34;https://twitter.com/ed_saber&#34;&gt;Saber Khan&lt;/a&gt; has been facilitating a monthly #ethicalCS
twitter chat for close to a year now. I don&amp;#39;t take part in too many
twitter chats but do recognize that they&amp;#39;re important in raising both
awareness and community. I&amp;#39;ve also seen ethical CS issues more
frequently appear as conference sessions and professional development.
&lt;/p&gt;
&lt;p&gt;
The next big step is to start at the beginning - pre service teacher
training and in my opinion, not with a course but rather embedding
ethical issues throughout teacher preparation.
&lt;/p&gt;
&lt;p&gt;
If we want to crack this nut it can&amp;#39;t just be from curriculum and from
the choir. Pre service CS teacher training is in it&amp;#39;s infancy and has
not yet really found its form.
&lt;/p&gt;
&lt;p&gt;
Much to my chagrin, a lot of CS Ed has gone the way of other Ed: Math
Ed, Science Ed, etc. and not in a good way. Let&amp;#39;s see if we can make
sure that pre service CS teacher preparation develops to attract and
create great teachers for which ethical CS is part of their core.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sigcse2018 Proof</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-proof/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-proof/</guid>
      <description>&lt;p&gt;
Next up from SIGCSE2018 is &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159609&#34;&gt;Connect the Dots to Prove It&lt;/a&gt; presented by
Mark McCartin-Lim. This paper was presented during the same papers
session as &lt;a href=&#34;http://cestlaz.github.io/posts/sigcse2018-theory&#34;&gt;MacCormick&lt;/a&gt; paper I wrote up previously and my reaction to
this one was similar to my reaction to MacCormick&amp;#39;s.
&lt;/p&gt;
&lt;p&gt;
My reaction to MacCormick was - &amp;#34;This is awesome but while he&amp;#39;s talking
about redesigning existing theory courses, I think we can get a lot of
mileage out of bringing these ideas into lower level CS courses.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I felt similarly about this paper.
&lt;/p&gt;
&lt;p&gt;
The premise is simple - proof is hard and teaching proof is
hard. Students don&amp;#39;t know how to begin, what&amp;#39;s allowed, what&amp;#39;s not
allowed, what&amp;#39;s sufficient etc. McCartin-Lim and his team developed a
software tool to present proof as a puzzle and to provide students
with necessary support.
&lt;/p&gt;
&lt;p&gt;
The tool allows students to interactively construct a graph of their
proof. The graph helps students visualize the proof and the
relationships between the assumptions and assertions.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an example:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse2018-proof1.png&#34; alt=&#34;/img/sigcse2018-proof1.png&#34; title=&#34;/img/sigcse2018-proof1.png&#34; width=&#34;500px&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
And a more complex one:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse2018-proof2.png&#34; alt=&#34;/img/sigcse2018-proof2.png&#34; title=&#34;/img/sigcse2018-proof2.png&#34; width=&#34;500px&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
My immediate thought was that this should be reskinned as a high
school product and rolled out in Geometry classes. I&amp;#39;ve written before
about the fact that proof is &lt;a href=&#34;https://cestlaz.github.io/posts/standards-who-for/&#34;&gt;rarely taught&lt;/a&gt; and rarely taught well even
though it&amp;#39;s supposed to be the star topic between Algebra and Trigonometry. A tool like this could
probably help. This made me think further of the disconnect between
K12 and higher education. McCartin-Lim talked about students having
difficulty learning proof but lost in the conversation is that
students should start building there proof related foundations in high
school and supporting them in those early years can go a long way to
alleviate problems that only surface at the college level.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Refactoring</title>
      <link>https://cestlaz.github.io/posts/refactoring/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/refactoring/</guid>
      <description>&lt;p&gt;
One of my laments on teaching computer science is that students are
rarely taught and given the chance to develop  good programming
practices. There&amp;#39;s usually not enough time. Beginners work on small
&amp;#34;toys&amp;#34; which don&amp;#39;t lend themselves to good software development
practices and later on, there&amp;#39;s so much other material like
algorithms, data structures etc. to teach and
learn that programming practices usually amount to lines like:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;#34;Make sure to comment your code..&amp;#34;
&lt;/p&gt;
&lt;p&gt;
&amp;#34;Indent properly…&amp;#34;
&lt;/p&gt;
&lt;p&gt;
&amp;#34;Use functions…&amp;#34;
&lt;/p&gt;
&lt;p&gt;
&amp;#34;It&amp;#39;s important to test your code…&amp;#34;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
so when I see an opportunity to use a simple example to drive home a
good practice,  I try to jump on it.
&lt;/p&gt;
&lt;p&gt;
Drawing shapes with text is a typical early project. I&amp;#39;ve seen it in
text books and online and have been doing it for years. I recall doing
it back in the 80s in Fortran IV when the programs we wrote were on &lt;a href=&#34;https://en.wikipedia.org/wiki/Punched_card&#34;&gt;punch cards&lt;/a&gt;, run
overnight on an &lt;a href=&#34;https://en.wikipedia.org/wiki/IBM_1130&#34;&gt;IBM 1130&lt;/a&gt;, and printouts picked up the next day.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a nice use of nested loops. The students will write functions to
create assorted shapes out of asterisks  like rectangles and
triangles. Typical solutions look like this:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Which results in shapes like these:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;

| ****            |    | *               |
| ****            |    | **              |
| ****            |    | ***             |
| ****            |    | ****            |
| ****            |    |                 |
|                 |    |                 |
|                 |    |                 |
| *************** |    | *               |
| *************** |    | **              |
| *************** |    | ***             |
| *************** |    | ****            |
| *************** |    | *****           |
| *************** |    | ******          |
| *************** |    | *******         |
&lt;/pre&gt;
&lt;p&gt;
Then there will be more interesting shapes including things like:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;

*       *            *****
**      ***           *   *            and more
***     *****          *   *
****      ***           *****
&lt;/pre&gt;
&lt;p&gt;
This is a great time to talk about refactoring.  All of the shape
drawing functions follow the same pattern - there&amp;#39;s an outer loop for
the height and then one or more inner loops to draw each line. We can
factor out the inner loops in to a separate &lt;code&gt;line()&lt;/code&gt; function.
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s just like factoring in algebra:
&lt;/p&gt;
&lt;div class=&#34;latex-block&#34;&gt;
&lt;p&gt;
(RectangleOuterLoop × Line) + (TriangleOuterLoop × Line) ⇒ Line  (Rectangleouterloop × TriangleOuterloop)
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
We end up with:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s simpler, cleaner, and also can lead us to thinking about the
&amp;#34;harder&amp;#34; shapes in an interesting way. Instead of looking at the right
justified triangle as a triangle, we can think of each level as two
lines - one of spaces (shown here as dashes) followed by a line of
stars:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
----*       *
---**      **
--***     ***
-****    ****
*****   *****
&lt;/pre&gt;
&lt;p&gt;
Noticing that  for a height of 5, the dashed lines count down in
length 4,3,2,1,0 and the star lines count up 1,2,3,4,5, we get:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here we have typical early CS assignment that really lends itself to
talking about structuring programs and refactoring. Where else can we
inject good programming practices in ways that make sense early on?
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing Part 2</title>
      <link>https://cestlaz.github.io/posts/testing-part2/</link>
      <pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/testing-part2/</guid>
      <description>&lt;p&gt;
A few weeks ago I wrote about &lt;a href=&#34;https://cestlaz.github.io/posts/testing-testing/#.Wq7Ud3XwZhE&#34;&gt;introducing testing&lt;/a&gt; in CS classes,
specifically using a testing framework. In that post I talked about
the plan but now I can talk about the results.
&lt;/p&gt;
&lt;p&gt;
My class interleaves with Hunter&amp;#39;s CSCI 13500 - Software Analysis and
Design I class. One day each week, my students have complete a hands
on lab focusing on whatever is being covered in the 13500 class. I
decided to use one of those labs as a first foray into testing.
&lt;/p&gt;
&lt;p&gt;
I had each student use a classmates lab solution. They were to examine
their solution and write a test suite for the lab using the &lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt;
C++ testing framework.
&lt;/p&gt;
&lt;p&gt;
I think this proved to be a valuable exercise.
&lt;/p&gt;
&lt;p&gt;
Partway into the exercise, a few students independently had an issue -
they couldn&amp;#39;t even build the tests.
&lt;/p&gt;
&lt;p&gt;
The code looked right. Something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It looked like at textbook example of a test case but it wouldn&amp;#39;t even
compile.
&lt;/p&gt;
&lt;p&gt;
In all cases, the original student code compiled and ran and gave the
correct result. All the students had code similar to this:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This stumped everyone for a while - why wouldn&amp;#39;t the test even
compile.
&lt;/p&gt;
&lt;p&gt;
The answer was &amp;#34;data types.&amp;#34; The lab specification required that
getValue was supposed to return a &lt;code&gt;double&lt;/code&gt; but in all the problem
cases, the student returned a &lt;code&gt;std::string&lt;/code&gt;. The lab appeared to work
since &lt;code&gt;std::cout&lt;/code&gt; handles strings as well as numeric data types but
once they put it in to a test case that actually checked types the
problem was apparent and easy to fix.
&lt;/p&gt;
&lt;p&gt;
As it turns out, I was pretty excited about this – even before
finishign the tests, the act of writing tests revealed a problem. This
is a good thing.
&lt;/p&gt;
&lt;p&gt;
From there, it was pretty easy for students to finish writing the
tests for their classmates labs.
&lt;/p&gt;
&lt;p&gt;
Fast forward a week. This was the first lab where I required
the students to submit their own test suite as part of their lab. This
didn&amp;#39;t seem to slow anyone down by an appreciable and time will tell
if this leads to better development practices but it certainly made my
life easier. I was able to quickly move from repo to repo and type:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;make tests
./tests -s
... watch the tests run
make
./main
--- watch the program run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Easy peasy.
&lt;/p&gt;
&lt;p&gt;
Not only did it make it faster for me, it also gave me insights into
their programs by seeing their decisions in terms of test writing.
&lt;/p&gt;
&lt;p&gt;
Is it a win?
&lt;/p&gt;
&lt;p&gt;
At the very worst, they&amp;#39;re learning an
industry practice and at best, it&amp;#39;s going to help them improve as
software engineers. Add on the fact that it&amp;#39;s making my life as a
teacher easier both in terms of understanding the students work and in
terms of speed of evaluation. Sounds like a win to me.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Prestigious Competitons And High Schools</title>
      <link>https://cestlaz.github.io/posts/on-prestigious-competitons-and-high-schools/</link>
      <pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/on-prestigious-competitons-and-high-schools/</guid>
      <description>&lt;p&gt;
The ACM recently announced this year&amp;#39;s winners of the Cutler-Bell
Prize in High School Computing. Over on his blog, &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt;
noted that the winners were either from independent or magnet public
schools. Alfred also noted that most of the winners of prestigious
science competitions like the Regeneron Science Talent Search (nee
Intel, nee Westinghouse) were from public magnet schools. In &lt;a href=&#34;http://blog.acthompson.net/2018/03/impressive-high-school-computer-science.html%0A&#34;&gt;his post&lt;/a&gt;,
Alfred ruminates on this and wonders &amp;#34;how to we add the flexibility
and support to more students at more schools?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
As someone who spent over 25 years at Stuyvesant, arguably the
granddaddy of these public magnet schools, I wanted to share some
thoughts. I can only share my experiences from Stuy along with what I
know from a few other schools but I still hope this is worth a read.
&lt;/p&gt;
&lt;p&gt;
The Regeneron competitions under it&amp;#39;s various names is the oldest and
most established of these competition so it&amp;#39;s pretty easy to get some
data. Stuy is at or near the top of the list in terms of Regeneron
finalists and semi finalists. The &lt;a href=&#34;https://en.wikipedia.org/wiki/Regeneron_Science_Talent_Search&#34;&gt;Wikipediapage&lt;/a&gt; lists Stuy as second
to Montgomery Blair with 22 finalists to 40 but the data only goes
back to 1999. I personally know of at least 7 more finalists from my
early years at Stuy, 4 more from the early 90s, 8 more listed under
the page&amp;#39;s &amp;#34;notable&amp;#34; entries and who kows how many from the 80s and
earlier.
&lt;/p&gt;
&lt;p&gt;
Stuy had a strong run of finalists in the early 90&amp;#39;s and the early
2000&amp;#39;s but there has been a fall off in recent years.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at what makes Stuy &amp;#34;special&amp;#34; and then at the fall off.
&lt;/p&gt;
&lt;p&gt;
In terms of money, Stuy gets a basic budget similar to other NYC
public schools plus some extra due to the extra graduation
requirements (other schools get extra money for an assortment of
reasons). I seem to recall that the Parents Association raises
somewhere in the low to mid six figures and the Alumni Association has
been historically dysfunctional as a fundraising body.
&lt;/p&gt;
&lt;p&gt;
So, it&amp;#39;s not money.
&lt;/p&gt;
&lt;p&gt;
Flexible scheduling? That&amp;#39;s something that Alfred mentioned. Stuy kids
have super packed programs. Some kids take 10 classes a day with no
lunch so that&amp;#39;s not it either.
&lt;/p&gt;
&lt;p&gt;
Teachers? Stuy gets its teachers the same way as other public
schools and just like other public schools they have some terrific
teachers and some absolute disasters. Stuy also gets a slice of a
particular class of teacher that starts their career at Stuy, never
learns to teach because the kids figure it out but thinks they&amp;#39;re gods
gift to teaching.
&lt;/p&gt;
&lt;p&gt;
So, no, it&amp;#39;s not the teachers, at least not on the whole.
&lt;/p&gt;
&lt;p&gt;
So, what does Stuy do?
&lt;/p&gt;
&lt;p&gt;
It collects talent and this is the same thing that the other magnet
schools and the elite private schools do as well. Get a bunch of
bright, hard working, motivated kids together and good things
happen. It gets high achieving students from a combination of entrance
exam, reputation, and location [fn::That said, students have also been
drawn to Stuy for the CS program which is fairly unique and also for a
couple of specific math teachers.].
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not arguing against this – I think there is a need for public
magnet schools like Stuy but I think it&amp;#39;s important to recognize that
this is a major contributor to competition results and doesn&amp;#39;t
necessarily say anything about the school in terms of leadership or
instruction.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s similar to a college coach who gets the best recruits. Are they
really a great coach? Can they develop talent or are they just getting
the best talent and getting out of the way. Who&amp;#39;s the better coach?
The one who gets all the 5 star recruits every years and frequently
wins it all or the coach who gets 3 star recruits, doesn&amp;#39;t win as much
but develops those 3 stars to a point where they can compete against the 5 star
programs.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the starting point but then there&amp;#39;s the targeting of the top
prospects. Stuy had a run of finalists during the early 2000s. At the
time, a friend of mine ran the math research program. His strategy? He
would scour the school for the kids most likely to win the
competition, get those kids into his class, and hook them  up with
professors with the most promising project potential. It worked
more often than not. Contrast that to what I did when I ran our CS
research program. I didn&amp;#39;t take the program seriously for a variety of
reasons but my job was to give EVERY kid in my class the opportunity
to explore some aspect of CS. I had a few semi-finalists which is
neither here nor there but never the stream of winners that my friend
had.
&lt;/p&gt;
&lt;p&gt;
Looking back to Stuy&amp;#39;s earlier success, we had a Bio Chair who ran a
similar program. I knew people in that program from when I was a
student. The top talent was recruited and nurtured, the rest, pretty
much ignored. Makes a school look good but not really the hallmark of
a great school
&lt;/p&gt;
&lt;p&gt;
Other schools had a similar strategy. Back in the &amp;#39;80s Cardozo - a
neighborhood high school in Bayside Queens had a great run of
Westinghouse results but that&amp;#39;s because the science chair at the time
had a similar program - rope in the top talent early (sophomore year)
and nurture them. After a while the school got a reputation and would
then attract more &amp;#34;science talent.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Stuy&amp;#39;s had a falloff in finalists in recent years and I believe that&amp;#39;s
due to not having anyone focusing on recruiting kids specifically for
results. Personally, I think this is a good thing but others
disagree. A school with one finalist is perceived to be better than a
school that gives a great research experience to every student but
produces no finalists. In recent years, there&amp;#39;s been talk of &amp;#34;what
can we do to get more winners again.&amp;#34; I think that&amp;#39;s a shame, the
conversation should always be &amp;#34;what can we do to improve the
educational experience we offer all of our students.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
None of this is to take away from any of the winners of  any of these
competitions. All the finalists and winners I&amp;#39;ve known have been
exceptional intellects and top people in their fields. This is just a
commentary on what role a school does, should, and shouldn&amp;#39;t play.
&lt;/p&gt;
&lt;p&gt;
In my early years at Stuy, I worked with our top kids on CS
competitions, The kids would place very well in the USACO competitions
throughout the year. One year we entered the ACSL and I realized that
I had a choice - focus on the top handful of kids to make a winning
team that could compete for the title or focus on all the kids but not
expect that great single result. I realized that the top kids
would probably be alright without that extra attention.
&lt;/p&gt;
&lt;p&gt;
I still think I did right by those kids but that realization also led
me to design my intro class, hack required CS into Stuy and probably
end up positively affecting far more students than if I just focused
on the top percent of a percent.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 46 Auto Yasnippets</title>
      <link>https://cestlaz.github.io/posts/using-emacs-46-auto-yasnippets/</link>
      <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-46-auto-yasnippets/</guid>
      <description>&lt;p&gt;
The other day I discovered &lt;a href=&#34;https://github.com/abo-abo/auto-yasnippet&#34;&gt;auto-yasnippet&lt;/a&gt;, another great package by
&lt;a href=&#34;https://github.com/abo-abo&#34;&gt;Oleh Krehel&lt;/a&gt; or abo-abo.
&lt;/p&gt;
&lt;p&gt;
It looks like it&amp;#39;s going to be a great way to solve a particular
problem that come up now and again.
&lt;/p&gt;
&lt;p&gt;
There are plenty of times when I want to create a number of similar
but slightly different blocks of text. The example on the project
site  is:
&lt;/p&gt;
&lt;div class=&#34;src src-c&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You could use multiple cursors, a macro, or other methods to put in
the common text but you still have to deal with the parts of each line
that are unique, the red, green, and blue.
&lt;/p&gt;
&lt;p&gt;
You could use a yasnippet but it&amp;#39;s unlikely that you&amp;#39;ll have a snippet
for every occasion. This is where auto-yasnippet comes in. You would
write the first line but add  a tilda as a placeholder:
&lt;/p&gt;
&lt;div class=&#34;src src-c&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and then invoke &lt;code&gt;aya-create&lt;/code&gt;. This will get rid of the tildas and
create the auto-snippet. Then when you run &lt;code&gt;aya-expand&lt;/code&gt; it will put in
the snippet with the tilda locations as placeholders.
&lt;/p&gt;
&lt;p&gt;
Very cool.
&lt;/p&gt;
&lt;p&gt;
Check out the video:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/utrMabxgXbg&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Sigcse2018 Making theory more acccesible</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-theory/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-theory/</guid>
      <description>&lt;p&gt;
Next up from SIGCSE 2018 is John MacCormick&amp;#39;s session on
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159557&#34;&gt;Strategies for Baing the CS Theory Course on Non-decision Problems&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
MacCormicks&amp;#39;s stance is that CS theory  is tough the first time around
and using non-decision problems is a viable approach to make theory
more accessible to beginners. As MacCormick said in his paper:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
… a decision problem may ask the yes/no question, &amp;#34;Does this graph
have a Hamilton cycle?&amp;#34; The corresponding non-decision problem is,
&amp;#34;Please give me a Hamilton cycle of this graph if it has one.&amp;#34;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This leads to writing programs to explore concepts in CS theory rather
than just living in the world of proof.
&lt;/p&gt;
&lt;p&gt;
MacCormick goes on to say that:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
For this audience, the key advantage of non-decision problems
is that they are more realistic: they match the previous programming
and algorithms experience of undergraduates more closely.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I love the idea. Writing a program can make an abstract problem more
concrete and can lead to better understanding for those of us who are
less math inclined.
&lt;/p&gt;
&lt;p&gt;
My next thought was that this shouldn&amp;#39;t just be a change implemented
in theory courses. Some of these ideas should move down to more
introductory CS classes. Not the hardcore stuff but light
introductions to the topics so that we can layer the learning. If we
introduce some of these concepts in CS 1 classes then when they get to
the theory class it won&amp;#39;t be the students first rodeo.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had success with this when teaching recursion early. I&amp;#39;ve also
done it with other concepts. When we teach the Towers of Hanoi, yes,
it&amp;#39;s a nice recursion problem but really it&amp;#39;s to get the students
thinking about run time and a bit of proof. likewise, when we do a
maze solver in NetLogo we&amp;#39;re alluding to dynamic programming, search,
and path finding.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have too much more to say on this topic right now. I&amp;#39;m not
enough of a theory guy to sensibly design these experiences. The good
news is that MacCormick has written an soon to be released &lt;a href=&#34;https://www.amazon.com/What-Can-Computed-Practical-Computation/dp/0691170665/ref=asap_bc?ie=UTF8&#34;&gt;book&lt;/a&gt; on the subject. I
signed up for a reviewer copy at SIGCSE and look forward to receiving
a copy. Once I do I hope to be able to find some gems that I can work
into CS 1 experiences.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 45 - Company or Autocomplete</title>
      <link>https://cestlaz.github.io/posts/using-emacs-45-company/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-45-company/</guid>
      <description>
&lt;p&gt;
This is a good time to be an Emacs user. In addition to all of the
great packages and tools being developed there seem to be more people
regularly blogging and making videos about Emacs than ever before.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://planet.emacsen.org/&#34;&gt;Planet Emacsen&lt;/a&gt; aggregates a ton of Emcas blogs and Emacs Legend Sacha
Chua posts what&amp;#39;s going on in emacs every week on her &lt;a href=&#34;http://sachachua.com/blog/category/geek/emacs/&#34;&gt;blog&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
on the video front, &lt;a href=&#34;https://www.youtube.com/channel/ucdetz7akmws0_gnjog01d2g&#34;&gt;uncle dave&lt;/a&gt; has recently joined the ranks of emacs
video producers. sometimes we&amp;#39;ll cover the same topic. dave made a
video on swiper the other week and i made one a year ago. the other
week we both made videos on mpd almost on the same day but dave
focussed on emms and i focussed on simple-mpc. i think this
is great because it gives different perspectives.
&lt;/p&gt;
&lt;p&gt;
today, i watched dave&amp;#39;s video on &lt;a href=&#34;https://www.youtube.com/watch?v=xewzfruru6k&amp;amp;t=854s&#34;&gt;company&lt;/a&gt; mode for auto
completion. I&amp;#39;ve always used &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-8-autocomplete/&#34;&gt;autocomplete&lt;/a&gt; mode. I thought it would be
a good time for me to see how the other half lived.
&lt;/p&gt;
&lt;p&gt;
You can find my configurations up on GitHub
(&lt;a href=&#34;https://github.com/zamansky/using-emacs&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs&#34;&gt;https://github.com/zamansky/using-emacs&lt;/a&gt;&lt;/a&gt;). The master branch is using
autocomplete and the company-test branch for company. I&amp;#39;ve also pulled
out the relevant code and am placing it down under the video.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I&amp;#39;ve found so far:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/srFQwTvbaxY&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Company config (so far):
&lt;/h2&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package company
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(setq company-idle-delay &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
(setq company-minimum-prefix-length &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
(global-company-mode &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;))

(use-package company-irony
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;company-backends&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;company-irony&lt;/span&gt;))

(use-package irony
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c++-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;irony-mode&lt;/span&gt;)
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;irony-mode&lt;/span&gt;)
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;irony-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;irony-cdb-autosetup-compile-options&lt;/span&gt;))

(use-package irony-eldoc
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;irony-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;irony-eldoc))

(use-package company-jedi
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jedi:setup&lt;/span&gt;))

(defun my/python-mode-hook ()
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;company-backends&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;company-jedi&lt;/span&gt;))

(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my/python-mode-hook&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Autocomplete config
&lt;/h2&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package auto-complete
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(progn
(ac-config-default)
(global-auto-complete-mode &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
))

(setq py-python-command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python3&amp;#34;&lt;/span&gt;)
(setq python-shell-interpreter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;python3&amp;#34;&lt;/span&gt;)

(use-package jedi
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jedi:setup&lt;/span&gt;)
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jedi:ac-setup&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How my views on education research were shaped</title>
      <link>https://cestlaz.github.io/posts/practitioners-and-researchers/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/practitioners-and-researchers/</guid>
      <description>&lt;p&gt;
After reading a couple of comments on my &lt;a href=&#34;http://cestlaz.github.io/posts/sigcse2018-code-tracing/&#34;&gt;last post&lt;/a&gt; where I talked a
bit about practitioners vs researchers I thought I&amp;#39;d expand and
expound a bit.
&lt;/p&gt;
&lt;p&gt;
While there are education researchers that I very much respect,
overall, I&amp;#39;m skeptical of education research. Note
that I&amp;#39;m not talking specifically about CS Ed research but rather
education research in general.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s go back to the beginning. I entered teaching from
industry. Goldman Sachs to be specific. I started in a shortage area -
math and barely had the credentials to do so. The transcript evaluator
at the DOE counted my Algorithms and Numerical Methods courses as Math
courses to get me over the credit hump.
&lt;/p&gt;
&lt;p&gt;
I had zero ed courses under my belt and was thrown into the
fire. Fortunately, I landed in a school, Seward Park High School, with
a very supportive faculty. I wouldn&amp;#39;t have survived my first year
without Mike G, Bruce B, Jonathan G, and many others.
&lt;/p&gt;
&lt;p&gt;
Then, I had to start taking education credits to make my license
permanent. Some classes were taught by professors some by
adjuncts. The adjuncts were invariably experienced teachers and the
professors were research faculty. In many classes, I had to read the
latest research.
&lt;/p&gt;
&lt;p&gt;
I found that what &amp;#34;the research&amp;#34; told us to do was contrary to what
some of the best teachers did in practice. I kept hearing about the
&amp;#34;right&amp;#34; way to teach but it frequently didn&amp;#39;t jive with reality. When
the true way worked, circumstances were right and the technique
aligned with the teacher&amp;#39;s natural tendencies. When it didn&amp;#39;t, why
not? Many reasons.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
lack of prep time.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
too many students (per class, per day, per term)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
different populations than the one researched
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
factors the researcher didn&amp;#39;t include (and there are tons of them)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
teachers with different personalities and skill sets
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and each of the above points opens up to scores of specifics.
&lt;/p&gt;
&lt;p&gt;
This theme continued throughout my career. I&amp;#39;d ask teachers in other
subject areas about the current state of the art research. What was
the current trends in their fields. Generally the best teachers would
summarize what was going on and then either say that it didn&amp;#39;t work
for them or that if it did, they didn&amp;#39;t take it seriously because in
five or ten years &amp;#34;the research&amp;#34; would tell them to do something
different and then they would all of a sudden be bad teachers.
&lt;/p&gt;
&lt;p&gt;
This was another point. The right way to do it has changed over and
over during my career.
&lt;/p&gt;
&lt;p&gt;
Then there&amp;#39;s the reproducibility problem. Apparently it&amp;#39;s pretty bad
in education research. I mentioned in my &lt;a href=&#34;http://cestlaz.github.io/posts/sigcse2018-code-tracing&#34;&gt;earlier post&lt;/a&gt; that when a
researched does it once on a small group it&amp;#39;s research but when a
teacher did it over and over it&amp;#39;s an anecdote.
&lt;/p&gt;
&lt;p&gt;
When I was young I would listen to a master teacher tell me about how
he set up some experience - the one I&amp;#39;m remembering now is an
experiential / discovery lesson on triangle geometry. He&amp;#39;d talk about
all the hard work that went into prepping his class for this type of
lesson as well as the prep time for the lesson itself. He told me how
he did it four years ago and it was great but then the year after it
fell flat and how he changed it for the next year. How it worked in
third period but not seventh and why he thought it played out the way
it did. That&amp;#39;s a lot more reproduction than most &amp;#39;research&amp;#39; actually
gets and this is what a master teacher does all the time.
&lt;/p&gt;
&lt;p&gt;
Finally, I got tired of hearing how to do it by people who don&amp;#39;t
actually have to. If you&amp;#39;re going to talk the talk, you should walk
the walk. As a side, this problem is really bad with &amp;#34;thought leaders.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
All this sounds like I&amp;#39;m really down on education research or at least
the overarching system. I probably am but there are many education
researchers doing great work and I respect them immensely.
&lt;/p&gt;
&lt;p&gt;
They know they don&amp;#39;t have a magic bullet:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
This is what I tried with this population at this time and this is
what happened. You might want to try it or a variation on it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That&amp;#39;s a far cry from &amp;#34;here&amp;#39;s how to teach&amp;#34;
&lt;/p&gt;
&lt;p&gt;
The researchers who acknowledge that their experience as college
researchers or even teaching faculty are different from a k12 teacher
and that no matter how hard they try to work out all the variables
they can only ever account for a tiny fraction of them.
&lt;/p&gt;
&lt;p&gt;
The key is that they&amp;#39;re adding another drop into the bucket of
knowledge. Over time it adds up. I have great respect for everyone
doing this.
&lt;/p&gt;
&lt;p&gt;
These researchers have to keep prodding us teachers to re-evaluate our
practice and then either take or incorporate the research or reject it
after determining if it would be good or not for our population. At
the same time, it&amp;#39;s up to practitioners to keep pushing back against
magic bullet research and the one true way.
&lt;/p&gt;
&lt;p&gt;
We all have a role to play in this game.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sigcse2018 - Code Tracing</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-code-tracing/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-code-tracing/</guid>
      <description>&lt;p&gt;
Next up from SIGCSE is &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159527&#34;&gt;An Explicit Strategy to Scaffold Novice Program
Tracing&lt;/a&gt; by Benjamin Xie, Greg Nelson and Andy Ko, presented by
Benjamin Xie.
&lt;/p&gt;
&lt;p&gt;
The core of Xie&amp;#39;s presentation was that tracing through code is a good
thing and that spending a short amount of time teaching code
tracing can lead to improved student outcomes.
&lt;/p&gt;
&lt;p&gt;
The idea is simple. Walk through the code as though you were the
computer running your program. Xie suggested that students frequently
struggle with code tracing. They have a hard time keeping track of
variables, they try to work entirely in their head and being novices,
they don&amp;#39;t have any good way of representing overall program
state. Personally, I also think there&amp;#39;s a resistance these days to
doing thing by hand. Xie noted that students can trace through their
programs using online tools such as debuggers with steppers but doing
so is a passive process. The student just clicks next over and over
again. They aren&amp;#39;t actively engaged in the code tracing.
&lt;/p&gt;
&lt;p&gt;
That last point is a very important one. That passive clicking through
a stepper seems similar to me to students ignoring compiler warnings
or students using robust auto completion or snippets which I believe
retards their learning of fundamental constructs.
&lt;/p&gt;
&lt;p&gt;
Xie shared a simple directed strategy to enable students to &amp;#34;embody
the computer:&amp;#34;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Read question: Understand what you are being asked to do. At the end of the problem instructions, write a check mark.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Find where the program begins executing. At the start of that line, draw an arrow.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Execute each line according to the rules of Java.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
From the syntax, determine the rule for each part of the line.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Follow the rules.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Update memory table(s).
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Find the code for the next part.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Repeat until the program terminates.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
When tracing through the code, a participant creates a memory
table with each method call…
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In additionn to the strategy, Xie produced a simple paper handout on
which students could write down variable values and easily organize
and store the computers state as they traced through a program.
&lt;/p&gt;
&lt;p&gt;
Xie noted that just a few minutes of instruction to give the kids a
concrete method of code tracing can provide big postitive returns.
&lt;/p&gt;
&lt;p&gt;
The presentation was terrific and all true and I&amp;#39;m sure of tremendous
value to anyone in the audience not familiar with code tracing but it
was also the presentation that led me to compose this tweet:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Loving the &lt;a href=&#34;https://twitter.com/hashtag/sigcse2018?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#sigcse2018&lt;/a&gt; sessions but so many talks from higher Ed people remind me that while k12 can learn much about content from higher Ed, profs could learn so much from teachers about teaching&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/967066702143000578?ref_src=twsrc%5Etfw&#34;&gt;February 23, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
While Xie&amp;#39;s presentation was terrific, code tracing and teachers
showing explicit code tracing strategies to kids is nothing new. I
remember being taught about this back in the 80s. We called it a &amp;#34;desk
check&amp;#34; back then. While it&amp;#39;s true that maybe this was explicitly
taught because we were using punch cards and our programs were run
overnight, it was also taught to me by math teachers with very
limited CS knowledge. It&amp;#39;s also a practice that appears to be pretty
common among High School CS teachers even when their content
knowledge is spotty. We also frequently employ things like state
diagrams, cons cell diagrams, and other techniques to capture state
and assist in program tracing.
&lt;/p&gt;
&lt;p&gt;
This seemed to me to be a great example of something that in my
experience is a not uncommon technique for high school CS teachers but
maybe isn&amp;#39;t used as widely at the college level (?).
&lt;/p&gt;
&lt;p&gt;
The other thing this made me think about was the divide between
practitioners and researchers. I think everyone knows which camp I&amp;#39;m
in. Andy Ko, Benji Xie&amp;#39;s advisor and co-author mentioned this in his
&lt;a href=&#34;https://medium.com/bits-and-behavior/sigcse-2018-trip-report-cs-for-all-57f1cf94155f&#34;&gt;SIGCSE summary&lt;/a&gt;. When I read the actual paper, it notes that they
basically worked with 24 students and looked at the results. So,
that&amp;#39;s research. On the other hand, when I share a takeaway from
looking at my 150 kids a year whom I met five days a week and look at
this over decades, it&amp;#39;s just an anecdote. Hmmmm.
&lt;/p&gt;
&lt;p&gt;
One other side point is that in Andy&amp;#39;s summary he notes his perception
that SIGCSE is largely a teacher&amp;#39;s conference as opposed to other
conferences he goes to which he says are more researcher&amp;#39;s
conferences. I&amp;#39;ve only been to two SIGCSE&amp;#39;s but my teacher friends tell
me that they feel that SIGCSE is more of a researcher&amp;#39;s conference and
CSTA is more of a teacher&amp;#39;s conference. I guess it&amp;#39;s all a matter of
perspective and frame of reference. Also possibly because I think of
teacher as K12 teachers as teachers and professors as profressors be
they research or teaching faculty.
&lt;/p&gt;
&lt;p&gt;
Finally ,given all of this, was the talk and paper of value?
Tremendously so. I don&amp;#39;t think it&amp;#39;s a new technique and I think it&amp;#39;s
fairly well disseminated in the K12 space but that said, it&amp;#39;s a good
technique and it will be new to some. It&amp;#39;s also hard to get students
these days to meticulously do anything on paper and sharing a
successful practice is always of great value. Finally, it left me
thinking about extending online environments such as &lt;a href=&#34;http://thonny.org/&#34;&gt;Thonny&lt;/a&gt; to support
restricted code tracing where the students would have to enter the
state of all changed variables in a given line before the stepper
would move to the next one.
&lt;/p&gt;
&lt;p&gt;
I very much enjoyed this SIGCSE session. You can read the paper linked
at the top if you have access to the ACM Digital Library. If not, you
can read Benji Xi&amp;#39;s medium post &lt;a href=&#34;https://medium.com/bits-and-behavior/teaching-a-strategy-for-reading-code-fbc9f4044cab&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 44 - An org-mode workflow for application processing</title>
      <link>https://cestlaz.github.io/posts/using-emacs-44-pdf/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-44-pdf/</guid>
      <description>&lt;p&gt;
One of my titles at Hunter College is Director of the Daedalus CS
Honors program. It&amp;#39;s something like a Hunter specific, CS specific
version of the CUNY Macaulay Honors program.
&lt;/p&gt;
&lt;p&gt;
Hunter gives all its students the ability to get a great computer
science education at a fraction of the cost of a private institution
and if you&amp;#39;re a Daedalus scholar you also get a scholarship, a laptop,
special classes (with me :-) ), activities and more. Just the other
day we visited  &lt;a href=&#34;http://samsungnext.com/&#34;&gt;Samsung Next&lt;/a&gt; accelerator and earlier in the year we
made our annual visit to &lt;a href=&#34;http://www.catskillsconf.com/&#34;&gt;Catskills Conf&lt;/a&gt;, arguably my favorite event of
the year.
&lt;/p&gt;
&lt;p&gt;
When deciding on which students to recommend for acceptance, I try to
glean as much information as I can about each applicant. When I feel
there&amp;#39;s not enough information, I&amp;#39;ve been known to reach out to
recommenders and other sources for more. But first I go through the
applications. For each student, I&amp;#39;m provided with a pdf file with a
bunch of data and also an entry in an internal Hunter online form with
even more.
&lt;/p&gt;
&lt;p&gt;
For the first cohort, this wasn&amp;#39;t a big deal. I hadn&amp;#39;t even started at
Hunter when the applications closed so there was no
outreach. Everything was after the fact so there were very few
students to evaluate.
&lt;/p&gt;
&lt;p&gt;
Last year, I was able to do some outreach and we had around 60 or so
applications for a little over 20 spots.
&lt;/p&gt;
&lt;p&gt;
This year, there are well over 100 applicants (and we&amp;#39;re looking to
grow the program by a large number of students). All of a sudden, it
wasn&amp;#39;t so easy to navigate all the pdf files.
&lt;/p&gt;
&lt;p&gt;
Emacs to the rescue. Using a combination of org-mod,  &lt;a href=&#34;https://github.com/politza/pdf-tools&#34;&gt;pdf-tools&lt;/a&gt;, and
&lt;a href=&#34;https://melpa.org/#/org-pdfview&#34;&gt;org-pdfview&lt;/a&gt; I&amp;#39;ve come up with a workflow that I very much like.
&lt;/p&gt;
&lt;p&gt;
Take a look and let me know what you think:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/LFO2UbzbZhA&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Sigcse2018 Bootstrapworld on Creativity in CS classes</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-bootstrap/</link>
      <pubDate>Fri, 02 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-bootstrap/</guid>
      <description>&lt;p&gt;
I really didn&amp;#39;t know what to expect at the &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159471&#34;&gt;Creativity, Customization,
and Ownership: Game Design in Bootstrap: Algebra&lt;/a&gt; session. I&amp;#39;ve been a
big fan of &lt;a href=&#34;http://www.bootstrapworld.org/&#34;&gt;Bootstrep&lt;/a&gt; for years and looking at the authors, &lt;a href=&#34;http://blog.acthompson.net/2017/10/cs-teacher-interview-emmanuel.html&#34;&gt;Emmanuel
Schanzer&lt;/a&gt;&amp;#39;s been a freind forever. I&amp;#39;ve never met &lt;a href=&#34;https://twitter.com/ShriramKMurthi&#34;&gt;Shriram Krishnamurthi&lt;/a&gt;
in person but am looking forward to it. We&amp;#39;ve traded emails and blog
comments. I&amp;#39;d like to consider him a friend and I certainly respect
him and his work even though we frequently disagree around the
edges. The third author and presenter, Kathi Fisler was new to me.
&lt;/p&gt;
&lt;p&gt;
The Bootstrap program is embedded in algebra classes. In it, students
use Racket (nee scheme) to reinforce math skills while building
computer science skills. The big student project is a graphical game.
&lt;/p&gt;
&lt;p&gt;
When designing the project, students are asked to decide on and find
four resources:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
The background image
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The player image
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The target image
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The enemy image
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Students are given a short amount of time to decide on and find these
four images. I think it was about ten minutes and that&amp;#39;s it. That&amp;#39;s
all the &amp;#34;creativity&amp;#34; in the assignment. After that, all the students
are essentially creating the same game with different skins.
&lt;/p&gt;
&lt;p&gt;
This design makes sense. You can&amp;#39;t have students going all over the
place. Constraining the assignment in this way allows teachers who
might now be strong in computer science to guide the kids through the
program to completion.
&lt;/p&gt;
&lt;p&gt;
At the time I was thinking: I really like all of this but is it really
open ended creativity and discovery with respect to math or computer
science? As it turned out, Fisler addressed this point at the end of
the talk in a way that made me vary happy.
&lt;/p&gt;
&lt;p&gt;
Fisler went on to describe the rest of the student experience and then
went on to talk about the statistics they gathered.
&lt;/p&gt;
&lt;p&gt;
One big takeaway was that while all the students were essentially
writing the same game varying only the graphical elements, this
encouraged students to create very different themes. They also created
rich stories around their games. The project might not have been
&amp;#34;creative&amp;#34; with respect to the CS or Math directions but it was certainly
creative in other important areas. The other takeaway was that
survey&amp;#39;s indicated all sorts of positives from the program as a whole
so the project didn&amp;#39;t seem to have suffered by having the students
essentially write the same program. Participants were proud of their
work, they felt their games were different from their peers and in
general the experience was good.
&lt;/p&gt;
&lt;p&gt;
During questions, someone asked about adding a fifth element - a
projectile or missile. It turns out that at one point the program had a
projectile component but that led to the vast majority of projects to
be themed in very similar ways. Even though not the same, it reminded me to something Randy
Pausch said in his &lt;a href=&#34;https://www.youtube.com/watch?v=ji5_MqicxSo&#34;&gt;Last Lecture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
You make whatever you want. Two rules: no shooting violence and no
pornography. Not because I’m opposed to those in particular, but you know, that’s been done with
VR, right? [laughter] And you’d be amazed how many 19-year-old boys are completely out of ideas
when you take those off the table.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
At the very end, Fisler addressed my questions about creativity and
discovery. She posed these questions of her own: &amp;#34;Do we overstate the
case for creativity?&amp;#34; and &amp;#34;Is pure constructivism a win?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve ranted on contructivism before. It can be great but a
constructivist lesson takes a knowledgeable educator and a lot of time,
preparation, and effort. It&amp;#39;s a big ask for, say, a high school
teacher who&amp;#39;s already taking home hours of work every evening. Too
often I&amp;#39;ve seen the following &amp;#34;contructivist&amp;#34; model instead:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Take an isntructor that doesn&amp;#39;t know their craft, the content, or
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
niether.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Let the kids play with stuff.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Show off the couple of autodidacts that figure it out as success
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
stories.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll rant more about this &amp;#34;model&amp;#34; with respect to the new buzz word
&amp;#34;lead learner&amp;#34; at some point in the future.
&lt;/p&gt;
&lt;p&gt;
On the creativity side, it&amp;#39;s important but there are also times for
the instructor to lead and for guidelines to be followed.
We want to foster creativity but that doesn&amp;#39;t mean that it&amp;#39;s 100%
creativity 100% of the time. Education is like life, a balance. The
Bootstrap program had to constrain the CS and math learning but
allowed for creativity in other areas. It&amp;#39;s smart and it&amp;#39;s a win.
&lt;/p&gt;
&lt;p&gt;
I still want to meet Shriram in person one day and now also Kathi
Fisler. I didn&amp;#39;t know what to expect walking in but I left the talk
reminded of why I&amp;#39;m such a fan of Emmanuel, his team, and their work.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sigcse2018 - Malloc Lab</title>
      <link>https://cestlaz.github.io/posts/sigcse2018-malloc-lab/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018-malloc-lab/</guid>
      <description>&lt;p&gt;
I wasn&amp;#39;t going to go to this session. I started out in a panel on
integrating social good into CS Ed. With the panel not meeting my
expectations I moved over to my second choice - the system programming
sessions where I saw &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159597&#34;&gt;Implementing Malloc: Students and Systems
Programming&lt;/a&gt;, a paper presented by &lt;a href=&#34;http://www.cs.cmu.edu/~bpr/&#34;&gt;Brian Railing&lt;/a&gt; of CMU.
&lt;/p&gt;
&lt;p&gt;
I really liked both the paper and the talk.
&lt;/p&gt;
&lt;p&gt;
CMU computer science students all take a systems course that uses
&lt;a href=&#34;https://www.amazon.com/Computer-Systems-Programmers-Perspective-3/dp/9332573905/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=Y5ZKG2V8ZYZZPZHQP8SQ&#34;&gt;Computer Systems: A Programmer&amp;#39;s Perspective&lt;/a&gt;. It&amp;#39;s a great book. I
read through the first edition years ago and felt it was great
resource not only in a systems course but also for self study. One of
the labs has the students implement their own memory allocation calls,
or &lt;strong&gt;malloc&lt;/strong&gt; for us old time C wonks.
&lt;/p&gt;
&lt;p&gt;
There were a number of self perceived  deficiencies with the
assignment such as encouraging bad programming style by modeling
less than ideal practices but the biggest deficiency as that students
could game the assignment. Students could do very well on the
assignment by exploiting knowledge of the assignment rather than by
writing a full and correct malloc implementation. One example is that
students were able to figure out that no allocation would be more than
100MB so they really didn&amp;#39;t have to deal with 64 bit pointers. They
could use smaller offsets thus simplifying the assignment. The
assignment became more about figuring out how to get it through the
grader and less about learning memory management. I&amp;#39;m sure I&amp;#39;m
overstating it but that&amp;#39;s the idea.
&lt;/p&gt;
&lt;p&gt;
Railing explained all of the deficiencies and then how they changed
the assignment to address them.
&lt;/p&gt;
&lt;p&gt;
At the end of the day, the assignment had fewer loopholes to game so
students had to really write the malloc library and presumably learn
about memory management.
&lt;/p&gt;
&lt;p&gt;
They also added an intermediate deliverable so students couldn&amp;#39;t leave
everything for the last minute.
&lt;/p&gt;
&lt;p&gt;
Near the end of the talk, Railing discussed results where he pointed
out that students final exam scores didn&amp;#39;t change but they did better
on the malloc questions. It wasn&amp;#39;t clear if the overall scores didn&amp;#39;t
change, meaning that the students did better on the malloc questions
but worse somewhere else or if they did similarly to past students on
the other sections and in addition they scored better on the malloc
questions. I&amp;#39;m not sold on the final exam questions being the best way
to evaluate learning but it is an easy data point.
&lt;/p&gt;
&lt;p&gt;
I loved the presentation and paper and I love what Railing is doing
but my big takeaway was…
&lt;/p&gt;
&lt;p&gt;
Well, Duh…
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
students aren&amp;#39;t doing as they should
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
teacher realizes students are gaming assignment
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
teacher reworks assignment
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
students do better
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Teachers do this all the time. Of course when we do it, it&amp;#39;s not
&amp;#34;research.&amp;#34; This was a recurring theme for me at SIGCSE2018 and I
tweeted it. While it&amp;#39;s true that K12 teachers can learn a lot about CS
content from higher ed, people in higher ed can learn a lot about
teaching from teachers.
&lt;/p&gt;
&lt;p&gt;
What Railing presented was terrific and important as changing
assignments like this will now be considered by people who haven&amp;#39;t
thought about this before but this is second nature to a teacher. Of
course I&amp;#39;m talking about a good teacher, not one who blindly follows
scripted lessons.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t mean this as a slight to professors. They&amp;#39;re hired and
promoted based on research so much of their job involves another skill
set. I know many professors who care very much about teaching but they
might only teach one or two classes a semester that meets once or
twice a week while a typical high school teacher meets 150 students a
day five days a week over five different classes a day.  Much more of
an opportunity for deliberate practice.
&lt;/p&gt;
&lt;p&gt;
This presents a huge challenge. How can professors who are hired and
promoted as researchers be given the time and ability to develop as
teachers? What about adjuncts or Teaching Assistants? I&amp;#39;d imagine it&amp;#39;s
even harder for them. I know that colleges have lines for teaching
faculty but from what I can see, those instructors are usually super
overloaded with classes and students so that doesn&amp;#39;t solve the
problem. Even if you do have teaching faculty that have the time to
develop their craft, how do you get those teaching chops over to the
research faculty?
&lt;/p&gt;
&lt;p&gt;
After the session, I was talking about this with &lt;a href=&#34;http://www.cs.cmu.edu/~mjs/&#34;&gt;Mark Stehlik&lt;/a&gt;,
Assistant Dean at CMU&amp;#39;s School of Computer Science. Mark was telling
me about CMU&amp;#39;s efforts to develop teaching faculty across the
disciplines. I was happy to hear about the efforts CMU was taking but
it sounds like they have the same challenges with respect to pedagogy
as everyone else. If it&amp;#39;s a challenge for CMU with all their
resources, what does that mean for the rest of us?
&lt;/p&gt;
&lt;p&gt;
Still, it was encouraging to go to a number of sessions where it was
clear that professors - both teaching and research faculty are serious
about the craft of teaching and conferences like SIGCSE can bring them
together with those of us who don&amp;#39;t have the chops as researchers but
do so as teachers.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2018</title>
      <link>https://cestlaz.github.io/posts/sigcse2018/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse2018/</guid>
      <description>&lt;p&gt;
I just got back from SIGCSE2018 - the big annual conference on
computer science education. Although I&amp;#39;ve been in this racket for
decades, this was only my second SIGCSE and once again I had a blast.
&lt;/p&gt;
&lt;p&gt;
As with most conferences, a highlight was the &amp;#34;hallway track&amp;#34; where I
got to spend time with friends and colleagues from all over the
country. I also got to check off a few names from the &amp;#34;people I&amp;#39;ve
been following online and want to meet in person&amp;#34; list. There are a
few more on the list but it&amp;#39;s getting smaller.
&lt;/p&gt;
&lt;p&gt;
The theme was &lt;strong&gt;CS For All&lt;/strong&gt; but the range of topics covered was both
wide and deep.
&lt;/p&gt;
&lt;p&gt;
For me, I left thinking about a few themes:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
College faculty can learn a lot from K12 teachers in terms of
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
pedagogy and teaching.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
So can &amp;#34;thought leaders,&amp;#34; policy makers, and big companies.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Colleges face a huge challenge in both developing pedagogues and
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
transfering pedagogical knowledge over to researchers.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Can you do both CS4All and have quality CS teachers in the short
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
term (I doubt it)?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Researchers vs Practitioners and the value of listening to one or
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
the other.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Nifty assignments are frequently regular assignments reskinned with
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
graphics.
&lt;/p&gt;
&lt;p&gt;
There were a few sessions that dissapointed me but most of the ones I
attende were terrific. I thought I&amp;#39;d blog about some of them in detail over
the next few weeks.
&lt;/p&gt;
&lt;p&gt;
Here are the sessions I&amp;#39;m planning on writing about:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159597&#34;&gt;Implementing Malloc: Students and SYstems Programming&lt;/a&gt; presented by Brian
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Railing
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
[[&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159471][Creativity,&#34;&gt;https://dl.acm.org/citation.cfm?id=3159471][Creativity,&lt;/a&gt; Customization, and Onwership: Game Design in Bootstrap:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Algebra]], presented by Kathi Fisher
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159527&#34;&gt;An Explicit Strategy to Scaffold Novice Program Tracing&lt;/a&gt;, presented
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
by Benjamin Xie
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159557&#34;&gt;Strategies for Basing the CS Theory Course on Non-decision Problems&lt;/a&gt;,
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
presented by John MacCormick
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
[[&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3159609][Connect&#34;&gt;https://dl.acm.org/citation.cfm?id=3159609][Connect&lt;/a&gt; the Dots to Prove It: A Novel Way to Learn Proof
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Construction]], by McCartin-Lim, Woolf, and Mcregor
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Google Supporter Session on Incorporating Machine Learning into
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
University Courses.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3170601&#34;&gt;Nifty Assignments&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I might talk about a few other sessions as well.
&lt;/p&gt;
&lt;p&gt;
Overall it was a great conference. I look forward to sharing my
experiences with all of you in the coming posts.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 43 - Music with MPD</title>
      <link>https://cestlaz.github.io/posts/using-emacs-43-music/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-43-music/</guid>
      <description>&lt;p&gt;
I like to listen to music at work. Sometimes I just stream from
YouTube, Soundcloud, Spotify or some other online source but if you&amp;#39;re
a person of a certain age, like me, you probably have quite an mp3
collection. All those CDs that have been ripped not to mention some
converted vinyl.
&lt;/p&gt;
&lt;p&gt;
I used to use the &lt;a href=&#34;https://www.musicpd.org/&#34;&gt;Music Player Daemon&lt;/a&gt; or MPD back in the day. It would
run in the background and you could connect to it using lots of
&lt;a href=&#34;https://www.musicpd.org/clients/&#34;&gt;clients&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When I was running Ubuntu and Mint Linux, I had some trouble setting
up MPD but the process is much smoother using Manjaro which is Arch
based and I&amp;#39;m currently enjoying.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a video on how I set up MPD and also use Emacs to control it.
&lt;/p&gt;
&lt;p&gt;
Coincidentally, on the same day I recorded this, &lt;a href=&#34;https://www.youtube.com/channel/UCDEtZ7AKmwS0_GNJog01D2g/feed&#34;&gt;Uncle Dave&lt;/a&gt; put up a
similar &lt;a href=&#34;https://www.youtube.com/watch?v=xTVN8UDScqk&#34;&gt;video&lt;/a&gt;. Dave also sets up MPD on an Arch based linux but he
uses EMMS for his player. I ultimately end up with Simple-MPC with
briefs stops at the built in MPC mode and Mingus along the way.
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/LWd60rc_rQ0&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Testing, Testing</title>
      <link>https://cestlaz.github.io/posts/testing-testing/</link>
      <pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/testing-testing/</guid>
      <description>&lt;p&gt;
With CS4All being the buzzword of the day we&amp;#39;re paying a lot of
attention to the fact that when we teach a CS class for all students,
most of them won&amp;#39;t end up studying CS or going directly
into a tech heavy field.
&lt;/p&gt;
&lt;p&gt;
Among those that do study CS though, there is another division. Those
studying CS as an academic exercise or to go on to graduate studies
and those who are going in to the tech sector. For those going into
the tech field, it&amp;#39;s important that they&amp;#39;re prepared in terms of
software development, design, and all those goodies not covered in CS
classes.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not advocating removing the good stuff currently in most colleg CS
curricua, although I will say that most CS programs I&amp;#39;ve reveiwed could benefit by
trimming some requriements and adding some electives. I am advocating
doing more than telling your students &amp;#34;comment your code,&amp;#34; - a refrain
many undergrads have heard frequently with little guidance.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m advocating to begin by bringing in tools and practices that either
don&amp;#39;t detract from current CS classes or in fact can add to or
streamline them.
&lt;/p&gt;
&lt;p&gt;
Last year I wrote about &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4/&#34;&gt;using Git and GitHub&lt;/a&gt; in my classes. Students
have to submit projects anyway and frequently have to work in teams so
using Git and a Git hosting service can actually make both student&amp;#39;s
and instructor&amp;#39;s class experiences better while introducing them to an
industry best practice.
&lt;/p&gt;
&lt;p&gt;
Today I want to talk about testing.
&lt;/p&gt;
&lt;p&gt;
Students are always told to test their code but frequently not given
tremendous guidance. The results can be:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
projects that don&amp;#39;t compile
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
projects that compile and run but not the way they&amp;#39;re supposed to.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
wonky input or interfaces
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
projects that don&amp;#39;t work for all cases
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
On the instructor side, we have to evaluate the student&amp;#39;s
submissions and deal with all of this. Some teachers use auto graders
to help. I have mixed feelings on them. On the one hand they can speed
up grading but on the other hand it&amp;#39;s important for me as the teacher
to actually dive into the student&amp;#39;s code. In any case, using an auto grader
is actually somewhat similar to running a test suite.
&lt;/p&gt;
&lt;p&gt;
Why not have the students create their own test suites? If done right,
this should encourage students to evaluate their own code more
carefully and also cut down on the time it takes the intructor to
evaluate a given submission.
&lt;/p&gt;
&lt;p&gt;
This means that we have to use a testing framework with a very low
cost of entry.
&lt;/p&gt;
&lt;p&gt;
I ended up finding &lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt; for C++. It&amp;#39;s really simple and just a
single include file. This means that students don&amp;#39;t have to actually
install anything on their machines. Here&amp;#39;s the example from the
project page:
&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://github.com/onqtam/doctest/raw/master/scripts/data/using_doctest_888px_wide.gif&#34; alt=&#34;https://github.com/onqtam/doctest/raw/master/scripts/data/using_doctest_888px_wide.gif&#34; title=&#34;https://github.com/onqtam/doctest/raw/master/scripts/data/using_doctest_888px_wide.gif&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;
Basically, the students can just start writing tests.
&lt;/p&gt;
&lt;p&gt;
Python also has a couple of low friction testing options. One is to
use the built in &lt;a href=&#34;https://docs.python.org/3/library/doctest.html&#34;&gt;doctest&lt;/a&gt; facility. Basically you put sample runs in the doc
string at the top of a function with the expected output:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This might seem a little cumbersome, particularly if you look at the
example at the link. It also requires the tests go on top of each
function and that the tests will print out as part of the docstring.
&lt;/p&gt;
&lt;p&gt;
The other easy Python option is the built in &lt;a href=&#34;https://docs.python.org/3/library/unittest.html&#34;&gt;unittest&lt;/a&gt; module.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an example of testing strings from the link above:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I havn&amp;#39;t played with Java testing in years but I&amp;#39;d guess there&amp;#39;s
something similarly light weight.
&lt;/p&gt;
&lt;p&gt;
Tomorrow I&amp;#39;m hoping to finish the groundwork on using C++ doctest with
my class and I&amp;#39;ll write another post afterwards. Probably after SIGCSE
since I&amp;#39;ll be attending that from Wednesday on.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll see how this goes but I&amp;#39;m guessing it will work well. If it
does, it should make my life as a grader easier and also get the kids
on track to using test frameworks - something they&amp;#39;ll need wherever
they end up.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 42 - Git Gutter and Time Machine</title>
      <link>https://cestlaz.github.io/posts/using-emacs-42-git-gutter/</link>
      <pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-42-git-gutter/</guid>
      <description>&lt;p&gt;
One day I&amp;#39;ll do a Magit video but since there are already some good
ones out there I thought I&amp;#39;d share a couple of other great git related
packages.
&lt;/p&gt;
&lt;p&gt;
The first is &lt;a href=&#34;https://github.com/syohex/emacs-git-gutter/tree/00c05264af046b5ce248e5b0bc42f117d9c27a09&#34;&gt;Git Gutter&lt;/a&gt; which adds markers on the side gutter of your
buffer so you know what&amp;#39;s changed since you&amp;#39;re last commit. I pretty
much use it exclusively for that visual but it can also be used to
cmmit and revert individual chunks of your changes.
&lt;/p&gt;
&lt;p&gt;
The second is &lt;a href=&#34;https://github.com/pidu/git-timemachine&#34;&gt;Git Timemachine&lt;/a&gt; which lets you move forward and back
between commits.
&lt;/p&gt;
&lt;p&gt;
The video demos both.
&lt;/p&gt;
&lt;p&gt;
Enjoy
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/P-mLxkb-EE8&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 41 Pandoc</title>
      <link>https://cestlaz.github.io/posts/using-emacs-41-pandoc/</link>
      <pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-41-pandoc/</guid>
      <description>&lt;p&gt;
Another Emacs quick hit today. Actually, not really Emacs. Today&amp;#39;s
video is a quick, really quick, look at &lt;a href=&#34;https://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt;. Pandoc is a document
converter.
&lt;/p&gt;
&lt;p&gt;
Here are the formats that Pandoc can covert read from:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Markdown, CommonMark, PHP Markdown Extra, GitHub-Flavored Markdown,
MultiMarkdown, and (subsets of) Textile, reStructuredText, HTML,
LaTeX, MediaWiki markup, TWiki markup, TikiWiki markup, Creole 1.0,
Haddock markup, OPML, Emacs Org mode, DocBook, JATS, Muse, txt2tags,
Vimwiki, EPUB, ODT, and Word docx.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And here are the ones it can write to:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
plain text, Markdown, CommonMark, PHP Markdown Extra, GitHub-Flavored
Markdown, MultiMarkdown, reStructuredText, XHTML, HTML5, LaTeX
(including beamer slide shows), ConTeXt, RTF, OPML, DocBook, JATS,
OpenDocument, ODT, Word docx, GNU Texinfo, MediaWiki markup, DokuWiki
markup, ZimWiki markup, Haddock markup, EPUB (v2 or v3), FictionBook2,
Textile, groff man, groff ms, Emacs Org mode, AsciiDoc, InDesign ICML,
TEI Simple, Muse, PowerPoint slide shows and Slidy, Slideous,
DZSlides, reveal.js, PDF
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That&amp;#39;s pretty impressive
&lt;/p&gt;
&lt;p&gt;
I was faced with an html file describing a lab for all the CSCI13500
students at Hunter. I wanted to modify it for my class and that was
going to be a bear. I also wanted an easy way to have it render up on
GitHub. With pandoc, it was trivial. I just typed:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pandoc -f html -t org -o lab3.org lab3.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
which converted the file to org-mode. This was trivial to edit and
then I uploaded it to GitHub as the lab&amp;#39;s Readme.org file which GitHub
automatically renders on the project page.
&lt;/p&gt;
&lt;p&gt;
Pandoc for the win.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also used pandoc to move between org-mode and word files.
&lt;/p&gt;
&lt;p&gt;
If you haven&amp;#39;t checked out pandoc, you should.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/qVUZsH-MDRM&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Google Sheets</title>
      <link>https://cestlaz.github.io/posts/google-sheets/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/google-sheets/</guid>
      <description>&lt;p&gt;
I make regular use of Google&amp;#39;s office suite. I use Google forms all
the time to collect data, Google docs when I have to leave Emacs for
document preparation - usually when I have to collaborate with others
online and I use Google Sheets as my greadebook.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t do a lot of data processing using Google sheets. For that I
download the data and write small scripts. On the other hand it turns
out that you can do some pretty nifty things by scripting right in
Google sheets.
&lt;/p&gt;
&lt;p&gt;
Google sheets can be scripted using Javascript and Google&amp;#39;s APIs. For
example, adding &amp;#34;hello&amp;#34; and &amp;#34;world&amp;#34; to the two bottom leftmost cells
in your active spreadsheet can be done by running a function like
this:
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In general, it&amp;#39;s pretty easy to grab, modify, or otherwise manipulate
cells from a spreadsheet with simple javascript.
&lt;/p&gt;
&lt;p&gt;
You can also send email from a Google app script. For me this was a
big win. I use it for emailing grades to students and also as a poor
man&amp;#39;s mailmerge. The key call is:
&lt;/p&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here&amp;#39;s a video walking through sending emails to a list of people from
a spreadsheet. The code is underneath.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/EvQC1N9JMs0&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;div class=&#34;src src-javascript&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 40 - Atomic Chrome</title>
      <link>https://cestlaz.github.io/posts/using-emacs-40-atomic-chrome/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-40-atomic-chrome/</guid>
      <description>
&lt;p&gt;
Thanks to everyone who voted for topics or commented with suggestions
for videos. I&amp;#39;ll try to get to them in the coming months.
&lt;/p&gt;
&lt;p&gt;
Today is just a quick hit on Atomic Chrome - an Emacs package and
browser extension that allows you to edit web form inputs with Emacs.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
UPDATE
&lt;/h2&gt;
&lt;p&gt;
I forgot to mention that you can set a shortcut key, at least in chrome rather than
clicking on the icon. This makes things much smoother.
&lt;/p&gt;
&lt;p&gt;
All you have to do is:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Go to &lt;strong&gt;&lt;strong&gt;chrome://extensions&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
On the bottom of the page you&amp;#39;ll see a button to set &lt;strong&gt;&lt;strong&gt;keyboard shortcuts&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Set the shortcut for Atomic Chrome
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Enjoy:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/wyPZws66Sic&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>On Textbooks</title>
      <link>https://cestlaz.github.io/posts/textbooks/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/textbooks/</guid>
      <description>&lt;p&gt;
I thought I&amp;#39;d answer Alfred Thompson&amp;#39;s recent post on &lt;a href=&#34;http://blog.acthompson.net/2018/01/thinking-about-cs-textbooks.html&#34;&gt;using
textbooks&lt;/a&gt;. Like Alfred, I&amp;#39;ve never used textbooks particularly
effectively. Even when I taught math I mostly used them as a resource
for problems.
&lt;/p&gt;
&lt;p&gt;
I also agree with Alfred in questioning the &amp;#34;flipped class&amp;#34; model or
as I like to call it &amp;#34;homework&amp;#34; for reasons similar to Alfred&amp;#39;s.
&lt;/p&gt;
&lt;p&gt;
Even back in the Pascal days of APCS getting textbooks was an ordeal
in NYC. First, the book had to cover both the A and AB parts of the
class since I rarely had budget to buy two books for a class, then
they had to be sold by the high school division of the publishing
house eliminating many college texts and finally we had to get the
books on the &amp;#34;NYSTL list&amp;#34; so we could buy and pay for them.
&lt;/p&gt;
&lt;p&gt;
I finally found a book I liked that covered the full year by Nance and
Naps. By then I knew that I wouldn&amp;#39;t really work it into the class but
I felt that it explained things, the data structures and algorithms in
particular very well.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s one thing I always look for in a text book. If I&amp;#39;m not tightly
integrating the text then I want the text to be a worthwhile resource
for the student. If a kid doesn&amp;#39;t get it in class I want the text book
to be a second chance.
&lt;/p&gt;
&lt;p&gt;
When we moved to C++ we moved to Nance and Naps for the language and
Nance and Lambert for the Data Structures. Somehow I got the school to
fund both books.
&lt;/p&gt;
&lt;p&gt;
Everything changed when the AP class went to Java. I never found a
Java based book that covered the data structures in a way I liked but
finding a text was a problem even beyond that hurdle.
&lt;/p&gt;
&lt;p&gt;
All of the Java based texts tightly integrated with some project or
library provide by the author. It was just like the AP case study. If
the case study worked well into your course and the way you taught it
was great, otherwise it was a bear to deal with. I settled on Lewis
and Loftus which integrated their own graphics library but always as
an add on to each chapter rather than tightly integrated.
&lt;/p&gt;
&lt;p&gt;
For my homebrew classes, I&amp;#39;ve never found a single textbook. The nice
thing today is that there are so many resources already
available. Tutorials, videos, online practice sites like codingbat and
more. There are also a number of authors who make their books
available online for free. I use one - &lt;a href=&#34;https://automatetheboringstuff.com/&#34;&gt;Automate the Boring Stuff with
Python&lt;/a&gt; in one of my classes but I purchased a copy for myself and
encourage my students to do so as well if/when they&amp;#39;re able to based
on economic situation. Usually I can cobble together a good set of
resources for the students that are both free and probably superior to
any single text book out there.
&lt;/p&gt;
&lt;p&gt;
All of this said, it&amp;#39;s important that students have resources
independent of the teacher. If you can get a good textbook, that can
be it but fortunately, in this day and age we have many great
alternatives.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is Teaching CS Hard?</title>
      <link>https://cestlaz.github.io/posts/is-teaching-cs-hard/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/is-teaching-cs-hard/</guid>
      <description>&lt;p&gt;
Last week, Mark Guzdial asked &lt;a href=&#34;https://computinged.wordpress.com/2018/01/19/what-does-it-mean-for-computer-science-to-be-harder-to-learn-than-other-stem-subjects/&#34;&gt;What does it mean for Computer Science to be harder to learn
than other STEM subjects?&lt;/a&gt; as a follow up to his &lt;a href=&#34;https://cacm.acm.org/blogs/blog-cacm/224105-learning-computer-science-is-different-than-learning-other-stem-disciplines/fulltext&#34;&gt;ACM Blog post&lt;/a&gt; this
month and the ensuing discussion.
&lt;/p&gt;
&lt;p&gt;
You should read both posts but here&amp;#39;s how Mark started off the follow
up:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I made an argument in my Blog@CACM Post for this month that “Learning
Computer Science is Different than Learning Other STEM Disciplines,”
and on Twitter, I explicitly added “It’s harder.”
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When you talk about how hard or easy it is to teach a subject you can
do so at many levels. college, high school, middle etc.. Since most of
my career has been as a High School guy, let&amp;#39;s focus there.
&lt;/p&gt;
&lt;p&gt;
I do in fact believe that it is hard to teach CS, at least to do it
well but is it harder to teach then other STEM subjects?
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s see how we&amp;#39;re doing in those other subjects. I took a look at
the New York State &lt;a href=&#34;https://data.nysed.gov/reportcard.php?instid=800000081568&amp;amp;year=2016&amp;amp;createreport=1&amp;amp;regents=1&#34;&gt;Regents Exam&lt;/a&gt; results from 2015/2016. I&amp;#39;m certainly
not a believer or supporter of standardized tests but they&amp;#39;re a
convenient measure for the sake of this post.
&lt;/p&gt;
&lt;p&gt;
Only 58% of test takers scored 65 or higher on Integrated Algebra and
only 41% scored 3 (proficient) or higher on the Common Core version
with far more students taking the Common Core exam.
&lt;/p&gt;
&lt;p&gt;
Higher performing schools frequently offer Algebra in 8th grade but in
the lower performing districts, students frequently take it over the
course of two years.
&lt;/p&gt;
&lt;p&gt;
The Geometry regents boasts a passing rate of about 40%. Trig does a
little better.
&lt;/p&gt;
&lt;p&gt;
The science regents exams look a little better but overall, these are
not terrific results, particularly on the classes that are required
for graduation.
&lt;/p&gt;
&lt;p&gt;
It seems that those other STEM fields aren&amp;#39;t so easy to teach after all.
&lt;/p&gt;
&lt;p&gt;
On the other hand we have CS. If you listen to all the press releases
and media attention on APCS-P from this past year it would seem that
CS is easy to teach and learn. We have all these high school students
mastering a &amp;#34;college level&amp;#34; course and we can prepare teachers to be
master CS instructions with just a bit of in-service professional
development.
&lt;/p&gt;
&lt;p&gt;
The truth is, of course that CS isn&amp;#39;t easy to teach. When you&amp;#39;re a
summer or after school program or even an elective it&amp;#39;s easy to create
a fun experience using shiny tools to self selecting students but when
you have to take everyone and prepare many of them to succeed in more
advanced classes we have a real challenge. We really should be looking
at retention in more advanced CS classes rather than just passing the
intro ones. Most students won&amp;#39;t go beyond the intro class in any given
subject but the ones that do must be well prepared. Unfortunately, I
fear that the people who will get the blame when kids drop CS later on
will be the teachers of the more advanced classes regardless of who,
if anyone, is at fault.
&lt;/p&gt;
&lt;p&gt;
Teaching CS is hard. It&amp;#39;s brand new and very open ended.  When
programming a solution to a problem kids start with a blank
slate. They don&amp;#39;t have the library of patterns, vocabulary or &lt;a href=&#34;https://cestlaz.github.io/posts/programming-idioms&#34;&gt;idioms&lt;/a&gt;
needed to build solitions. There are many ways a teacher can scaffold
the learning. Code tracing, analogies, Parsons problems and more but
the truth is teachers strong in both content and pedagogical knowledge
are still in rather short supply and as Mark wrote on his blog the
body of knowledge on teaching CS is just not that mature.
&lt;/p&gt;
&lt;p&gt;
On the other hand, Algebra students usually had a first look at some
of the topics prior to the class and much of the class can be
&amp;#34;learned&amp;#34; through memorizing relatively short procedures and
patterns. This might not lead to a depth of understanding but it does
get you past standardized tests. On the science side, the Living
Environment exam is really just a reading test.  On the other hand,
we&amp;#39;re supposed to start teaching proof to students in Geometry and
that&amp;#39;s really hard to do.
&lt;/p&gt;
&lt;p&gt;
So, teaching in general is hard and teaching CS is no exception. At
least it is if you&amp;#39;re doing it right.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reading and Writing Recs</title>
      <link>https://cestlaz.github.io/posts/reading-and-writing-recs/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/reading-and-writing-recs/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been on both sides of the recommendation game. I currently read
all the recommendations for students who apply to my &lt;a href=&#34;http://info.huntercs.org&#34;&gt;honors CS program&lt;/a&gt;
at Hunter and some of the ones written for the Macaulay Honors
program. I also read some for the CSTUY summer program. On the other
side, I&amp;#39;ve written hundreds if not thousands of recs for seniors when
I was teaching at Stuy.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been meaning to write about recs  and when I saw &lt;a href=&#34;http://avc.com/2018/01/some-thoughts-on-checking-references/&#34;&gt;yesterday&amp;#39;s post&lt;/a&gt;
on AVC.com I thought now would be a good time. While the situation is
not quite the same, much of what Fred wrote resonated strongly with
me.
&lt;/p&gt;
&lt;p&gt;
I wrote a lot of recs at Stuy. In a year after I taught juniors I&amp;#39;d
typically end up writing for anywhere between 40 and 75 kids and each
kid would apply to between 5 and 15 schools. Some were accepted early
and in many cases you use the same rec without tweaking for all the
kid&amp;#39;s applications but it&amp;#39;s still an enormous load.
&lt;/p&gt;
&lt;p&gt;
I also don&amp;#39;t think I&amp;#39;m particularly good at it. Writing doesn&amp;#39;t come
naturally to. That said, I try to do an honest job.
&lt;/p&gt;
&lt;p&gt;
The first and most important thing I do is make sure each student
understands that I&amp;#39;m not trying to get that kid into their percieved
dream school. My job writing a rec is to contribute to a picture of
who they are as both a student and as a person. The hope is that the
college admissions people will be looking for best fit students and
that the picture the application creates makes the fit clear
[fn:1:Personally, I think the whole college application process is
both unfair and arbitrary but that&amp;#39;s a discussion for another time.].
&lt;/p&gt;
&lt;p&gt;
Beyond that, I try to say something personal in each rec. Recount a
particular project or event. It&amp;#39;s hard. It might be easier for
English teachers - English classes allow for much freer discussions
and assignments where students can reveal more about
themselves. It&amp;#39;s harder in subjects like Math and Computer
Science. I&amp;#39;d invariably be asked to write recs for a number of kids –
good kids that were quiet, did there thing but to be honest, never
did much to stand out. I don&amp;#39;t necessity mean stand out in terms of
grades, I mean in terms of making themselves known - revealing who
they were. I also try to keep recs short. Readers have a lot of these
to go through. I don&amp;#39;t want to add to their load.
&lt;/p&gt;
&lt;p&gt;
Many teachers, including myself try to address this problem. We
interview the kids, have them write mini-essays and just plain
struggle when it comes time to write.
&lt;/p&gt;
&lt;p&gt;
To make it more challenging, the deadlines are all together so you
have to get them all done in a short period of time and at the same
time not fall into the rut of having them sound all the same.
&lt;/p&gt;
&lt;p&gt;
On the reader side, similar to what Fred said about references, a lot
of it is about what isn&amp;#39;t written and about how it&amp;#39;s written. The
challenge is that my code as a reader might be different from the
teacher writing the rec.
&lt;/p&gt;
&lt;p&gt;
The key thing I look for when reading is a connection between the
writer and the kid. Often I read a rec and could apply it equally well
to every applicant in the stack. I also know that when I write recs
I&amp;#39;ve been guilty of this and it really does nothing to help the
student.
&lt;/p&gt;
&lt;p&gt;
I also don&amp;#39;t want to read about averages and test scores or anything
that&amp;#39;s already covered in the application. I already get the numbers
and if a kid, let&amp;#39;s say, volunteered at a community center, it&amp;#39;s already on the
application. I don&amp;#39;t want a teacher to mention it unless they
were involved or can otherwise add something that I wouldn&amp;#39;t know just
from reading the appkication.
&lt;/p&gt;
&lt;p&gt;
If I come away feeling that there&amp;#39;s a connection between the teacher
and student that says a lot to me. It means the kid made an impression
on the teacher.
&lt;/p&gt;
&lt;p&gt;
For my Hunter Honors program I have an advantage (or possibly curse)
over when I read for other programs and this is similar to what Fred
wrote about following up on references. I know some of the teachers
writing the recs and I usually know teachers in the schools. Since the
number of applications I&amp;#39;m dealing with isn&amp;#39;t huge, I can reach out to
my people and find out what&amp;#39;s what. Last year I was able to justify
accepting a student based on additional information I was able to get
and now half a year later it&amp;#39;s clear that the student is a terrific
fit.
&lt;/p&gt;
&lt;p&gt;
This would all be simpler if we didn&amp;#39;t have to play games with
recommendations. When I was a teacher. rather than writing 50 - 70
recommendations, I&amp;#39;d rather have 20ish phone calls. One with each
school. I could briefly talk about the kids relative to each other and
to former students who went to any given institution and that&amp;#39;s
that. It would be faster, easier, and fairer.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>APCS-P -  Bigger Intake Or Leaky Pipe</title>
      <link>https://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/apcsp-bigger-intake-or-leaky-pipe/</guid>
      <description>&lt;p&gt;
Advanced Placement Computer Science got top billing on Alfred
Thompson&amp;#39;s &lt;a href=&#34;http://blog.acthompson.net/2018/01/computer-science-education-things-im.html&#34;&gt;Things I&amp;#39;m Watching in 2017&lt;/a&gt; post. Alfred talks about how
APCS-P exploded onto the scene and wonders what will happen with APCS
this year.
&lt;/p&gt;
&lt;p&gt;
I have some questions as well but mine won&amp;#39;t be answered for years to
come, if ever.
&lt;/p&gt;
&lt;p&gt;
Like it or not, the College Board has an out sized influence on K12
education. As long as people are convinced that AP=good there will be
a push for more and more AP classes and APCS-P is a perfect class to
push. CS is the hot topic in K12, the topic is getting a big push
from both politicians and industry, the class has no pre-requisites
and in spite of being called a college course is somehow appropriate
for a typical tenth grader.
&lt;/p&gt;
&lt;p&gt;
The concern here is that at the end of the day. APCS-P is an exam or
rather an exam plus two other assessments. The quality can vary
greatly. I&amp;#39;ve heard of APCS-P implementations that seem pretty
rigorous and I&amp;#39;ve seen implementations that are, quite frankly, a
joke. The question is this: is APCS-P both motivating kids to go on to
the next level and just as importantly preparing them to succeed at
that level?
&lt;/p&gt;
&lt;p&gt;
We might never know.
&lt;/p&gt;
&lt;p&gt;
A high school might only offer APCS-P. If APCS-A isn&amp;#39;t offered, we
might not know if the student went on to take more CS and we won&amp;#39;t
know if the student succeeded or not. I&amp;#39;ve seen this with some very
high profile, popular, after school/summer non-profits. The kids have
a great time and the non-profits rave about how much their kids learn
but then the kids take a real CS class in school and drop like
flies. Was it the teacher/professor or did the non-profit set the kids up to
fail by convincing them they knew a whole lot more than they did and
that CS was super easy all the time.
&lt;/p&gt;
&lt;p&gt;
If credit is given for APCS-P, it looks like it will be blanket
credit. CS majors and minors will still have to take all the same classes in
college and CS so it will be very hard to tell if APCS-P is
responsible for any uptick in CS.
&lt;/p&gt;
&lt;p&gt;
At the end of the day, the College Board is going to make a lot of
money but if APCS-P becomes the standard high school CS course will
this leave us with true, quality CS4All? I have my doubts.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 2017 Recap</title>
      <link>https://cestlaz.github.io/posts/using-emacs-2017-recap/</link>
      <pubDate>Fri, 29 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-2017-recap/</guid>
      <description>&lt;p&gt;
This past year I recorded 14 Using Emacs videos. This is on top of the
25 videos I made last year. The fall off in production is
understandable. I got through my day to day configuration in the
late 20s and since then the videos have just been on things I&amp;#39;ve
rediscovered, things that became useful and things that I just found
interesting. It was also a busier year.
&lt;/p&gt;
&lt;p&gt;
Why did I start the series? Mostly for my students. There&amp;#39;s the built
in Emacs tutorial and other beginner resources but how do you go from
the basics to a real working configuration? For years I would show my
kids Emacs and use it in class but there was never a path for them to
follow from beginner to craftsman. I hoped the videos would fill the
void.
&lt;/p&gt;
&lt;p&gt;
It probably didn&amp;#39;t. I don&amp;#39;t think I&amp;#39;m getting greater Emacs adoption
from my students but on the other hand, I&amp;#39;ve found making the series
rewarding for other reasons.
&lt;/p&gt;
&lt;p&gt;
First and foremost, it&amp;#39;s allowed me to be an active contributing
member of the Emacs community. I haven&amp;#39;t written any Emacs packages
nor am I an active guy on any Emacs forums but this is a way I can do
my part.
&lt;/p&gt;
&lt;p&gt;
Second, although there hasn&amp;#39;t been a great deal of comments on the
videos or blog posts I&amp;#39;ve gotten to know a few people that I wouldn&amp;#39;t
have gotten to know otherwise.
&lt;/p&gt;
&lt;p&gt;
It also shows that that if you put things out there people might find
it useful. I don&amp;#39;t know how many people saw my Emacs posts at the
start but a year and half later I&amp;#39;ve got 1,700 YouTube
subscribers. Sure, that&amp;#39;s nothing compared to many YouTubers but
for a guy making schlocky videos at his desk about an as much as I hate to admit it
non-maintream editor, I think it&amp;#39;s pretty cool.
&lt;/p&gt;
&lt;p&gt;
The question is what to make videos on moving forward?
&lt;/p&gt;
&lt;p&gt;
I thought I&amp;#39;d throw it out to the community. Here&amp;#39;s an embedded
poll. Feel free to suggest other topics either on the blog or
as a Twitter reply.
&lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t promise I&amp;#39;ll get to all or any but I&amp;#39;ll certainly check out
the popular suggestions.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;&lt;a href=&#34;http://www.easypolls.net/ext/scripts/emPoll.js?p=5a46abd4e4b04ebe73ddc4de&#34;&gt;http://www.easypolls.net/ext/scripts/emPoll.js?p=5a46abd4e4b04ebe73ddc4de&lt;/a&gt;&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;a class=&amp;#34;OPP-powered-by&amp;#34; href=&amp;#34;&lt;a href=&#34;http://www.objectplanet.com/opinio/&#34;&gt;http://www.objectplanet.com/opinio/&lt;/a&gt;&amp;#34; style=&amp;#34;text-decoration:none;&amp;#34;&amp;gt;&amp;lt;div style=&amp;#34;font: 9px arial; color: gray;&amp;#34;&amp;gt;survey service&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2017 in review - K12 CS Education</title>
      <link>https://cestlaz.github.io/posts/2017-review-k12csed/</link>
      <pubDate>Wed, 27 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2017-review-k12csed/</guid>
      <description>&lt;p&gt;
It&amp;#39;s been a big year for K12 CS education. More and more states
looking into CS as a K12 academic area and all that entails, the
CS4All movement is well underway and the College Board launched a new
exam. These are just three of many big things that happened in the
past year.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m excited about the overall growth but concerned about a number of
issues. I&amp;#39;ve written about all of them in the past so won&amp;#39;t rehash
here and in any event, the issues I&amp;#39;m concerned about are issues I
have no influence on.
&lt;/p&gt;
&lt;p&gt;
Instead I thought I&amp;#39;d look at some local CS Ed happenings. Things
where I have been able to contribute.
&lt;/p&gt;
&lt;p&gt;
Probably the biggest thing happening that I&amp;#39;ve been involved with is
New York State&amp;#39;s &lt;a href=&#34;http://cestlaz.github.io/posts/NY-CS-Certificate/&#34;&gt;moving forward on CS teacher certification&lt;/a&gt;. I
developed CS teacher preparation programs at Hunter and Hunter&amp;#39;s been
one of the voices talking to the state. I&amp;#39;d like to believe I had some
small positive voice in this effort.
&lt;/p&gt;
&lt;p&gt;
Related are the programs that are one piece of form and one committee
short of being approved. Very soon Hunter will have CS teacher
preparation programs - a full Masters program, a certificate program
and an Alt Cert program. While no program is perfect, I&amp;#39;m very proud
in what I designed and am confident that any teacher that completes
a Hunter program will be amazingly well prepared to teach CS. Not
just the popular curricula being offered today and not just the out of
the box curricula being lauded by others. Our teachers will be
empowered to create their own custom educational experiences
appropriate for their kids.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve said before that I believe in teacher over curriculum. A great
teacher can save the worst course but the best curriculum can&amp;#39;t save a
weak teacher. No matter what happens with CS Ed as a whole, I know
that the CS teachers we prepare at Hunter will be top flight. Kids in
their classes will be alright regardless of what the education machine
tries to impose on them.
&lt;/p&gt;
&lt;p&gt;
The other thing I&amp;#39;ve been working on, albeit in a limited way is
professional development. There&amp;#39;s a lot of CS PD around but most of it
seems to be either for the younger levels or the intro levels. Very
little for APCS-A let alone beyond. This past November I was able to
host teachers from a handful of schools on Election Day for what
everyone felt was one of their more productive PD experiences. We&amp;#39;re
following this up with another one in the Spring but this time we&amp;#39;re
expanding. I&amp;#39;ve been talking to friends at &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt; so as to get more
teachers and schools involved. There&amp;#39;s a lot of value in connecting
teachers with each other and I hope that I&amp;#39;m helping to do that.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m looking forward to 2018. I&amp;#39;m told that NYSED should vote on CS
certification in March and my programs should also be on the books
around then. The challenge will be building capacity since I can&amp;#39;t do
this as a one man show.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m very proud of what we&amp;#39;ve accomplished at Hunter on both the
education side and the CS side. It&amp;#39;s been a good year and I expect
2018 to be a better one.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2017 in review - Hunter Undergraduate CS</title>
      <link>https://cestlaz.github.io/posts/2017-review-hunter-cs/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2017-review-hunter-cs/</guid>
      <description>&lt;p&gt;
I usually don&amp;#39;t do year in review posts. At Stuy, not much changed
year after year so I never felt it worth summarizing the past and
projecting the future. At Hunter, now that I&amp;#39;m a couple of years in,
projects are really picking up steam so I think it&amp;#39;s worth talking
about them.
&lt;/p&gt;
&lt;p&gt;
One of my two major missions at Hunter was to build a CS Honors
program and raise the profile of Hunter&amp;#39;s undergraduate CS program in
general. Hunter had a strong CS program before I joined the team it&amp;#39;s
just that few people knew about it.
&lt;/p&gt;
&lt;p&gt;
My goal is to see Hunter become the &amp;#34;go to&amp;#34; institution for
undergraduate CS in New York City before my time is done.
&lt;/p&gt;
&lt;p&gt;
This is an extremely important mission.
&lt;/p&gt;
&lt;p&gt;
There are other strong CS options besides Hunter but compare the costs:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Institution&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th&gt;Annual Tuition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NYU&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;$50,464&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NYY Tandon&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;$48,750&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Columbia&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;$54,504&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hunter&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;$6,530&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;Hunter is about one tenth the cost.&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
True, if you&amp;#39;re wealthy this isn&amp;#39;t a problem and if you&amp;#39;re at the
bottom of the economic ladder you might get a full ride but if you
fall into that category where you earn more than the financial aid
people think is &amp;#34;poor&amp;#34; but are clearly not rich you&amp;#39;re left in a bad place. This seems
particularly true for New Yorkers as our income seems higher than that
of people from other parts of the country but our cost of living is
higher as well.
&lt;/p&gt;
&lt;p&gt;
My wife and I are both career public educators. No one would confuse a
family of two working teachers as upper class but we were granted no
financial aid for our kids. The alternatives without a great public
option are to have saved for our entire lives and now liquidate those
savings or go into tremendous debt.
&lt;/p&gt;
&lt;p&gt;
This alone makes the mission critical. Add to that the accessibility
issue - elite private institutions only have to concern themselves
with whatever slice of the population they choose to accept. We are
charged with providing a top flight education to all - be they the
high achievers, the late bloomers, the struggling students or anyone
else.
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s happened in the past year?
&lt;/p&gt;
&lt;p&gt;
First, the Daedalus honors program is developing nicely. In our first
year we had a cohort of 12. This past year 27. I haven&amp;#39;t seen the
applicant pool yet - Hunter applications are open until the end of
January, but I&amp;#39;m hoping to bring in an even larger cohort this year. I
spent a good amount of time this fall visiting high schools to talk
about Hunter CS and CS options in general. Not as many as I&amp;#39;d like but
more than during year one.
&lt;/p&gt;
&lt;p&gt;
We had classes, trips, and special events but more important was that
the cohort is starting to form a community and the students want it to
be a community that includes ALL of Hunter CS, not just the honors
students.
&lt;/p&gt;
&lt;p&gt;
They&amp;#39;ve started a once a week Dojo where students can work on projects
and interact and we&amp;#39;re starting an evening speaker series in
the Spring.
&lt;/p&gt;
&lt;p&gt;
Overall there&amp;#39;s a vibe of excitement and an energy around Hunter CS
that I&amp;#39;ve been told hasn&amp;#39;t been there before.
&lt;/p&gt;
&lt;p&gt;
In my class, I&amp;#39;ve been introducing a number of real world practices
that are usually not covered in undergraduate CS and we&amp;#39;re starting to
talk about bringing those practices into the non-honors sections.
&lt;/p&gt;
&lt;p&gt;
Finally, we&amp;#39;ve started to partner with the New York Tech
community. We&amp;#39;re bringing together the Hunter students and the tech
professionals to raise awareness outside of Hunter of what our
students can do and to best prepare our students for their next
steps. These partnerships, in addition to internship possibilities
have led to us planning some great things this coming semester
incuding:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
workshops such as how to work on an open source project or how to do
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
a code review.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Having industry mentors at our local Dojo sessions.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Mixer events to educate our students as to the variety of pathways
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
they can follow when they graduate.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
and more.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
This past year set the stage but there will be some challenges moving
forward.
&lt;/p&gt;
&lt;p&gt;
The biggest one is continued outreach to high schools. Getting to the
students and their parents to let them know that we have a great
program. It&amp;#39;s also about convincing them to come to Hunter. Back in
the day CUNY was &amp;#34;the poor man&amp;#39;s Harvard&amp;#34; but open enrollment in the
1970s killed that reputation. CUNY has been making it&amp;#39;s way back and
Hunter has many excellent programs but reputations are decades in the
making and at Hunter CS we&amp;#39;re just starting to get the word out.
&lt;/p&gt;
&lt;p&gt;
The other big challenge will be with time. Right now, for the most
part, I&amp;#39;m a team of one. I have tremendous support from my colleagues
but they all have their own full time obligations and the overall
growth in Hunter CS has already put a strain on personnel and
resources.
&lt;/p&gt;
&lt;p&gt;
In spite of the challenges, I&amp;#39;m not complaining. This has been an
exciting year for Hunter CS and an exciting year for me to be a part
of it.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 39 - mu4e</title>
      <link>https://cestlaz.github.io/posts/using-emacs-39-mu4e/</link>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-39-mu4e/</guid>
      <description>
&lt;p&gt;
I generally use three email accounts. My personal one, work one, and
one for my non-profit. For a couple of years, I&amp;#39;ve been using mu4e
under Emacs for both my work and non-profit email accounts and gmail
for my personal account.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had lots of requests for a video on what I do but I&amp;#39;ve been
hesitant for two reasons:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
There are parts of my configuration that are copied from others and
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I really don&amp;#39;t understand.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
I wasn&amp;#39;t happy with the complexity and some of the tooling.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
While there are still parts of my configuration that I&amp;#39;m not 100%
clear on I&amp;#39;ve cleaned up the tooling and complexity by using mu4e only
for my work email for the time being and by switching to mbsync.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a writeup on configuring things with video at the end.
&lt;/p&gt;
&lt;p&gt;
Unless you run an email server on your local machine using mu4e can be
thought of as three parts.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Get the email from the server to the local machine using IMAP.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Setting up mu.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Access the email locally from Emacs.
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
Part 1 Getting the email to your local machine using mbsync
&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I found his terrific blog post by &lt;a href=&#34;https://twitter.com/robstewartUK&#34;&gt;Rob Stewart&lt;/a&gt; on setting up &lt;a href=&#34;http://www.macs.hw.ac.uk/~rs46/posts/2014-01-13-mu4e-email-client.html&#34;&gt;mbsync and
mu4e&lt;/a&gt;. Read it over. I basically followed his directions for setting up
&lt;a href=&#34;https://sourceforge.net/p/isync/isync/ci/master/tree/&#34;&gt;mbsync&lt;/a&gt;. To build from source under Linux, I used the sequence:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./autogen.sh
./configure
make
sudo make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I followed Rob&amp;#39;s instructions basically verbatim for the password and
authentication stuff so I suggest you do the same.
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll also have to make sure to make the necessary email directories
manually. I describe all of this in the video.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Part 2 - setting up mu.
&lt;/h3&gt;
&lt;p&gt;
To set up mu, clone it from git://github.com/djcb/mu.git and build
it. You can find dependencies &lt;a href=&#34;https://www.djcbsoftware.nl/code/mu/mu4e/Installation.html&#34;&gt;here&lt;/a&gt; and then follow the same sequence
used to build mbsync listed above.
&lt;/p&gt;
&lt;p&gt;
Since I store my local email under a folder &lt;code&gt;Maildir&lt;/code&gt;  which is what
mu defaults to I can start using it by indexing my emails:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mu index&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The video shows some examples of using mu from the command line and
you can look at the mu cheatsheet &lt;a href=&#34;http://www.djcbsoftware.nl/code/mu/cheatsheet.html&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Setting up mu4e in emacs
&lt;/h3&gt;
&lt;p&gt;
Finally, you can set up mu4e in emacs. Take a look at Rob&amp;#39;s
configuration in his post or my &lt;a href=&#34;https://github.com/zamansky/using-emacs/blob/master/mu4econfig-sample.el&#34;&gt;sample&lt;/a&gt; config. You&amp;#39;ll have to take a
few minutes to go through either and make the appropriate changes but
the required changes should be cleared.
&lt;/p&gt;
&lt;p&gt;
The video goes through all of this and then a brief demo of how I use
mu4e.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m very happy with it and plan to integrate my non-profit email and
maybe even personal email into it soon.
&lt;/p&gt;
&lt;p&gt;
Enjoy:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/newRHXKm4H4&#34; frameborder=&#34;0&#34; gesture=&#34;media&#34; allow=&#34;encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Fixing the Absent Teacher Reserve (ATR) situation</title>
      <link>https://cestlaz.github.io/posts/atrs/</link>
      <pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/atrs/</guid>
      <description>&lt;p&gt;
In the New York City department of education a recurring hot topic is
the Absent Teacher Reserve or ATR pool.
&lt;/p&gt;
&lt;p&gt;
A teacher or administrator in the ATR pool is a licensed, most likely
tenured teacher not assigned permanently to a school. Each year these
educators get shuttled from school to school and denied a chance to
actually settle in a position.
&lt;/p&gt;
&lt;p&gt;
The ATR pool was created under the Bloomberg administration. Prior to
that, when there was an opening school transfers were basically
seniority based and when school had too many teachers the least senior
was excessed or basically out of a job until a school with an opening
could be found. The Bloomberg plan allowed teachers to use criteria
other than seniority for transfers but so as not to violate the
contract agreed to by both parties, teachers who were excessed, as
they might not be least senior, were kept on as employees and put in
the pool.
&lt;/p&gt;
&lt;p&gt;
ATR&amp;#39;s would rotate from school to school. Sometimes for a couple of
week but more recently for a year at a time. When at a school for only
a couple of weeks they could only be used as subs or for grunt work
but even when there for a year they&amp;#39;re treated like second class
citizens.
&lt;/p&gt;
&lt;p&gt;
The ATR pool grew in size when the Bloomberg/Klein DOE went on the war
path, set schools up to fail and closed them left and right. If you
had the bad luck being at a close out school when it closed then, hello
ATR pool.
&lt;/p&gt;
&lt;p&gt;
Over the years, the press, ed reformers and politicians have unfairly
bashed this group of educators. They&amp;#39;ve falsely claimed that these are
criminal teachers or unsatisfactory teachers. That&amp;#39;s a blatant
lie. Teachers up on charges are removed from schools and await a
hearing in another draconian process set up to violate teacher&amp;#39;s
rights. If a teacher is ultimately found guilty, they are disciplined
or fired. If exonerated, they&amp;#39;re returned to their schools. In any
case they&amp;#39;re not ATRs. Teachers that are repeatedly found to be
unsatisfactory are likewise removed (although the process here is
ridiculous and unfair as well).
&lt;/p&gt;
&lt;p&gt;
ATRs like any pool of teachers run the gamut. Some are great, some are
poor, many will fall in between. All are stigmatized and treated like
damaged goods.
&lt;/p&gt;
&lt;p&gt;
People ask, how can a good teacher get into the ATR pool? As I said,
be at a closeout school. In the year before I was able to bring my friend
and former colleague JonAlf over to Stuy, he was at Brandeis High
School - a
closeout school. I tried to bring him over that year but his principal
wouldn&amp;#39;t release him. Had I not been successful in bringing him over
the following year he might very well have ended up in the ATR pool
and he&amp;#39;s one of the best teachers I know. What about the teacher that
doesn&amp;#39;t want to abandon those kids that the DOE abandoned when they
decided to close the school. That martyr teacher surely ends up in the
ATR pool but that&amp;#39;s the type of dedicated teacher every principal
should want.
&lt;/p&gt;
&lt;p&gt;
So now we have a bunch of stigmatized teachers looking for work in a
system that won&amp;#39;t give them a chance. Not only due to them being
considered &amp;#34;damaged goods&amp;#34; but also because they&amp;#39;re expensive to
hire.
&lt;/p&gt;
&lt;p&gt;
When a school gets an ATR to them, it&amp;#39;s free - the cost isn&amp;#39;t added to
their budget - they keep them as extra manpower for the year and then
throw them out with the trash. At times, they get some credit for
keeping them a second year and even beyond they can get rid of them
whenever they want. Great way to bust the contract.
&lt;/p&gt;
&lt;p&gt;
A clear example of this is Stuy&amp;#39;s  current math chair. He&amp;#39;s an ATR
Assistant Principal. They got him for free for the first year and I
believe at a 50% discount for the second and even now they can dump
him whenever they want. This is rubbish – he&amp;#39;s either good enough for
the position or he&amp;#39;s not. If he is, he should be given the job for
real and if he isn&amp;#39;t then what is he still doing there. I&amp;#39;m not making
any value judgment on him or the department but it&amp;#39;s either one or the
other.
&lt;/p&gt;
&lt;p&gt;
So, a big reason for this ATR mess is about budgets and money. The
problem is that it&amp;#39;s a big lie.
&lt;/p&gt;
&lt;p&gt;
The DOE pretends the we have a situation like this:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/atr1.png&#34; alt=&#34;/img/atr1.png&#34; title=&#34;/img/atr1.png&#34; align=&#34;center&#34; height=&#34;250&#34;/&gt;
&lt;p&gt;
The DOE has money and schools have money. The schools pay for their
teachers, supplies, and everything else but the ATRS are paid for by
the DOE. Of course this isn&amp;#39;t the case. The truth is that the DOE pays
for everything:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/atr2.png&#34; alt=&#34;/img/atr2.png&#34; title=&#34;/img/atr2.png&#34; align=&#34;center&#34; height=&#34;250&#34;/&gt;
&lt;p&gt;
ALL the money comes from the DOE.
&lt;/p&gt;
&lt;p&gt;
In the past the DOE has come up with poorly conceived and poorly
received plans on how to deal with the ATR situation but it&amp;#39;s really
quite simple.
&lt;/p&gt;
&lt;p&gt;
Start by recognizing that ALL the money comes from the DOE. Once you
do that you can address the problem:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Assign the ATR to a school
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
If the school likes the ATR and the ATR likes the school, they keep
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
them and the DOE picks up the tab or rather adjusts the schools
budget to compensate. The DOE will continue to do so until a real
opening occurs at the school in the ATR&amp;#39;s area at which point the
ATR fills the position officially and the budget is readjusted.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
If the school or ATR don&amp;#39;t like each other the ATR gets rotated,
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
however you create a 3 strikes (or maybe 2 or 4 or some number)
rule.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
If the school keeps sending away ATRs semester after semester hit
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
them with a penalty or force an ATR placement when they have an
opening (assuming the ATR is amenable).
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
If the ATR keeps declining positions after a set number of
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
schools force the placement.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it. Simple and solves the problem.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Breaking down problems and writing</title>
      <link>https://cestlaz.github.io/posts/whats-next/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/whats-next/</guid>
      <description>&lt;p&gt;
This question appeared on Facebook a few days ago:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Does anyone have an effective way to teach students how to break down
a problem into steps and then solve each step one by one? I think my
students are struggling with a large question and breaking it in
subsequent parts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There were some good suggestions. I wanted to add something but didn&amp;#39;t
have time then so I thought I&amp;#39;d write it up now.
&lt;/p&gt;
&lt;p&gt;
As an aside, it took me forever to find the post again over on
Facebook. If there&amp;#39;s a way to mark posts or save a direct link I&amp;#39;d
love to hear it. I had to look through all the CS Ed groups I belong
to manually until I found it again.
&lt;/p&gt;
&lt;p&gt;
When I read the program I was reminded of a PD session we had to
attend back at Stuyvesant. Back then the fad was &lt;a href=&#34;https://en.wikipedia.org/wiki/Writing_across_the_curriculum&#34;&gt;Writing Across the
Curriculum&lt;/a&gt;. Every teacher in every class was to give some significant
writing assignment, evaluate it and provide feedback. Let&amp;#39;s forget the
fact that most of us never had any training or preparation to do so.
&lt;/p&gt;
&lt;p&gt;
On that PD day the guest speaker was &lt;a href=&#34;https://en.wikipedia.org/wiki/William_Zinsser&#34;&gt;William Zinsser&lt;/a&gt;. The first thing
he said was that what we were being asked to do by our principal was
bunk. He then proceeded to give advice on  simple good writing.
&lt;/p&gt;
&lt;p&gt;
The procedure he recommended following was to ask yourself (or have
the student ask themselves) &amp;#34;what does my audience need to know next?&amp;#34;
That&amp;#39;s your next sentence. Then ask the question again. Rinse and
repeat until done.
&lt;/p&gt;
&lt;p&gt;
It was simple and it made sense. It also applied to introductory CS
problems. When starting out, students have a limited CS / programming
tool box so a good question for them to ask when trying to solve a
problem is not only &amp;#34;what do I need to do next? but also &amp;#34;what can I
do next?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
When students have a limited CS vocabulary and set of idioms - loops,
conditionals, functions, whatever, there will only be so many things
they can do to move a problem along. If they go through the things the
&lt;strong&gt;&lt;strong&gt;can&lt;/strong&gt;&lt;/strong&gt; do they will likely fall on to what they &lt;strong&gt;&lt;strong&gt;should&lt;/strong&gt;&lt;/strong&gt; do.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s similar to doing a proof in geometry. Students have a set of
givens. Given that set, what can they do? They only know so many
theorems at the beginning.
&lt;/p&gt;
&lt;p&gt;
Over time, they&amp;#39;ll recognize patterns and develop as problem solvers.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re part of the AP CS A teachers facebook group you probably saw
the question. Many good answers were posted. I just wanted to add this
thought to the collection.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New York State moving forward with CS Teacher Certification</title>
      <link>https://cestlaz.github.io/posts/ny-cs-certificate/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ny-cs-certificate/</guid>
      <description>&lt;p&gt;
Last April I woke up early and trekked up to Albany along with a few
of my Hunter College colleagues to share our thoughts on K12 Computer
Science teacher certification with the Board of Regents. We gave a
presentation to the Regents Higher Education Committee and afterwards
had a chance to talk with some of the Regents as well as other members
of the New York State Department of Education.
&lt;/p&gt;
&lt;p&gt;
I left feeling that our proposals were well received and I think
everyone present - both the Hunter and NYSED contingents hoped that
things would move forward on this important issue.
&lt;/p&gt;
&lt;p&gt;
Fast forward to today, December 8, 2017. I was up at the crack
of dawn. Driving in the dark in the snow from NYC to Albany to once
again attend a Board of Regents Higher Education Committee
meeting. This time, the agenda item was:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Proposed Amendments to Part 30 of the Regents Rules and Section 52.21
and Part 80 the Regulations of the Commissioner of Education Relating
to a New Certification Area and Tenure Area for Computer Science
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No discussion or debate this time around just the proposal. If I
understand the process correctly, this should come up again at the
March meeting at which point it will be voted on. If approved, it
looks like we&amp;#39;ll have a pathway towards certification for CS teachers.
&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t had a chance to dive into the details but at the meeting a
few key points came up:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
As the proposal indicates this will be a subject area in which a
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
teacher can be certified and be awarded tenure.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
There will be a traditional pathway for new teachers - Bachelors /
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Masters degree
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
There will be an alternative pathway for people entering from the
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
workforce
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
There will be an extension for teachers with another license so they
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
won&amp;#39;t have to give up tenure in their current license.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
There will be an &amp;#34;individual evaluation&amp;#34; pathway which sounds to me
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
like it could catch people who fall through the cracks.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
There looks to be a sensible ramp up period - until September 2022
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
There&amp;#39;s a grandfathering provision that looks to last 10 years.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
This sounds like a smart sensible plan. Multiple pathways, shallow
ramp up and provisions to protect existing teachers.
&lt;/p&gt;
&lt;p&gt;
Of course, the devil is in the details. What&amp;#39;s an approved program?
Can a grandfathered teacher teach all CS classes or just intro ones?
etc.
&lt;/p&gt;
&lt;p&gt;
As I said, I haven&amp;#39;t had a chance to dive into the details yet but
this is very exciting.
&lt;/p&gt;
&lt;p&gt;
Prior to the meeting I was chatting with a few other people
attending. One, a &lt;a href=&#34;http://www.uft.org/&#34;&gt;UFT&lt;/a&gt; representative was very excited about the
prospect. Another contingent, a group from &lt;a href=&#34;https://www.nysut.org/&#34;&gt;NYSUT&lt;/a&gt; was very much against
a new certification area. Their position was that this would create a
teacher shortage because no one would have a CS license and no one
would get one due to the difference in salary between teaching and the
tech industry. I&amp;#39;ve already written on how I feel that this is a &lt;a href=&#34;https://cestlaz.github.io/posts/will-we-lose-cs-teachers-to-industry&#34;&gt;red
herring&lt;/a&gt;. What shocked me though was their feeling that &amp;#34;we already
have many non-CS teachers effectively teaching CS across the
state. They&amp;#39;re doing a great job and don&amp;#39;t need any additional content
or pedagogical knowledge.&amp;#34; I think they&amp;#39;re wrong and I also think that
when we as a community talk about how our summer professional
development is all that&amp;#39;s needed, we undercut CS education and
the teaching profession as a whole.
&lt;/p&gt;
&lt;p&gt;
In any event this was a big step for New York. I tried to individually
thank as many of the participants as I could for helping shepherd this
along but could only speak to a few so I&amp;#39;ll just give a blanket thank
you here to the NY State Board of Regents, Board of Education and
State Education department.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making contest problems and writing tests</title>
      <link>https://cestlaz.github.io/posts/advent-2017-making-tests/</link>
      <pubDate>Mon, 11 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-2017-making-tests/</guid>
      <description>&lt;p&gt;
I&amp;#39;m now well behind in &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt;. Traveling up to Michigan to see
my son and my brother and his family will do that.
&lt;/p&gt;
&lt;p&gt;
I was planning on working to catch up but got distracted earlier by
&lt;a href=&#34;https://www.reddit.com/r/adventofcode/comments/7idn6k/question_why_does_the_difficulty_vary_so_much/&#34;&gt;this thread&lt;/a&gt; on the Advent of Code subreddit. Specifically &lt;a href=&#34;https://www.reddit.com/r/adventofcode/comments/7idn6k/question_why_does_the_difficulty_vary_so_much/dqy08tk/&#34;&gt;this comment&lt;/a&gt;
by &lt;a href=&#34;http://was.tl/&#34;&gt;Eric Wastl&lt;/a&gt;, the contest creator. The thread is about the level of
difficulty of the various problems and Eric&amp;#39;s comment talks about some
of the factors that go into creating a good collection of problems for
a contest and the difficulties involved.
&lt;/p&gt;
&lt;p&gt;
It made me think of a conversation I had twenty years ago with Rob
Kolstad. We were chatting at a programming competition while the
students were hacking away. We were discussing that there were only so
many questions that a typical high school or college competition can
ask:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
The Mathy question
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Recursion / divide and conquer etc.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Graph stuff
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Dynamic Programming
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
and I think one or two more. The actual questions were just window
dressing on these fundamental question types.
&lt;/p&gt;
&lt;p&gt;
You can see this in many competitions including Advent of Code -
particularly if you look over all three years. This is not a
criticism. I love Advent of Code and think that Eric and the people
he&amp;#39;s working with are doing a great job . Read Eric&amp;#39;s comment to get a
deeper dive into what he thinks about as a contest designer.
&lt;/p&gt;
&lt;p&gt;
I also got to thinking how similar creating a competition is to
creating an exam. Maybe that&amp;#39;s because I&amp;#39;m currently writing the final
my students will take in a couple of days. In class tests are
certainly not the best of assessments but they do have their place and
in any event, they&amp;#39;re frequently  required by school or departmental
policy.
&lt;/p&gt;
&lt;p&gt;
There are many similarities between what teachers consider when making
tests to what contest designers consider. What concepts and techniques
must the students use? Are the problems too similar? Do they ramp up
in difficulty? Are they all or nothing or can a student incrementally
work their way to a solution? Does one problem lead into another?
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s no big reveal or surprise here today. Just something I&amp;#39;ve been
thinking about.
&lt;/p&gt;
&lt;p&gt;
A couple of busy days coming up but maybe over the weekend I can get
back to Advent of Code.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tools can shape how we think</title>
      <link>https://cestlaz.github.io/posts/advent-2017-4-6/</link>
      <pubDate>Wed, 06 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-2017-4-6/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been having fun with this years &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; competition. So
far, I&amp;#39;ve been able to keep up but with I expect that to change in
another couple of days since I&amp;#39;ll be traveling for the weekend.
&lt;/p&gt;
&lt;p&gt;
After solving a problem, I like looking over some of the other
solutions on the Advent of Code &lt;a href=&#34;https://www.reddit.com/r/adventofcode/&#34;&gt;subreddit&lt;/a&gt;. Even with similar
agorithmic solutions there&amp;#39;s a decent amount of variation in the
actual code and solutions in different languages can look radically
different.
&lt;/p&gt;
&lt;p&gt;
That got me thinking about how the tools we know and use both shape the ways we
approach solving problems and creating things and either limit or
empower us to go from a mental model of a solution or creation to an
actual artifact.
&lt;/p&gt;
&lt;p&gt;
Relating to this are the common themes that come up in the CS
Education world. The idea that it&amp;#39;s computer science not programming
and certainly not merely coding. That&amp;#39;s true but the tools and
languages we use shape the whole thinking part and can also give the
students a valuable practical tool that they can leverage to great
advantage in both future classes and work and life endeavors.
&lt;/p&gt;
&lt;p&gt;
I decided to do this rant as a video. I hope you enjoy it:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/x8cZgEogWNw&#34; frameborder=&#34;0&#34; gesture=&#34;media&#34; allow=&#34;encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts On A Hackathon</title>
      <link>https://cestlaz.github.io/posts/thoughts-on-a-hackathon/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/thoughts-on-a-hackathon/</guid>
      <description>&lt;p&gt;
Yesterday I was one of the judges at &lt;a href=&#34;http://stuyhacks.com/&#34;&gt;StuyHacks&lt;/a&gt;. A one day hackathon at
Stuyvesant run by and organized by the students. I don&amp;#39;t have attendee
stats but there were kids from all over the city and at least one team
from New Jersey. The youngest student that I met was in sixth grade
and the oldest were high school seniors. The judging was at the end
but I decided to stop by earlier to see how the hackers were doing.
&lt;/p&gt;
&lt;p&gt;
There was an incredible variety of projects using a wide array of
tools. There were projects built with:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Java
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Processing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
C#
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Scratch
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A-Frame
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Python / Flask
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
HTML/CSS/JS
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
and more
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
A personal highlight for me was running into Sophie - the daughter of
two of my students from #Stuy95. Well, both a highlight and a reminder
that I&amp;#39;m getting old.
&lt;/p&gt;
&lt;p&gt;
The StuyHacks team did a terrific job running things and at the end I
told them I&amp;#39;d love to help with future events.
&lt;/p&gt;
&lt;p&gt;
I did notice a couple of things at the hackathon that echo things I&amp;#39;ve
learned as a teacher over the years and I thought they were worth
sharing.
&lt;/p&gt;
&lt;p&gt;
The first was the a number of the beginner groups needed more
direction. This didn&amp;#39;t seem to be related to grade level or age as
much as CS experience. This isn&amp;#39;t a hackathon only issue. It exists in
all learning environments. If as teachers we&amp;#39;re too prescriptive
students end up with a single formula to follow. Sure, that&amp;#39;ll get
them through a standardized exam like APCS-A but too much of it can
hinder them in becoming creative problem solvers.
&lt;/p&gt;
&lt;p&gt;
On the other hand, not enough structure will leave many kids staring
at a blank page. I remember I gave a quiz years ago. It had one
problem: &amp;#34;You have 20 minutes to prove to me that you learned
something about the past unit on Cellular Autmata&amp;#34; or something like
that. Some kids absolutely loved it but many hated it. Stuy kids are
trained test takers. They&amp;#39;re prepared for structure. This threw many
for a loop.
&lt;/p&gt;
&lt;p&gt;
I noticed this issue with some of the hackers at StuyHacks. Some
beginners really had a hard time figuring out what they could do and
what they should do.
&lt;/p&gt;
&lt;p&gt;
A hackathon isn&amp;#39;t a classroom so I think the problem is pretty easily
remedied. Groups that were able to latch on to a good mentor seemed to
get the guidance they needed. A beginners hackathon should make sure
they have not only plenty of mentors but they should make sure that
the mentors are prepped with a number of project ideas in a number of
the standard beginner platforms. A hackathon could also provide an
assortment of ideas in a list.
&lt;/p&gt;
&lt;p&gt;
The second thing I noticed was at the end of the day as I was
judging. It started with one particular group. They were pretty
apologetic about their project. Basically because it wasn&amp;#39;t
finished. Personally, I thought what they accomplished in essentially
7 hours was pretty impressive. What became clear as we talked is that
this group was deathly afraid of failure. Their deepest fear at that
moment was that I was going to give them high marks and they might
have to show off their incomplete (yet rather impressive) project to a
room full of strangers.
&lt;/p&gt;
&lt;p&gt;
This fear of failure was prevalent in groups that ultimately didn&amp;#39;t
submit their projects for judging and it seemed to be common among
students from high performing, high expectation schools where
frequently one associates a test score or grade with ones value. I&amp;#39;m
not happy to say that Stuy has always had this problem.
&lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t really a problem that a hackathon can or should be able to
address. It&amp;#39;s just something I noticed. It&amp;#39;s a problem for schools and
also for a society that&amp;#39;s test obsessed.
&lt;/p&gt;
&lt;p&gt;
I hope nobody reads too much into these observations. The day was a
tremendous success. A whole bunch of kids had a great day working
together to build cool things with technology. Congratulations to the
StuyHacks team. They did a terrific job putting it all together. If
you&amp;#39;re a middle or high school student or know one, keep an eye on the
StuyHacks &lt;a href=&#34;http://stuyhacks.com/&#34;&gt;web page&lt;/a&gt; and make sure to attend their next event.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2017 - Day 1</title>
      <link>https://cestlaz.github.io/posts/advent-2017-1/</link>
      <pubDate>Sat, 02 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-2017-1/</guid>
      <description>&lt;p&gt;
It&amp;#39;s once again time for &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt;. That one a day programming
competition that&amp;#39;s been running now for three years.
&lt;/p&gt;
&lt;p&gt;
Here are some thoughts on &lt;a href=&#34;http://adventofcode.com/2017/day/1&#34;&gt;day 1&lt;/a&gt;. The core of the problem is that you
have a large string of digits and you have to calculate a
checksum. This is done by adding the sum of a subset of the
digits. Only the ones that are identical to the digit to their
right. To make it a little more interesting, the last digit wraps
around to the first for checksum purposes.
&lt;/p&gt;
&lt;p&gt;
For example, the input &lt;strong&gt;&lt;strong&gt;2234335&lt;/strong&gt;&lt;/strong&gt; leads to the calculate &lt;code&gt;2 + 3&lt;/code&gt; or
&lt;code&gt;5&lt;/code&gt;. The input &lt;strong&gt;&lt;strong&gt;234445662&lt;/strong&gt;&lt;/strong&gt; leads to &lt;code&gt;4+4+6+2&lt;/code&gt; or &lt;code&gt;16&lt;/code&gt;. We add 4 for
twice because the first four is adjacent the second and the second the
third. We add the 2 at the end because it wraps around to match the
one at the front.
&lt;/p&gt;
&lt;p&gt;
We first read in the data and strip off the trailing newline
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Then, since we can access the elements of the string as a list (or
array) it&amp;#39;s a simple loop to calculate the sum:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Pretty straightforward but I don&amp;#39;t like the special case of checking
the last element for the wraparound. Sometimes it&amp;#39;s possible to get
rid of edge cases like this by &lt;a href=&#34;https://cestlaz.github.io/posts/2014-02-26-change-the-data.md&#34;&gt;changing the data&lt;/a&gt;. We can do that here
by simply appending a copy of the first character to the end of the
list.
&lt;/p&gt;
&lt;p&gt;
This leads to a slightly cleaner solution:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This is pretty much what I&amp;#39;d expect from a Python programmer that&amp;#39;s
just starting out. We can use a couple of more advanced Python
features to make what I consider a more elegant solution.
&lt;/p&gt;
&lt;p&gt;
Python&amp;#39;s &lt;strong&gt;&lt;strong&gt;zip&lt;/strong&gt;&lt;/strong&gt; function takes two lists and interleaves them.
&lt;code&gt;zip(&amp;#34;abc&amp;#34;,&amp;#34;def&amp;#34;)&lt;/code&gt; will yield &lt;code&gt;[ (a,d), (b,e), (c,f)]&lt;/code&gt;. If the lists
are of different length, it just zips up until the shorter list is
exhausted. We can use array slicing to zip the input string with it&amp;#39;s
neighbor by using &lt;code&gt;new_list = zip(data,data[1:])&lt;/code&gt;. For the string &amp;#34;122344&amp;#39;
zipping gives us &lt;code&gt;[(1,2),(2,2),(2,3),(3,4),(4,4)]&lt;/code&gt;. We can put this in
a list comprehension that only keeps the tuples representing an
element with an identical neighbor and also converts it to an int:
&lt;code&gt;new_list = [int(a) for a,b in new_list if a==b]&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Finally, we can just calculate the sum. This leads to the following
complete solution:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
List comprehensions for the win!!!!
&lt;/p&gt;
&lt;p&gt;
Each Advent of Code problem has two parts. You unlock the second by
solving the first. Here, the wrinkle is that instead of checking each
digit with it&amp;#39;s neighbor to the right, you check it with the one
that&amp;#39;s halfway around the list.
&lt;/p&gt;
&lt;p&gt;
With loops, the solution is just a quick modification of part 1. We
just add half the length and use mod to find the digit to compare with:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I wanted to see if I could do this with a list comprehension
though. The trick was to figure out how to make two lists to zip
together to get the pairs to check then add. Here&amp;#39;s the solution:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The insight was that we could just make a second list that starts
halfway through and then wraps around. I did this by adding
&lt;code&gt;data[l//2:] + data&lt;/code&gt;. &lt;code&gt;l//2&lt;/code&gt; is the integer division of the length (in
Python3). &lt;code&gt;data[l//2:]&lt;/code&gt; represents the second half of data (from the
midway point to the end). Technically I should have only added the second
half of data: &lt;code&gt;data[l//2:] + data[:l//2]&lt;/code&gt; where &lt;code&gt;data[:l//2]&lt;/code&gt; gives us
the first half of the list but since zip will just stop when it
exhausts the shorter list, this wasn&amp;#39;t necessary.
&lt;/p&gt;
&lt;p&gt;
Day 2 also has a nice list comprehension based solution. Maybe I&amp;#39;ll
write that up later.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>You have to trust the kids</title>
      <link>https://cestlaz.github.io/posts/trust-the-kids/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/trust-the-kids/</guid>
      <description>&lt;p&gt;
A week or so ago I wrote about the event we had to kick off
&lt;a href=&#34;http://cestlaz.github.io/posts/hunter-tech-kickoff&#34;&gt;Hunter College&amp;#39;s partnering with the NY tech community&lt;/a&gt; to build a
Hunter to tech pipeline. Each table had two Hunter students and a
group of tech professionals. Each table discussed the Hunter CS
experience and how the tech community can help support the
students. Towards the end of the event a colleague commented that it
was a great idea to have the students essentially run the tables and
how effective it was. I didn&amp;#39;t see any other way to do it.
&lt;/p&gt;
&lt;p&gt;
You have to trust the students. Put them in situations where they can
grow.
&lt;/p&gt;
&lt;p&gt;
In addition to the event being a success overall, I think that for the
students it helped to break down barriers. These kids are soon to be
joining the tech community. They&amp;#39;ll be interviewing for
internships and then jobs and the whole process can be rather
intimidating. By the end of the event the other week, there weren&amp;#39;t
tables of students and professionals but rather tables of people all
having discussions on equal footing. It seems like a small thing. A
minor choice on how to run an event but it can have a subtle but
substantial impact in ways that are hard to see unless you look.
&lt;/p&gt;
&lt;p&gt;
I was also reminded of this when reading Alfred Thompson&amp;#39;s post on
&lt;a href=&#34;http://blog.acthompson.net/2017/11/how-some-schools-sabotage-computer.html&#34;&gt;school tech management teams and CS teachers&lt;/a&gt;. Alfred wrote about the
possible tension between the needs of CS teachers and the needs of the
rest of the school and the obligations of the people that actually set
up and maintain the technology in a school.
&lt;/p&gt;
&lt;p&gt;
Years ago, at Stuy, I skirted the issue by taking on the
obligation of maintaining my own labs. This let me run Linux and
basically do whatever I felt we needed. It also meant my labs wouldn&amp;#39;t
be set up for things like standardized testing. This came at a
price. I had to maintain it all myself. This is not to say that the
tech people haven&amp;#39;t helped over the years. Some of them have been
terrific but other than swapping out bad machines it all fell on me.
&lt;/p&gt;
&lt;p&gt;
Of course this wouldn&amp;#39;t have been possible if it really all fell to
me. It only worked because I was able to enlist the aid of students
who wanted to learn about building and running a Linux network. Sure I
showed them some things but largely we &lt;a href=&#34;https://cestlaz.github.io/posts/2016-01-31-devops.html&#34;&gt;figured it out
together&lt;/a&gt;. Basically I trusted the kids with access and control and
gave them a safe place to learn and explore.
&lt;/p&gt;
&lt;p&gt;
It worked amazingly well.
&lt;/p&gt;
&lt;p&gt;
Of course there were plenty of headaches. There was the time when we
only had one AI/X server for the school and Jon somehow erased all the
shared libraries or the time when I think Paul or Ilya took away read
and execute access from all the system executables. I lost plenty of
sleep and pulled out much hair recovering from these messes and others
but I couldn&amp;#39;t get too upset. They were learning, no one got hurt, and
truthfully they never committed any blunders worse than my own.
&lt;/p&gt;
&lt;p&gt;
Giving up control to the kids can be nerve wracking at times but it&amp;#39;s
worth it. It&amp;#39;s why I always found coaching more stressful than
competing back when I fenced. You can do everything to prepare your
athletes but when they&amp;#39;re out on the strip, there&amp;#39;s nothing you can do
to help. It&amp;#39;s all on them. On the other hand, I&amp;#39;ve always been more
gratified with my athletes or students successes than with my
own. There&amp;#39;s something special about enabling others.
&lt;/p&gt;
&lt;p&gt;
This is not to say that we just turn our students loose.  We have to
set our students up to succeed. Set up the environment and the
circumstance and give the students the tools to work with. At the
event two weeks ago I knew that everyone in the room was a friend or
when I have students plan a hackathon and have them cold call a
company, maybe the company expects the call. There are all sorts of
things we can do behind the scenes to set out students up for success.
&lt;/p&gt;
&lt;p&gt;
We set the stage and if we do it right, the kids won&amp;#39;t
fail to impress.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reunion Season</title>
      <link>https://cestlaz.github.io/posts/reunion-season/</link>
      <pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/reunion-season/</guid>
      <description>&lt;p&gt;
Thanksgiving is reunion season. Stuyvesant and I&amp;#39;m guessing other high
schools traditionally hold their reunions, at least the five and ten
year ones over the holiday weekend. It makes sense since grads who&amp;#39;ve
moved away might still be coming to town for family celebrations.
&lt;/p&gt;
&lt;p&gt;
This year, I was invited to the Stuy07 ten year reunion. I considered
crashing the Stuy97 20 year but it was at the same time and too far
away.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m always really flattered and honored when I get a reunion
invite. I&amp;#39;ve been to my share but I was never the hip popular teacher
that gets invited to these things. On the other hand, I&amp;#39;m sincere,
honest, and loyal so when I do connect with students it&amp;#39;s meaningful
and lasting. As one of my students remarked when I was nominated to be
graduation speaker a few years ago and I doubted I would be elected
&amp;#34;hey, you lead the most popular cult in the school&amp;#34; and I guess in
some way the community is a cult, or as I&amp;#39;d rather say, a family. In
any event, whenever I&amp;#39;m invited to a reunion I make my best effort to
attend.
&lt;/p&gt;
&lt;p&gt;
I find the role of faculty at reunions as somewhat amusing – we&amp;#39;re
something of a prop. The grads are there and should be there to
reconnect with each other. The teachers are and should be secondary.
From my point of view, there are three groups of students. The ones
that are now part of my alumni family - now friends who I&amp;#39;m in touch
with to varying degrees, the ones that never knew me and the ones that
knew me a bit. For the second and third groups, as a faculty member,
I&amp;#39;m there to remind them of the glory days as a representative of the
institution.
&lt;/p&gt;
&lt;p&gt;
As with all reunions I had plenty of &amp;#34;I was never in your class
but …&amp;#34; conversations. I also a number of &amp;#34;I majored in
fill-in-the-blank but just found my way back into tech
so….. thanks.&amp;#34; I love these conversations - it gets someone
new into &amp;#34;the family.&amp;#34; I also had one conversation that was really a
nice ego boost. One of my guys introduced me to his wife. She
immediately exclaimed &amp;#34;it&amp;#39;s so great to finally meet you, he talks
about you all the time!&amp;#34; That was kind of weird until she went on
&amp;#34;…every time he talks about Stuy.&amp;#34; That made more sense. It&amp;#39;s like
all those times when me and my buddy Ben would reminisce about our
Junior High school days and we&amp;#39;d always get back to talking about
&lt;a href=&#34;https://cestlaz.github.io/posts/2012-05-09-my-favorite-year-teacher.html&#34;&gt;Herb&lt;/a&gt;, one of our best and favorite teachers and a major influence on
me while Devorah looked on confused. Eventually she met and got to
know Herb and it all made sense. Another grad added &amp;#34;you think we all
forget about you but you come up more than you know&amp;#34; so I take that as
a shout out to all of the teachers out there who never get to hear
back about how much they are remembered and appreciated.
&lt;/p&gt;
&lt;p&gt;
With tools like email and Facebook it&amp;#39;s easier to remain connected to
former students but it&amp;#39;s always nice to connect in person. For the
StuyCS family, we have our periodic meetups but for the rest, I love
being included in class reunions and hope to be invited to more in
years to come.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 38 - dired</title>
      <link>https://cestlaz.github.io/posts/using-emacs-38-dired/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-38-dired/</guid>
      <description>&lt;p&gt;
The 38th installment of Using Emacs is about &lt;strong&gt;&lt;strong&gt;dired&lt;/strong&gt;&lt;/strong&gt;, Emacs&amp;#39; built
in mode for navigating and working with directories.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not a dired power user and in fact am just now making a real
effort to explore it and work it into my daily workflow and
with that in mind, I&amp;#39;d love to hear some configuration and
use suggestions from people who use it regularly.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the configuration I use:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package dired+
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config (require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dired+&lt;/span&gt;)
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
which merely adds dired+ into the mix.
&lt;/p&gt;
&lt;p&gt;
I also started playing with &lt;a href=&#34;https://github.com/joddie/pcre2el&#34;&gt;pcre2el&lt;/a&gt; which allows me to use the more
usual regex syntax in place of Emacs regex syntax in both dired and
other places. This is a big win for me since I never remember all the
escaping rules for Emacs regex.
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package pcre2el
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(pcre-mode)
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Finally, abo-abo and jcs have both written about new features in ,
Ivy/Swiper/Counsel that allow you to use ivy-occur to dump results
into a dired buffer (&lt;a href=&#34;http://irreal.org/blog/?p=6760&#34;&gt;link&lt;/a&gt;, &lt;a href=&#34;https://oremacs.com/2017/11/18/dired-occur/&#34;&gt;link&lt;/a&gt;) but to get that to work, I needed to
install &lt;a href=&#34;https://github.com/mhayashi1120/Emacs-wgrep&#34;&gt;wgrep&lt;/a&gt; and also had to install and setup &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; which looks to be
useful.
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package wgrep
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
)

(setq counsel-fzf-cmd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/zamansky/.fzf/bin/fzf -f %s&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To help get started here are links to a couple of cheat sheets:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.gnu.org/software/emacs/refcards/pdf/dired-ref.pdf&#34;&gt;dired reference card&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://harryrschwartz.com/assets/documents/dired-cheatsheet.pdf&#34;&gt;another dired cheat sheet&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I&amp;#39;ll probably use dired more frequently but again, would love to hear
how other people are using it.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Fg7HmmRYWy8&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Motivating and understanding quicksort</title>
      <link>https://cestlaz.github.io/posts/quick-sort-starting/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/quick-sort-starting/</guid>
      <description>&lt;p&gt;
Thks question was posed the other day - how can one get students to
truly understand the quicksort algorithm?
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve written a few posts about quicksort. The last time I did a &lt;a href=&#34;https://cestlaz.github.io/posts/2014-03-12-select-to-sort.html/&#34;&gt;lesson
writeup&lt;/a&gt; on the subject I wrote about first looking and quickselect and
then moving to the quicksort. The class was first faced with the
problem of writing a routine to find the Kth smallest item in an
unsorted data set. The first solution was n^2 and then refined to a
quickselect. This led directly to the quicksort.
&lt;/p&gt;
&lt;p&gt;
I liked the lesson and I think it worked well when I taught it but
that was partly due to the overall tenor of that particular group of
students.
&lt;/p&gt;
&lt;p&gt;
A similar approach develops the quicksort in a similar way but is
both more direct and accessible.
&lt;/p&gt;
&lt;p&gt;
The motivating problem is to put one item in a data set in its proper
place. You could select one person in class and arrange the class so
that the selected student is in their proper size place, that is
everyone shorter on one side, taller on the other. You could also do
this for age. A similar exercise could be done with any number of
manipulatives.
&lt;/p&gt;
&lt;p&gt;
This operation of arranging the rest of the set around one selected
item or person is very easy and in fact it&amp;#39;s trivial to show that this
can be done in linear time.
&lt;/p&gt;
&lt;p&gt;
Once we&amp;#39;ve done this arrangement, we can discuss what we can infer
from this new arrangement. We can now tell that:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
everyone to the left of the &amp;#34;pivot&amp;#34; is less than the pivot
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
everyone to the right is greater
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The pivot element is at its true location if the list were
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
sorted. That is, if we started arranging around item k, then we&amp;#39;ve
moved item k to the kth location in the dataset.
&lt;/p&gt;
&lt;p&gt;
From here it&amp;#39;s a small jump to the quicksort algorithm, just repeat
the process on the left and right data sets.
&lt;/p&gt;
&lt;p&gt;
This approach not only makes the algorithm and its development clear
and simple but it also can be used to illustrate the worst case n^2
behavior.
&lt;/p&gt;
&lt;p&gt;
The whole thing, minus the coding, can also be done as an unplugged activity.
&lt;/p&gt;
&lt;p&gt;
In case anyone&amp;#39;s interested, I also wrote a post on subtle
implementation errors when writing the quicksort (&lt;a href=&#34;https://cestlaz.github.io/posts/2014-03-17-subtle-errors-sorting.html&#34;&gt;here&lt;/a&gt;) and also
looking at the qucksort from the point of view of different
programming paradigms (&lt;a href=&#34;https://cestlaz.github.io/posts/2010-03-14-sorting-from-top-and-from-bottom.html&#34;&gt;here&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter CS and NY Tech - it takes a village</title>
      <link>https://cestlaz.github.io/posts/hunter-tech-kickoff/</link>
      <pubDate>Sun, 19 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hunter-tech-kickoff/</guid>
      <description>&lt;img src=&#34;https://cestlaz.github.io/img/hunter-tech/hunter-tech1.jpg&#34; alt=&#34;/img/hunter-tech/hunter-tech1.jpg&#34; title=&#34;/img/hunter-tech/hunter-tech1.jpg&#34; align=&#34;center&#34; height=&#34;400&#34;/&gt;
&lt;p&gt;
One of my goals when I came over to Hunter was to help establish
Hunter CS as the place to be for CS in the city. Hunter already had a
solid CS program before I joined but it isn&amp;#39;t well known. It also
doesn&amp;#39;t have an established tech culture.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s an ambitious goal but if it can be done, what a game changer. A
lot of people talk about equity, diversity, and social justice but if
we can establish Hunter as the place to be for CS in NY, what a
win. An affordable, accessible institution where you can get a great
CS education.
&lt;/p&gt;
&lt;p&gt;
The truth of course is that I can&amp;#39;t accomplish this - at least not by
myself. I&amp;#39;m just one person. Fortunately, there are so many wonderful
people in the New York Tech community that want to help bring
opportunities to the kids.
&lt;/p&gt;
&lt;p&gt;
Last Thursday evening we got the ball rolling. Twenty five
representatives from the tech community got together at &lt;a href=&#34;http://yext.om&#34;&gt;Yext&lt;/a&gt; with
about a dozen of our Hunter College CS students. The conversation
started with a discussion of perceptions of Hunter and the students
sharing what their experiences were like. By the end we were all
brainstorming as to how we can work together to best prepare Hunter
students to become members of the New York Tech community.
&lt;/p&gt;
&lt;p&gt;
I know the students left the evening energized and I did as well. I
hope our friends in Tech felt the same.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/hunter-tech/hunter-tech-max-jess.jpg&#34; alt=&#34;/img/hunter-tech/hunter-tech-max-jess.jpg&#34; title=&#34;/img/hunter-tech/hunter-tech-max-jess.jpg&#34; align=&#34;center&#34; height=&#34;400&#34;/&gt;
&lt;p&gt;
We had representatives from (in alphabetical order)
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Animoto
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Beeswax
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Bloomberg
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Civic Hall
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
eBay
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Genacast Ventures
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Google
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
JW Player
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Meetup
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
MongoDB
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Motivate (Citbike)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Quentin Road Ventures
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Twitter
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Two Sigma
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Union Square Ventures
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Workbench
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Yext
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
at the event and then there were plenty of people who want to be part
of this who couldn&amp;#39;t make it on Thursday.
&lt;/p&gt;
&lt;p&gt;
I told the participants at the event that I can&amp;#39;t make this happen. I
can merely get the people together who actually can. I&amp;#39;m grateful to
all my friends who are now a part of this and I&amp;#39;m looking forward to
working with  them, my students and my colleagues  to create
a Hunter CS to Tech Community pipeline that&amp;#39;s second to none.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moocs - High Production value, Bad Questions</title>
      <link>https://cestlaz.github.io/posts/moocs-bad-questions/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/moocs-bad-questions/</guid>
      <description>&lt;p&gt;
Most mornings, I start my day with a workout. Sometimes I run,
sometimes I use my bike trainer. Dealing with plantar
fasciitis since last June, it&amp;#39;s mostly been the bike.
&lt;/p&gt;
&lt;p&gt;
I occupy the time by either watching YouTube videos or catching up on
&lt;a href=&#34;https://cacm.acm.org/&#34;&gt;Communications of the ACM&lt;/a&gt; or &lt;a href=&#34;https://www.americanscientist.org/&#34;&gt;American Scientist&lt;/a&gt;. I&amp;#39;m about 6 months
behind on both.
&lt;/p&gt;
&lt;p&gt;
Inspired by some talk in one of the CS Ed Facebook groups, I thought
I&amp;#39;d use the time to start going through some MOOCs. I started with
Udacity&amp;#39;s Intro to Information Security.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m only in lesson 4 but it&amp;#39;s pretty light weight and generally well
presented but I keep seeing the same thing that pisses me off about
moocs. At the end of the day the video is just a lecture and what&amp;#39;s
worse, a lecture with no feedback loop.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong, I love the fact that Udacity and the others have
their material up online and that I can get to it free of charge but I
don&amp;#39;t love the fact there are people that still believe putting a computer
in front of a kid is better than a teacher.
&lt;/p&gt;
&lt;p&gt;
I think this quiz question is pretty representative of what I&amp;#39;m
talking about.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/mooc-question.png&#34; alt=&#34;/img/mooc-question.png&#34; title=&#34;/img/mooc-question.png&#34; align=&#34;center&#34; height=&#34;400&#34;/&gt;
&lt;p&gt;
It&amp;#39;s just a silly inline quiz question and not a particularly
important one but it pisses me off.
&lt;/p&gt;
&lt;p&gt;
To start with, it uses the word  &lt;strong&gt;&lt;strong&gt;could&lt;/strong&gt;&lt;/strong&gt;  not &lt;strong&gt;&lt;strong&gt;did&lt;/strong&gt;&lt;/strong&gt;. That means
that every answer is correct. In fact an asnwer  choice like
&amp;#34;we&amp;#39;re more secure because we have this really good engineer named
Stanley&amp;#34; could be given and would be a correct answer since  the
vendor &lt;strong&gt;&lt;strong&gt;could&lt;/strong&gt;&lt;/strong&gt; base their claim on Stanley&amp;#39;s awesomness, it would
just be a bad idea. Unless you remember the specific ad campaign, you won&amp;#39;t
know the answer  and even if you did, internally, they could use any
justification they want.
&lt;/p&gt;
&lt;p&gt;
It reminds me of when my brother was in grade school and he had a test
question of:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Can you name all 50 states in the United States of America?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My brother&amp;#39;s answer was &amp;#34;no.&amp;#34; He was correct. I don&amp;#39;t remember if the
teacher agreed.
&lt;/p&gt;
&lt;p&gt;
To be fair, I&amp;#39;m just watching the videos and it&amp;#39;s possible that the
readings clarified the question but even so, this is a very bad
question.
&lt;/p&gt;
&lt;p&gt;
Yes, it&amp;#39;s just a silly quiz but it is indicative of the problem with
any online learning resource and I and I&amp;#39;m sure others find it
frustrating.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t want to come down hard on the lecturer or whomever made the
quiz question. In a class I might ask a question poorly but I have an
immediate feedback loop and can fix things right then and
there. Frustration doesn&amp;#39;t build and in the case of holes in  important
conceptual material deficiencies don&amp;#39;t develop.
&lt;/p&gt;
&lt;p&gt;
I also don&amp;#39;t want to come down on free resources that I use and
benefit from.
&lt;/p&gt;
&lt;p&gt;
These types of issues seem small and the autodidacts that succeed in
using MOOCS work around them but if you look at these materials
critically as a teacher it&amp;#39;s plain to see that their no substitute for
the real thing.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Professional Development beyond Scratch</title>
      <link>https://cestlaz.github.io/posts/election-day-pd-2017/</link>
      <pubDate>Tue, 07 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/election-day-pd-2017/</guid>
      <description>&lt;p&gt;
Today was Election Day. One of the few days each year when students
stay home and teachers spend all day attending what is generously
known as professional development.
&lt;/p&gt;
&lt;p&gt;
Years ago I was in a room with a few colleagues when my friend Dave -
one of the best math teachers I know said &amp;#34;you know, every time we
have a PD day in NJ and my wife and I have to scramble to take care of
the kids I get a little annoyed but then think I shouldn&amp;#39;t get annoyed
since they&amp;#39;re spending the day doing all sorts of valuable PD.&amp;#34; He
then said &amp;#34;but then I realize that their PD is probably about as
useful as our PD and I get really angry.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
There you have it. This is not to say that there is no good PD but it
seems that the professional development opportunities provided by our
schools have over the years ranged from useless to insulting with
maybe a small bright spot here and there. Historically it&amp;#39;s been worse
for CS teachers because we get lumped in with math teachers and have
to spend the day learning about tools and techniques we&amp;#39;ll never use
or discussing curricula we never teach.
&lt;/p&gt;
&lt;p&gt;
So, when I spoke to JonAlf about rescuing the Stuy teachers for the
day and hosting them at Hunter, he and the other CS teachers were
pretty excited. It wasn&amp;#39;t as though I had the magic PD answer but I
was going to provide a space and we&amp;#39;d figure out together what would
be productive and valuable for them.
&lt;/p&gt;
&lt;p&gt;
As it turns out, I&amp;#39;ve been spending a good amount of time these past
few weeks visiting high schools to talk about Hunter CS and when I was
at Bronx Science the topic of Election Day PD came up and I thought
that it would be nice to get the Bronx Science and Stuy teachers
together. After thinking about it more, I recalled that there were few
good PD opportunities for CS teachers who taught advanced classes as
opposed to all the CS PD floating around these days at more of a
beginner level.
&lt;/p&gt;
&lt;p&gt;
I thought that we could change this. In the end, I hosted PD today and
had teachers from Stuyvesant, Bronx Science, Brooklyn Tech, and the
Manhattan Hunter Science High School in attendance. I invited teachers
from a few more schools but in the end we had those four schools and
seventeen teachers.
&lt;/p&gt;
&lt;p&gt;
The original agenda was:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
09:00 - 10:00 : Each school describes it&amp;#39;s program and courses
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
10:00 - 11:00 : An intro to Git and GitHub for the classroom
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
10:00 - 11:45 : Sharing neat lessons
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
11:45 - 12:00 : Presentation by &lt;a href=&#34;http://chicktech.org&#34;&gt;ChickTech&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
12:00 - 01:00 : Lunch
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
01:00 - End   : Small group lesson and curriculum work
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Oh boy did I mess up on the timing. The description and
discussion of school programs took all morning. It was interesting to
hear how each school&amp;#39;s program evolved and how they fit into the
school&amp;#39;s culture. Brooklyn Tech, for instance is a school where
students declare majors. This has a big impact on what classes kids
have to take and are able to take. This is very different from Stuy or
Science where kids programs are more open ended or MHSHS which is a
much smaller school and has restrictions related to size. It was also
interesting to note Brooklyn Tech&amp;#39;s decision to have every student
take APCS-P. Interesting because Brooklyn Tech is one of the country&amp;#39;s
largest high schools and most of them should have done well on the
exam. That gave NYC around 1,400 passing AP scores in one shot. On
the other hand none of the other schools present today offered APCS-P
but did have their own intro CS class that students took prior to
APCS-A.
&lt;/p&gt;
&lt;p&gt;
We finished the morning with a visit by Heather from
&lt;a href=&#34;http://chicktech.org&#34;&gt;ChickTech&lt;/a&gt;. ChickTech is a non-profit dedicated to retaining women in
Tech. It works with both girls in K12 and also those in industry. My
hope was to get a conversation started and see if there were some
potential avenues of partnership between the organization and the
schools.
&lt;/p&gt;
&lt;p&gt;
After lunch, the group decided that we should do the Git/GitHub
workshop and JonAlf obliged.
&lt;/p&gt;
&lt;p&gt;
Overall I think the day was a success.
&lt;/p&gt;
&lt;p&gt;
My hope is that today&amp;#39;s attendees can form a core group of CS teachers
who teach more advanced courses and we can form something of a support
group for each other.
&lt;/p&gt;
&lt;p&gt;
I plan to try to facilitate future meetings and hopefully we&amp;#39;ll be
able to attract more teachers to our group.
&lt;/p&gt;
&lt;p&gt;
All in all I&amp;#39;m very happy with how the day went.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Early Interesting Problems - Happy Ladybugs</title>
      <link>https://cestlaz.github.io/posts/happy_ladybug/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/happy_ladybug/</guid>
      <description>&lt;p&gt;
We all love interesting problems. The trouble is that it&amp;#39;s hard to
find suitably interesting problems for students when they&amp;#39;re just
learning the basics. In the very beginning the problems practically
dictate the solution:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
loop over a list and add all the elements or calculate the sum of a
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
list of integers.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Determine if  number is prime
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Convert a word into pig-Latin
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
It&amp;#39;s not that there&amp;#39;s no thought involved in solving these but the
students already know the mechanics of solving these by hand so it&amp;#39;s a
direct translation into a program.
&lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t a bad thing and it is important but it&amp;#39;s fun when we get to the next
level. I&amp;#39;ve found that a number of the &lt;a href=&#34;http://hackerrank.com&#34;&gt;Hacker Rank&lt;/a&gt; archived
competitions have &amp;#34;easy&amp;#34; problems that can be a good fit for
beginners. One that I found and really like is &lt;a href=&#34;https://www.hackerrank.com/challenges/happy-ladybugs&#34;&gt;Happy Ladybugs&lt;/a&gt; problem.
&lt;/p&gt;
&lt;p&gt;
The problems is basically as follows:
&lt;/p&gt;
&lt;p&gt;
You get a string of letters. Each letter represents a ladybug of a
different color. Each letter also represents a location of the
ladybug.  A space (or underscore in the actual problem) represents a
free space. For example &amp;#34;AABC DDA&amp;#34; is a line of 2 A colored ladybugs
followed by a B colored one, C colored one, a blank space, 2 D colored and then one
more A colored.
&lt;/p&gt;
&lt;p&gt;
You can rearrange the line of ladybugs by swapping any ladybug with a
blank space.
&lt;/p&gt;
&lt;p&gt;
A ladybug is happy if it is next to another ladybug of the same
color. The challenge is to determine if all the ladybugs can be made
happy.
&lt;/p&gt;
&lt;p&gt;
I like this problem because while it is non-trivial it is very
approachable.
&lt;/p&gt;
&lt;p&gt;
To me, the key is that while you can rearrange the list you
don&amp;#39;t have to. You only have to determine if it is possible to make
the ladybugs happy. You don&amp;#39;t actually have to do so.
&lt;/p&gt;
&lt;p&gt;
The edge cases are pretty easy to deal with - a string of length one
or two but then a little thought is required.
&lt;/p&gt;
&lt;p&gt;
The first insight is that if there are no spaces, you can&amp;#39;t rearrange
the ladybugs so all you have to do is scan through the string to test
to see if every ladybug has a neighbor of the same color.
&lt;/p&gt;
&lt;p&gt;
The next insight, and the big one is that if you have at least one
space you can arbitrarily re-order the string. You can show this is
possible  by using a single space to swap any two elements.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The final insight is that since you can arbitrarily re-order the
ladybugs as long as you have at least 2 of each color, you can make
them all happy.
&lt;/p&gt;
&lt;p&gt;
Since my class is currently just starting dictionaries in Python we
solved this with lists and then transitioned to dictionaries.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a dictionary based solution:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I love problems like these.
&lt;/p&gt;
&lt;p&gt;
I just wish there was an easy way to find all contest problems of a
certain level like &amp;#34;easy&amp;#34; or &amp;#34;medium.&amp;#34; If anybody knows please share
in the comments.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Catskills Conf 2017</title>
      <link>https://cestlaz.github.io/posts/catskills-2017/</link>
      <pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/catskills-2017/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/cc-2017/cc1.JPG&#34;&gt;/img/cc-2017/cc1.JPG&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Fall in the northeast is a special time. It&amp;#39;s the apple harvest, the
leaves change colors, and the
air is crisp and clean. One of the best places to enjoy it is up in the
Hudson Valley. That&amp;#39;s why I love going to &lt;a href=&#34;http://catskillsconf.com&#34;&gt;Catskills Conf&lt;/a&gt; each year.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve written about Catksills Conf before and I usually describe it as
&amp;#34;light tech conference meets summer camp.&amp;#34;  I love the event but I
love being able to bring my students even more.
&lt;/p&gt;
&lt;p&gt;
Hunter&amp;#39;s a great place but it&amp;#39;s a commuter school. That makes it
harder for the students to get to know each other than if they all
lived in the dorms. Getting away as a group for the weekend helps us
jumpstart the process.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/cc-2017/cc-group.JPG&#34;&gt;/img/cc-2017/cc-group.JPG&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/cc-2017/cc-bunkhouse.JPG&#34;&gt;/img/cc-2017/cc-bunkhouse.JPG&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Then there&amp;#39;s the conference itself. In addition to a great assortment
of talks it has all the amazing extras.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://twitter.com/songadaymann&#34;&gt;Jonathan &amp;#34;Song a Day&amp;#34; Mann&lt;/a&gt; has been with us all three years of the
conference to write summary songs for each day.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/iM2RmmJrBTI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
There are hikes
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/cc-2017/cc-hike.JPG&#34;&gt;/img/cc-2017/cc-hike.JPG&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Workshops like blacksmithing
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/cc-2017/cc-blacksmith.JPG&#34;&gt;/img/cc-2017/cc-blacksmith.JPG&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
a live birds of prey show
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/cc-2017/cc-bop.JPG&#34;&gt;/img/cc-2017/cc-bop.JPG&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
not to mention folk music and square dancing.
&lt;/p&gt;
&lt;p&gt;
All of this makes for a great experience but maybe the best part is
that everyone is living together in the &lt;a href=&#34;http://ashokancenter.org/&#34;&gt;Ashokan Center&lt;/a&gt;. The conference
doesn&amp;#39;t allow questions after talks because the speakers are all
living with the attendees for the weekend. We eat in the same
cafeteria, go on the same hikes, relax at the same bonfire, and sleep
in the same bunkhouses. As one of my students said:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
There’s just something about sharing a conversation on the cloud
computing network with someone who’s visiting from London while
shooting basketball hoops in the middle of the woods that makes for a
real take away experience!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I&amp;#39;ve had the good fortune to be able to bring my students up to
Catskills Conf in the Fall for each of the last three years. Here&amp;#39;s
hoping that the tradition can continue for many more.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It&#39;s nice to be appreciated</title>
      <link>https://cestlaz.github.io/posts/nice-appreciated/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/nice-appreciated/</guid>
      <description>&lt;p&gt;
Today was my 50th Birthday. I&amp;#39;m usually pretty low key on birthdays
and today was no different. I got up, exercised, went to work, taught
my class and went back to my office for office hours.
&lt;/p&gt;
&lt;p&gt;
What a great surprise when all of a sudden my students from last year
appeared at my office with a Happy Birthday a card and a cake:
&lt;img src=&#34;file:/img/cake.jpg&#34; alt=&#34;file:/img/cake.jpg&#34; title=&#34;file:/img/cake.jpg&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;
It felt pretty terrific. I wasn&amp;#39;t expecting this and was really moved.
&lt;/p&gt;
&lt;p&gt;
We don&amp;#39;t make the big bucks but little things like this make me feel
pretty terrific as a teacher.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>There&#39;s always something to learn (from your students)</title>
      <link>https://cestlaz.github.io/posts/when-they-change-the-script/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/when-they-change-the-script/</guid>
      <description>&lt;p&gt;
One thing I&amp;#39;ve learned from teaching is that there&amp;#39;s always something
new to learn. For the kids, yes, but I&amp;#39;m talking about for the
teacher.
&lt;/p&gt;
&lt;p&gt;
The other day, I taught a lesson I&amp;#39;ve taught many times. Find the mode
of a data set. That&amp;#39;s the problem that they solve but the lesson is
really about run time complexity, hidden complexity and using data
structures in alternate ways.
&lt;/p&gt;
&lt;p&gt;
I blogged about this &lt;a href=&#34;https://cestlaz.github.io/posts/2013-03-23-Who_won_the_election-Quadratic_to_Linear_Time.md&#34;&gt;before&lt;/a&gt; so you can get an earlier take there
although the code isn&amp;#39;t formatted correctly due to blog conversions.
&lt;/p&gt;
&lt;p&gt;
As with the last time, the students  had already written code to find
the largest value in a list and also to find the frequency of an item
in a list.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
They had to write mode prior to the class. In the past, students would
generally come up with something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
They&amp;#39;d use their existing knowledge and the &amp;#39;find the largest&amp;#39; idiom
to find the mode by:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
find the frequency of the first item and assume it&amp;#39;s the mode so far
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
for each item in the list
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
find the frequency of that idem
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
if it occurs more than the mode so far then it becomes the new
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
mode so far
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot of good in this solution. The kids incrementally develop
a solution, they use and exctend code and concepts they already know
and understand and it&amp;#39;s clear and understandable.
&lt;/p&gt;
&lt;p&gt;
We would then run the code on larger and larger data sets and notice
that it gets slow pretty quickly. This leads to an informal discussion
of run time and the fact that there&amp;#39;s hidden complexity – the call to
&lt;code&gt;freq&lt;/code&gt; in the main loop introduces a linear component so we have a
loop within a loop and an N^2 routine.
&lt;/p&gt;
&lt;p&gt;
The big takeaway is get a feel for run time and to be aware of hidden
complexity. We then move to a linear solution by using a list as
buckets. You can read more about that in the &lt;a href=&#34;https://cestlaz.github.io/posts/2013-03-23-Who_won_the_election-Quadratic_to_Linear_Time.md&#34;&gt;original post&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
What was interesting this time around was that most of the kids came
up with a solution more like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Instead of calculating the frequency inside the loop they made a list
of frequencies. &lt;code&gt;freq[0]&lt;/code&gt; had the frequency of &lt;code&gt;l[0]&lt;/code&gt;, &lt;code&gt;freq[1]&lt;/code&gt; the
frequency of &lt;code&gt;l[1]&lt;/code&gt; etc. They then loop through that &lt;code&gt;freq&lt;/code&gt; list to
find the largest element and that&amp;#39;s the index of the mode value in the
original list.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s functionally the same as the first solution but in some ways it&amp;#39;s
very different. They built the data set they needed ahead of time
instead of calculating the data on the fly and they used the concept
of parallel lists.
&lt;/p&gt;
&lt;p&gt;
I like the solution and it didn&amp;#39;t prevent us from getting to the run
time stuff but this did give me something to think about.
&lt;/p&gt;
&lt;p&gt;
Why did this class led them largely to a different solution than the
classes I&amp;#39;ve taught in the class. There are a lot of things to ponder
since it&amp;#39;s a college class that meets twice a week with kids from a
range of backgrounds (CS and otherwise) vs a high school class that
meets 5 days a week and the kids all had the same in class experience
prior to this lesson. Did I do something differently before hand? Some
assignments? Something I modeled?  I&amp;#39;m not sure but it&amp;#39;s something I&amp;#39;m
going to ponder.
&lt;/p&gt;
&lt;p&gt;
It will interesting to see if this was a one shot deal and my current
class will solve problems as I predict moving forward or if I&amp;#39;m going
to get to see a lot of new things.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A test result is just a test result</title>
      <link>https://cestlaz.github.io/posts/ap-results-measure-of-curriculum/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-results-measure-of-curriculum/</guid>
      <description>
&lt;p&gt;
This past weekend was &lt;a href=&#34;http://catskillsconf.com&#34;&gt;Catskillsconf&lt;/a&gt; - my favorite event of the
year. I spent the weekend up in Ulster County with a bunch of my
students. some great friends old and new, and Devorah. It was a great
weekend but I was mostly offline.
&lt;/p&gt;
&lt;p&gt;
As a result I missed a rather heated discussion in the CS Ed Facebook
groups. The debate was over whether or not Strong AP CSP exam results
are indicative of a good curriculum or good professional development (PD).
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
TL;DR - NO!!!!!
&lt;/h2&gt;
&lt;p&gt;
Further, anyone who thinks that a set of exam results can tell you
that a particular PD sequence or curriculum is good shouldn&amp;#39;t be
allowed to call themselves a teacher and I don&amp;#39;t want them anywhere
near my kids.
&lt;/p&gt;
&lt;p&gt;
I guess that language is strong, even for me but it&amp;#39;s true.
&lt;/p&gt;
&lt;p&gt;
Tests are designed to assess students and many tests don&amp;#39;t even do
that well. They shouldn&amp;#39;t be used to measure something further
removed.
&lt;/p&gt;
&lt;p&gt;
The last time this idea made its rounds was using student test results
for teacher evaluation. They do that in NY. A judge called the
practice &amp;#34;capricious&amp;#34; and &amp;#34;arbitrary.&amp;#34; My friend and former
colleague Gary Rubinstein showed a year or so ago that standardized
test scores varied enough from year to year so as to make the ratings
useless [fn::sorry, I just got back from the weekend trip and am too tired
to find the link. You can go to his site and search and while you&amp;#39;re
there, there&amp;#39;s lots of good stuff to read.]
&lt;/p&gt;
&lt;p&gt;
Using test scores to say a PD sequence is good? What if that PD
focused on test prep? What if it did nothing in particular? When I was
at Stuy and when I was at Seward Park the Calc teachers&amp;#39; students had
great AP results. I can tell you that none of those teachers had any
quality PD specific to AP Calc.
&lt;/p&gt;
&lt;p&gt;
Curriculum? My mentor and friend Danny Jaye told me many times - &amp;#34;A
great teacher can save a class from a  horrible curriculum but a great
curriculum will do nothing for a class with a horrible teacher.&amp;#34; He
was right. Again, what if the curriculum encourages test prep. What if
pressure on the teacher encourages them to focus on test prep
regardless of curriculum or PD (see my recent &lt;a href=&#34;http://cestlaz.github.io/posts/standards-who-for&#34;&gt;post&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
An AP test measures one thing - how well the student did on the AP
test. There are so many variables that go into a class:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Is it first period at 8:00am?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Is it the last class of the day?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Is it before lunch or right afterwards?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What about right after Gym.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What&amp;#39;s the mix of students - every class is different
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Is the teacher teaching the subject once a day? Two times? Five
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
times?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
How large is the class
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How many other classes are the kids taking?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The list goes on and on. There are so many contributing factors that
you just can&amp;#39;t say &amp;#34;Good test results = good curriculum&amp;#34; or &amp;#34;good test
results = good PD.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Want to know if a curriculum is good - have experienced teachers who
know their subject run it a few times through and ask them. Same for
PD.
&lt;/p&gt;
&lt;p&gt;
Teachers know education a lot better than test makers, curriculum
developers and PD providers. How about listening to them for a change?
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Standards - Who are they for?</title>
      <link>https://cestlaz.github.io/posts/standards-who-for/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/standards-who-for/</guid>
      <description>&lt;p&gt;
The big push at last year&amp;#39;s CSTA conference was the release of the new
CSTA K12 standards. It seemed that every other session was pushing
them in one way or another. I&amp;#39;ve been meaning to share my thoughts
about them or, more specifically, learning standards in general for a
while but with announcement about federal funding for CS coming from
the White House last week I thought it was time.
&lt;/p&gt;
&lt;p&gt;
Before diving into CS standards lets talk about math.
&lt;/p&gt;
&lt;p&gt;
To start I have yet to meet a math teacher that needs
&amp;#34;the Standards&amp;#34; to know what to teach. Some how or other math teachers know
they&amp;#39;re supposed to teach in an algebra or geometry class. When NY
moved to &amp;#34;integrated math&amp;#34; teachers were able to re-sequence classes
without the benefit of &amp;#34;the standards&amp;#34; and when NY went back to
Algebra, Geometry, then Alg 2 and Trig, teachers had no problem
reorganizing classes again.
&lt;/p&gt;
&lt;p&gt;
New teachers didn&amp;#39;t go to &amp;#34;the Standards&amp;#34; to learn the ropes. Schools
defined syllabi, teachers observed each other, shared resources, used
lesson plan books and in general knew what they were supposed to teach
and at what level.
&lt;/p&gt;
&lt;p&gt;
In my quarter century of teaching, always in a math department we
spent a lot of time talking about what we taught, when we taught it,
how we taught it and at what level but until common core was forced
down our throats we NEVER discussed &amp;#34;the Standards.&amp;#34; We discussed our
students, where we thought we could take them, and how to get them
there. Somehow our students did alright.
&lt;/p&gt;
&lt;p&gt;
More recently, the push has been on &amp;#34;The Standards,&amp;#34; common core in particular.
&lt;/p&gt;
&lt;p&gt;
Common standards sound good - kids in every school will learn the same
things at the same level - but I contend that they aren&amp;#39;t about
learning. They&amp;#39;re about testing.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at a few of the math standards. These were pulled directly
from the Common Core:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Derive the equation of a circle of given center and radius using the
Pythagorean Theorem; complete the square to find the center and radius
of a circle given by an equation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Use coordinates to prove simple geometric theorems algebraically. For
example, prove or disprove that a figure defined by four given points
in the coordinate plane is a rectangle; prove or disprove that the
point (1, √3) lies on the circle centered at the origin and containing
the point (0, 2).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Derive using similarity the fact that the length of the arc
intercepted by an angle is proportional to the radius, and define the
radian measure of the angle as the constant of proportionality; derive
the formula for the area of a sector.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These aren&amp;#39;t about deep thinking and problem solving. They&amp;#39;re about
very specific skills or techniques. They&amp;#39;re also easy to put on a
test. Much easier then assessing a students real problem solving ability.
&lt;/p&gt;
&lt;p&gt;
Common Core comes hand in hand with standardized testing which is then
used to punish students, teachers, and schools.
&lt;/p&gt;
&lt;p&gt;
We keep hearing about individualized instruction - meeting the kids
where they are but the standards tell us that kids MUST know specific
things at specific times. You can&amp;#39;t have both. In the best case, with
&amp;#34;the standards&amp;#34; we can only meet students &amp;#34;where they are&amp;#34; within
annual bands.
&lt;/p&gt;
&lt;p&gt;
What has this led to? Narrowing curriculum for one thing. Since schools are
evaluated based on the standardized exam in core subjects focus
narrows and other subjects fall by the wayside.
&lt;/p&gt;
&lt;p&gt;
Arguably worse is selective teaching within common core subjects.
&lt;/p&gt;
&lt;p&gt;
Take for example, Geometry. The course is really &amp;#34;Logic and Deductive
Reasoning using Euclidean Geometry as a Platform&amp;#34; but it&amp;#39;s generally
called Geometry. This class is supposed to be about getting kids to
think. I&amp;#39;ve already shared a few standards above but let me tell you
about an open secret - many schools don&amp;#39;t really teach proof -
arguably the most important part of the class.
&lt;/p&gt;
&lt;p&gt;
In my last year at Stuy I graded Geometry regents for the city. I
graded exams for two highly regarded unscreened schools. One that was
lauded in a State of the Union address and the other equally hyped. I
graded all of each school&amp;#39;s students geometry regents so it wasn&amp;#39;t
just a sampling. Out of all the papers, only two or three scored more
than 2 out of 9 points for the proof question and most were entirely
left blank.
&lt;/p&gt;
&lt;p&gt;
What happened? Proof is hard to teach and hard to learn but it&amp;#39;s also
only a small part of the standardized exam. It&amp;#39;s critical for a
school&amp;#39;s survival and for the student to graduate that a passing score
is earned. Rather than spending a large amount of time on few points
and probably get a limited return I&amp;#39;ve been told that many schools
spend much more time on topics that area easier to teach and have more
weight on the exam. This makes the school look better and helps the
student graduate but arguably the most important aspect of the course
has been minimized.
&lt;/p&gt;
&lt;p&gt;
High stakes testing leads to gaming the system. Common core standards
come hand in hand with high stakes testing. We see the same with AP
exams - there are schools that force students to take exams even when
they are woefully prepared and mostly fail because this helps the
school shoot up in the ratings.
&lt;/p&gt;
&lt;p&gt;
This is what the common core math standards have given us. They&amp;#39;re not
for teachers - we don&amp;#39;t need them - we know what to teach and only
wish that the bean counters would indeed allow us to meet students
where they are. Standards are about testing.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s move on to CS standards.
&lt;/p&gt;
&lt;p&gt;
It might not be fair to compare CS to math since K12 math education
has been around much longer and is more well defined and in theory
having a set of standards gives us a common language to discuss,
compare, and contrast all the content providers and curriculum
developers out there. On the other hand, I also believe that with well
prepared teachers who understand content and pedagogy the value isn&amp;#39;t
all that great. It&amp;#39;s also worth considering the fact that nothing
really makes the CSTA Standard  writers special. There&amp;#39;s no reason to
think that another group - be they a handful of teachers or a content
provider can&amp;#39;t do a comparable job.
&lt;/p&gt;
&lt;p&gt;
Here are some selections from the CSTA standards:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Design and develop a software artifact working in a team.
&lt;/p&gt;
&lt;p&gt;
Compare and contrast various software licensing schemes (e.g., open source, freeware,
commercial).
&lt;/p&gt;
&lt;p&gt;
Design, develop, and implement a computing artifact that responds to an event (e.g., robot
that responds to a sensor, mobile app that responds to a text message, sprite that responds
to a broadcas
&lt;/p&gt;
&lt;p&gt;
Demonstrate the value of abstraction for managing problem complexity (e.g., using a list
instead of discrete variables).
&lt;/p&gt;
&lt;p&gt;
Design algorithms u sing sequence, selection, and iteration.
&lt;/p&gt;
&lt;p&gt;
Discuss techniques used to store, process, and retrieve different amounts of information
(e.g., files, databases, data warehouses).
&lt;/p&gt;
&lt;p&gt;
Compare and debate the positive and negative impacts of computing on behavior and
culture (e.g., evolution from hitchhiking to ridesharing apps, online accommodation rental
services).
&lt;/p&gt;
&lt;p&gt;
Use simple encryption and decryption algorithms to transmit/receive an encrypted
message.
&lt;/p&gt;
&lt;p&gt;
Decompose a problem by creating new data types, functions, or classes.
&lt;/p&gt;
&lt;p&gt;
Evaluate algorithms (e.g., sorting, searching) in terms of their efficiency, correctness, and
clarity.
&lt;/p&gt;
&lt;p&gt;
Use data analysis to identify significant patterns in complex systems (e.g., take existing data
sets and make sense of them).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There&amp;#39;s nothing wrong with these. They aren&amp;#39;t specific enough to
develop lessons from but, they can provide a
consistent framework to discuss different offerings. Were the much
more specific, we&amp;#39;d have the same issue I railed about with the math
standards so this is a good thing.
&lt;/p&gt;
&lt;p&gt;
Actually, in general, I don&amp;#39;t have a problem with these standards. I
might agree with some parts and disagree with others but that&amp;#39;s
neither here nor there.
&lt;/p&gt;
&lt;p&gt;
To me the big concern on standards is what will they actually be used
for. It&amp;#39;s nice to think that it&amp;#39;s a set of guidelines from which we
can develop strong local experiences but I think this is somewhat
naive. As states and the federal government bring CS Education into
the fold there&amp;#39;s no reason to believe that CS will be special. CS Ed
will go the way of other subject areas. That means that whatever
standards governments adopt, they will likely be used for high stakes
tests rather than for true education. If you look to see how the
sausage is made you can see the harm standards and standardized
testing has wrought  in subjects like math. CS Ed won&amp;#39;t be far behind.
&lt;/p&gt;
&lt;p&gt;
While we should be proud of all the work that&amp;#39;s going on in our
community it&amp;#39;s more important now than ever to keep an eye on the
overall big picture and be aware of how work intended for one purpose
within the community can be used very differently by those outside of
it. This is particularly important for advocates  not in public schools. Public
schools educate the majority of American students so CS4All means
public schools. Standardized testing won&amp;#39;t affect private schools (or
private charters in many cases) nor will they affect colleges and in
fact will be a boon to EdTech companies selling there wares. Many of
the loudest voices in CSEd come from these contingents - it&amp;#39;s
important that they look to the greater issues, form their own
opinions, and then act on what they believe is right.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming Idioms</title>
      <link>https://cestlaz.github.io/posts/programming-idioms/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/programming-idioms/</guid>
      <description>&lt;p&gt;
I just read Jeff Yearout&amp;#39;s recent post titled &lt;a href=&#34;http://k12csteaching.blogspot.com/2017/10/the-beginners-garden-of-concepts.html&#34;&gt;The Beginner&amp;#39;s Garden of
Concepts&lt;/a&gt;. Not directly related but it got me thinking about
programming idioms.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been using the phrase &amp;#34;programming idiom&amp;#34; for years to describe a
short useful recurring code construct. I didn&amp;#39;t realize that it was
officially &amp;#34;a thing&amp;#34; until doing a web search on the phrase years
later.
&lt;/p&gt;
&lt;p&gt;
As our students grow from newbies on I think it&amp;#39;s helpful for them to
see recurring and related patterns and programming idioms gives us a
name to apply to many beginner patterns. An early idiom might be
&amp;#34;finding the smallest in a list:&amp;#34;
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Another is the very similar and more general &amp;#34;do something on every
item in a list:&amp;#34;
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
By talking about constructs like these as idioms it helps students see
and develop coding patterns. It also helps them to build mental
abstractions. Each of the above idioms are a few lines of code but
each are also a single concept. Students learn to think of them as the
concept.
&lt;/p&gt;
&lt;p&gt;
When students learn about list comprehensions in python they&amp;#39;ll
rewrite the &amp;#34;do something…&amp;#34; more like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
but the pattern or idea is the same.
&lt;/p&gt;
&lt;p&gt;
Other early idioms might include swapping variables:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and loops until an exit condition are met:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Even more difficult concepts like recursion can be described in an
idiomatic way:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Patterns like these, or idioms, come up over and over again. We don&amp;#39;t
have to explicitly mention them in our teaching but I think it&amp;#39;s
helpful to our students if we do.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NYC CS4All - This Is Not The CS We&#39;re Looking For</title>
      <link>https://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/this-is-not-the-cs-were-looking-for/</guid>
      <description>&lt;p&gt;
It&amp;#39;s no secret that I&amp;#39;m something of an old curmudgeon in the K12 CS
Education world and I&amp;#39;ve been critical of a number of initiatives and
organizations over the years but I&amp;#39;ve been pretty quiet on the CS4All
movement in NYC Department of Education. I&amp;#39;ve had and any number of
concerns though.
&lt;/p&gt;
&lt;p&gt;
This past week at the inaugural meeting of New York City&amp;#39;s CSTA
chapter we got a taste of the &lt;a href=&#34;http://blueprint.cs4all.nyc/&#34;&gt;NYC CS4All Blueprint&lt;/a&gt;. A highlight was
this video:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe src=&amp;#34;&lt;a href=&#34;https://player.vimeo.com/video/224494221&#34;&gt;https://player.vimeo.com/video/224494221&lt;/a&gt;&amp;#34; width=&amp;#34;640&amp;#34; height=&amp;#34;360&amp;#34; frameborder=&amp;#34;0&amp;#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Along with the &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/3/%0A&#34;&gt;supporting web page&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
TL;DR - in a elementary school CS class, the students kept tapping out
drumbeats on the desk because they had drumming class the period
prior. Now the drumming teacher is teaching rhythms that match
segments of HTML so the students can tap and chant the line as a
memory aid.
&lt;/p&gt;
&lt;p&gt;
Sure, it&amp;#39;s nice when teachers can work together to support each other
but at the end of the day this is a mnemonic aid to memorize
HTML. Nothing particularly innovative here. Mnemonics like this are
great until there are too many to keep track of or ones that are too
similar.
&lt;/p&gt;
&lt;p&gt;
The part that saddened me was that this  was the video that was
chosen  as a highlight, an exemplar. It was OK but there was
nothing new or innovative. What was worse was that there was no
computer science.
&lt;/p&gt;
&lt;p&gt;
The kids were memorizing HTML. As we watched the video, my neighbor
nudged me and asked &amp;#34;why are they memorizing HTML?&amp;#34; I would ask the
same question. Now, I do think that HTML or some other mechanism to
create content that can be shared with the world is important. Having
students get there work out in the word can be tremendously rewarding
and motivating. Also, although I&amp;#39;m not sold on it, some say that HTML
is a good stepping stone to CS but still.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s try an experiment.
&lt;/p&gt;
&lt;p&gt;
Imagine that lesson but instead of HTML the kids were learning
Microsoft word so instead of a chant for &lt;code&gt;&amp;lt;a href=&amp;#34;&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; you have a
chant for putting a link into a word document or instead of a chant
for &lt;code&gt;&amp;lt;b&amp;gt;somethingbold&amp;lt;/b&amp;gt;&lt;/code&gt; you have a chant like
&lt;code&gt;control-b-typestuff-then-control-b&lt;/code&gt;. Same lesson, same technique,
still no CS. You could also say that this was just one video and maybe
most of the year is about real CS. Maybe, but then why highlight this
on the CS4All web site as a featured resource.
&lt;/p&gt;
&lt;p&gt;
This was disappointing but not surprising.
&lt;/p&gt;
&lt;p&gt;
Some will say that kids aren&amp;#39;t ready for hardcore CS at that
age. That&amp;#39;s fine. We can have that discussion but if CS is appropriate
for whatever grade was in the video then it should be real CS. We can
also have endless discussing about what that is but memorizing HTML is
not it.
&lt;/p&gt;
&lt;p&gt;
I wondered if the video was representative so I looked at &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/5/&#34;&gt;another&lt;/a&gt;. It
turned out this was also a lesson on HTML and again the video could of
been about any number of subject areas. I will give this one credit
for highlighting that you can do &amp;#34;unplugged&amp;#34; activities but it wasn&amp;#39;t
really a CS activity.
&lt;/p&gt;
&lt;p&gt;
Then there was &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/15/&#34;&gt;this one&lt;/a&gt;. No video here but how we structure a CS
lesson. We have this outline:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Warm-up
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Mini lesson
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Independent work time
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Share session
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Or, as we used to say back in the stone age:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Do Now
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Instructional activity
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
practice
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
summary
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Nothing new and nothing CS here. I used that model when I taught math
but deviated from it more and more as I developed my CS teaching
chops.
&lt;/p&gt;
&lt;p&gt;
Finally I looked at &lt;a href=&#34;http://blueprint.cs4all.nyc/resources/24/%0A&#34;&gt;this one&lt;/a&gt;. For full disclosure I have to say that
Eric, the teacher, is a friend of mine and I &lt;strong&gt;&lt;strong&gt;know&lt;/strong&gt;&lt;/strong&gt; he&amp;#39;s a dynamite
teacher and I know he knows his stuff.
&lt;/p&gt;
&lt;p&gt;
This video, however was all about differentiation. Just like the other
resources, there&amp;#39;s nothing wrong with them per se but there&amp;#39;s not
really about CS. You could reskin them for any subject.
&lt;/p&gt;
&lt;p&gt;
I also agree with a lot of what Eric says in the video but as CS
Standards take hold and standardized exams become the norm we&amp;#39;ll find
that individualized instruction and meeting students where they are
is in direct conflict with the testing that comes with standards. I&amp;#39;ll
talk more about that in my standards rant that I keep putting off
writing.
&lt;/p&gt;
&lt;p&gt;
Sure, the resources site has  a page with concepts like algorithms and
many schools, for better or worse, in the upper grades just fall back
on AP offerings but the more I dig the more it&amp;#39;s apparent to me that
CS4All in NY will be more about getting something into every classroom
rather than something appropriate and good.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 37 - Treemacs file browser</title>
      <link>https://cestlaz.github.io/posts/using-emacs-37-treemacs/</link>
      <pubDate>Sun, 24 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-37-treemacs/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been meaning to get back to making Emacs videos but I&amp;#39;ve been
having trouble figuring out what to record.
&lt;/p&gt;
&lt;p&gt;
People have asked for &lt;a href=&#34;https://github.com/magit/magit&#34;&gt;Magit&lt;/a&gt; but I only use the basics and I think
there are already some great videos on it out there. I&amp;#39;d also like to
get more comfortable with DIRED mode and then do a video on it but I&amp;#39;m
not there yet. I&amp;#39;ve also been looking into packages that manage
workspaces like Eyebrowse and Persp-mode but neither are really doing
it for my workflow.
&lt;/p&gt;
&lt;p&gt;
This morning I saw an post on the &lt;a href=&#34;https://www.reddit.com/r/emacs/comments/7249jt/introducing_treemacs_a_modern_file_project/&#34;&gt;Emacs subreddit&lt;/a&gt; about &lt;a href=&#34;https://github.com/Alexander-Miller/treemacs#treemacs---a-tree-layout-file-explorer-for-emacs&#34;&gt;Treemacs&lt;/a&gt; - a
sidebar file browser similar to what the Atom editor has. It&amp;#39;s pretty
slick. I particularly like the integration with &lt;a href=&#34;https://github.com/bbatsov/projectile&#34;&gt;projectile&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I suspect I won&amp;#39;t integrate a file browser side bar into my workflow -
I&amp;#39;ve probably spent too many years with Emacs built in buffer commands
but if like that type of interface, definitely check Treemacs out.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ACg6RnVdw8k&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Awesome Cs Revisited</title>
      <link>https://cestlaz.github.io/posts/awesome-cs-revisted/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/awesome-cs-revisted/</guid>
      <description>&lt;p&gt;
Saw this tweet the other day so I though I would try to plug the
&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education&#34;&gt;Awesome CS Education&lt;/a&gt; list I started on GitHub:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/csteachers?src=hash&#34;&gt;#csteachers&lt;/a&gt;...didn&amp;#39;t I see a list of CS teacher blogs here recently?&lt;/p&gt;&amp;mdash; Pam Whitlock (@PamWhitlock1) &lt;a href=&#34;https://twitter.com/PamWhitlock1/status/910662628757864448&#34;&gt;September 21, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
To answer the tweet, the closet thing I know to a list is &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred
Thompson&lt;/a&gt;&amp;#39;s blog roll which is actually a post he wrote on his blog
in 2012. Unfortunately his list can be hard to find and is somewhat
out of date.
&lt;/p&gt;
&lt;p&gt;
The idea of an &amp;#34;awesome&amp;#34; list is publicly hosting a simple site that
is community driven and anyone can suggest additions and edits.
&lt;/p&gt;
&lt;p&gt;
I put up a starter &lt;a href=&#34;https://github.com/zamansky/awesome-cs-education&#34;&gt;here&lt;/a&gt; and a few people have contributed but I&amp;#39;d love
to get more people involved. Awesome lists have a number of advantages
over other repositories.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Unlike blog posts, the site is easy to find.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Unlike private mailing lists or Facebook, anyone can see the content.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Anyone can suggest additions (although you need to create a Github
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
account).
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Anyone can download or fork the site.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s essentially plain text and is easy to edit (just read the
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&#34;&gt;contribution guide&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
So, there you have it. If you have a blog or resource to share please
submit a pull request. Over time this could be a terrific single
starting point for educators to get to a wealth of resources.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New Term New Tool - Thonny, a Python IDE</title>
      <link>https://cestlaz.github.io/posts/new-tool-thonny/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/new-tool-thonny/</guid>
      <description>&lt;p&gt;
Last year I &lt;a href=&#34;https://cestlaz.github.io/posts/new-term-new-tool-replit&#34;&gt;wrote about&lt;/a&gt; &lt;a href=&#34;http://repl.it&#34;&gt;repl.it&lt;/a&gt;, an online IDE that supports multiple
languages. At the time it had some rudimentary classroom support and
since I started using it, repl.it has become better and better. I
used it last year with my class because I had to start the year in a
lab where I couldn&amp;#39;t easily install my own software. I&amp;#39;ll continue to
use repl.it - mostly for it&amp;#39;s ability to schedule publish and manage
assignments but when possible, I like having my students work
locally.
&lt;/p&gt;
&lt;p&gt;
This year I&amp;#39;m excited about another tool - &lt;a href=&#34;http://thonny.org&#34;&gt;Thonny&lt;/a&gt;. Thonny&amp;#39;s a simple
Python IDE designed for beginners. I discovered it last year but at a
time when it was impractical for me to use with my students. This
year I can and I&amp;#39;m really liking it. I&amp;#39;m still an Emacs guy and will
continue to use Emacs for my python development (&lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-12-python/&#34;&gt;video 1&lt;/a&gt;, &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-13-yasnippet&#34;&gt;video 2&lt;/a&gt;) but
for beginners I think Thonny is the way to go.
&lt;/p&gt;
&lt;p&gt;
Some of Thonny&amp;#39;s highlights:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
An integrated Python 3 virtual environment making for ease of
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
installation and consistency across student installs
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
A debugger that shows how expressions are evaluated
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Great visualizations of function calls that make it easier to
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
understand the call stack and scope
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The ability to look at memory to understand references.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Rather than go into the gory details in text, I put together this
video:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/lWaCl0WjNZI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>I Believe CS Teachers are Smart and Capable</title>
      <link>https://cestlaz.github.io/posts/cs-teachers-smart/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-teachers-smart/</guid>
      <description>&lt;p&gt;
People sometimes accuse me of being an elitist CS snob that I feel that CS
teachers have to have advanced CS degrees.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not that at all. Rather, I feel that CS teachers are smart and
capable. Circumstances frequently result in a teacher in front of a CS
class with limited content and pedagogical content knowledge. It&amp;#39;s not
ideal but it&amp;#39;s reality. Of course I feel that we should do everything
to support and encourage these teachers but we should also insist that
after a reasonable period of time, they know their stuff.
&lt;/p&gt;
&lt;p&gt;
This is why I hate it when I hear people in the CS Ed community say
something is too hard. Git&amp;#39;s too hard. The command line is too
hard. Functional programming&amp;#39;s too hard [fn::whether or not any of
these topics are appropriate for a particular course is discussion for
another time]. That&amp;#39;s all nonsense. At last
year&amp;#39;s SIGCSE conference people from a state, I forget which, was
considering not using the Praxis exam for CS teacher certification
even though the state uses the Praxis exam for other subject
areas. They claimed that the praxis was too hard for CS teachers.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/praxis.jpg&#34; alt=&#34;/img/praxis.jpg&#34; title=&#34;/img/praxis.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
I haven&amp;#39;t taken the Praxis exam but some friends have. It doesn&amp;#39;t
appear to be unreasonable at all[fn::although I&amp;#39;m not a big believer
in standardized exams for certification or in general.].
&lt;/p&gt;
&lt;p&gt;
While I can certainly understand a teacher not knowing much when they
start - thrown in due to necessity I think it&amp;#39;s ridiculous not to
insist that they ultimately get to real mastery.
&lt;/p&gt;
&lt;p&gt;
A math teacher generally has to know math beyond calculus. Science
teachers have to have gotten through Orgo. English teachers have to
understand Joyce. &lt;strong&gt;&lt;strong&gt;THIS IS HARD STUFF!!!!&lt;/strong&gt;&lt;/strong&gt;[fn::There are plenty of
lousy teacher prep programs that don&amp;#39;t ensure teachers learn the
subject matter they should but the good ones do.]
&lt;/p&gt;
&lt;p&gt;
I think it&amp;#39;s insulting to say that CS teachers aren&amp;#39;t capable of doing
the same in their subject area.
&amp;#39;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is the new Secret Sauce ever better?</title>
      <link>https://cestlaz.github.io/posts/is-the-new-secret-sauce-ever-better/</link>
      <pubDate>Fri, 08 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/is-the-new-secret-sauce-ever-better/</guid>
      <description>&lt;p&gt;
I read &lt;a href=&#34;http://nancyebailey.com/2017/09/05/xq-super-schools-business-working-to-end-public-high-schools/&#34;&gt;this&lt;/a&gt; piece earlier today on &lt;a href=&#34;https://twitter.com/NancyEBailey1&#34;&gt;Nancy Bailey&lt;/a&gt;&amp;#39;s blog.
&lt;/p&gt;
&lt;p&gt;
TL;DR (although it really isn&amp;#39;t too long so you should read it) - it&amp;#39;s
on Laurene Powell Jobs, her efforts to &amp;#34;reform&amp;#34; education and why
she&amp;#39;s misguided as are most of the well to do non-educators working
hard to change and in many cases privatize public education.
&lt;/p&gt;
&lt;p&gt;
Laura posts a nice list of simple, common sense ways to improve
education. I&amp;#39;ll repost them here:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
For years, research has shown that high school students need more sleep. They should have later start times. .
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Smaller class sizes would help.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Make sure teachers don’t have so many preparation plans.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
End advanced placement classes (IMHO).
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Improve career-technical classes.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Provide rich extra-curricular activities.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Bring back life skill classes.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Include a social justice curriculum.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Include students on the disciplinary board.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Provide civics education.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Make sure students get opportunities to participate in the arts.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Work to include the community.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Ensure students have access to counselors, and school support staff.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Every high school should have a great library, a real librarian, and technology and books.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Looks very much like what those elite private schools that those rich
non-educators send their kids to.
&lt;/p&gt;
&lt;p&gt;
The other day I also overheard a conversation between two
professors. One noted that they had just taught a course totally
online for the first time and that the professor really had fun doing
it.
&lt;/p&gt;
&lt;p&gt;
These got me thinking more about all the secret sauce and magic
bullets coming from tech to save education - things like MOOCS or  &amp;#34;personalized&amp;#34;
learning system.
&lt;/p&gt;
&lt;p&gt;
I started to wonder - have these &lt;strong&gt;&lt;strong&gt;ever&lt;/strong&gt;&lt;/strong&gt; been pushed on public
schools because they&amp;#39;re better or rather because they cut costs (or in
the slightly better case to reach a student that otherwise wouldn&amp;#39;t
have any opportunity which, in a way is generally cost related).
&lt;/p&gt;
&lt;p&gt;
I couldn&amp;#39;t come up with a single instance. They&amp;#39;re always a way to
replace what I consider personalized instruction – you know, when a
teacher has a small class and can personally deal with, learn about,
interact with, and teach the child. Kids spend hours in front of a
screen instead of working with others. Kids do a MOOC (or maybe drop
out of a MOOC) so that you can have your student/teacher ratio reach
ridiculous levels. I&amp;#39;ve never seen any tech solution rolled out to
public schools because it&amp;#39;s better. Only to cut costs.
&lt;/p&gt;
&lt;p&gt;
How do I know that it&amp;#39;s not better? Well, we have Nancy&amp;#39;s list
above. It&amp;#39;s what those rich people pay all that money to the elite
private schools for.  If all these solutions the Jobs and Gates of the
world were so much better, wouldn&amp;#39;t they insist upon them  for their
own children?
&lt;/p&gt;
&lt;p&gt;
Just some Friday food for thought.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Theseus&#39;s Curriculum</title>
      <link>https://cestlaz.github.io/posts/theseuss-curriculum/</link>
      <pubDate>Tue, 05 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/theseuss-curriculum/</guid>
      <description>&lt;p&gt;
With the school year starting I was originally planning on writing
about my class rules.
&lt;/p&gt;
&lt;p&gt;
Instead I think I&amp;#39;ll riff on &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt;&amp;#39;s post today titled
&lt;a href=&#34;http://blog.acthompson.net/2017/09/curriculum-is-hard.html&#34;&gt;Curriculum is Hard&lt;/a&gt;. I&amp;#39;m guessing I found curriculum design and
development daunting decades ago but at this point in my career it&amp;#39;s
something I enjoy. In any event, Alfred got me to thinking - when is a
curriculum your own?
&lt;/p&gt;
&lt;p&gt;
If you grab a curriculum complete with lesson plans, assignments; the
whole kit and caboodle and you use it verbatim it&amp;#39;s clearly not your
curriculum. It probably also isn&amp;#39;t really teaching.
&lt;/p&gt;
&lt;p&gt;
What about the more common case. Math curricula has basically been set
for years. Algebra, Geometry [fn::which is really logic and deductive
reasoning using Euclidean Geometry as platform], and then Algebra 2
and Trigonometry. Most books seem to be sequenced in a similar way
and at least in the schools I know about, the math department has some
document listing a day by day list of topics. This makes sense since
you probably have more than one class of each type and you want some
cross class consistency. Particularly during the first weeks of the
semester when kids can transfer and then also at the end of term or
year.
&lt;/p&gt;
&lt;p&gt;
When a teacher uses that departmental document are they using someone
elses curriculum?
&lt;/p&gt;
&lt;p&gt;
What if they create their own homeworks and assigments?
&lt;/p&gt;
&lt;p&gt;
Most teachers I know use the department&amp;#39;s curriculum but make their
own unit and day to day lesson plans. Most revise them each
semester. Typically these teachers do a little more here or a little
less there depending on a number of factors.
&lt;/p&gt;
&lt;p&gt;
Are they creating their own curriculum?
&lt;/p&gt;
&lt;p&gt;
What if they re-sequence the topics?
&lt;/p&gt;
&lt;p&gt;
How about adding an enrichment topic?
&lt;/p&gt;
&lt;p&gt;
Back when I taught math I used the departmental syllabus, as many
texts as I could find, colleagues lesson plans and whatever I could
find but I always pulled it together to something I could call my
own. If I didn&amp;#39;t, I wouldn&amp;#39;t have been comfortable going in front of
my class. Was it my curriculum? They were certainly my lessons.
&lt;/p&gt;
&lt;p&gt;
Now, when designing a course I start from the end outcomes and work
backwards but when teaching a course, I still look at as many
resources as I can find. I&amp;#39;ll pull a little from here, a little from
there and combine that with whatever I can come up with myself.
&lt;/p&gt;
&lt;p&gt;
So, when is it your curriculum and when is it not?
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re just delivering scripted lessons it&amp;#39;s certainly not yours.
&lt;/p&gt;
&lt;p&gt;
If you know your stuff and you  take someone elses material, make it
your own and add it to your bag of tricks, I think it&amp;#39;s now yours as
well.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teachers - we need you to blog</title>
      <link>https://cestlaz.github.io/posts/cs-teachers-blog/</link>
      <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-teachers-blog/</guid>
      <description>&lt;p&gt;
At this past year&amp;#39;s CSTA conference, a few of us huddled in a corner
voiced a very common lament - &amp;#34;it would be great if more CS teachers
blogged.&amp;#34; It really would be. We&amp;#39;re still a relatively small
community and while there&amp;#39;s some good conversation going on on
mailing lists and on Facebook, those aren&amp;#39;t easily discoverable or
accessible and in the case of Facebook, there&amp;#39;s a question of
ownership and permanence.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been blogging on and off since 2010. Around 300 posts. Not super prolific
but I&amp;#39;ve been doing it long enough to maybe be able to share a bit of
perspective.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not sure exactly why I started. In part I was inspired by my wife
who at the time was blogging about her &lt;a href=&#34;http://squid-knits.blogspot.com/&#34;&gt;knitting&lt;/a&gt;. I was also inspired
to share my thoughts after meeting some fellow CS teachers from across
the country at a &lt;a href=&#34;http://cestlaz.github.io/posts/2010-01-02-welcome.html&#34;&gt;CSTA event in Chicago&lt;/a&gt;. It was stop and go for a while
and then I took a break. I was re-inspired months later after meeting
a couple of CS teachers at another CSTA event - &lt;a href=&#34;https://twitter.com/search?q=ben%2520chun&amp;amp;src=typd&#34;&gt;Ben Chun&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/purplespatula&#34;&gt;Helene
Martin.&lt;/a&gt; Both terrific high school CS teachers at the time who are
unfortunately no longer in the classroom (unfortunate for the kids, I
wish Ben and Helene all happiness and success in all their
endeavors). We all agreed to try to write more and that got me started
again. I&amp;#39;ve been posting around 50 times a year since.
&lt;/p&gt;
&lt;p&gt;
Looking back to when I used blogger, I had 30 - 50 hits on some early
posts and that was mostly just me hitting the site. It didn&amp;#39;t matter.
Writing has let me work through my thoughts. It also creates a record of
my thoughts and on how my thinking evolves over time.
&lt;/p&gt;
&lt;p&gt;
Over time, people have told me that they&amp;#39;ve found some of the things
I&amp;#39;ve written useful or helpful and I&amp;#39;d argue that when people disagree
with something I write, even if they don&amp;#39;t comment and I&amp;#39;ve all I&amp;#39;ve
evoked is a reaction of &amp;#34;Z&amp;#39;s full of crap,&amp;#34; it&amp;#39;s gotten them to
re-evaluate their own thoughts on whatever the subject and if it&amp;#39;s
confirmation of their original beliefs, that&amp;#39;s OK.
&lt;/p&gt;
&lt;p&gt;
The important thing is that by blogging I&amp;#39;m getting my thoughts down
&amp;#34;on paper&amp;#34; and sharing them for the world to take or leave as they
please and the more of us who do this, the more we expand the sum
knowledge of CS teaches.
&lt;/p&gt;
&lt;p&gt;
As a dispersed community of CS teachers across the country, we need
more people blogging on public platforms not in silos like Facebook.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve heard reasons why teachers don&amp;#39;t blog:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;I&amp;#39;m new and have nothing to write about&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Sure you do – write a paragraph about your plans for the days lesson
or how it went. Vent your frustrations (but be careful not to get
yourself in trouble). Rave about some students work.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;I don&amp;#39;t have time&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, this is a tough one. If you have to do PD time, maybe your
supervisor will let you use it for blogging. To be honest, when I&amp;#39;m
writing regularly it doesn&amp;#39;t take that long. When I haven&amp;#39;t written in
a while it takes longer. In any event. It&amp;#39;s important and posts don&amp;#39;t
have to be long
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;I&amp;#39;m not a great writer&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This blog is proof that you don&amp;#39;t have to be. I&amp;#39;m stilted and ramble
and certainly no Shakespeare. I am the weakest writer in my household
and it&amp;#39;s not even close. Even so, we all have something to share.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;I don&amp;#39;t know how&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I was thinking about proposing a session at next years CSTA conference
where I&amp;#39;d work the group through creating a github pages based
blog. In the meantime, there are a lot of easy ways to start out.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://blogger.com&#34;&gt;http://blogger.com&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://wordpress.com&#34;&gt;http://wordpress.com&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and for those who want total control
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; with &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub pages&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
So, there&amp;#39;s my plea. If you&amp;#39;re a CS teacher and you&amp;#39;re reading this
please consider blogging. I assure you, we will all appreciate it and
benefit from it.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching APCS-A for the first time</title>
      <link>https://cestlaz.github.io/posts/teaching-ap-first-time/</link>
      <pubDate>Wed, 23 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teaching-ap-first-time/</guid>
      <description>&lt;p&gt;
I got  an email from a friend the other day. Among other things, he
mentioned that he would be teaching APCS-A for the first time this
year. He&amp;#39;s a little trepidatious. He knows his stuff but he hasn&amp;#39;t
really done much using Java.
&lt;/p&gt;
&lt;p&gt;
I was going to respond in an email but thought I might share here
instead.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
TL;DR - for all you APCS teachers who are new or new to Java - learn
your core CS, lean on your resources and support and it&amp;#39;s OK to tell
your kids &amp;#34;I don&amp;#39;t know, I&amp;#39;ll get back to you.&amp;#34;. Don&amp;#39;t worry, you&amp;#39;ll be great.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The first time I taught APCS was some time around 1991 or 1992. It was at
&lt;a href=&#34;http://www.sewardparkhs.com/Famous-Alumni/&#34;&gt;Seward Park&lt;/a&gt; &lt;a href=&#34;http://www.sewardparkhs.com/History/&#34;&gt;High School&lt;/a&gt;. It was the AB curriculum - that is one
semester of programming in Pascal and one semester of Data Structures
and Algorithms.  Being a computer science major the core material was
never a concern. I had taken APCS the first time it was offered in May
1984 in Pascal and while most of my college and pre-teaching professional work
was in C, my college started it&amp;#39;s CS sequence with Pascal. I was more
concerned with the actual teaching part. I had taught math for a year
and a half at that point but never CS and by any measure I was still
wet behind the ears. I never finished that first experience because I
was excessed to Stuy mid semester. I wasn&amp;#39;t particularly happy with my
performance but looking back, I think I did a pretty good job given
the situation and my experience.
&lt;/p&gt;
&lt;p&gt;
After teaching math for a year and a half I was back in APCS at
Stuy. Still in Pascal. I spent the next few years figuring out how to
teach CS and APCS in particular along with starting a couple of new
classes. When the College Board decided to move the AP class to C++ I
was happy, sad and a little worried. Pascal had a bunch of limitations
but I had never used C++. True, I was a C programmer at heart but I
had never really done the OOP thing. I did, as it turned out, design a
number of my C systems in an Object Typed design: I would use a single
file per &amp;#34;class&amp;#34; where local variables were de facto instance
variables and functions in the file were methods and each file was a
singleton class. I read &lt;a href=&#34;https://www.amazon.com/Object-Oriented-Analysis-Design-Applications-3rd/dp/020189551X/ref=sr_1_1?ie=UTF8&amp;amp;qid=1503519770&amp;amp;sr=8-1&amp;amp;keywords=Grady+Booch&#34;&gt;Booch&lt;/a&gt; and &lt;a href=&#34;https://www.amazon.com/Object-Oriented-Software-Construction-Book-CD-ROM/dp/0136291554/ref=asap_bc?ie=UTF8&#34;&gt;Meyer&lt;/a&gt; on my own but I had no
schooling in OOP and no professional experience.
&lt;/p&gt;
&lt;p&gt;
As it turned out, I didn&amp;#39;t have to worry. I knew my CS and while it
took me a while to become comfortable with OOP, the class, and of
course I knew this from the get go, started from nothing and built
up complexity a step at a time. The worst that might have happened is
that some of my solutions might have been more C-esque than C++.
&lt;/p&gt;
&lt;p&gt;
The move to Java was a little more jarring. Now we had a totally new
language. I couldn&amp;#39;t fall back on C. It removed memory management and
explicit pointers and it had to be used in an Object Oriented
manner. I remember asking Mike Schidlowsky, a former student turned
friend who was the Java consultant on the Java edition of Sedgewick&amp;#39;s
&lt;a href=&#34;https://www.amazon.com/Robert-Sedgewick-Algorithms-Fundamentals-Structures/dp/B008VR3ZH4/ref=sr_1_4?ie=UTF8&amp;amp;qid=1503520269&amp;amp;sr=8-4&amp;amp;keywords=schidlowsky&#34;&gt;Algorithms&lt;/a&gt; book how to do something. It had to do with passing and
modifying arrays. In C there were a number of ways to accomplish what
I wanted to do. In Java, I couldn&amp;#39;t figure out how to do it the way I
wanted. My friend Mike told me &amp;#34;you just don&amp;#39;t do it that way in
Java.&amp;#34; Again, it turned out that I didn&amp;#39;t have to worry. The basic
coding was still the same as were the data structures and
algorithms. The only challenge was that I had to get into a Java OOP
mindset which it turned out wasn&amp;#39;t that hard.
&lt;/p&gt;
&lt;p&gt;
While I never really warmed up to OOP - I find other paradigms more
natural for me, I knew my CS and got more and more comfortable with
the Java (or C++) way of doing things as time wore on. Sometimes I
would say &amp;#34;I don&amp;#39;t know&amp;#34; or &amp;#34;let&amp;#39;s figure it out&amp;#34; but that&amp;#39;s OK.
&lt;/p&gt;
&lt;p&gt;
Nowadays, there are many more resources available for CS teachers. If
you&amp;#39;re new, lean on them. Use the mailing lists, stackexchange,
facebook groups. Online resources like repl.it, codehs.com etc. Yes,
it&amp;#39;s true that you&amp;#39;ll be better next time around and even better years
down the road but right now, you&amp;#39;re probably better than you think.
&lt;/p&gt;
&lt;p&gt;
A number of my former students volunteer for &lt;a href=&#34;https://www.tealsk12.org/&#34;&gt;TEALS&lt;/a&gt; - a really great
program that brings software engineers into the classroom to work with
non-CS teachers to deliver instruction. A number of my kids have
shared the following sentiment:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I don&amp;#39;t know if I&amp;#39;m really helping
the teacher to become self sufficient or if I&amp;#39;m a great teacher but I
do know one thing - while I&amp;#39;m there, the kids are getting a hell of a
lot more than if I wasn&amp;#39;t there.&amp;#34;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
– Remember that as well.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Cost of AP Exams</title>
      <link>https://cestlaz.github.io/posts/cost-of-ap-exams/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cost-of-ap-exams/</guid>
      <description>&lt;p&gt;
Now that I&amp;#39;m back from vacation and summer&amp;#39;s winding down I thought
I&amp;#39;d start getting back to more classroom related posts. I still have a
few summer topics I want to write about – standards and side projects
in particular but I&amp;#39;m also looking forward to talking more about the
classroom since, after all, at my core, I&amp;#39;m a teacher. When I saw &lt;a href=&#34;http://www.slate.com/articles/technology/future_tense/2017/08/how_online_textbooks_could_help_more_students_take_ap_exams.html&#34;&gt;this&lt;/a&gt;
article in my inbox this morning I thought I&amp;#39;d talk about it.
&lt;/p&gt;
&lt;p&gt;
In the piece, Lindsey Tepe since more kids are taking AP classes and
they&amp;#39;re very expensive, schools should look to lower other costs
related to AP classes so as to provide financial support so that
students can take that oh so important end of year exam:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
While the College Board continues to reimburse about one-third of the
test cost for eligible low-income students, only about half of states
are now offering any further financial assistance for students.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ms. Tepe&amp;#39;s solution? Lower text book costs. As a way of lowering
school costs, I&amp;#39;m all for it. I&amp;#39;ve used free online resources in lieu
of textbooks for years but the savings should go somewhere where it
can make a difference. Perhaps lowering class sizes. The fatal flaw in
Ms. Teps&amp;#39;s piece is that it continues spinning the misplaced narrative
that AP Exams are a very important part of a child&amp;#39;s education.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s be reminded of something: The AP Exam is one thing - an exam - a
single test at the end of the year.
&lt;/p&gt;
&lt;p&gt;
The narrative is that students should take more and more AP classes,
that they&amp;#39;re somehow better for kids. Part of this is due to the
potential college credit and part is because the public has been
bamboozled by the ridiculous school ratings that give credit for AP
classes taken. Back in &amp;#34;the day,&amp;#34; AP classes were basically early
college. You could then argue that they were the most rigorous classes
offered in a school. AP Calc was basically college Calc. Same for
APCS-AB, AP-Bio and the rest. Now, with classes like APCS-P aimed to
be accessible to typical high school students in the lower grades,
they can&amp;#39;t (but still will) make that claim. In fact, at Stuy, my
former school, there are plenty of non AP classes that are more
rigorous than AP classes and the best AP teachers don&amp;#39;t always cover
the whole syllabus because they&amp;#39;re more concerned with their students
actually learning rather than scoring 5 on an exam.
&lt;/p&gt;
&lt;p&gt;
On the college credit front, if a student has a high probability of
saving money through AP credit then I&amp;#39;m all for it but otherwise, it&amp;#39;s
just money going to the college board.
&lt;/p&gt;
&lt;p&gt;
It seems ridiculous for me to have to write this but the important
part of a class is, you know, the class. Not the single exam given by
an outside agency at the end and graded after the semester concludes.
&lt;/p&gt;
&lt;p&gt;
My suggestion? Offer college level work to students that are ready for
it but don&amp;#39;t push the AP exam. This would save a ton of money. What value
does the college board actually bring to the table? Remember, they&amp;#39;re
making a pretty penny on all of this testing. A math teacher should be
able to teach calculus with or without AP. A good text being used by
that teacher in class - be it free or paid for is actually much more
important to a student learning calculus than a single exam taken at
the end of the year. I&amp;#39;d go further and say that I&amp;#39;d trust the
teacher&amp;#39;s exam more than the college board&amp;#39;s. If a teacher knows the
math but needs to see some sample syllabi, they&amp;#39;re a web search
way. The same is true for most other college courses that have AP
equivalents and maybe even more so for computer science.
&lt;/p&gt;
&lt;p&gt;
At the end of the day it should be about students learning not about
students taking high stakes exams.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ethics, Cybersecurity, ethics, curricula  and standards</title>
      <link>https://cestlaz.github.io/posts/ethics-cybersecurity-curricla-standards/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ethics-cybersecurity-curricla-standards/</guid>
      <description>&lt;p&gt;
This morning, I read &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt;&amp;#39;s post on &lt;a href=&#34;http://blog.acthompson.net/2017/08/cybersecuritythis-summers-computer.html&#34;&gt;teaching
cybersecurity&lt;/a&gt;. as Alfred says, it&amp;#39;s something of a CS Ed buzzword this
summer.
&lt;/p&gt;
&lt;p&gt;
Another hot topic in K12 CS Ed this summer is the inclusion of ethics
in our CS courses courtesy of efforts like the #ethicalCS twitter chat every
Wednesday at 8:00 Eastern time  hosted by &lt;a href=&#34;https://twitter.com/ed_saber&#34;&gt;Saber Khan&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Discussions about both topics include &amp;#34;where should we be doing this?&amp;#34;
&amp;#34;What should we be doing?&amp;#34; and of course &amp;#34;How?&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
This got me thinking about designing curriculum from the top down -
that is, as dictated by outside forces: principals, superintendents,
states, industry or bottom up: a teacher sees a need and designs
something for their students.
&lt;/p&gt;
&lt;p&gt;
The best classes I&amp;#39;ve seen are those designed by a passionate teacher
from the ground up. I met  &lt;a href=&#34;https://twitter.com/dougbergmanUSA&#34;&gt;Doug Bergman&lt;/a&gt; at this past year&amp;#39;s CSTA conference. He&amp;#39;s terrific. I
think he came to the conference wanting to find out more about what
cybersecurity really meant. By the second day, he was raving about all
the amazing possibilities. I&amp;#39;d love to be in the class he develops.
&lt;/p&gt;
&lt;p&gt;
On the other hand, when topics or standards are forced down from
above, I&amp;#39;ve seen something entirely different.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve observed and been involved in cybersecurity discussions  with CS
teachers. The discussion goes something like this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Well, we do memory allocation in course XYZ so we can give a
homework assignment there.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
We can rewrite the story (theme) for the assignment in our data
structures class.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
We already do a crypto assignment in algorithms so we&amp;#39;re already
doing it.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I&amp;#39;ve seen the same with groups of math teachers discussing
implementing common core. They talk about resequencing topics,
rewriting a few word problems or homework assignments but at the core,
the feeling is &amp;#34;we already know how to teach math.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
It gets worse when there&amp;#39;s a standardized or high stakes test at the
end of the tunnel and you get the &amp;#34;you need this for the test&amp;#34; type
units.
&lt;/p&gt;
&lt;p&gt;
This might not be as big of a problem in K12 CS right now because so many
teachers are just learning their craft but in established fields such
as math or college CS, when an edict comes from above telling a
teacher how to teach, unless the teacher really believes in it, the
teacher will only pay lip service to it. If it isn&amp;#39;t an issue in CS Ed
right now, it will eventually become one as our field develops legs.
&lt;/p&gt;
&lt;p&gt;
This is arguably a bigger issue with Ethical CS than cybersecurity. If
the teacher doesn&amp;#39;t really believe it&amp;#39;s an important topic, we&amp;#39;ll get
lip service at best and in the case of ethics, unless the teacher
really believes it and models it, the students will be able to tell
that it&amp;#39;s a show.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have an answer other than what my friend and mentor Herb
Greenhut told me many years ago &amp;#34;Solving the education problem is
easy. Hire good teachers and get the f*ck out of the way.&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cestlaz.github.io/posts/grit-kind-word-gun/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/grit-kind-word-gun/</guid>
      <description>&lt;p&gt;
Back in May, I read this &lt;a href=&#34;http://avc.com/2017/05/grit/&#34;&gt;post&lt;/a&gt; about Angela Duckworth and &lt;a href=&#34;https://www.amazon.com/Grit-Passion-Perseverance-Angela-Duckworth-ebook/dp/B010MH9V3W/ref=sr_1_1?ie=UTF8&amp;amp;qid=1501543669&amp;amp;sr=8-1&amp;amp;keywords=Grit&#34;&gt;Grit&lt;/a&gt;. Grit
has become an education buzzword in the past few years so I figured I
should read Duckworth&amp;#39;s book. It took this long because there was a
long waiting list at the New York Public Library to get the ebook. I&amp;#39;m
still not quite finished with the book but I thought I&amp;#39;d share some of
my thoughts on the book and the buzz.
&lt;/p&gt;
&lt;p&gt;
The first big takeaway is &amp;#34;you can get much further with a kind word
and a gun than with a kind word alone.&amp;#34; Or in grit terms Duckworth
says a number of times that Grit is important but that other factors
such as talent do indeed come into play and towards the end of the
book she lists other character qualities that are arguably more
important than grit. I&amp;#39;ll get back to grit + other qualities towards
the end of this post.  On the buzz side, all of that&amp;#39;s forgotten - in
the ed reform world it&amp;#39;s all grit all the time. We must teach it at
our low income schools and we should include grit in our evaluation of
teachers and schools.
&lt;/p&gt;
&lt;p&gt;
Duckworth recently has come out to say grit shouldn&amp;#39;t be used in
evaluating schools and teachers but as I mentioned &lt;a href=&#34;http://cestlaz.github.io/posts/outside-influences-on-cs-ed/&#34;&gt;a few days ago&lt;/a&gt;,
ed reformers have ways of taking arguably good ideas and using them towards
awful ends.
&lt;/p&gt;
&lt;p&gt;
So we have a basic premise that hard work and sticktoitiveness is
important but so is talent. Talent alone won&amp;#39;t get you as far as
talent and grit.
&lt;/p&gt;
&lt;p&gt;
So in spite of the &amp;#34;ed reformers&amp;#34; take on grit, given Duckworth&amp;#39;s
balanced perspective, I was hooked.
&lt;/p&gt;
&lt;p&gt;
Where Duckworth started to lose me, however is when she dove into the
education landscape for examples.
&lt;/p&gt;
&lt;p&gt;
First up is Teach for America. Certainly the founder, Wendy Kopp is
full of grit and Duckworth talks about teachers needing to be gritty
but when you talk about TFA, you&amp;#39;re talking about a group that:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
has a 5 week training program - not nearly enough to learn to teach
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
has a 2 year commitment before moving to &amp;#34;better things&amp;#34;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
encourages practices like scripted lessons
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
None of this sounds particularly gritty to me.
&lt;/p&gt;
&lt;p&gt;
Duckworth also highlights the KIPP charter chain as an terrific
example of grit and the success that follows. She touts KIPP&amp;#39;s
graduation rate neglecting to mention that like most other charters
claiming miracles, KIPP&amp;#39;s stats should be eyed with scrutiny (&lt;a href=&#34;http://garyrubinstein.teachforus.org/2011/07/08/kipp-on-trickin-looking-at-the-raw-data/&#34;&gt;link&lt;/a&gt;, &lt;a href=&#34;https://garyrubinstein.wordpress.com/2016/01/22/whatever-happened-to-kipp/%0A&#34;&gt;link&lt;/a&gt;,
&lt;a href=&#34;https://garyrubinstein.wordpress.com/2017/04/28/4th-best-high-school-in-new-york-is-a-kipp-school-that-doesnt-exist/&#34;&gt;link&lt;/a&gt;). I would have expected a researcher to dig a little deeper.
&lt;/p&gt;
&lt;p&gt;
My friend, former colleague, and TFA alum Gary Rubinstein visited a
KIPP school in NY a few years ago. His take:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
So what I saw there was not very impressive.  I didn’t see any classes
where teachers were getting that mythical period and half of growth in
one period.  I saw some good teaching, mostly average teaching, and
even some very bad teaching.  I saw a novice teacher struggle to
control a class of nine students.  They were walking all over him and
accomplished very little that period.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And in terms of KIPP&amp;#39;s grit training:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I also saw the ‘grit’ training program which amounted to the students
getting the teacher to define very clearly how little homework they
would have to do to still get their candy bar rewards.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Finally, Duckworth holds up Geoffrey Canada&amp;#39;s as another shiny example
failing to notice that again, the &lt;a href=&#34;http://garyrubinstein.teachforus.org/2013/05/12/canadas-legend-ary-ted-talk-lie/&#34;&gt;Emperor has no clothes&lt;/a&gt; and if you
look at attrition, the results are far from stellar.
&lt;/p&gt;
&lt;p&gt;
All of this left me thinking that if Duckworth was so off base with
these three example where I have some details of the behind the scenes
going on, how much can I trust the rest of the book?
&lt;/p&gt;
&lt;p&gt;
In spite of this, I still agreed with Duckworth&amp;#39;s basic premise so I
read on.
&lt;/p&gt;
&lt;p&gt;
Later in the book, Duckworth talks about developing grit. This quote struck me:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Like a lot of parents I had a strong intuition that grit is enahnced
by doing activities like ballet… or piano … or football…
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It struck me because it seemed funny coming from a researcher. It
reminded me of Christopher Alexander&amp;#39;s &amp;#34;A Timeless Way of Building,&amp;#34; a
book on architecture that is sometimes credit as the root source for
Object Oriented Programming. Alexander talks about how societies
throughout history and throughout the world &amp;#34;knew&amp;#34; how to build
certain structures – barns, homes with certain features, even
towns. Back in the day we didn&amp;#39;t have engineering and architecture
schools but we figured out how to do these things and we figured it
out pretty much universally. Duckworth is basically saying &amp;#34;parents
know.&amp;#34; It reminded me of my belief - &amp;#34;teachers know.&amp;#34; This applies to
teaching content and teaching skills like grit. You can&amp;#39;t script a
grit lesson. A good teacher knows when a student needs encouragement,
when a student needs to be coddled and when a student needs to be
redirected.
&lt;/p&gt;
&lt;p&gt;
This post has been something of a ramble but I want to get back to
grit and other qualities and how people are talking about grit as the
be all and end all and not just a component.
&lt;/p&gt;
&lt;p&gt;
Over on &lt;a href=&#34;http://avc.com&#34;&gt;AVC&lt;/a&gt;, in the post that got me to read Grit, Fred closed with:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If you hire and manage people, if you run start and run companies, if
you invest in people and their projects, then Grit is a book you
should read.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
He&amp;#39;s absolutely right but remember the whole person and what you&amp;#39;ve
prescreened for before you consider grit.
&lt;/p&gt;
&lt;p&gt;
Way back when discussions were ongoing about the design for &lt;a href=&#34;https://www.afsenyc.org/&#34;&gt;AFSE&lt;/a&gt; -
before the DOE stopped returning my emails and froze me out of the
process I was at am meeting. A bunch of tech industry heavy hitters
were there. We were arguing over admission screening - did the school
need one. My position was that if you wanted to produce &amp;#34;Google ready&amp;#34;
engineers after high school you needed one. If that wasn&amp;#39;t the goal
you didn&amp;#39;t. One of the DOE representatives posed a question to the
tech people: &amp;#34;what qualities do you look for in a hire?&amp;#34; This elicited
responses like hard working, able to work with others, able to
communicate. The DOE person was proud to have made his point that
these tech companies weren&amp;#39;t looking for talent, advanced skills
anything similar - grit was all you needed. I followed up - &amp;#34;and from
what schools do you look for the kids with these qualities?&amp;#34; - MIT,
Harvard, Cornell… and the tech people got it - they were already
screening for the academic stuff so all that was left to look for were
the other skills.
&lt;/p&gt;
&lt;p&gt;
Should we look at grit? Certainly. Just remember that it&amp;#39;s a piece of
the puzzle just like everything else.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 36 - A Touch of Elisp</title>
      <link>https://cestlaz.github.io/posts/using-emacs-36-touch-of-elisp/</link>
      <pubDate>Sun, 30 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-36-touch-of-elisp/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been working on a vue.js project this summer. During the school
year I really can&amp;#39;t dive into code so it&amp;#39;s been fun.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already showed you most of the Emacs tools I use for
development. Projectile, Ace-Window, IBuffer, Swiper / Ivy and
all. One thing I couldn&amp;#39;t easily do was arrange windows the way I
wanted.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been setting up Emacs with one large window and a couple of
smaller ones:
&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/touch-elisp.png&#34; alt=&#34;/img/touch-elisp.png&#34; title=&#34;/img/touch-elisp.png&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;
I can easily switch the buffer in the window and I can easily switch
windows but what I wanted to do was swap the buffer in the large
window with one of the smaller buffers and leave focus in the larger
buffer:
&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/touch-elisp2.png&#34; alt=&#34;/img/touch-elisp2.png&#34; title=&#34;/img/touch-elisp2.png&#34; /&gt;
&lt;/p&gt;
&lt;p&gt;
I started looking at perspective mode and persp mode but neither work
with the latest Emacs. After poking around at other packages I
realized that ace-window does most of what I wanted. Ace-window has a
function that swaps the buffers in two windows named
&lt;code&gt;ace-swap-window&lt;/code&gt;. The only problem is that it leaves the focus on the
window you swap to not the one you started in. Ace-window also has
&lt;code&gt;aw-flip-window&lt;/code&gt; which then returns the cursor to the previous window.
&lt;/p&gt;
&lt;p&gt;
With a little elisp, we get the behavior I was looking for which I
then bound to &lt;code&gt;C-1 z&lt;/code&gt;:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(defun z/swap-windowsn ()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
(interactive)
(ace-swap-window)
(aw-flip-window)
)

(&lt;span style=&#34;color:#a6e22e&#34;&gt;define-key&lt;/span&gt; z-map (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;z/swap-windows&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The video goes into more details but it shows that if you&amp;#39;re not
afraid to explore a bit you can pretty much get Emacs to do whatever
you want.
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NQhud2ZNd1w&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts on non educator  influences on CS Education</title>
      <link>https://cestlaz.github.io/posts/outside-influences-on-cs-ed/</link>
      <pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/outside-influences-on-cs-ed/</guid>
      <description>&lt;p&gt;
Yesterday &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; blogged about a NY Times piece discussing
&lt;a href=&#34;https://computinged.wordpress.com/2017/07/28/silicon-valley-pushing-coding-into-american-classrooms-through-code-org-nytimes/&#34;&gt;Silicon Valleys influence on education through Code.org&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Mark questioned the validity of the piece. If you don&amp;#39;t read Mark&amp;#39;s
blog and you&amp;#39;re in CS Ed you probably should.
&lt;/p&gt;
&lt;p&gt;
I tried to leave a comment on Mark&amp;#39;s blog - not about the NY Times
article but rather my thoughts on why I think it&amp;#39;s important that we
remain wary and vigilant to industry and outsiders influence and
impact on CS education and on education in general.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if my comment is sitting waiting for Mark to moderate or
if I&amp;#39;m experiencing WordPress weirdness but since it hasn&amp;#39;t shown up
there, I thought I&amp;#39;d share it here:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
While the article might not make a strong case it&amp;#39;s important to be wary of outside influences on education policies.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a fan of a lot of what code.org does but speaking about outsiders in general…
&lt;/p&gt;
&lt;p&gt;
Bill Gates and Co. directly or indirecty gave us such delights like stack ranking teachers, improving, I mean evaluating, I mean firing teachers based on test scores of students they don&amp;#39;t teach, more and more high stakes nonsense testing for kids, and  at least in NY the destruction of neighborhood schools.
&lt;/p&gt;
&lt;p&gt;
They&amp;#39;ve also pushed the current charter movement that, aided by misleading stats appear successful but in truth are no better and frequently worse than public schools while not sharing back a single &amp;#34;best practice.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Then we have private companies like the College Board and Pearson both of whom have an outsized influence on US Ed policy and curriculum.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t doubt the good intentions of code.org - as I said, I&amp;#39;m a fan. I am concerned when they and others take actions that can affect ed policy. I&amp;#39;m concerned when code.org representative pushes students to take an AP exam - not a great CS course with a great CS teacher but the actual exam. I&amp;#39;m even more concerned when code.org offers free PD when a school signs up for the PSAT8/9 - another high stakes meaningless test at taxpayer expense. For code.org it&amp;#39;s a means to  get more CS ed out there. To me it&amp;#39;s setting up a new cash cow for the college board at my expense and at students expense.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen many Ed Tech people, armed with the best intentions, enter the lions den – a school, district, or municipality only to see their best intentions corrupted in the name of cost cutting, profits, or politics.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Three strikes and you&#39;re out or third time&#39;s a charm</title>
      <link>https://cestlaz.github.io/posts/three-times/</link>
      <pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/three-times/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://twitter.com/CompSci4All/with_replies?lang=en&#34;&gt;Brenda Wilkerson&lt;/a&gt;, Director of CS and IT education for Chicago public
schools was one of the keynote speakers at this year&amp;#39;s CSTA
conference.  During her talk, she made a comment about it taking three
times through to get it right so if you&amp;#39;re working hard and struggling
in your first year of teaching CS, it&amp;#39;s not the time to give
up. Learning to teach takes time.
&lt;/p&gt;
&lt;p&gt;
She&amp;#39;s absolutely correct. I saw this in myself and I&amp;#39;ve seen this in
many other young teachers. First year through, your job is to
survive. This is when you rely on colleagues lesson plans, it you can
you shadow another teacher and in general do your best to give what
you can to your students while making it through the semester.
&lt;/p&gt;
&lt;p&gt;
Then, I often see something interesting. Year two is frequently a step
back. It was for me and I&amp;#39;ve seen this in many young teachers in many
subject areas. I&amp;#39;m guessing this happens because we feel we have a
year under our belt and then we overreach while trying to be
innovative and more effective.
&lt;/p&gt;
&lt;p&gt;
In year three things start to improve again and then, if the teacher
continues to work at their craft, there&amp;#39;s steady progress for years to
come. At the point, the teachers seem to better understand how to
experiment and grow as a teacher in a safer way while also
understanding that it&amp;#39;s OK to have a bad day or even a bad unit -
there&amp;#39;s usually time to recover.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also interesting that while this progression is most obvious in
new teachers it also seems to take place with experienced teachers
teaching new courses.
&lt;/p&gt;
&lt;p&gt;
All this means that teaching CS or any new subject takes time, effort,
and patience. It means young teachers shouldn&amp;#39;t beat themselves up and
that supervisors need to be supportive and give the time and resources
to allow teachers to succeed.
&lt;/p&gt;
&lt;p&gt;
It also means that schools with high teacher churn - notably charter
chains create environments that are anything but conducive to allowing
society to build a cadre of expert teachers. It works for these
charter chains because they&amp;#39;re exploiting the fact that they require a
small number of teachers as compared to large urban public schools so
can burn through teachers like gasoline and the fact that they&amp;#39;re
judged only by standardized tests. The model is not sustainable if
privatizers get their wish and charters become the national norm.
&lt;/p&gt;
&lt;p&gt;
Finally, it&amp;#39;s another reason for people to wise up to &amp;#34;leadership&amp;#34;
programs like Teach for America where candidates come in for a couple
years before moving on to &amp;#34;better&amp;#34; opportunities.
&lt;/p&gt;
&lt;p&gt;
So, if the third time&amp;#39;s a charm, how about the flip side? After how long
a period of time should we expect CS teachers to really know their
subject area? I&amp;#39;d say three years is also probably right. Year one,
the teacher is just surviving but after that, I&amp;#39;d expect a teacher to
want to master their subject. When I taught math early on in my
career, I felt overmatched. Particularly at Stuyvesant. I was a CS
major, not a math major. What did I do? I sat in on colleagues
classes and did self study over the summer. Of course by the time I
got up to speed, at least to my standards, I was teaching compute
science.
&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re a new CS teacher, why not take CS101 and data structures
over the summer instead of doing another scripted PD? Between local
and community colleges, at least in urban areas, this shouldn&amp;#39;t be
a problem.
&lt;/p&gt;
&lt;p&gt;
So, is third time a charm? Three strikes and you&amp;#39;re out? A bit of
both?
&lt;/p&gt;
&lt;p&gt;
We have to give our new CS teachers the time and support to learn to
teach and to learn the subject area but at the same time, I think it&amp;#39;s
reasonable to require that they do so given the resources.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Ed advocates should pay attention to greater ed issues</title>
      <link>https://cestlaz.github.io/posts/cs-ed-and-all-ed/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-ed-and-all-ed/</guid>
      <description>&lt;p&gt;
For anyone involved in K12 CS education, the past few years have been
a wild ride. When I first tried to make inroads in the DOE decades ago
I couldn&amp;#39;t get through the door. Now, CS Education is everyone&amp;#39;s
darling. It&amp;#39;s really amazing. It&amp;#39;s been a combination of grass roots
efforts by teachers, non profit education efforts such as &lt;a href=&#34;http://teals12k.org&#34;&gt;TEALS&lt;/a&gt;, advocacy of
groups like &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt; and amazing individuals like &lt;a href=&#34;http://avc.com/2017/06/bearing-witness/&#34;&gt;Fred Wilson&lt;/a&gt; who has
probably done more to move the needle of CS Ed in NY than any other 10
people combined.
&lt;/p&gt;
&lt;p&gt;
While everyone agrees that to do CS education right at the K12 level
we need great teachers and lots of them, everyone also knows that
teachers voices are often unheard. The voices with the greatest weight
belong to the large non-profits, principals, superintendents and
local politicians.
&lt;/p&gt;
&lt;p&gt;
Today&amp;#39;s post is a plea to those with voices to think about the effects
of their advocacy for CS Ed to the greater education landscape.
&lt;/p&gt;
&lt;p&gt;
I started thinking about this recently as I&amp;#39;ve been developing the
CS teacher certification programs for Hunter College. As I spoke to
people across the nation I found that many of the efforts to
developing teacher certification are what I call the &amp;#34;you take it you
teach it&amp;#34; model. You take an abbreviated version of APCS-A and APCS-P
and you&amp;#39;re a certified CS teacher. Just about every real educator feels
that this is ludicrous. Some feel that this can be a first step - get
these credentials to get in the door and then you have three to five
years to really learn your subject and craft. I&amp;#39;m good with that but I
have a problem with anyone who says &amp;#34;you take it you teach it&amp;#34; is good
enough and I&amp;#39;ve heard of a number of regions that are seriously
considering it.
&lt;/p&gt;
&lt;p&gt;
Why is this so bad and, I&amp;#39;d argue, dangerous? Not merely because we&amp;#39;ll
end up with substandard CS teachers for the foreseeable future but
also because it undermines the teaching profession as a whole.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s no secret that public education is under attack. A number of
states including Wisconsin, Arizona, Oklahoma, New York and Michigan
have considered relaxing the standards to become a teacher to address
a teacher shortage. In their twisted logic, the politicians and
&amp;#34;reformers&amp;#34; say that we can&amp;#39;t find enough qualified teachers because
we&amp;#39;ve made it an untenable career so let&amp;#39;s lower standards. You can
argue that any current state&amp;#39;s requirements are overly cumbersome but
that&amp;#39;s another conversation.
&lt;/p&gt;
&lt;p&gt;
When CS Educators say that all that&amp;#39;s needed to teach CS is to sit in
on a two week APCS institute is saying that to teach any subject you
don&amp;#39;t need content expertise. This is dangerous to education as a
whole and when power players in the CS Ed movement don&amp;#39;t speak up
otherwise or even worse that the stance that &amp;#34;you take it you teach
it&amp;#34; is OK, we&amp;#39;re undermining teaching as a profession.
&lt;/p&gt;
&lt;p&gt;
We need our heavy hitters to publicly and privately say that we need a
short term entry into the profession but we absolutely need plans and
pathways so that at the end of the day we have the best prepared
teachers in our schools for CS and for all subjects.
&lt;/p&gt;
&lt;p&gt;
Another issue is when as CS Educators we don&amp;#39;t pay attention to the
whole child. I was at a meeting of CSTA people  from about thirty
states a few years ago. Someone asked &amp;#34;how can we advocate for CS when
the school might use it as an excuse to get rid of music?&amp;#34; Cameron
Wilson, at the time a lobbyist for the ACM said something to the
effect of &amp;#34;I&amp;#39;m not concerned with other subjects, my concern is
getting CS into the schools.&amp;#34; I get it, he was employed to stump CS
but we have to remember that we&amp;#39;re only a piece of the puzzle. We want
a seat at the table but we have to make sure that the table is
populated with everyone needed to provide a great education for our
kids.
&lt;/p&gt;
&lt;p&gt;
A final issue I&amp;#39;ll mention here is how so many CS educators are so
close to the College Board. It was very disturbing that so many CS Ed
players were pushing for more students to take the APCS exam. Not the
class, not some other CS class but the APCS exam. AP is an extremely
controversial subject among teachers and many of us feel that too many
kids take too many AP classes and certainly too many exams. Remember,
the College Board is the organization that pushes things like the
PSAT8/9 another meaningless but high stakes exam inflicted upon our
kids at taxpayer expense. I understand that AP makes things easy -
they have courses, curricula, etc. but we&amp;#39;ve given the college board
an outsized influence on CS education and we&amp;#39;re not paying attention
to their outsized influence on education in general.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m just a small time teacher. I don&amp;#39;t have a national voice. I&amp;#39;m
urging those that do:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Look into what&amp;#39;s going on in greater education. Look at the way
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
public education has been under attack and why.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Look at the side affects of our choices - who we partner with and
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
what policies we push.
&lt;/p&gt;
&lt;p&gt;
We might not agree on the right path but everyone with a voice in CS
Education should be having hard conversations about this and then
strongly advocating for the positions they feel correct.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Observing CS Teachers</title>
      <link>https://cestlaz.github.io/posts/cs-teacher-eval/</link>
      <pubDate>Sat, 15 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-teacher-eval/</guid>
      <description>&lt;p&gt;
Another set of tweets god me thinking:
&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34;
dir=&#34;ltr&#34;&gt;How do we help school administrators help and evaluate CS
teachers? asks &lt;a href=&#34;https://twitter.com/lsudol&#34;&gt;@lsudol&lt;/a&gt; of &lt;a
href=&#34;https://twitter.com/CSForAll&#34;&gt;@CSForAll&lt;/a&gt; &lt;a
href=&#34;https://twitter.com/hashtag/csta2017?src=hash&#34;&gt;#csta2017&lt;/a&gt;
Many don&amp;#39;t understand CS&lt;/p&gt;&amp;mdash; Alfred Thompson (@alfredtwo)
&lt;a href=&#34;https://twitter.com/alfredtwo/status/884427047635795969&#34;&gt;July
10, 2017&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34;
dir=&#34;ltr&#34;&gt;If the current system is any indication, checklists are not
the answer&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a
href=&#34;https://twitter.com/zamansky/status/886220912110043136&#34;&gt;July 15,
2017&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I get the intent. CS teachers should be evaluated by people who have
some clue about the subject. Leigh Ann&amp;#39;s reporting that some people
are working on checklists got me wondering if it really matters? Sure,
it matters if teacher observations were actually set up to improve
instruction but given what we have in NY does it really?
&lt;/p&gt;
&lt;p&gt;
In New York City, teacher observations are a major part of a teacher&amp;#39;s
annual rating and the other part is still &lt;a href=&#34;https://cestlaz.github.io/posts/2013-09-06-why_i_might_no_longer_be_an_effective_teacher.md/#.WWqzc9_6yEI&#34;&gt;that standardized test
nonsense&lt;/a&gt;. Teachers are observed at least 4 and commonly 6 times
or more per year. There might be pre and
post observation conferences.
&lt;/p&gt;
&lt;p&gt;
Sounds good but the system is amazingly flawed.
&lt;/p&gt;
&lt;p&gt;
To start, the DOE uses the &lt;a href=&#34;http://schools.nyc.gov/NR/rdonlyres/8A4A25F0-BCEE-4484-9311-B5BB7A51D7F1/0/TeacherEffectivenessProgram1314Rubric201308142.pdf&#34;&gt;Danielson Framework&lt;/a&gt; which provides a basis
for teacher evaluation. The framework is at best &lt;a href=&#34;https://tedmorrissey.wordpress.com/2014/03/23/fatal-flaws-of-the-danielson-framework/&#34;&gt;flawed&lt;/a&gt; with even
Danielson coming out to say &lt;a href=&#34;https://tedmorrissey.wordpress.com/2016/04/27/danielson-framework-criticized-by-charlotte-danielson/&#34;&gt;it&amp;#39;s being misused&lt;/a&gt;. Of course I&amp;#39;m sure she
protested all the way to the bank. A teacher can be a &amp;#34;Danielson
style&amp;#34; teacher and be great but a teacher can also check all
the Danielson boxes and be mediocre at best. Likewise, some of the
best teachers I know break the Danielson mold and if a supervisor
rigidly adheres to the framework these great teachers would be found
ineffective.
&lt;/p&gt;
&lt;p&gt;
To make matters worse, the rubric is so large that the DOE just
focuses on small parts which means even if the framework was
comprehensive and correct, teachers are only evaluated on a small
part.
&lt;/p&gt;
&lt;p&gt;
When a supervisor evaluates a teacher, they have a checklist with the
rubric where they can rate a teacher 1 (ineffective), 2 (developing),
3 (effective), and 4 (highly effective) and write down some notes.
&lt;/p&gt;
&lt;p&gt;
I guess the hope was to have some consistency but the truth is the
process is very subjective. I know a supervisor who gave a teacher a
ratings of 2 (which is basically failing) for the professional
development category even though the teacher fulfilled all contractual
obligations and then some. There are also supervisors who won&amp;#39;t give a
rating of 4 out of principle. On the other side, I&amp;#39;ve met supervisors
loathe to give low scores.
&lt;/p&gt;
&lt;p&gt;
The tweets at the top of this post refer to the current situation
where CS teachers are never observed and evaluated by supervisors who
are knowledgeable about CS. Even if someone designs a checklist -
something I&amp;#39;m skeptical about given the fact that there are so few
people strong in CS, experienced as teachers and with an eye for
teacher evaluation out there, if the application of the Danielson
framework is any indication, a CS checklist won&amp;#39;t help.
&lt;/p&gt;
&lt;p&gt;
Besides, CS won&amp;#39;t be any different from any other subject. Since the
destruction of the comprehensive neighborhood high school we&amp;#39;ve had a
proliferation of small schools. Some people think that small schools
are universally better. They&amp;#39;re wrong. You need a mix. One of the
problems with small schools is that you don&amp;#39;t have subject area
supervisors. You have a principal and an assistant principal. The
result is that most teachers are evaluated by supervisors with no
subject area expertise and no subject area pedagogical expertise.
&lt;/p&gt;
&lt;p&gt;
The old system, even though it was also subject to abuses was much
better - at least in the hands of a good supervisor. The observation
system is inherently flawed. Observations are snapshots out of context
and the mere presence of an observer changes the tone of the
room. That said, if a supervisor knows the heartbeat of their school
and has ongoing conversations with their staff, they can both ensure
teachers are doing an honest job and also help them to improve.
&lt;/p&gt;
&lt;p&gt;
The method of observation also doesn&amp;#39;t have to be complicated. My
first supervisor made it very simple. He said he looked for one basic
thing - &amp;#34;was learning going on?&amp;#34; The conversation would then go from
there.
&lt;/p&gt;
&lt;p&gt;
Sometimes you have to look beyond the lesson. In my first year, I
frequently observed a friend&amp;#39;s history class. One day the class seemed
to do very little. It seemed like all talk and play. I talked to the
teacher about this. He said &amp;#34;that was what they needed today.&amp;#34; He was
a master and he was right. You might drop in on his class to see
amazing instruction or you might come in and wonder why he wasn&amp;#39;t
fired long ago but at the end of the year when you looked at how much
his kid learned and loved his class you realized that he was an
amazing teacher. No rubric or framework needed. Just the eyeball test.
&lt;/p&gt;
&lt;p&gt;
They also used to have more peer observations.They had to be coordinated
by the department supervisor and he or she had to be in the loop but
the peer observation model helped cross pollinate ideas in a
department, build camaraderie and it also eased the workload of the
supervisor.
&lt;/p&gt;
&lt;p&gt;
To answer Alfred&amp;#39;s question from his tweet, how do we help
administrators help CS teachers? Get other teachers involved, keep an
open mind and look at the big picture.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A friendly reminder to use the right language when describing CS</title>
      <link>https://cestlaz.github.io/posts/languages-or-cs/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/languages-or-cs/</guid>
      <description>&lt;p&gt;
I was part of this conversation the other day:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;When science teachers asked me if I taught AP Java I&amp;#39;d always respond by asking them if they taught AP Microscope.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/883327927831711745&#34;&gt;July 7, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I always use that line to emphasize that I teach CS - a way of
thinking and problem solving and looking at the world. The languages
we use in our classes are tools to help us communicate ideas not the
ends but rather a means.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve spent the past couple of days at the CSTA conference. It&amp;#39;s been a
lot of fun. I&amp;#39;ve been spending the time with old friends and meeting
new ones and as everyone who knows me knows - I love talking shop.
&lt;/p&gt;
&lt;p&gt;
I overheard a conversation today. One CS teacher describing what they
did to a few others. I overheard:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
We teach Scratch then Swift and C++ and also teach Python
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I heard statements like this describing programs more than a couple of
times. I know we&amp;#39;re at a conference of CS Educators but even in this
community we have everything from beginners getting their feet wet to
hardcore computer scientists to everything in between.
&lt;/p&gt;
&lt;p&gt;
We shouldn&amp;#39;t be teaching languages as an ends unto themselves and the
majority of us don&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
What many of us do, though, is take the easy path and use the name of
a programming language to describe what we do rather than really
define what we do. This is why we hear &amp;#34;I teach Java&amp;#34; or &amp;#34;I teach a
class in Swift&amp;#34; even when the teacher teaching Java might really be
teaching Object Oriented program design and development or data
structures or something similar just using Java as the language or
tool.
&lt;/p&gt;
&lt;p&gt;
I too fall into this trap but I try to catch myself. I try not to say
&amp;#34;I teach Scheme&amp;#34; but rather I&amp;#39;ll say &amp;#34;I teach Scheme. Actually, we&amp;#39;re
studying functional programming using Scheme as the language but for
convenience, I&amp;#39;ll just say Scheme for the rest of this talk….&amp;#34;
&lt;/p&gt;
&lt;p&gt;
The words we use to describe our field set the tone. If we&amp;#39;re sloppy
and say &amp;#34;we teach Java,&amp;#34; it&amp;#39;s just like biology teacher saying &amp;#34;I
teach microscope.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
As we try to define our field in the K12 space and seek equal footing
with established subject areas it&amp;#39;s important that we use the right
language so that other educators and policy makers don&amp;#39;t get the wrong
idea.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Self Certification - not a good idea</title>
      <link>https://cestlaz.github.io/posts/dont-self-certify/</link>
      <pubDate>Fri, 07 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/dont-self-certify/</guid>
      <description>
&lt;p&gt;
You&amp;#39;ve probably seen an image like this:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/dont-self-certify/self-signed.png&#34; alt=&#34;/img/dont-self-certify/self-signed.png&#34; title=&#34;/img/dont-self-certify/self-signed.png&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
It&amp;#39;s what you see when you try to access a secure web site but the web
site itself certified itself as being secure.
&lt;/p&gt;
&lt;p&gt;
When people see this on a professional site it sets off all manner of
red flags. We feel much more comfortable when go to a site and we
don&amp;#39;t see that error. When we see the secure green lock in the url bar
indicating that this site is certified through an external trusted
source.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s take this a step further. If you needed surgery would you go to
a board certified surgeon or would you go to Dr. Nick Riviera or some
other &amp;#34;self certified&amp;#34; doctor? Likewise you wouldn&amp;#39;t want to be
represented in court by someone who hasn&amp;#39;t passed the bar.
&lt;/p&gt;
&lt;p&gt;
We might not feel that these certification and licensing processes are
perfect but when we need the services of a doctor or lawyer, we&amp;#39;re
happy these gatekeepers exist.
&lt;/p&gt;
&lt;p&gt;
So we should all be extremely concerned with today&amp;#39;s announcement that
the deal for mayoral control just brokered in NYC came with strings
attached and one of those strings looks to open the doors to give some
charter chains the ability to self certify their teachers.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a story on it in &lt;a href=&#34;http://www.politico.com/states/new-york/city-hall/story/2017/07/06/with-city-charters-poised-to-win-certification-deal-education-schools-fret-113243&#34;&gt;Politico&lt;/a&gt; and one in &lt;a href=&#34;http://www.chalkbeat.org/posts/ny/2017/07/06/some-charter-school-teachers-could-become-certified-without-a-masters-under-proposed-new-suny-rules/&#34;&gt;Chalkbeat&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
One might think that some requirements to become a teacher are
ridiculous. I&amp;#39;ll get to them later  but this is really giving the fox
the keys to the henhouse.
&lt;/p&gt;
&lt;p&gt;
Charters appear to have extremely high rates of teacher attrition so
it makes sense that they want to control their teacher pipeline. This
alone should be a red flag against self certification but what else
are charter chains known for?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Misleading stats - claiming amazing passing numbers on standardized
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
exams while neglecting to mention that somehow or other big blocks
of students were removed from the school prior to the test year
(&lt;a href=&#34;http://www.shankerinstitute.org/blog/student-attrition-and-backfilling-success-academy-charter-schools-what-student-enrollment&#34;&gt;link&lt;/a&gt;).
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The gotta go list
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Forcing high levels of parent involvement (tough for single working
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
parents)
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Charging &lt;a href=&#34;http://www.houstonchronicle.com/news/education/article/KIPP-schools-collected-millions-in-unallowable-11257006.php&#34;&gt;illegal fees&lt;/a&gt;.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Top this off with as taking resources from public schools.
&lt;/p&gt;
&lt;p&gt;
Charters operate in anything but a transparent manner and we&amp;#39;re
expected to trust them to prepare &amp;#34;highly effective&amp;#34; teachers? I don&amp;#39;t
think so. Since there is no real accountability for charter schools -
they can easily game the system through student attrition, selective
admissions (by putting up barriers to enter the lottery) and test prep
they can pay lip service to teacher preparation and the public will be
none the wiser.
&lt;/p&gt;
&lt;p&gt;
If we had a reasonable way of holding principals accountable and no,
test scores are not the answer then we could pretty much do away
with teacher certification. If principals were held to task to run an
effective school, something we can easily define but not measure, then
they would have every incentive to hire the best
teachers. Unfortunately we&amp;#39;re nowhere near that place.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re not, we&amp;#39;re left with the current systems of teacher
certification that has it&amp;#39;s own slew of problems. A big part of it, in
my opinion is that schools of education have lost the high
ground. While there are some institutions doing great work, reputation
wise, schools of education are held in very low regard. Strong
teachers trade stories of the watered down content classes and waste
of time classes where professors share their pet theories of
education. I can&amp;#39;t tell you how many times I&amp;#39;ve heard the new
definitive way to teach. At the same time, education research is
frequently held in low regard by teachers and the general public.
&lt;/p&gt;
&lt;p&gt;
On the one hand we have charters run by and support by non-educators
wanting us to trust them and on the other we have institutions that
are questioned by the teachers they produce and the general public.
&lt;/p&gt;
&lt;p&gt;
What a mess.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know the answer. I&amp;#39;m working on teacher certifications
programs at Hunter and it&amp;#39;s a balancing act. How much content is
sufficient and how much is too much. Can any of the general content be
streamlined or is it all necessary. If it isn&amp;#39;t necessary do we need
it anyway to satisfy the bean counters?
&lt;/p&gt;
&lt;p&gt;
If you don&amp;#39;t have enough then we&amp;#39;re sending unprepared teachers into
the classroom. Too much and we&amp;#39;ll drive potential teachers away.
&lt;/p&gt;
&lt;p&gt;
As computer science education is defining itself we see similar
struggles. We have some people advocating certifications analogous to
existing teacher certifications. On the other extreme we have
advocates for two weeks summer training and you&amp;#39;re a CS teacher. I&amp;#39;d
like to think that I&amp;#39;m advocating for the sweet spot. Strong content
knowledge not tied to a specific course and matching content related
pedagogy. Time will tell becomes the certification standard and time
will tell whose approach was right.
&lt;/p&gt;
&lt;p&gt;
For now, it&amp;#39;s important not to give away the store. Private charter
schools should not be the driving force behind teacher certification
and they certainly shouldn&amp;#39;t be allowed to train their own teachers
and then &amp;#39;teach&amp;#39; our students without much greater scrutiny.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Addendum:
&lt;/h2&gt;
&lt;p&gt;
I&amp;#39;m sure some of my friends will point out that private schools aren&amp;#39;t
held to any particular standard for teacher certification. This is
true but private schools don&amp;#39;t take public funds. Actually they do but
in my opinion, they shouldn&amp;#39;t. I maintain that charter schools are
publicly funded private schools in that they take public money but
operate as private entities. As such they should be held under the
greatest of scrutiny and standards – they aren&amp;#39;t
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Plea to AP teachers- don&#39;t measure yourself by your scores</title>
      <link>https://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teachers-you-arent-your-test-scores/</guid>
      <description>&lt;p&gt;
AP scores just came out. As usual, I see the posts and take part in
conversations where teachers talk about their results. Some are happy
about their results, some aren&amp;#39;t, some don&amp;#39;t really care.
&lt;/p&gt;
&lt;p&gt;
I just want to make a plea to all AP teachers out there:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;Don&amp;#39;t let your value be dictated by the college board or any other
exam.&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I never really cared much about my students&amp;#39; actual AP scores. There
were a number of years when I never even saw the results. Of course, I
had a population that would do reasonably well regardless of teacher
so I was never placed under any pressure to &amp;#34;do better.&amp;#34; One year -
while the APCS-AB exam was still offered, my principal called me down
to discuss the results to see if we could get more kids scoring 4s and
5s (which most of the kids already did). I told him that I thought
we were doing fine, explained why I couldn&amp;#39;t advocate more teaching to
the test (such as more than paying lip service to the case study or
more rote practice on the multiple choice), and told him how I
measured our success as a program. He was happy with my answer and
that was that.
&lt;/p&gt;
&lt;p&gt;
The AP exam is one test on one day and in my opinion the least
valuable measure of my students&amp;#39; achievement. This is one of
the reasons I was so dismayed by the CSEd community&amp;#39;s efforts in
pushing the AP exams - not the class or the subject but the actual exam.
&lt;/p&gt;
&lt;p&gt;
So, how should you judge your success? That&amp;#39;s up to you. I can only
tell you how I judge myself.
&lt;/p&gt;
&lt;p&gt;
First and foremost - and I know this sounds cheesy - are you a &amp;#34;force
for good&amp;#34; in your student&amp;#39;s lives. Do you leave them in a better
place? Have you opened the door to a possible future for them? Have
you helped them grow? Beyond that, have they progressed in your
subject and as students in general.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had kids &amp;#34;fail&amp;#34; the AP exam and go on to wonderful careers in
tech and come back to thank me for giving them their start. I&amp;#39;ve also
had kids that have gone into other fields but appreciate what we&amp;#39;ve
done for them. I&amp;#39;ve also had my failures and I do mean my
failures. Students I couldn&amp;#39;t reach or couldn&amp;#39;t figure out how to
help.
&lt;/p&gt;
&lt;p&gt;
As teachers, we work day to day trying to improve but we can get a
great overview of how we&amp;#39;re doing by using a much longer feedback
loop - looking at what our graduates are up to. When young teachers
would comment on former students coming back or running into them at
tech events that they would have graduates of their own in a few years
and invariably they do.
&lt;/p&gt;
&lt;p&gt;
To really evaluate how you&amp;#39;re doing you have to go with the long
game. Very few people get that. I remember talking to a Google
Executive while I was designing CAPE 2010. He said something to the
effect of &amp;#34;I know we won&amp;#39;t know if this program works for about ten
years but we&amp;#39;ll have to come up with something short term to satisfy
the powers that be.&amp;#34;  That so few &amp;#34;get it&amp;#34; and need instant feedback
is one of the reasons that our society is so test driven. We shouldn&amp;#39;t
be. Our focus should be on helping the students learn and progress.
&lt;/p&gt;
&lt;p&gt;
So don&amp;#39;t get distressed over AP results and don&amp;#39;t get to high on them
either. Certainly don&amp;#39;t use them to drive what and how you teach. Let
your students and your conscience be your guide.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teachers - teacher first or content first</title>
      <link>https://cestlaz.github.io/posts/teacher-to-cs-or-cs-to-teacher/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teacher-to-cs-or-cs-to-teacher/</guid>
      <description>&lt;p&gt;
Is it easier to take CS people and teach them to teach or is it easier
to take teachers and teach them CS?
&lt;/p&gt;
&lt;p&gt;
The question gets batted around from time to time.
&lt;/p&gt;
&lt;p&gt;
This time via twitter:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Some think it&amp;#39;s easier to teach a teacher to teach CS than to teach a CS pro to teach. &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;@alfredtwo&lt;/a&gt; is not one of them &lt;a href=&#34;https://t.co/QCUP8d8llZ&#34;&gt;https://t.co/QCUP8d8llZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Diane Levitt (@diane_levitt) &lt;a href=&#34;https://twitter.com/diane_levitt/status/881874056911388673&#34;&gt;July 3, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Agreed. It takes a lot of work. More than a week long workshop.&lt;/p&gt;&amp;mdash; Alfred Thompson (@alfredtwo) &lt;a href=&#34;https://twitter.com/alfredtwo/status/882243591090962432&#34;&gt;July 4, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
The conversation was referring to blog posts by &lt;a href=&#34;http://blog.acthompson.net/2017/06/become-computer-science-teacher-in-five.html?spref=tw&amp;amp;m=1&#34;&gt;Alfred Thompson&lt;/a&gt; and &lt;a href=&#34;https://gflint.wordpress.com/2017/06/20/a-week-of-in-service-another-python-course/&#34;&gt;Garth flint&lt;/a&gt;.
Alfred&amp;#39;s key point - one that I&amp;#39;ve spoken about before is that short
term professional development does not a CS teacher make.
&lt;/p&gt;
&lt;p&gt;
As to the lead in question? I&amp;#39;ve seen both routes succeed and both
routes fail. Both can be heavy lifts but there&amp;#39;s a missing part of the
equation that&amp;#39;s never addressed.
&lt;/p&gt;
&lt;p&gt;
The claim is that it&amp;#39;s easier to teach CS to a non-CS teacher because
they already know how to teach. The problem is, particularly in the
later grades that teachers of different subject areas have very
different tool sets. Sure, there are common factors – get the kids
involved, layer, spiral, etc. but you don&amp;#39;t teach a CS lesson the same
way you teach a math lesson let alone a literature, history, language
lesson.
&lt;/p&gt;
&lt;p&gt;
In a math class, it&amp;#39;s common to have students write solutions to
problems up on the board. If you try that in a CS class, you&amp;#39;ll be
waiting 20 minutes while the kids transcribe the problems. Likewise,
math homework will likely consist of a certain amount of repetitive
practice problems whereas a CS class won&amp;#39;t have something directly
analogous. This is not to say that you don&amp;#39;t have opportunities for
students to present at the board in CS class or that there isn&amp;#39;t
worthwhile homework but rather that even at this simple level, there
are differences.
&lt;/p&gt;
&lt;p&gt;
So, if we&amp;#39;re going to teach a non-CS teacher the CS content, beyond
the challenge of giving them the necessary depth and breadth of
content knowledge we have to teach them how to teach CS.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve inventoried some of the techniques my colleagues and I have used
in our classes and the collected methods could easily fill a couple of
graduate education courses.
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the answer to the question? It doesn&amp;#39;t matter where you
start but if we want to do right by our kids we need to prepare them
in not two but three areas:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
CS Content
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
CS Pedagogy
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
General education and pedagogy
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Short term PD (professional development) won&amp;#39;t do it and neither will
scripts for &amp;#34;teachers&amp;#34; to follow. It&amp;#39;s going to take time, will, and
effort.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s hoping that municipalities look at the long game. It&amp;#39;s fine to
do PD now to get something started but it&amp;#39;s not enough. I wanted my
kids math teachers to know math and how to teach it. We should demand
no less from our CS teachers.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 35 - Blogging</title>
      <link>https://cestlaz.github.io/posts/using-emacs-35-blogging/</link>
      <pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-35-blogging/</guid>
      <description>&lt;p&gt;
Very little new Emacs in today&amp;#39;s episode of Using Emacs. The video
shows my old blogging workflow and what I&amp;#39;m playing with now.
&lt;/p&gt;
&lt;p&gt;
The only new Emacs covered is the &lt;a href=&#34;https://github.com/rejeep/prodigy.el&#34;&gt;prodigy&lt;/a&gt; package which lets you run
services under Emacs. I use it to run &lt;a href=&#34;https://getnikola.com/blog/index.html&#34;&gt;Nikola&lt;/a&gt;&amp;#39;s development server but
I think prodigy will also be useful when I start writing that knitting
application I promised my wife.
&lt;/p&gt;
&lt;p&gt;
When I started this blog, I used Jekyll. It was simple and worked with
GitHub pages. I wrote about why I transitioned to Nikola &lt;a href=&#34;https://cestlaz.github.io/posts/2016-04-14-i-hate-ruby/&#34;&gt;here&lt;/a&gt; and
&lt;a href=&#34;https://cestlaz.github.io/posts/2016-04-17-emacs-jekyll-nikola/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s not much more to say here so enjoy the video:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/wSeTic9obKw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>On Retaining Teachers</title>
      <link>https://cestlaz.github.io/posts/on-retaining-teachers/</link>
      <pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/on-retaining-teachers/</guid>
      <description>&lt;p&gt;
Back in February, I shared my thoughts on &lt;a href=&#34;https://cestlaz.github.io/posts/will-we-lose-cs-teachers-to-industry&#34;&gt;losing CS teachers to the
tech industy&lt;/a&gt;. TL;DR - I don&amp;#39;t think it will be a CS Ed problem.
&lt;/p&gt;
&lt;p&gt;
That said, I do think that it will be hard to find good CS teachers
but the reason is because it will get harder and harder to find good
teachers in general.
&lt;/p&gt;
&lt;p&gt;
There are plenty of reasons why it&amp;#39;s harder to become a
career teacher but I don&amp;#39;t want to talk about those today. There are
also plenty of powerful forces working to destroy public schools and
teaching as a career but this post isn&amp;#39;t about that either.
&lt;/p&gt;
&lt;p&gt;
This post is my attempt to tell people what teachers are actually
looking for. Some people assert that merit pay or similar &amp;#34;real world&amp;#34;
incentives will keep good teachers teaching but teachers are a
different breed.
&lt;/p&gt;
&lt;p&gt;
Of course, I can&amp;#39;t speak for all teachers but I can talk about myself
and teachers I&amp;#39;ve known and worked with over the years.
&lt;/p&gt;
&lt;p&gt;
I never thought I&amp;#39;d be a teacher, it was just something I tried when I
was dissatisfied with Wall Street. I tried it, it stuck. I didn&amp;#39;t feel
at the time that teaching was my calling but somehow or other, I made
a career of it.
&lt;/p&gt;
&lt;p&gt;
To start, schools are not factories, companies, stores, or any other
type of business. Teachers spend most of their days with students and
little time with each other. Most of their time is allocated for
them. A high school teacher in NY will likely teach 5 class of 34 kids
each, have 1 period for lunch, 1 for preparation and 1 assigned to
some school task. You probably won&amp;#39;t see your supervisor much. Mostly
at monthly meetings and when they observe you. Observations are
ostensibly for teacher evaluation and improvement but the system is
does neither well.
&lt;/p&gt;
&lt;p&gt;
Teachers also don&amp;#39;t have the same types of career paths as a other
professionals do. If you want to remain a classroom teacher, there is
no career path. You could become an assistant principal or principal
but those opportunities take you away from the kids and from your
subject area. They say teaching is a calling and for career classroom
teachers it probably is. For those who spent a few years in a
classroom and left for what they see as greener pastures, maybe not.
&lt;/p&gt;
&lt;p&gt;
So instead teachers make a career by honing their craft, creating electives,
working with clubs and teams, or doing something similar that doesn&amp;#39;t
remove them from the classroom.
&lt;/p&gt;
&lt;p&gt;
In my case, I developed some electives and one thing led to another
and I ended up where I am today.
&lt;/p&gt;
&lt;p&gt;
The career situation of the teacher is why things like merit pay never
work. As a teacher, I want, in fact need my colleagues to do well. I
might have your kids next year and if you do a poor job I&amp;#39;ll end up
suffering with the results. Sure, I&amp;#39;d like to be recognized as one of
the better teachers but it&amp;#39;s not healthy for my students, my school,
or my career if I&amp;#39;m pitted against my fellow teacher. We&amp;#39;re all in
this together.
&lt;/p&gt;
&lt;p&gt;
Teachers do accept merit pay when it&amp;#39;s forced on them though. As a
friend of mine once said - it&amp;#39;s like the teacher lottery - the way
they assign the merit bonuses are based on those bogus state exams so
the distribution is pretty random, one year I&amp;#39;ll get it, another year
someone else.
&lt;/p&gt;
&lt;p&gt;
This is not to say that teachers couldn&amp;#39;t use a higher salary but even
then, teachers are not driven by the same motivations as business
people. I don&amp;#39;t know of any teacher who feels that they&amp;#39;d work harder
for more pay or that they work any less hard if they&amp;#39;re paid less.
&lt;/p&gt;
&lt;p&gt;
Teachers work and fight for their kids because that&amp;#39;s what we
do. Right before I left Stuy for Hunter, the teachers and city agreed
to a new contract. All of a sudden I got a pay raise. I can tell you
that I was neither a better or worse of a teacher the day after the
contract went into affect than the day before.
&lt;/p&gt;
&lt;p&gt;
My mentor and friend &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-07-rich-rich.html&#34;&gt;Richard Rothenberg&lt;/a&gt; talked to me about the deal we
make with society as teachers early in my career. He said, once you
get a few years in and have some seniority you&amp;#39;re pretty secure and
you&amp;#39;re only worry has to be teaching. We don&amp;#39;t do great in the good
times but we do OK. On the other hand, we still have jobs in the bad
times although, again, we don&amp;#39;t do great. We put in a lifetime of
service knowing that we won&amp;#39;t get any significant financial reward but
at the end of the day between our contributions and the city/state&amp;#39;s
investments we&amp;#39;ll get a pension and won&amp;#39;t be out in the cold in our
retirement.
&lt;/p&gt;
&lt;p&gt;
The point is that those of us meant to be teachers were never looking
for the fast track to the upper class. We work to make a difference
and want society to enable us to make that difference. Teachers don&amp;#39;t
have to be paid like they are in &amp;#34;the real world&amp;#34; but they do need to
put a roof over their heads, send their kids to college and have a
vacation now and again.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not too much to ask but in this day and age it&amp;#39;s apparently too
much to give.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mayoral Control - only when your guy&#39;s the mayor</title>
      <link>https://cestlaz.github.io/posts/mayoral-control/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/mayoral-control/</guid>
      <description>&lt;p&gt;
The hot debate this past week in NY Education circles is Mayoral
Control. When I started teaching, New York City schools were
controlled by the Board of Education. The board appointed a
chancellor. The system was supposed to balance community control as
well as some centralized decision making. The system was created in
the late 60s and was entrenched through my schooling. By the time I
was a teacher I think it was pretty much a given that the system
didn&amp;#39;t work.
&lt;/p&gt;
&lt;p&gt;
In 2002, everything changed with Mayoral control under Michael
Bloomberg. Under mayoral control, the mayor appoints the chancellor
who appoints superintendents an on down the line. This was supposed to
create a chain of accountability leading up to and including the
mayor. To address concerns that parents voices would be heard, we had
the Panel for Educational Policy or PEP which was supposed to vet and
vote on policy and initiatives.
&lt;/p&gt;
&lt;p&gt;
Sounds good.
&lt;/p&gt;
&lt;p&gt;
Of course, it was all a farce.
&lt;/p&gt;
&lt;p&gt;
Parents may or may not have had a voice under the old system but they
certainly didn&amp;#39;t have a voice with mayoral control. The majority of
members of the panel were mayoral appointees and if they didn&amp;#39;t vote
100% in line with their masters wishes, they were removed for someone
who would. Schools were closed and initiatives were passed that were
wildly unpopular with parents.
&lt;/p&gt;
&lt;p&gt;
What did we get under mayoral control? There was some good, but we
also got:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
100% buy in to the pet education theories of non-educators like Bill
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
gates.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
School leaders who barely taught and had little experience as
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
educators.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Destruction of neighborhood schools
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Destruction of just about all of the large comprehensive high schools
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Open doors for private charter schools that follow questionable
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
practices.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Flawed (at best)  school and teacher evaluation models
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The ATR pool
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Of course, reformers - those out to privatize education loved mayoral
control under Bloomberg. It destabilized teaching as a career
&lt;/p&gt;
&lt;p&gt;
Did results improve?
&lt;/p&gt;
&lt;p&gt;
Some would say yes but it&amp;#39;s debatable. Graduation rates and test
scores are controlled by the politicians. When you have tests made,
graded, and curved in secret (except for those charter schools that
are exempt or grade their own tests), you&amp;#39;ve got to question any gains
or losses.
&lt;/p&gt;
&lt;p&gt;
Bloomberg&amp;#39;s failing was (and possibly still is) that he and his
appointees didn&amp;#39;t understand education or teachers. Education not a
business and can&amp;#39;t be treated the same way.
&lt;/p&gt;
&lt;p&gt;
Did this help with accountability? To quote Mr. Bloomberg: &amp;#34;They can
boo me at parades.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Fast forward to the de Blasio administration. Personally, I was not a
fan of Bloomberg&amp;#39;s educational policy and I also feel that de Blasio&amp;#39;s
also doing a poor job. Regardless of my opinion, Mayoral control under
de Blasio has certainly felt more community friendly.
&lt;/p&gt;
&lt;p&gt;
This hasn&amp;#39;t sat well with the reformers upstate and while Michael
Bloomberg was granted mayoral control for his entire term, Bill de
Blasio has had to fight for it every year and every year control has
come with strings attached – generally involving the flow of money
into private charter schools - still with questionable practices and
results.
&lt;/p&gt;
&lt;p&gt;
The funny thing is that many of those saying mayoral control was bad
during the Bloomberg era say it&amp;#39;s a necessity now  and many against it
under Bloomberg are fans under de Blasio.
&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s even funnier, in a tragic way is that it isn&amp;#39;t really even
control. So much is really controlled in Albany under Governor
Cuomo. When de Blasio wanted to charge private charters for space
(rightfully so, in my opinion), Albany stepped in and gave the
charters a free pass. How is that mayoral control?
&lt;/p&gt;
&lt;p&gt;
Regardless of your political leanings, it&amp;#39;s pretty clear that mayoral
control is only a good thing when the mayor is your guy. We need
something brand new that supports our communities. I was at the
&lt;a href=&#34;https://personaldemocracy.com/conference&#34;&gt;Personal Democracy Forum 2017&lt;/a&gt; a couple of weeks ago and a recurring
theme, one which we really need now for our schools is:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;build with, not for&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If we don&amp;#39;t get there we&amp;#39;ll be stuck booing our politicians at parades.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Are best practices always the best?</title>
      <link>https://cestlaz.github.io/posts/best-practices-cli/</link>
      <pubDate>Wed, 21 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/best-practices-cli/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been trying to be an active participant on the &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;CS Educators
StackExchange&lt;/a&gt;. You should try to as well!!!
&lt;/p&gt;
&lt;p&gt;
I answered a question about using the command line which led to a back
and forth. I gave an example of something I might do in class to
illustrate the power of using the command line and linked to some of
my past &lt;a href=&#34;http://cestlaz.github.io/categories/cli/&#34;&gt;posts&lt;/a&gt;. There was some back and forth in the comments - some of
the participants weren&amp;#39;t happy with my code as they felt it was filled
with poor coding practices.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to comment on the discussion other than to say that I
make no apologies for how I use the Linux tools and the command line
as my methods have served me well over the years. I also make no
apologies on how I teach my students as I seem to have by and large
done right by them over the years as well.
&lt;/p&gt;
&lt;p&gt;
The crux was that I was showing what I might type in a class without
any of the class commentary. It wasn&amp;#39;t meant to be a script in a file
let alone reusable code or a full blown program.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t want to spend time here talking about &amp;#34;best practices&amp;#34; for
shell scripting. There are plenty of &lt;a href=&#34;https://jvns.ca/blog/2017/03/26/bash-quirks/&#34;&gt;resources&lt;/a&gt; a search engine away.
&lt;/p&gt;
&lt;p&gt;
The question is that how universal are best practices and is it more
important that we teach specific best practices or rather that we have
a discussion with our students about best practices.
&lt;/p&gt;
&lt;p&gt;
Some general best practices are probably pretty universal – &amp;#34;write
clear code&amp;#34; but I&amp;#39;ve seen best practices that when followed
religiously just don&amp;#39;t always make sense:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
never break out of a loop
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
one return statement per function
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
always or never do anything in particular
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
all code should be commented
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
always use an ORM
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
to list a few.
&lt;/p&gt;
&lt;p&gt;
So, best practices aren&amp;#39;t always best. More like guidelines to think
about when you&amp;#39;re programming and then you and your team can make
smart decisions.
&lt;/p&gt;
&lt;p&gt;
So, when I wrote those lines over on StackExchange, was I really
showing my students how to code badly? The code:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ls *gif | &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read i
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
f&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;basename $i .gif&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
convert $i -resize 200x200 smaller-$f.gif
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
doesn&amp;#39;t exist in a vacuum. We start with an ls to see the directory,
we use the &lt;strong&gt;&lt;strong&gt;echo&lt;/strong&gt;&lt;/strong&gt; throughout to test things before we run it live
and then we run it live in such a way that it can&amp;#39;t be
destructive. I&amp;#39;ve been using the command line this way for decades and
while I&amp;#39;ve screwed plenty of things up, it&amp;#39;s never been due to a bad
command line shell practice.
&lt;/p&gt;
&lt;p&gt;
The important part is the discussion with the class:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
would this be appropriate in a script file?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
what are the dangers
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
why and when is it ok?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not our job to dictate to our students which best practices to
follow but rather to prepare them to make smart decisions.
&lt;/p&gt;
&lt;p&gt;
This year, I&amp;#39;m back to using C++ in class after maybe two decades. I&amp;#39;m
not up on current C++ best practices. I was wondering what was best:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
or even if we should use &amp;#34;\n&amp;#34; vs endl.
&lt;/p&gt;
&lt;p&gt;
I did my research, presented the results to my students and we talked
about what they should consider when making their decision.
&lt;/p&gt;
&lt;p&gt;
Students don&amp;#39;t need us to blindly
spout best practices. They can read them online or in a book. They do
need us to guide them towards critically thinking about them.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Community Curated List of CS Education Resources</title>
      <link>https://cestlaz.github.io/posts/awesome-cs/</link>
      <pubDate>Fri, 16 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/awesome-cs/</guid>
      <description>&lt;p&gt;
One of the things I mentioned in my post on the &lt;a href=&#34;http://cestlaz.github.io/posts/cs-educators-stackexchange/&#34;&gt;CS Educators
StackExchange&lt;/a&gt; was the fragmentation of resources for CS Educators. My
friend and fellow CS teacher Ben pointed out that this is appropriate
as we&amp;#39;re so young as a community. He&amp;#39;s absolutely right but until we
mature, discover-ability can be a problem. We all have our resources
and I for one am frequently surprised when talking to a friend and
discovering that they don&amp;#39;t know about a site or a mailing list that
I&amp;#39;ve known about for years. Likewise, I&amp;#39;m appreciative when others
share resources with me.
&lt;/p&gt;
&lt;p&gt;
There are some collections of information, for instance, &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred
Thompson&lt;/a&gt; has a list of CS Education bloggers but it&amp;#39;s not so easy to
discover and it certainly shouldn&amp;#39;t fall on Alfred to maintain such
a list making sure the links are all active and always being
responsible for adding new ones.
&lt;/p&gt;
&lt;p&gt;
Recently I&amp;#39;ve noticed a proliferation of &lt;strong&gt;&lt;strong&gt;awesome&lt;/strong&gt;&lt;/strong&gt;
lists. These are community curated lists hosted up on GitHub for a
variety of projects. I find myself using &lt;a href=&#34;https://github.com/emacs-tw/awesome-emacs&#34;&gt;awesome-emacs&lt;/a&gt; and
&lt;a href=&#34;https://github.com/vinta/awesome-python&#34;&gt;awesome-python&lt;/a&gt; more and more and there are tons of other such lists.
&lt;/p&gt;
&lt;p&gt;
I thought we, as a community could benefit from such a list.
&lt;/p&gt;
&lt;p&gt;
I started one off. It&amp;#39;s over at
&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education&#34;&gt;https://github.com/zamansky/awesome-cs-education&lt;/a&gt;&lt;/a&gt; with instructions on
contributing at
&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&#34;&gt;https://github.com/zamansky/awesome-cs-education/blob/master/contributing.org&lt;/a&gt;&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I seeded it with a few items but I&amp;#39;d love everyone to get involved. I
also started it with a few categories and a specific format but I&amp;#39;d
love to see that evolve into something most useful for the community
as well.
&lt;/p&gt;
&lt;p&gt;
If you agree that this could be something useful, please contribute to
it and help spread the word.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Educators StackExchange</title>
      <link>https://cestlaz.github.io/posts/cs-educators-stackexchange/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-educators-stackexchange/</guid>
      <description>&lt;p&gt;
The &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;CS Educators StackExchange&lt;/a&gt; is now in public beta. For those of you
who are not in tech, &lt;a href=&#34;https://en.wikipedia.org/wiki/Stack_Exchange&#34;&gt;StackExchange&lt;/a&gt; is a network of question answering
sites. &lt;a href=&#34;http://stackoverflow.com&#34;&gt;StackOverflow&lt;/a&gt; is probably the most famous - many peoples go to
site for computer science and programming questions and answers.
&lt;/p&gt;
&lt;p&gt;
During this period of public beta the site will be working on defining
itself and also on developing a critical mass of users. I hope the
site succeeds and I encourage everyone to &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;check it out&lt;/a&gt;, ask questions,
answer some and let&amp;#39;s all see where this goes.
&lt;/p&gt;
&lt;p&gt;
An interesting difference between StackExchanges and most other
communities is that it&amp;#39;s a question answering site not a discussion
board or shared resource collection. This works well for programming
questions where you can share a code snippet, algorithm, or derivation
which can be shown to be correct. We&amp;#39;ll see how it works for something
more nebulous like education. The voting system should help but the CS
education community is already awash with anointed thought leaders
with little or no teaching or CS experience. It will also be
interesting to see how things develop given that, by and large, K12
educators know a whole lot more about teaching than those in higher ed
while the on the flip side, the professors are generally much
more knowledgeable about the subject matter and then you have the
education researcher which is another beast altogether.
&lt;/p&gt;
&lt;p&gt;
Part of me thinks that discussion could be more valuable than answers
and in fact, I&amp;#39;m finding the comments which are more discussion like
to be more interesting, but that&amp;#39;s just me.
&lt;/p&gt;
&lt;p&gt;
A side thing I noticed was that the moderators have taken to asking
contributors not to link to other sites but to either write self
contained answers. I understand this desire to have everything under
your roof but it strikes me as wanting to use their silo instead of
someone else&amp;#39;s silo. This happened to me on an answer because I had
already written a series of blog posts on the subject. Admittedly, I
just put up four links and could have (and will) provide more context
but I also had no desire to rewrite my content just to share info that
was already out there. Likewise there was a question that was posed on
A* which led to &lt;a href=&#34;http://cestlaz.github.io/posts/a-star-is-born/&#34;&gt;this post&lt;/a&gt;. I wanted to share my thoughts with &amp;#34;my&amp;#34;
community as well as on the stackexchange and didn&amp;#39;t want to have to
do the same thing twice.
&lt;/p&gt;
&lt;p&gt;
One of the moderators claims is that a link might not be
permanent. This is true. My blog might not be around in 5 years but
then the CS Educators StackExchange might not as well. I hope both are
around and thriving but time will tell.
&lt;/p&gt;
&lt;p&gt;
This also got me thinking about the  mish mash of
CS Educator communities floating around. I&amp;#39;m familiar with and a
member of:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
A few Facebook groups (CS Education, CS Education Discussion, AP
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Comp Sci, APCSP)
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The CS Education subreddit
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A couple of mailing lists (the College Board AP Community, SIGCSE)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A few blogs are kind of communities in that there&amp;#39;s a core group of
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
readers but discussion is pretty sparse.
&lt;/p&gt;
&lt;p&gt;
Are there others I&amp;#39;m not aware of?
&lt;/p&gt;
&lt;p&gt;
This has led to a lot of duplication and some fragmentation and there
is a concern about silos. The Facebook groups are very much a silo and
to a certain extent so are the mailing lists. I guess the SIGCSE list
is more community run than the College Board one, but still. Blogs are
our own personal islands so while I wish more people would both blog
and comment about CS Ed they&amp;#39;re not necessarily open and permanent
either. At least with some blogs and with the subreddit and
stackexchange we can, if we want, download all of the data if we want
and preserve it for posterity.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if there&amp;#39;s a solution - maybe we should set up a &lt;a href=&#34;https://github.com/discourse/discourse&#34;&gt;discourse&lt;/a&gt;
instance - something really open and accessible.
&lt;/p&gt;
&lt;p&gt;
In any event, please do check out the &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;CS Educators StackExchange&lt;/a&gt; and
let&amp;#39;s all help it become the best question answering resource it can
be for our community.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 34 - ibuffer and emmet</title>
      <link>https://cestlaz.github.io/posts/using-emacs-34-ibuffer-emmet/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-34-ibuffer-emmet/</guid>
      <description>&lt;p&gt;
A couple of quick, unrelated packages today.
&lt;/p&gt;
&lt;p&gt;
first up, ibuffer. If you keep Emacs open all the time, you&amp;#39;ll start
to accumulate buffers. Last time, I talked about using &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-33-projectile-jump&#34;&gt;projectile&lt;/a&gt; and
how that can help when navigating between buffers. IBuffer is another
one.
&lt;/p&gt;
&lt;p&gt;
Out of the box, &lt;code&gt;C-x C-b&lt;/code&gt; is bound to the Emacs &lt;strong&gt;&lt;strong&gt;list-buffers&lt;/strong&gt;&lt;/strong&gt;
command. It brings up a buffer with all the buffers listed inside
it. You can navigate that buffer and hit enter on a particular buffer
to go to it. You can also mark buffers and then operate on all the
marked buffers. Hitting &lt;strong&gt;&lt;strong&gt;h&lt;/strong&gt;&lt;/strong&gt; in the list-buffers buffer brings up
more details.
&lt;/p&gt;
&lt;p&gt;
IBuffer is like list-buffers on steroids. It looks much nicer and I
think it has more functionality (again hitting &lt;strong&gt;&lt;strong&gt;h&lt;/strong&gt;&lt;/strong&gt; in the buffer
brings up help).
&lt;/p&gt;
&lt;p&gt;
IBuffer really shines though, once you start customizing it. I found
&lt;a href=&#34;http://martinowen.net/blog/2010/02/03/tips-for-emacs-ibuffer.html&#34;&gt;this&lt;/a&gt; post by Martin Owen which shows how to customize the way ibuffer
appears. You can group buffers however you want or even omit some from
the listing.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my configuration (mostly stolen from Owen):
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-x C-b&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ibuffer&lt;/span&gt;)
(setq ibuffer-saved-filter-groups
(quote ((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dired&amp;#34;&lt;/span&gt; (mode &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; dired-mode))
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org&amp;#34;&lt;/span&gt; (name &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^.*org$&amp;#34;&lt;/span&gt;))

(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;web&amp;#34;&lt;/span&gt; (or (mode &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; web-mode) (mode &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; js2-mode)))
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt; (or (mode &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; eshell-mode) (mode &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; shell-mode)))
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mu4e&amp;#34;&lt;/span&gt; (name &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\*mu4e\*&amp;#34;&lt;/span&gt;))
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;programming&amp;#34;&lt;/span&gt; (or
(mode &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; python-mode)
(mode &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; c++-mode)))
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;emacs&amp;#34;&lt;/span&gt; (or
(name &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^\\*scratch\\*$&amp;#34;&lt;/span&gt;)
(name &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^\\*Messages\\*$&amp;#34;&lt;/span&gt;)))
))))
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ibuffer-mode-hook&lt;/span&gt;
(lambda ()
(ibuffer-auto-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
(ibuffer-switch-to-saved-filter-groups &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;)))

&lt;span style=&#34;color:#75715e&#34;&gt;;; don&amp;#39;t show these&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;;(add-to-list &amp;#39;ibuffer-never-show-predicates &amp;#34;zowie&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;;; Don&amp;#39;t show filter groups if there are no buffers in that group&lt;/span&gt;
(setq ibuffer-show-empty-filter-groups &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;;; Don&amp;#39;t ask for confirmation to delete marked buffers&lt;/span&gt;
(setq ibuffer-expert &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The video also shows &lt;a href=&#34;https://github.com/smihica/emmet-mode&#34;&gt;emmet&lt;/a&gt; mode. A terrific mode for quickly creating
HTML and CSS. I tried it a long time ago when it was called zencoding
and found it lacking but after watching &lt;a href=&#34;https://www.youtube.com/watch?v=gGPv7jsQGpc&amp;amp;t=329s&#34;&gt;this video&lt;/a&gt; at Build Fun Things
I started playing with it again. It&amp;#39;s a real winner.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the config I&amp;#39;m using:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package emmet-mode
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sgml-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;emmet-mode&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;;; Auto-start on any markup modes&lt;/span&gt;
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;web-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;emmet-mode&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;;; Auto-start on any markup modes&lt;/span&gt;
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;css-mode-hook&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;emmet-mode&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;;; enable Emmet&amp;#39;s css abbreviation.&lt;/span&gt;
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Check them both out:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/yUfA-7wWNKA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Disclosing Bugs - requiring a project roadmap</title>
      <link>https://cestlaz.github.io/posts/disclosing-bugs/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/disclosing-bugs/</guid>
      <description>&lt;p&gt;
Over on Facebook, a fellow CS educator &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; made a comment on something he
wanted to try with his students this summer: having the students
pre-disclose bugs when they submit their projects.
&lt;/p&gt;
&lt;p&gt;
The post was asking for any links to &amp;#34;the literature.&amp;#34; I can&amp;#39;t speak
to that but I I&amp;#39;ve done something similar to what the post was asking
about so, as per usual, I thought I&amp;#39;d write about it here. It may not
be &amp;#34;research&amp;#34; but I&amp;#39;m more interested in teacher practices than ivory
towers anyway so here goes…
&lt;/p&gt;
&lt;p&gt;
At a very basic level, I ask my students to provide a roadmap to any
project they submit - usually in a readme file. I basically ask:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
How to use the project
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What&amp;#39;s cool and I should make sure to check out
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What doesn&amp;#39;t work, where were the sticking points and what&amp;#39;s the
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
status.
&lt;/p&gt;
&lt;p&gt;
I tell my students that when I test the project, I&amp;#39;m not &amp;#34;out to get
them&amp;#34; and by their telling me how to navigate the project, it makes
sure I see things in the best possible light. I also tell them that I
will be more harsh on bugs that they don&amp;#39;t tell me about -
particularly bugs that only occur some of the time.
&lt;/p&gt;
&lt;p&gt;
I also encourage (and sometimes require) that students maintain a
changelog in their repo and also sometimes encourage them to have a
todo list and list of bugs and for longer projects, I expect to see
these and the readme updated over the course of the project (which
should always be up to date on &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4&#34;&gt;GitHub&lt;/a&gt;, Dropbox or wherever the project
is living).
&lt;/p&gt;
&lt;p&gt;
When the students provide a good write up it makes evaluating the
project much easier.
&lt;/p&gt;
&lt;p&gt;
When students buy in, they&amp;#39;re hopefully thinking more deeply about
their projects in terms of design and implementation and also from the
point of view of someone else using their product. When they maintain
the readme and other files over time, it also enables me to better
support them.
&lt;/p&gt;
&lt;p&gt;
So, does this work? Yes but with some caveats. It works better once
the class and teacher know each other. If the students trust the
teacher they&amp;#39;re more likely to be open and honest when they write up
the project. On the other hand, there will always be some students to
&amp;#34;phone it in&amp;#34; and do the bare minimum in terms of writing up their
projects.
&lt;/p&gt;
&lt;p&gt;
The bottom line is that having the students do this is has a low cost
and is beneficial to both the students and the teacher. When it works,
it&amp;#39;s great and when it doesn&amp;#39;t, it&amp;#39;s still pretty good.
&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
I&amp;#39;m not sharing names from the Facebook post because it was
made in a semi-private forum and I haven&amp;#39;t asked permission.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A* is born</title>
      <link>https://cestlaz.github.io/posts/a-star-is-born/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/a-star-is-born/</guid>
      <description>&lt;p&gt;
Over on the &lt;a href=&#34;https://cseducators.stackexchange.com/&#34;&gt;CS Educator StachExchange&lt;/a&gt;, which is in private beta for a
few more days, I saw a post asking about how to introduce the &lt;a href=&#34;https://en.wikipedia.org/wiki/A*_search_algorithm&#34;&gt;A*
search algorithm&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I taught A* as part of the APCS class at Stuy so I thought I&amp;#39;d talk
about what I did here.
&lt;/p&gt;
&lt;p&gt;
Some time around mid year, we get to intermediate recursion. This is
about the time, give or take, when we talk about the nlogn sorts.
&lt;/p&gt;
&lt;p&gt;
We also build a recursive maze solver. It&amp;#39;s a nice algorithm and a
nice little program. It&amp;#39;s around 15 lines of code to perform a
recursive depth first search:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/astar/dfs.gif&#34; alt=&#34;/img/astar/dfs.gif&#34; title=&#34;/img/astar/dfs.gif&#34; align=&#34;center&#34; height=&#34;200px&#34;/&gt;
&lt;p&gt;
The basic algorithm is:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s a nice lesson because in addition to all the recursion stuff, we
also get to talk about state space, state space search, backtracking,
efficiency concerns and much more. After we finish the maze solver, we also talk about
other problems that can be similarly examined using state-space search
like the knights tour and N-queens problems.
&lt;/p&gt;
&lt;p&gt;
A month or so later, when we&amp;#39;re learning about stacks and queues as
data structures, we revisit the maze solver. This time we solve the
problem in a more general way. We talk about using a data structure to
hold the set of nodes that we&amp;#39;re aware of and that we want to visit
next.
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
As we write the solution, we see that using a queue for this
data structure yields a breadth first search:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/astar/bfs.gif&#34; alt=&#34;/img/astar/bfs.gif&#34; title=&#34;/img/astar/bfs.gif&#34; align=&#34;center&#34; height=&#34;200px&#34;/&gt;
&lt;p&gt;
while using a stack yields depth first.
&lt;/p&gt;
&lt;p&gt;
All of this leads to a discussion as to how deciding on which
locations to look at next can greatly influence the steps to the
exit. From here it&amp;#39;s easy to see that you can use a heuristic to order
the nodes in our data structure so that we explore &amp;#34;better&amp;#34;
possibilities first. The data structure becomes a priority queue and
we finally get to both &amp;#34;best first&amp;#34; and A* search:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/astar/astar.gif&#34; alt=&#34;/img/astar/astar.gif&#34; title=&#34;/img/astar/astar.gif&#34; align=&#34;center&#34; height=&#34;200px&#34;/&gt;
&lt;p&gt;
It&amp;#39;s a nice sequence of lessons, albeit lessons spread out over
months. The end result is that the students see both the need and
motivation for something like A* and they see that it&amp;#39;s not hard to
implement. One basic routine where you can plug in one of three data
structures - stack, queue, or priority queue to get very different
results.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python - Editor or IDE</title>
      <link>https://cestlaz.github.io/posts/python-editors/</link>
      <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/python-editors/</guid>
      <description>&lt;p&gt;
Earlier today I read Garth Flint&amp;#39;s latest post on &lt;a href=&#34;https://gflint.wordpress.com/2017/05/25/python-editors-simple-wins/%0A&#34;&gt;choosing a Python
environment for his classes&lt;/a&gt;. While our classes and populations are
different it looks like Garth and I share a lot of thoughts on the
subject.
&lt;/p&gt;
&lt;p&gt;
I started to write a comment to leave on Garth&amp;#39;s blog but since it was
getting a little long I thought I&amp;#39;d write it up as a post.
&lt;/p&gt;
&lt;p&gt;
The question of development environment can be an important one and
can make a big difference. When I designed the intro course at Stuy,
the fact that Dr. Scheme existed made the use of Scheme in the class
an option. Without it as a supportive and simple environment for the
students I probably wouldn&amp;#39;t have been able to use Scheme even though
I really liked it as a teaching and learning tool.
&lt;/p&gt;
&lt;p&gt;
Garth writes about issues relating to choosing a local development
environment so that&amp;#39;s what I&amp;#39;m going to stick to here. If you want an
online environment check out &lt;a href=&#34;http://codesters.com&#34;&gt;Codesters&lt;/a&gt; - a terrific online Python
environment with lots of educational support materials and features
and &lt;a href=&#34;http://repl.it&#34;&gt;repl.it&lt;/a&gt; - an online environment that supports many languages and
is also developing great teacher and class support – I very much like
both of these platforms.
&lt;/p&gt;
&lt;p&gt;
The first question is editor or IDE?
&lt;/p&gt;
&lt;p&gt;
As a user, I&amp;#39;m very pro editor. Learn a tool that you can customize to
your tastes and that will work for all sorts of text editing chores
from coding to document preparation to scheduling and more and you&amp;#39;re
in great shape. Personally, I&amp;#39;m an &lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;Emacs wonk&lt;/a&gt; but there are other
choices as well.
&lt;/p&gt;
&lt;p&gt;
As a teacher, though, Emacs or another programmers editor can be
overwhelming for younger students and rank beginners.
&lt;/p&gt;
&lt;p&gt;
This can make IDEs attractive.
&lt;/p&gt;
&lt;p&gt;
Some IDEs are too big and cumbersome and can add even more cognitive
load than an editor - think Eclipse for Java development. If you think
writing
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
is a lot of overhead, just wait until you have a novice try to start a
Java project in Eclipse.
&lt;/p&gt;
&lt;p&gt;
Other IDEs are more streamlined. One common choice is
Idle. It&amp;#39;s big advantage is that it&amp;#39;s always available and is &amp;#34;part&amp;#34;
of Python. On the other hand, it doesn&amp;#39;t seem to add much to a bare
editor and I&amp;#39;ve found that it can be somewhat confusing.
&lt;/p&gt;
&lt;p&gt;
Garth seems to have settled on &lt;a href=&#34;https://www.jetbrains.com/pycharm/&#34;&gt;PyCharm&lt;/a&gt; from &lt;a href=&#34;https://jetbrains.com&#34;&gt;JetBrains&lt;/a&gt;. It&amp;#39;s pretty
streamlined and really easy to get up and running. JetBrains also
provides a free community edition as well as a heavier professional
one available for purchase. Garth notes that it&amp;#39;s a Python only IDE
but JetBrains has similar IDEs for a whole bunch of languages and I
seem to recall you can add plugins across their IDEs to basically make
them multi-language development environments.
&lt;/p&gt;
&lt;p&gt;
I really like the JetBrains products and if I used an IDE I&amp;#39;m pretty
sure I&amp;#39;d use their products. As a teacher though, I find their IDEs a
little too powerful for my tastes. I want a learner IDE to provide the
bare minimum of features - an interactive REPL, a code window, run and
debug buttons, some completion and help - but to make those features
really easy to use. JetBrains does a little too much.
&lt;/p&gt;
&lt;p&gt;
What I ended up using in the past is &lt;a href=&#34;http://drpython.sourceforge.net/&#34;&gt;Dr Python&lt;/a&gt;. For me it hit the
sweet spot. As an added bonus we were already using Dr. Racket (nee
Dr. Scheme) and Dr. Java so our students had a similar environment
across languages and even NetLogo looked and behaved similarly.
&lt;/p&gt;
&lt;p&gt;
Is there a right answer? Probably not. Just as with choosing a first
language there are always trade offs. Besides, if you don&amp;#39;t have the
right solution, there will be another one next week. Just recently I
saw &lt;a href=&#34;http://thonny.org/&#34;&gt;this project&lt;/a&gt;. A new beginners IDE for python. It looks interesting
and worth checking out.
&lt;/p&gt;
&lt;p&gt;
The right IDE can make a big difference while keeping the overhead low
and giving just the right amount of support. For me, the last time
around it was Dr. Python. For Garth, it looks like PyCharm fits the
bill. Looking at the overall plan, I usually start the kids off with a
simple learners IDE and then transition them to a programmers editor
like Emacs as they gain more comfort and experience.
&lt;/p&gt;
&lt;p&gt;
As a postscript, let me share these links on how I use Emacs for
Python development (each with a video) as well as my series on how I
use Emacs in general:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs/&#34;&gt;http://cestlaz.github.io/stories/emacs/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-12-python&#34;&gt;http://cestlaz.github.io/posts/using-emacs-12-python&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-13-yasnippet&#34;&gt;http://cestlaz.github.io/posts/using-emacs-13-yasnippet&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Designing a course with constraints</title>
      <link>https://cestlaz.github.io/posts/design-course-with-constraints/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/design-course-with-constraints/</guid>
      <description>
&lt;p&gt;
One of the hats I wear at Hunter is to build a new &lt;a href=&#34;https://cestlaz.github.io/posts/2016-03-29-hunter-cs.html&#34;&gt;CS Honors program&lt;/a&gt;
and to bring my particular brand of insanity to &lt;a href=&#34;https://cestlaz.github.io/posts/hunter-cs-important&#34;&gt;Hunter College CS&lt;/a&gt; as a
whole.
&lt;/p&gt;
&lt;p&gt;
Yesterday was my last class for the semester so I thought I&amp;#39;d write a
bit about the course.
&lt;/p&gt;
&lt;p&gt;
For the Fall semester, I taught an intro programming course to the
entire cohort. For some in the cohort, this was their first exposure
to CS. Others had one or more classes under their belt. It was a
Python based programming class and a big part of it was to start
building the cohort into a community. I&amp;#39;m going to work on tweaking
what I taught for next time around but the constraints of designing
such a course are pretty common – an intro course where the students
all want to be there the level of previous experience varies to some degree.
&lt;/p&gt;
&lt;p&gt;
Second semester was more of a challenge. The &amp;#34;next&amp;#34; course was CSCI
135, CS 100 - like APCS but in C++. I could teach that but since some
of my students had APCS credit, they didn&amp;#39;t need 135. This would break
up the group. There was also the issue of the students getting credit
for the course without showing any proficiency in C++.
&lt;/p&gt;
&lt;p&gt;
Fortunately, Hunter requires students in 135 to take CSCI 136. A 1
credit programming lab. It meets once a week in a computer lab and the
students complete a weekly programming assignment. The lab meets for 2
hours. The instructor goes over anything that&amp;#39;s needed for the lab
that hasn&amp;#39;t been covered yet and then the students work independently
(with the instructors support) on the lab. Overall it works well. It
makes sure the students are spending at least a couple of hours a week
coding in a supported environment.
&lt;/p&gt;
&lt;p&gt;
How did 136 help me? I taught a 3 credit course where 1 day was
basically the lab component (what the students were to do in 136) and
one day was enrichment - the stuff I was going to do with them. This
enabled us keeping the cohort together and it also made sure that by
taking the class, the honors cohort members with AP credit would
indeed get up to speed in C++.
&lt;/p&gt;
&lt;p&gt;
I was happy with the basic structure. I was able to cover some topics
in project development, testing, debugging, and software engineering but the
designing and teaching the class proved to be challenging for a number
of reasons.
&lt;/p&gt;
&lt;p&gt;
One was timing. The lab class meets 1 day a week for 1 hour. My class,
2 days a week for 1 hour 15. This meant that if we were to keep the
lab to one day either the students would have less time or I&amp;#39;d have to
impose on them to stay late or come early. I wasn&amp;#39;t happy with that
but given the inconsistency in the way the other sections handled lab
timings, I think it worked out OK.
&lt;/p&gt;
&lt;p&gt;
Some of the other difficulties included:
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
The language was C++:
&lt;/h3&gt;
&lt;p&gt;
Since the labs were to be done in C++, I had to use that as the
language for the class. That meant no &amp;#34;fun&amp;#34; libraries or frameworks.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
The labs were solo assignments:
&lt;/h3&gt;
&lt;p&gt;
Since the labs were solo projects and there was one per week it made
it very difficult to structure group experiences. I wanted to cover
things like group development, code review, working off of other
peoples code bases but this proved difficult with an outside separate
lab being handed down each week.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Someone else dictated the language sequence:
&lt;/h3&gt;
&lt;p&gt;
The labs were designed to support what the students were learning in
135 and were only distributed a day or two before the week was to
start. This meant that I couldn&amp;#39;t plan too far ahead and had to adjust
frequently. This should be easier next year.
&lt;/p&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Labs didn&amp;#39;t match the supplemental material:
&lt;/h3&gt;
&lt;p&gt;
The best example of this was when we were talking about testing. We
ended up using &lt;a href=&#34;https://github.com/philsquared/Catch&#34;&gt;Catch&lt;/a&gt; as a testing framework. The problem was that
right afterwards the lab (and also 135 project) didn&amp;#39;t lend themselves
to using a testing framework like catch.
&lt;/p&gt;
&lt;p&gt;
There were more challenges but overall I think the class went fairly
well. I&amp;#39;ll know more when I get feedback from the students and when we
all look back next year with some perspective.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been an interesting experience designing a class that had to
interleave with another, existing class. I&amp;#39;ve designed many classes
over the years and I know that whatever you plan, it probably changes
once you&amp;#39;re actually in the classroom and working with the kids, or as
Mike Tyson said: &amp;#34;Everyone has a plan until they get punched in the
mouth.&amp;#34; This has been a little more of a challenge but I think the
first go through went well and that the course will get better and be
better defined as we go through a couple more iterations.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It feels good to be helpful</title>
      <link>https://cestlaz.github.io/posts/feels-good-to-be-helpful/</link>
      <pubDate>Wed, 17 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/feels-good-to-be-helpful/</guid>
      <description>&lt;p&gt;
I got some nice feedback today from a couple of disparate places. It
was another reminder that being a teacher isn&amp;#39;t just about the kids
currently in your class but it&amp;#39;s about who you are and everyone you
interact with. It&amp;#39;s not just about teaching a subject but rather about
helping people get to where they can potentially go.
&lt;/p&gt;
&lt;p&gt;
About a year ago I started putting together a &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-introduction&#34;&gt;series of posts and videos&lt;/a&gt; showing
how I use Emacs. There were a couple of motivating factors. One, I
wanted to put together some resources for my students - something that
would take them from the Emacs tutorial to a point where they would
hopefully see the power of the environment and not buy into the IDE or
editor of the month hype but either really use Emacs proficiently or
use another editor (Atom, Vim) in a similar fashion.
&lt;/p&gt;
&lt;p&gt;
The other reason was that I wanted to give something back to the
Emacs community. I don&amp;#39;t create Emacs packages or otherwise contribute
but I figured, I&amp;#39;m a teacher, I can do what I do.
&lt;/p&gt;
&lt;p&gt;
So, earlier today I got an email thanking me for my videos and also
noticed that over on &lt;a href=&#34;http://irreal.org/blog/?p=6218&#34;&gt;irreal.org&lt;/a&gt;, jcs wrote about moving over to
dumb-jump after seeing one of my videos. It&amp;#39;s been nice seeing that
I&amp;#39;ve been of some value to jcs since I&amp;#39;ve learned a lot from his
blog. Emails, comments, and notes like this have driven me to continue
the series (even though It&amp;#39;s been a busy couple of months). It&amp;#39;s
gratifying that even without writing a line of code, one can give
something back to a community that they&amp;#39;ve found value in for years.
&lt;/p&gt;
&lt;p&gt;
A month or so ago, I had a chat with a former student who&amp;#39;s finishing
up his last year in college. He was having trouble finding a job, I
couldn&amp;#39;t figure out why he wasn&amp;#39;t getting offers - he&amp;#39;s really
talented. I tried to give him words of encouragement and reminded him
that I was available to help him - as I try to be for the entire
&amp;#34;family&amp;#34; in any way I could.
&lt;/p&gt;
&lt;p&gt;
Fast forward to today - I got an email telling me that he got a job
that he&amp;#39;s very excited about. He felt the interviews with this company
were going well so he was waiting for them to resolve before reaching
out to me. He also told me that our talk was very helpful to him.
&lt;/p&gt;
&lt;p&gt;
Sometimes it&amp;#39;s not just in a class where we can have a positive effect
but sometimes just a talk on the side. Sometimes many years later.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning about VC</title>
      <link>https://cestlaz.github.io/posts/learning_about_vc/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/learning_about_vc/</guid>
      <description>&lt;p&gt;
&amp;lt;style&amp;gt;
.figure-number {
display: none;
}
&amp;lt;/style&amp;gt;
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/peter-boyce-talk.jpg&#34; alt=&#34;/img/peter-boyce-talk.jpg&#34; title=&#34;/img/peter-boyce-talk.jpg&#34; align=&#34;center&#34; height=&#34;250&#34;/&gt;
&lt;p&gt;
Yesterday, the Daedalus Scholars were visited by &lt;a href=&#34;https://twitter.com/badboyboyce&#34;&gt;Peter Boyce&lt;/a&gt;. Peter&amp;#39;s
been a friend for years and is my go to guy when I&amp;#39;m looking talk
startups, venture capital and many things tech. Peter&amp;#39;s with General
Catalyst Partners and is a co-founder of &lt;a href=&#34;http://www.roughdraft.vc/&#34;&gt;Rough Draft Ventures&lt;/a&gt; - a fund
that invests in student entrepreneurs.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m teaching Hunter&amp;#39;s first class of Daedalus Scholars - Hunter&amp;#39;s new
CS Honors program. They&amp;#39;re young and just getting their feet wet and
have unlimited potential and possibilities in front of  them. It helps if
they have some idea as to what some of those possibilities can be.
&lt;/p&gt;
&lt;p&gt;
Everyone knows you can work for a big tech company or a bank but few
really know or understand how the tech startup ecosystem works. That&amp;#39;s
why I was so excited when Peter agreed to visit.
&lt;/p&gt;
&lt;p&gt;
Peter talked about his path. About how he and a group of friends,
while in college, got together once night a week to work on their own
projects. Not on problem set, assignments, or studying but
specifically to work on something else. He talked about struggling to
balance grades, early projects and relationships and how much he
learned and grew from the experience. He talked about his path to
being a VC and he told the class about possibilities.
&lt;/p&gt;
&lt;p&gt;
If the class left one tenth as inspired as I was the day was a
resounding success. Based on the brief conversations I had with a few
of my students after class and last night on email, I&amp;#39;m pretty sure it
was.
&lt;/p&gt;
&lt;p&gt;
One thing that struck me was what Peter seemed to be most proud of was
his ability to help others realize their goals and their dreams. I&amp;#39;ve
gotten to know a few venture capitalists and investors over the years
and the ones I like and identify best with seem to have this
trait. They&amp;#39;re investing in people. I seem to recall &lt;a href=&#34;http://twitter.com/fredwilson&#34;&gt;Fred Wilson&lt;/a&gt;, a VC
I very much admire telling me that when talking to young entrepreneurs
he very much looks at the people as much (maybe more) than the
product. The product might not be right but if the people and team
are, at some point they&amp;#39;ll hit.
&lt;/p&gt;
&lt;p&gt;
As a teacher, my whole career has been about trying to enable
others. I spent a lot of time yesterday thinking about the parallels
between some of the investors that I know, like, and respect and the
best teachers I know and while we work in very different arenas, in
some ways we&amp;#39;re driven by similar voices.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 33 - projectile, dumb-jump</title>
      <link>https://cestlaz.github.io/posts/using-emacs-33-projectile-jump/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-33-projectile-jump/</guid>
      <description>&lt;p&gt;
If you keep Emacs open all the time you end up accumulating lots of
buffers. That can make navigating a little bit awkward.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/bbatsov/projectile&#34;&gt;Projectile&lt;/a&gt; is a really nice package that makes navigating in and
between projects much easier. I also have &lt;a href=&#34;https://github.com/ericdanan/counsel-projectile&#34;&gt;counsel-projectile&lt;/a&gt;
installed.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my configuration:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; projectile&lt;/span&gt;
(use-package projectile
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(projectile-global-mode)
(setq projectile-completion-system &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ivy&lt;/span&gt;))

(use-package counsel-projectile
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(counsel-projectile-on))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Projectile considers a sub-directory tree to be a project if it&amp;#39;s a
git or other source control repo, if it&amp;#39;s created by tool like lein,
maven, or sbt, or if you put an empty file named &lt;strong&gt;&lt;strong&gt;.projectile&lt;/strong&gt;&lt;/strong&gt; in
the root directory of the project.
&lt;/p&gt;
&lt;p&gt;
Projectile learns about projects when you open a file in that project
and then stores that information in an Emacs bookmark file in your
.emacs.d directory.
&lt;/p&gt;
&lt;p&gt;
You can switch between projects using &lt;code&gt;C-c p&lt;/code&gt; and when in a project,
load another file using &lt;code&gt;C-c f&lt;/code&gt;. If you use the &lt;strong&gt;&lt;strong&gt;which-key&lt;/strong&gt;&lt;/strong&gt; package
as I do, just type &lt;code&gt;C-c&lt;/code&gt; - the projectile prefix and then which-key
will bring up help.
&lt;/p&gt;
&lt;p&gt;
The video goes through some of my favorite features and you can find
the full documentation can be found &lt;a href=&#34;http://projectile.readthedocs.io/en/latest/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The other package I show is &lt;a href=&#34;https://github.com/jacktasia/dumb-jump&#34;&gt;dumb-jump&lt;/a&gt;. It&amp;#39;s basically a zero (or
almost zero) configuration tags replacement. Really nice.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my current config:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package dumb-jump
:bind ((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M-g o&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; dumb-jump-go-other-window)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M-g j&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; dumb-jump-go)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M-g x&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; dumb-jump-go-prefer-external)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M-g z&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; dumb-jump-go-prefer-external-other-window))
:config (setq dumb-jump-selector &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ivy&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;;; (setq dumb-jump-selector &amp;#39;helm)&lt;/span&gt;
:ensure)

:config
&lt;span style=&#34;color:#75715e&#34;&gt;;; (setq dumb-jump-selector &amp;#39;ivy) ;; (setq dumb-jump-selector &amp;#39;helm)&lt;/span&gt;
:init
(dumb-jump-mode)
:ensure
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/wBfZzaff77g&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A new first language? What&#39;s the follow up plan?</title>
      <link>https://cestlaz.github.io/posts/first-language-changing/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/first-language-changing/</guid>
      <description>&lt;p&gt;
This morning, &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; wrote about Stanford possibly &lt;a href=&#34;https://computinged.wordpress.com/2017/04/21/cs-department-updates-introductory-courses-java-is-gone/&#34;&gt;moving away
from Java&lt;/a&gt; as their intro language. This comes on the heels of a
semi-regular thread on one of the lists I&amp;#39;m on asking about what
languages are used at assorted colleges around the country. Invariably
the Pascal -&amp;gt; C++ -&amp;gt; Java progression of APCS turns up in these
threads.
&lt;/p&gt;
&lt;p&gt;
There are plenty of arguments to be made both for and against pretty
much any language or platform. There&amp;#39;s no single best universal
answer. Each choice giveth and each choice taketh away.
&lt;/p&gt;
&lt;p&gt;
What I&amp;#39;m really curious about is who&amp;#39;s looking at intro languages in
the context of complete programs or even complete educations that
could span multiple institutions.
&lt;/p&gt;
&lt;p&gt;
Early language choices can make a big difference in engaging and
exciting newcomers but there are ramifications later on that few seem
to consider.
&lt;/p&gt;
&lt;p&gt;
Take the APCS change from C++ to Java. It removed memory management
from the first year course. It also simplified issues relating to
pass by value vs pass by reference (or, rather, passing address by
value), bought much more strongly into OOP and moved more towards
using built in implementations of data structures like Lists rather
than rolling your own.
&lt;/p&gt;
&lt;p&gt;
Removing memory management from the first year course in and of itself
isn&amp;#39;t a problem as long as it&amp;#39;s taught and taught effectively
somewhere later on. It could be argued that &amp;#34;memory is already covered
in our required systems course.&amp;#34; That could be the case, but there are
many concepts that kids don&amp;#39;t get the first time around. Is an
institution that covered memory management in CS1/2 and then came back
to it in a later Systems course giving their students the same
understanding now that they&amp;#39;ve eliminated the CS1/2 experience?
&lt;/p&gt;
&lt;p&gt;
What about OOP buy in. Personally, I&amp;#39;ve never been a big OOP fan but
that&amp;#39;s neither here nor there. What I have found is that depending on
how a student is exposed to programming in CS1/CS2 can have a big
influence on how they approach problems later. Did the move to Java
cause more of our students to try to use shoehorn OOP into a problem
that really shouldn&amp;#39;t be approached in an OOP manner?
&lt;/p&gt;
&lt;p&gt;
I suspect that the use of built in data structures has had a
negative impact. A few years after the switch to Java, I was talking
to a senior tech worker. He was having a bad day - interviewing
potential internees and full time engineers. My friend was complaining
that the kids couldn&amp;#39;t come up with solutions to what he thought were
pretty straightforward questions. He felt that had the kids actually
implemented algorithms like the nlogn sorts rather than just learning
java .sort method and just talking about the algorithm they&amp;#39;d be
better prepared. I&amp;#39;ve heard this sentiment repeated over and over
throughout the years.
&lt;/p&gt;
&lt;p&gt;
This is not to say that Java is a horrible language or horrible for
teaching - that&amp;#39;s another debate. The point is that you can&amp;#39;t just
look at the intro class and who it draws in. You have to consider how
it will prepare students for the next level and you have to look at
the big picture – will our students get everything they need by the
time they leave us.
&lt;/p&gt;
&lt;p&gt;
Many schools have moved to Python. Will that effect students take on
type systems later on? Will the flexibility and constructs like list
comprehensions make it harder to teach recursion since there are
&amp;#34;easier&amp;#34; ways to do it?
&lt;/p&gt;
&lt;p&gt;
None of these are really problems so long as the CS1/2 (or even CS0)
isn&amp;#39;t taught in a vacuum.
&lt;/p&gt;
&lt;p&gt;
I fear, however that too often we&amp;#39;re paying attention to the intake of
the pipe and not so much the output.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub as a tool for education</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-4/</link>
      <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-4/</guid>
      <description>&lt;p&gt;
When I started using git and GitHub with my students it was a natural
progression having started with started with CVS and then, as
technology changed moving through Subversion and then Mercurial. It
was all about using sensible professional software development
techniques while making it easier for students to submit work and for
me to evaluate their submissions.
&lt;/p&gt;
&lt;p&gt;
Over time, I found that git and GitHub in fact provided some extra
support for educators right out of the box.
&lt;/p&gt;
&lt;p&gt;
In my &lt;a href=&#34;http://cestlaz.github.io/posts/sigcse-2017-github-3&#34;&gt;last github post&lt;/a&gt; I talked about using the results of &lt;code&gt;git log&lt;/code&gt;
and looking at diffs. Both provide ways of seeing what a student did
and when. The commit log and history make it easier to hold students accountable to working
through a project and not leavings for the last minute. The diffs make
it easier to see what&amp;#39;s changed both to see progress and also to help
support students as they develop their projects.
&lt;/p&gt;
&lt;p&gt;
If you use Emacs, as I do, you can use the &lt;a href=&#34;https://github.com/pidu/git-timemachine&#34;&gt;git timemachine&lt;/a&gt; package
which does a great job visualizing changes:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse-github/timemachine.gif&#34; alt=&#34;/img/sigcse-github/timemachine.gif&#34; title=&#34;/img/sigcse-github/timemachine.gif&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
Other editors might have a similar feature.
&lt;/p&gt;
&lt;p&gt;
The contribution graphs also provide a quick snapshot which shows what
team members are contributing and when:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse-github/githubgraph.png&#34; alt=&#34;/img/sigcse-github/githubgraph.png&#34; title=&#34;/img/sigcse-github/githubgraph.png&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
The punchcard graph is also useful to see when students actually do
their work.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse-github/githubgraph2.png&#34; alt=&#34;/img/sigcse-github/githubgraph2.png&#34; title=&#34;/img/sigcse-github/githubgraph2.png&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
GitHub also make it easy to set up starter code or to have students
&amp;#34;take over&amp;#34; each others projects by forking.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m very happy using git and GitHub as is but if you want more
support, check out &lt;a href=&#34;https://classroom.github.com/&#34;&gt;GitHub Classroom&lt;/a&gt;. Had it existed when I started,
I&amp;#39;d probably have used it but since I had already gotten used to my
work flows I&amp;#39;ve stuck with raw git and github.
&lt;/p&gt;
&lt;p&gt;
In case you missed the earlier posts describing the process I use to
introduce github to my classes here they are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/sigcse-2017-github-1&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/sigcse-2017-github-2&#34;&gt;Part 2&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/sigcse-2017-github-3&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I&amp;#39;m hoping some of you have found this set of four posts useful or at
least interesting.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A free multi-state clicker with built in redundency</title>
      <link>https://cestlaz.github.io/posts/thumb_clickers/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/thumb_clickers/</guid>
      <description>&lt;p&gt;
Last Friday, &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; wrote about the woes of &lt;a href=&#34;https://computinged.wordpress.com/2017/03/31/the-need-for-better-software-and-systems-to-support-active-cs-learning/%0A&#34;&gt;using clickers&lt;/a&gt; in a
class. The amount of effort required to use his school&amp;#39;s approved
clicker technology sounds ridiculous so while we need tools to better
engage students in large class settings we need better tools that can
be integrated into our classes more easily.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never used clickers. On top of stories like Mark&amp;#39;s, there are  a
number of problems with using clickers in a public school.
&lt;/p&gt;
&lt;p&gt;
You can&amp;#39;t force students to buy them and in NYC, until recently,
students couldn&amp;#39;t use their phones (which they also might not have).
Forgetting the expense, if the school provides them, is it one per
student? If so, who&amp;#39;s going to administer the clicker to student
mapping and how will that be communicated to the teachers. If college
tech infrastructures are sometimes lacking, high schools are orders of
magnitudes worse. The resources just aren&amp;#39;t there. Then we have to
deal with loss and breakage.
&lt;/p&gt;
&lt;p&gt;
If a teacher somehow gets a class set of clickers, they have to deal
with mapping clickers to students for all of their classes and make
sure the right student has the right clicker. Again, loss  and
breakage is a problem.
&lt;/p&gt;
&lt;p&gt;
Then you have to create the question content and hope that everything
works in class.
&lt;/p&gt;
&lt;p&gt;
The value added given the overhead just doesn&amp;#39;t seem worth it
particularly since high school classes, while large, are not in the
hundreds and there are other methods of student engagement.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I use instead. It&amp;#39;s not perfect but it&amp;#39;s low cost and low
effort with a pretty high return.
&lt;/p&gt;
&lt;p&gt;
The basic configuration, is a simple three state broadcast device.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not without its problems and I don&amp;#39;t think it would work as well
in a large lecture but given the cost, it&amp;#39;s well worth it.
&lt;/p&gt;
&lt;p&gt;
So, what is it?
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/thumbs/fonzup.jpg&#34; alt=&#34;/img/thumbs/fonzup.jpg&#34; title=&#34;/img/thumbs/fonzup.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
Thumbs.
Periodically, I&amp;#39;ll poll my class.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;span&amp;gt;
&amp;lt;img width=&amp;#34;30%&amp;#34;src=&amp;#34;file:/img/thumbs/sidethumb.png&amp;#34;&amp;gt;
&amp;lt;img width=&amp;#34;30%&amp;#34; src=&amp;#34;file:/img/thumbs/upthumb.jpg&amp;#34;&amp;gt;
&amp;lt;img width=&amp;#34;30%&amp;#34; src=&amp;#34;file:/img/thumbs/downthumb.jpg&amp;#34;&amp;gt;
&amp;lt;/spam&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Thumb to the side? Everything&amp;#39;s OK. Keep going as you&amp;#39;re going. I get
it. Basically, things are good.
&lt;/p&gt;
&lt;p&gt;
Thumb up? Speed up, you&amp;#39;re going too slow, I got it five minutes ago or
some similar big positive.
&lt;/p&gt;
&lt;p&gt;
Thumb down? I have no idea what you&amp;#39;re talking about.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s cheap, easy, quick, and once you can get your class to buy in,
you can get a quick sense of the class.
&lt;/p&gt;
&lt;p&gt;
The downsides?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The class has to have a level of comfort so that students vote
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
honestly and don&amp;#39;t just give you positive feedback.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
No data collection.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The upsides?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
quick
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
cheap
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
works on any topic on the fly
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
even if the votes are artificially skewed towards positive, it does
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
forces the class to be at least a little attentive and to engage in
some physical response
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
can get analog responses by allowing students to adjust wrist
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
rotation
&lt;/p&gt;
&lt;p&gt;
As to the redundancy? I&amp;#39;ve never had a kid leave their thumb at home
or lose it and even if they did, they&amp;#39;ve got a second hand.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/thumbs/fonztwo.jpg&#34; alt=&#34;/img/thumbs/fonztwo.jpg&#34; title=&#34;/img/thumbs/fonztwo.jpg&#34; align=&#34;center&#34; height=&#34;200&#34;/&gt;
&lt;p&gt;
This also works in extreme environments. Try using a clicker or mobile
app with gloves or mittens on or underwater.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t teach large lectures so I don&amp;#39;t know how this would work in a
huge class. I&amp;#39;d imagine it&amp;#39;s still worth it given that it&amp;#39;s so low
friction and low cost of entry even if it&amp;#39;s not perfect.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - a path to github part 3</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-3/</link>
      <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-3/</guid>
      <description>&lt;p&gt;
I wanted to write this up earlier but, as so frequently happens all my
dormant work projects decided it was time to rise up and demand
instant attention.
&lt;/p&gt;
&lt;p&gt;
When we left off, we had students pulling code and submitting homework
via github.
&lt;/p&gt;
&lt;p&gt;
Form here, it&amp;#39;s an easy step to have them working on a small project
in their own repo. In fact, sometimes, I&amp;#39;ll jump right to a two person
project where one person creates the repo and invites the other (and
me) as a collaborator.
&lt;/p&gt;
&lt;p&gt;
Once here, it&amp;#39;s important to emphasize the normal workflow:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;code&gt;git pull&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
edit stuff with an occasional &lt;code&gt;git add&lt;/code&gt;, &lt;code&gt;git rm&lt;/code&gt;,  or &lt;code&gt;got mv&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
commit
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
and an occasional &lt;code&gt;git push&lt;/code&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Regardless of how much you emphasize the workflow you&amp;#39;re now going to
have to cover merges as well how to recover from problems by going to
an earlier revision.
&lt;/p&gt;
&lt;p&gt;
For going back to earlier versions or otherwise recovering from
disasters, I don&amp;#39;t show them the &amp;#34;right&amp;#34; way of doing things. I show
them a way that&amp;#39;s easy to remember and reliably works without tons of
searching for answers.
&lt;/p&gt;
&lt;p&gt;
First, given some repo, I have them clone a version under another
name:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git clone git@github.com:hunterdaedalus/classcode.git newdirname&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now, they have the original repo and a clone under the directory
&lt;strong&gt;&lt;strong&gt;newdirname&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
I have them go into that new copy and use &lt;code&gt;git log&lt;/code&gt; to go through the
logs to find an earlier version that they want to go back to.
&lt;/p&gt;
&lt;p&gt;
The log will look something like this:
&lt;/p&gt;
&lt;div class=&#34;verse-block&#34;&gt;
&lt;p&gt;
commit 67eceb5e0a01ca5f5fb54ace65a4fe134f71edae
Author: Mike Zamansky &amp;lt;zamansky@gmail.com&amp;gt;
Date:   Sat Feb 25 12:32:26 2017 -0500
&lt;/p&gt;
&lt;p&gt;
updated Makefile
&lt;/p&gt;
&lt;p&gt;
commit 7efed10eb6015276b0cb82874ce786dc68a683ae
Author: Mike Zamansky &amp;lt;zamansky@gmail.com&amp;gt;
Date:   Sat Feb 25 08:45:34 2017 -0500
&lt;/p&gt;
&lt;p&gt;
broke out main –&amp;gt; main and shapes
&lt;/p&gt;
&lt;p&gt;
commit e8b5c240123a7cb17920d52b4aba9cf5787ddab2
Author: Mike Zamansky &amp;lt;zamansky@gmail.com&amp;gt;
Date:   Sat Feb 25 08:36:29 2017 -0500
&lt;/p&gt;
&lt;p&gt;
added lab3 code
&lt;/p&gt;
&lt;p&gt;
commit 6d5bcf866306334ddc5c6a48e8f49fb39ddbcb18
Author: Some other coder &amp;lt;somone@somewhere.net&amp;gt;
Date:   Sun Feb 19 19:29:51 2017 -0500
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
Find the hash that they want to get back to and &lt;strong&gt;&lt;strong&gt;checkout&lt;/strong&gt;&lt;/strong&gt; that
version (you normally only have to use the first few characters of
the hash):
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git checkout 7efed10&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now they can grab what they want, copy it into the working copy of the
repo, &lt;strong&gt;&lt;strong&gt;commit&lt;/strong&gt;&lt;/strong&gt; the changes and &lt;strong&gt;&lt;strong&gt;push&lt;/strong&gt;&lt;/strong&gt; them back.
&lt;/p&gt;
&lt;p&gt;
For Merging, I start by having them do it manually. I&amp;#39;ll have them
load the file in question into their editor and look for the chunks
that look like this:
&lt;/p&gt;
&lt;div class=&#34;verse-block&#34;&gt;
&lt;p&gt;
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; A
lines in file A
&lt;code class=&#34;verbatim&#34;&gt;=====&lt;/code&gt;
lines in file B
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; B
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
They&amp;#39;ll manually make the changes, then save, commit and push back.
&lt;/p&gt;
&lt;p&gt;
Later, I&amp;#39;ll show them a couple of tools to help along the way. I
usually show ediff in emacs along with meld.
&lt;/p&gt;
&lt;p&gt;
Once they&amp;#39;ve been doing this for a while, it&amp;#39;s easy to expand group
sizes. After that, I&amp;#39;ll introduce &lt;strong&gt;&lt;strong&gt;issues&lt;/strong&gt;&lt;/strong&gt; via the github interface.
&lt;/p&gt;
&lt;p&gt;
The last big topic is branches.
&lt;/p&gt;
&lt;p&gt;
First I show basic branches and merging. Here&amp;#39;s a pretty good &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging&#34;&gt;run
through&lt;/a&gt;. Afterwards, I&amp;#39;ll show how branching works in conjunction with
github. This is also a good time to emphasize that students have to
actually read the messages that git gives them when things don&amp;#39;t  go
well. In most cases, the message will contain the exact thing to type
to fix the problem (such as linking a branch with a branch up on
github).
&lt;/p&gt;
&lt;p&gt;
Now is also the time to introduce pull requests and how to use them to
support code review. The general setup I recommend is one branch per
group member and a main &amp;#34;deployment&amp;#34; branch with group members
creating more branches as they see fit.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s about it. I&amp;#39;ve followed this process, more or less, over a
semester, over a year, and over multiple years. It&amp;#39;s worked for me, I
hope some of this helps you as well.
&lt;/p&gt;
&lt;p&gt;
In the next and probably last git/github post I&amp;#39;ll talk about the
educational benefits that I&amp;#39;ve discovered along the way. After that,
I&amp;#39;ll get back to some emacs videos, other SIGCSE stuff and my normal rants.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - a path to github part 2</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-2/</link>
      <pubDate>Sun, 19 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-2/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Note:
&lt;/h2&gt;
&lt;p&gt;
Just for some quick context. The process I started to describe in the
last post and continue here chronicles what I did at Stuy with high
schoolers. Now that I&amp;#39;m at Hunter college, I&amp;#39;m adapting the process
but the overarching themes remain the same.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Post starts here:
&lt;/h2&gt;
&lt;p&gt;
Now that your students have been pulling the classcode repo regularly
it&amp;#39;s time to move to the next step - adding and pushing files to a
repo.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t claim to do this the &amp;#34;right way&amp;#34; or the best way but it&amp;#39;s
worked for me and it&amp;#39;s gotten my students up to speed.
&lt;/p&gt;
&lt;p&gt;
I ease my students into adding and pushing files using git through
homework submission. I create a single repo, usually named
&lt;strong&gt;&lt;strong&gt;submissions&lt;/strong&gt;&lt;/strong&gt; and make a folder for each student underneath looking
something like this:
&lt;/p&gt;
&lt;div class=&#34;verse-block&#34;&gt;
&lt;p&gt;
.
└── submissions
├── abram_sarah
├── chen_stuart
└── thompson_steve
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
Before going any further, let me clear up one thing. The repo is
public so all the students have access to each others work. I&amp;#39;m OK
with that. We could have each student make their own repo and use git
&lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Submodules&#34;&gt;submodules&lt;/a&gt; to make a submissions repo but administration is much
trickier and we lose the chance to build a culture of cooperation and
trust. We can lock down our submission systems as much as we want. If
students want to share assignments there&amp;#39;s nothing we can do about
it.
&lt;/p&gt;
&lt;p&gt;
My preference is to try to build a culture that minimizes bad
behavior and rewards good behavior. I&amp;#39;d rather see an incorrect
homework so that I can tell what we need to work on than a copied
perfect assignment. I&amp;#39;d rather see students cite each other, share
properly, and support each other than copy in the shadows.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not naive enough to believe that copying doesn&amp;#39;t happen in my
classes but I still prefer erring on the side of openness.
&lt;/p&gt;
&lt;p&gt;
Once the repo is set up, I give all the students access. This is a
little onerous since I have to type each of their GitHub usernames
under the collaborators section of the submissions repo but I only
have to do this once a semester.
&lt;/p&gt;
&lt;p&gt;
Then I teach the workflow. Assignments go into a file or folder under
their directory named ##_name where ## is the assignment number
(01,02,03, etc) and name is the assignment name. The student workflow
is:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
git pull
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
git add (sometimes)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
git commit
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
git push
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Since every student is working in their own directory, things
basically work.
&lt;/p&gt;
&lt;p&gt;
The first issue that students come up with is when another student
pushes before another student. The second student merely has to do
another &lt;strong&gt;&lt;strong&gt;git pull&lt;/strong&gt;&lt;/strong&gt; before proceeding. This provides an easy
introduction to dealing with the distributed nature of git.
&lt;/p&gt;
&lt;p&gt;
There will occasionally be other issues when students don&amp;#39;t follow
procedure exactly so I&amp;#39;ll have to fix the repo every now and then but
nothing too bad and each time is a opportunity to show the class:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
you can pretty much always restore and fix things once you commit
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
them.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
the specifics to fix things.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
There will be a few bumps in the road but after a few assignments the
sailing will be pretty smooth.
&lt;/p&gt;
&lt;p&gt;
At the end of the day, the students are a little closer to being fully
fluent using git, they&amp;#39;re hopefully using each others code as
resources but in a proper way and since the students are all using a
consistent assignment naming convention I can use simple scripts and
shell commands to do all sorts of processing on assignments.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the end of phase two. The next step  brings us to small
projects using git.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - a path to github part 1</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-github-1/</link>
      <pubDate>Thu, 16 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-github-1/</guid>
      <description>
&lt;p&gt;
Both at and prior to SIGCSE 2017, I promised to write up the steps I
take to introduce and use revision control systems in my classes.
&lt;/p&gt;
&lt;p&gt;
This series is not meant to be a git or &lt;a href=&#34;http://github.com&#34;&gt;GitHub&lt;/a&gt; tutorial. There are
plenty of those already (two of which I&amp;#39;ve linked to below).  This is
about the process I use with my students to get them up to speed.
&lt;/p&gt;
&lt;p&gt;
As with any new tool, there will be some resistance but once git saves
them once, they get religion. There will also be some bumps in the
road but at the end of the day, the students will be using a valuable
and necessary tool.
&lt;/p&gt;
&lt;p&gt;
I was also surprised at the ancillary benefits I got as a teacher by
using GitHub in particular. I&amp;#39;ll talk about that at the end of the
series.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s part one.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m doing this with git and GitHub but there&amp;#39;s no reason why other
systems and hosts can&amp;#39;t be used. I&amp;#39;d also recommend that any educator
or student sign up for the assorted &lt;a href=&#34;https://education.github.com/&#34;&gt;discounts&lt;/a&gt; offered by GitHub.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve followed this basic idea multiple times and done it over the
course of a single semester, a year, and even two years. Regardless of
time frame, the idea is the same. Make each step simple and relevant
and introduce complexity and roadblocks a piece at a time.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Step 1 - code distribution
&lt;/h2&gt;
&lt;p&gt;
To start, I don&amp;#39;t even talk about version control. We start with code
distribution. For years, I&amp;#39;ve looked for efficient ways of sharing
code with my classes. Both code developed in class and code for
assignments.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve tried things like NFS, Dropbox, online code repositories like the
files section of systems like Moodle or Blackboard.
&lt;/p&gt;
&lt;p&gt;
At Stuy, we&amp;#39;ve always had efficiency problems with NFS and Dropbox has
multiple problems ranging from students not being able to install the
client on school machines to the problems of the network hit when a
room full of kids are syncing at the same time.
&lt;/p&gt;
&lt;p&gt;
Uploading to a CMS system was also problematic - I&amp;#39;m a command line
wonk and hate going through slow web page menus to navigate a
filesystem and upload files. I also had to remember to get the files
off of whatever machine I was working on in class and then transfer
them to the CMS when I had a free moment.
&lt;/p&gt;
&lt;p&gt;
Enter git. Now, of course, if you&amp;#39;re going to use git in the classroom
you have to know it. There are plenty of resources out there. Online
courses, articles, videos, and tutorials. Here are a couple:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://try.github.io/&#34;&gt;https://try.github.io/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=0fKg7e37bQE&#34;&gt;https://www.youtube.com/watch?v=0fKg7e37bQE&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I also want to point out that I just use raw command line git along
with native GitHub. GitHub has rolled out &lt;a href=&#34;https://classroom.github.com/&#34;&gt;GitHub Classroom&lt;/a&gt; which adds
a layer of support for educators. I don&amp;#39;t use it because, as I said,
I&amp;#39;m an old school command line wonk and also because I figured out a
sequence that worked for me and my students before GitHub Classroom
existed. Were I starting now, I&amp;#39;d take some time to look at their
current offerings before jumping in.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Set up
&lt;/h3&gt;
&lt;p&gt;
Before starting, make sure you register your ssh keys. &lt;a href=&#34;https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/&#34;&gt;This&lt;/a&gt; help page
has more information. You&amp;#39;ll want to register an ssh key from every
machine you use - home, work, laptop.
&lt;/p&gt;
&lt;p&gt;
Now go over to GitHub and make a new repository. I usually name it
&lt;strong&gt;&lt;strong&gt;classcode&lt;/strong&gt;&lt;/strong&gt;. &lt;strong&gt;&lt;strong&gt;BEGINNER NOTE:&lt;/strong&gt;&lt;/strong&gt; when creating the repo, make sure to
check the &amp;#34;initialize this repository with a README&amp;#34; box. If you don&amp;#39;t
you&amp;#39;ll be given a set of instructions on how to set things up once you
click &lt;strong&gt;&lt;strong&gt;Create repository&lt;/strong&gt;&lt;/strong&gt; but it&amp;#39;s easier and easier to follow if
you start with an initialized repo with a README.
&lt;/p&gt;
&lt;p&gt;
I make the repo public – it&amp;#39;s code I&amp;#39;m distributing – nothing to
hide here. If you aren&amp;#39;t comfortable with that, just make the repo
private. If you&amp;#39;ve registered as a teacher with GitHub, you can set up
an organization and you&amp;#39;ll be able to set up free private repos within
it. The other downside here is that you&amp;#39;ll have to individually give
each student access to the repo. That&amp;#39;s a mild annoyance but it only
has to be done once.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Teacher use
&lt;/h3&gt;
&lt;p&gt;
Next, clone out the repo. &lt;strong&gt;&lt;strong&gt;BEGINNER NOTE:&lt;/strong&gt;&lt;/strong&gt; Make sure you check out
the ssh version not the https version. Just make sure that when you
click the &lt;strong&gt;&lt;strong&gt;clone&lt;/strong&gt;&lt;/strong&gt; button, it says &amp;#34;Clone with SSH.&amp;#34; If not, just
click the &amp;#34;Use SSH&amp;#34; link in the same box. Students will clone the
using https.
&lt;/p&gt;
&lt;p&gt;
From the teacher point of view, you can just start using the repo. My
work flow is typically:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;git pull&lt;/strong&gt;&lt;/strong&gt; at the start of class
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
write code throughout class
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;git add&lt;/strong&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;strong&gt;git commit&lt;/strong&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;strong&gt;git push&lt;/strong&gt;&lt;/strong&gt; at the end of class
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I use a similar flow when I want to add files in my office or at home.
&lt;/p&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Student use
&lt;/h3&gt;
&lt;p&gt;
From the student point of view, assuming a public repo, they just have to clone the repo and
at the beginning of every class or work session, do a &lt;strong&gt;&lt;strong&gt;git
pull&lt;/strong&gt;&lt;/strong&gt;. That&amp;#39;s all there is to it.
&lt;/p&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Thoughts
&lt;/h3&gt;
&lt;p&gt;
That&amp;#39;s it. The kids are now using GitHub – they&amp;#39;re probably looking
at and poking around on the web site as well as pulling files to their
machines. You can also, in class, show things like &lt;strong&gt;&lt;strong&gt;git status&lt;/strong&gt;&lt;/strong&gt;,
&lt;strong&gt;&lt;strong&gt;git log&lt;/strong&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;strong&gt;git diff&lt;/strong&gt;&lt;/strong&gt; to set the stage for step 2 of this
process and beyond.
&lt;/p&gt;
&lt;p&gt;
Since the students aren&amp;#39;t adding, committing or pushing, you probably won&amp;#39;t
get any errors.
&lt;/p&gt;
&lt;p&gt;
The only problem that could reasonably occur is if a student places a
file in their local copy of the repo with the same name as something
they haven&amp;#39;t pulled yet. This is pretty easy to address and provides a
nice stepping stone lesson to again, set the stage for more complex
operations.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m happy with this as a first step towards git using GitHub. It
provides a nice way of sharing class code while gently introducing the
students to the tool.
&lt;/p&gt;
&lt;p&gt;
The next step  is having the students add files to a repo. That&amp;#39;s the
next post in this series.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017 - Recap</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017-recap/</link>
      <pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017-recap/</guid>
      <description>
&lt;p&gt;
As a high school teacher, I was never able to attend SIGCSE, the
conference of the ACM&amp;#39;s Special Interest Group on Computer Science
Education. Between the number of instructional days I would lose and
the cost, I could never justify going. Instead I looked over the
proceedings and read many of the papers.
&lt;/p&gt;
&lt;p&gt;
Now that I&amp;#39;m at Hunter, I was finally able to attend. This year in
Seattle, the conference ran from Wednesday through Saturday. I was
part of a panel on &amp;#34;Tools we can&amp;#39;t live without.&amp;#34; Over the next few
weeks, I hope to blog about a number of things I thought and talked
with people about over the conference including:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The path I use to teach git and why GitHub a good teaching tool
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
(my talk).
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The relationship of different CS Ed stakeholders - teachers,
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
researchers, organizations, etc.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Teaching at the high school level vs college - perceptions and
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
reality.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The challenges of tech tool adoption in schools.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What&amp;#39;s going on in K12 CS Certification.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Maybe some other stuff.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Today, some overall thoughts.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
The good
&lt;/h2&gt;
&lt;p&gt;
As with many conferences, the &amp;#34;hallway track&amp;#34; along with receptions
sponsored by &lt;a href=&#34;https://csnyc.org/our-work/cs4all&#34;&gt;the CS4All consurtium&lt;/a&gt;, &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt;, &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt; were terrific. I
was able to finally meet in person many people who I&amp;#39;ve only known
virtually and got to know many more as well. I left the conference
with a much larger address book and a long list of follow up
items. Being in Seattle, I also enjoyed being able to spend time with
people from &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt; and &lt;a href=&#34;http://code.org&#34;&gt;Code.org&lt;/a&gt;, two of the CS Ed groups working hard
to do some real good (yes - I do like and support these guys even
though I call them out on things I disagree with, but that&amp;#39;s the
subject of another post).
&lt;/p&gt;
&lt;p&gt;
I attended sessions on CS certification, teacher preparation,
assessments, POGIL based instruction to name a few. They ranged from
valuable to interesting and to be honest, a couple of &amp;#34;what were they
thinking&amp;#34; but the overall experience was very much worth the trip. I
also got to speak to a number of wonderful students at the
poster sessions.
&lt;/p&gt;
&lt;p&gt;
The keynotes are also well worth a read (sorry if you don&amp;#39;t have ACM
digital library access). &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025045&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Jeannette Wing&lt;/a&gt; talked about the importance of
probability and statistics in CS Ed, and aspects of  &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025047&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Gail Chapman&lt;/a&gt;&amp;#39;s talk
&amp;#34;Inspire, Innovate, and Improve…&amp;#34; keynote and &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3025046&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Mitch Resnick&lt;/a&gt;&amp;#39;s
&amp;#34;Fulfilling Papert&amp;#39;s Dream&amp;#34; both spoke to the educator inside me.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
The bad
&lt;/h2&gt;
&lt;p&gt;
The biggest downside to me was that I found very little value added in
a number of the paper sessions over just reading the papers. Part of
this is probably because of my own over-inflated expectations given the
number of years I&amp;#39;ve waited to attend. Part of it though, was the fact
that sessions were so tightly packed that I didn&amp;#39;t have time to follow
up with presenters before having to run to the next
thing. Unfortunately, in some
cases, it was because the presenter merely
&amp;#34;read&amp;#34; the paper much as a professor sometimes just reads the slides
or the book to his class.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Other thoughts
&lt;/h2&gt;
&lt;p&gt;
One paper presentation I very much liked was &lt;a href=&#34;http://dl.acm.org/citation.cfm?id=3017701&amp;amp;CFID=738971273&amp;amp;CFTOKEN=22106692&#34;&gt;Exam Wrappers: Not a
Silver Bullet&lt;/a&gt; presented by &lt;a href=&#34;https://michellecraig.github.io/&#34;&gt;Michelle Craig&lt;/a&gt; and &lt;a href=&#34;http://pages.cpsc.ucalgary.ca/~bdstephe/&#34;&gt;Ben Stephenson&lt;/a&gt;. I
actually came in late since I was hustling over from the Code.org
lunch. The result was that I didn&amp;#39;t actually know what &amp;#34;Exam Wrappers&amp;#34;
were until well after the talk when I ran into &lt;a href=&#34;https://twitter.com/jkhuggins&#34;&gt;Jim Huggins&lt;/a&gt;. Exam
wrappers, in short, are merely when you require the students fill out something
for some credit when picking up their exams. The funny thing is that
it&amp;#39;s a strategy that high school teachers have used for years without
a special name and we already knew the good and bad of it without the
research but that&amp;#39;s not what I want to get at here. What I loved about
the talk, besides the fact that Ben and Michelle are clearly strong
presenters is that this was a negative result that was being
presented. I also loved the fact that they didn&amp;#39;t present their
research as gospel but rather pointed out the strengths and weaknesses
of their approach - they made a case to what and why we should pay
attention to and what should be taken with a grain of salt.
&lt;/p&gt;
&lt;p&gt;
This was a major breath of fresh air after being exposed to so much
education &amp;#39;research&amp;#39; over the course of my life that the author or
presenter felt was just as strong as a mathematical proof rather than
an indication based on a specific experience or small set of
experiences.
&lt;/p&gt;
&lt;p&gt;
I also felt a little weird at times during the week when west coast people seemed
to know me. I know I&amp;#39;m a loud mouthed curmudgeon and I go on my
periodic ed rants but given the dearth of comments on this blog I was
really surprised to get as many as &amp;#34;great to meet you in person after
reading your blog&amp;#34; or &amp;#34;we know you and your work&amp;#34; all week. It was
weird and somewhat humbling.
&lt;/p&gt;
&lt;p&gt;
Finally, another highlight f`or me was that I got to catch up with
some of family.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/sigcse-seattle.jpg&#34; alt=&#34;/img/sigcse-seattle.jpg&#34; title=&#34;/img/sigcse-seattle.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
Already planning to submit something to present at SIGCSE 2018 in Baltimore.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2017</title>
      <link>https://cestlaz.github.io/posts/sigcse-2017/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/sigcse-2017/</guid>
      <description>&lt;p&gt;
Tomorrow morning I fly out to Seattle for SIGCSE 2017. For those of
you not in the CS Education space, SIGCSE is the ACM (Association for
Computing Machinery) special interest group for computer science education.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve wanted to go for years but have never been able. It&amp;#39;s hard for a
high school teacher to miss a week in mid March, particularly in
places with a school calendar similar to New York. NY city schools are
already closed for a week in February and then Spring Break is right
around the corner. If you&amp;#39;re teaching an AP course with the exam in
early May, losing a week in March is really not an option. Even if you
can take the time, you&amp;#39;ll probably have to foot the bill out of
pocket.
&lt;/p&gt;
&lt;p&gt;
Now that I&amp;#39;m at Hunter, I&amp;#39;ve got more flexibility in terms of schedule
and attending is probably even more important given my current roles.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m looking forward to the talks and events but probably even more
looking forward to seeing old friends, meeting new ones and seeing
face to face friends that til now I&amp;#39;ve only known through the web.
&lt;/p&gt;
&lt;p&gt;
On Saturday I&amp;#39;ll be part of a panel (thanks &lt;a href=&#34;https://twitter.com/cscheerleader&#34;&gt;Ria&lt;/a&gt;) titled &amp;#34;Tools we
can&amp;#39;t live without.&amp;#34; I&amp;#39;ll probably talk about the way I use git and
GitHub and how I get my students up to speed but there are lots of
tools I can talk about.
&lt;/p&gt;
&lt;p&gt;
I plan to write up a series of posts on how I use GitHub (and how it
evolved from other versioning systems) as well as thoughts about other
tools I&amp;#39;ve used and some I&amp;#39;ve struggled with.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re going to be at SIGCSE drop me a line, I&amp;#39;d love to connect.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Whiteboard interviews</title>
      <link>https://cestlaz.github.io/posts/whiteboard-interviews/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/whiteboard-interviews/</guid>
      <description>&lt;p&gt;
A few days ago, I saw a &lt;a href=&#34;https://theoutline.com/post/1166/programmers-are-confessing-their-coding-sins-to-protest-a-broken-job-interview-process%0A&#34;&gt;piece&lt;/a&gt; on &lt;a href=&#34;https://twitter.com/dhh&#34;&gt;David Heinemeier Hansson&amp;#39;s&lt;/a&gt; tweet on
whiteboard interviews:
&lt;/p&gt;
&lt;div class=&#34;html-block&#34;&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Hello, my name is David. I would fail to write bubble sort on a whiteboard. I look code up on the internet all the time. I don&amp;#39;t do riddles.&lt;/p&gt;&amp;mdash; DHH (@dhh) &lt;a href=&#34;https://twitter.com/dhh/status/834146806594433025&#34;&gt;February 21, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;
I&amp;#39;m not a huge fan of the whiteboard interview but I think many of the
tweets missed the point. Most of the whiteboard interviews I&amp;#39;m
aware of involve algorithmic problem solving while the tweets, at
least the ones I&amp;#39;ve seen all refer to things that indeed one would
look up. Things like API calls - not things that whiteboard interviewers
typically care about.
&lt;/p&gt;
&lt;p&gt;
Tim Bray takes that point of view and shared his thoughts in a
&lt;a href=&#34;https://www.tbray.org/ongoing/When/201x/2017/03/04/Whiteboard-Interviews&#34;&gt;recent blog post&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The idea behind the whiteboard interview isn&amp;#39;t all bad. The
interviewer has an opportunity to see how the candidate thinks and
works through a problem and in an ideal situation the interviewer is,
at least to a point, coaching the candidate to help them through the
process. It seems to me that the problem lies more in the types of
questions asked and the skill of the interviewer rather than the idea
that candidates work through a problem live.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d imagine that whiteboard interview success skew towards candidates
who work well in isolation in a short period of time, have a good
amount of exposure to these types of algorithmic problems. Also those
who have practiced and trained specifically for the interview will
have a huge edge. For people new to the process, it can be very
stressful.
&lt;/p&gt;
&lt;p&gt;
Once a candidate has accepted a position, they&amp;#39;ll likely be working
with a team, with additional resources, and with time to solve
problems. This is a very different environment.  The whiteboard
interview, much like the SAT is thus something of an arbitrary
gatekeeper that a candidate must prepare for and conquer rather than a
skill that they must develop that will make them a more productive
team member.
&lt;/p&gt;
&lt;p&gt;
This whole process tends to advantage those with the time and
background to prepare - this is one of the places where the argument
that whiteboard interview hurt diversity come from.
&lt;/p&gt;
&lt;p&gt;
I could be totally wrong but I seem to recall that the whiteboard
interview, at least in terms of external visibility grew out of the
legendary Google puzzle interview questions.
&lt;/p&gt;
&lt;p&gt;
A tech giant like Google can interview however they like and they&amp;#39;ll
still get the talent. They go to the most selective institutions where
candidates have already been culled for success. If they then interview 100
candidates and 10 of them would be good fits, as long as a couple
thrive through the whiteboard interview process, they&amp;#39;ll get their
engineer. They&amp;#39;ll miss out on a lot of great talent but they can cast
such a large net they&amp;#39;ll fill there seats with productive employees.
&lt;/p&gt;
&lt;p&gt;
On the other hand, smaller companies will certainly miss out on great
talent if they follow the same approach.
&lt;/p&gt;
&lt;p&gt;
Is there a better way?
&lt;/p&gt;
&lt;p&gt;
Some companies pre-assign mini projects and then discuss that at the
interview. Pairing could also be a lower stress alternative to the
technical interview. Another option would be to look at a candidates
existing projects.
&lt;/p&gt;
&lt;p&gt;
An interesting question is &amp;#34;why do so many companies use the
whiteboard interview?&amp;#34; I can&amp;#39;t say for certain but I wouldn&amp;#39;t be
surprised if it was a simple as &amp;#34;because Google does it.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
For over 100 years, Stuyvesant high school required students study
mechanical drawing (drafting). The relevance of the subject lessened over the
decades and what was taught in many ways has become a joke. A typical
class during the CAD parts of the class might be going over the
&lt;strong&gt;&lt;strong&gt;cylinder&lt;/strong&gt;&lt;/strong&gt; command in CadKey. That&amp;#39;s like spending a day studying
the &lt;strong&gt;&lt;strong&gt;edit&lt;/strong&gt;&lt;/strong&gt; menu in Microsoft Word in an English class. If you can&amp;#39;t
tell, I&amp;#39;m not a fan. Drafting at Stuyvesant is the vestigial organ of
the course of study.
&lt;/p&gt;
&lt;p&gt;
My point isn&amp;#39;t to bash drafting at Stuy but rather that there have
been any number of schools that require their students take drafting
even though it doesn&amp;#39;t prepare students for, nor lead them to anything
else in the schools curriculum (which now can be said for Stuy&amp;#39;s
drafting requirement). I&amp;#39;ve spoken to teachers and principals at these
schools and we go back and forth as I press them for the reason for
the requirement and ultimately, they tell me that their school
requires drafting &amp;#34;because Stuyvesant does.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Why do so many small companies employ the whiteboard interview?
Because the big kids do. The trouble is that the big kids can get away
with it, the smaller players on the other hand, are hurting
themselves. Even the bigger players would be well served to
try to come up with an interview process that better assesses fit
rather than a course filter that while it does pull in talent misses
talent as well.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 32 - C&#43;&#43;</title>
      <link>https://cestlaz.github.io/posts/using-emacs-32-cpp/</link>
      <pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-32-cpp/</guid>
      <description>&lt;p&gt;
This video is specifically for my students or any students out there
who are starting with C++ and emacs. The videos also longer than usual, coming in
at a little over 20 minutes.
&lt;/p&gt;
&lt;p&gt;
The big difference is instead of building on my &lt;a href=&#34;https://github.com/zamansky/using-emacs&#34;&gt;existing config&lt;/a&gt;, the
code at the bottom is a complete standalone configuration. It&amp;#39;s all
pulled from the main config with one additional package.
&lt;/p&gt;
&lt;p&gt;
By taking the code at the bottom and putting in into a file named &lt;strong&gt;&lt;strong&gt;init.el&lt;/strong&gt;&lt;/strong&gt; in a
directory off of your home directory named &lt;strong&gt;&lt;strong&gt;.emacs.d&lt;/strong&gt;&lt;/strong&gt; and run emacs,
it will install everything and you&amp;#39;ll be good to go.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve been following this series, the only new package is &lt;a href=&#34;https://github.com/leoliu/ggtags&#34;&gt;ggtags&lt;/a&gt;
and the configuration code is:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; tags for code navigation&lt;/span&gt;
(use-package ggtags
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c-mode-common-hook&lt;/span&gt;
(lambda ()
(when (derived-mode-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c-mode&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c++-mode&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;java-mode&lt;/span&gt;)
(ggtags-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))))
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
For people new to the series, the top section sets up the emacs
package manager. After that we install:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;which-key&lt;/td&gt;
&lt;td&gt;brings up contextual key binding help&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;auto-complete&lt;/td&gt;
&lt;td&gt;just as the name says&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;flycheck&lt;/td&gt;
&lt;td&gt;in line, live syntax checking&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;yasnippet&lt;/td&gt;
&lt;td&gt;snippets and expansion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ggtags&lt;/td&gt;
&lt;td&gt;source code navigation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;color-theme&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;moe-theme&lt;/td&gt;
&lt;td&gt;just because&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
The video also show me using &lt;strong&gt;&lt;strong&gt;counsel-ag&lt;/strong&gt;&lt;/strong&gt; which is part of the
swiper/counsel package. You can check that out &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-6-swiper&#34;&gt;here&lt;/a&gt; as well as some
other packages I use like &lt;strong&gt;&lt;strong&gt;smartparens&lt;/strong&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;strong&gt;hungry-delete&lt;/strong&gt;&lt;/strong&gt; and
probably a few more.
&lt;/p&gt;
&lt;p&gt;
You can look at my complete configuration or the other videos for
details.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re an experienced C++ developer and use emacs, please share
tips, tricks, and suggestions. I haven&amp;#39;t done serious C++ work in over
a decade and while I did professional development in C in a past life,
never in C++.
&lt;/p&gt;
&lt;p&gt;
The packages used here are not C++ specific - I use them for Java,
Python, Clojure, and Javascript development as well.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the configuration code:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; set up package sources&lt;/span&gt;
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&lt;/span&gt;)
(setq package-enable-at-startup &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;)
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package-archives&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://melpa.org/packages/&amp;#34;&lt;/span&gt;))
(package-initialize)

&lt;span style=&#34;color:#75715e&#34;&gt;;; Bootstrap `use-package&amp;#39;&lt;/span&gt;
(unless (package-installed-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package&lt;/span&gt;)
(package-refresh-contents)
(package-install &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;;; small interface tweaks&lt;/span&gt;
(setq inhibit-startup-message &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(tool-bar-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)
(&lt;span style=&#34;color:#a6e22e&#34;&gt;fset&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yes-or-no-p&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;y-or-n-p&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;f5&amp;gt;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;revert-buffer&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;;; bring up help for key bindings&lt;/span&gt;
(use-package which-key
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(which-key-mode))


&lt;span style=&#34;color:#75715e&#34;&gt;;; Auto completion&lt;/span&gt;
(use-package auto-complete
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(progn
(ac-config-default)
(global-auto-complete-mode &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
))


&lt;span style=&#34;color:#75715e&#34;&gt;;; on the fly syntax checking&lt;/span&gt;
(use-package flycheck
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(global-flycheck-mode &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;;; snippets and snippet expansion&lt;/span&gt;
(use-package yasnippet
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(yas-global-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))


&lt;span style=&#34;color:#75715e&#34;&gt;;; tags for code navigation&lt;/span&gt;
(use-package ggtags
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c-mode-common-hook&lt;/span&gt;
(lambda ()
(when (derived-mode-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c-mode&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c++-mode&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;java-mode&lt;/span&gt;)
(ggtags-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))))
)


&lt;span style=&#34;color:#75715e&#34;&gt;;; Theme&lt;/span&gt;
(use-package color-theme
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(use-package moe-theme
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(moe-light)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/7SQmleA4EMo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Enjoy.
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 31 - elfeed part 3 - macros</title>
      <link>https://cestlaz.github.io/posts/using-emacs-31-elfeed-3/</link>
      <pubDate>Wed, 01 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-31-elfeed-3/</guid>
      <description>&lt;p&gt;
In &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-30-elfeed-2&#34;&gt;part 2&lt;/a&gt; I talked about how I used &lt;a href=&#34;https://github.com/abo-abo/hydra&#34;&gt;Hyrdas&lt;/a&gt; to quickly navigate through
elfeed tags. It was a nice step up but the fact that I still had to
manually edit my configuration code for every new tag to update the
hydra was a problem.
&lt;/p&gt;
&lt;p&gt;
Basically, I had to somehow or other, take a list of all the active
tags and with it build a &lt;strong&gt;&lt;strong&gt;defhydra&lt;/strong&gt;&lt;/strong&gt; command that will then make my
Hydra.
&lt;/p&gt;
&lt;p&gt;
Fortunately, emacs, being a lisp, has macros. I&amp;#39;m not talking about
keyboard macros which I talked about in &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-15-macros/#.WLbj5t9idKQ&#34;&gt;episode 15&lt;/a&gt; but rather &lt;a href=&#34;http://wiki.c2.com/?LispMacro&#34;&gt;Lisp
style macros&lt;/a&gt;. Macros let you transform code and then execute the
transformed code.
&lt;/p&gt;
&lt;p&gt;
The example I give in the video:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(defmacro infix (a op b)
&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;op &lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;b))

(infix &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; evaluates to 11&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This transforms the &lt;strong&gt;&lt;strong&gt;3+8&lt;/strong&gt;&lt;/strong&gt; into &lt;strong&gt;&lt;strong&gt;(+ 3 8)&lt;/strong&gt;&lt;/strong&gt; and then evaluates it to
be 11.
&lt;/p&gt;
&lt;p&gt;
We can use this idea with our Hydra.
&lt;/p&gt;
&lt;p&gt;
We can use the call &lt;strong&gt;&lt;strong&gt;elfeed-db-get-all-tags&lt;/strong&gt;&lt;/strong&gt; to get a list of all
the tags in our database. I decided that if I had an uppercase letter
in the tag, I&amp;#39;d use the lowercase version of that letter as my &amp;#34;hotkey&amp;#34;
and if it didn&amp;#39;t, I&amp;#39;d just use the first letter.
&lt;/p&gt;
&lt;p&gt;
So, given a tag list of:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(active blogs cs eDucation emacs local misc sports star tech unread webcomics)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I&amp;#39;d want a &amp;#34;hotkey&amp;#34; of &lt;strong&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/strong&gt; for logs and &lt;strong&gt;&lt;strong&gt;d&lt;/strong&gt;&lt;/strong&gt; for eDucation.
&lt;/p&gt;
&lt;p&gt;
The routine &lt;strong&gt;&lt;strong&gt;z/hasCap&lt;/strong&gt;&lt;/strong&gt; tests to see if a tag has a capital letter in
it and &lt;strong&gt;&lt;strong&gt;z/get-hydra-option-key&lt;/strong&gt;&lt;/strong&gt; returns the final &amp;#34;hotkey:&amp;#34;
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(defun z/hasCap (s) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
(let ((case-fold-search &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;))
(string-match-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[[:upper:]]&amp;#34;&lt;/span&gt; s)
))


(defun z/get-hydra-option-key (s)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;returns single upper case letter (converted to lower) or first&amp;#34;&lt;/span&gt;
(interactive)
(let ( (loc (z/hasCap s)))
(if loc
(&lt;span style=&#34;color:#a6e22e&#34;&gt;downcase&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;substring&lt;/span&gt; s loc (&lt;span style=&#34;color:#a6e22e&#34;&gt;+&lt;/span&gt; loc &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)))
(&lt;span style=&#34;color:#a6e22e&#34;&gt;substring&lt;/span&gt; s &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;mz/make-elfeed-cats&lt;/strong&gt;&lt;/strong&gt; takes a list of tags and returns a list of
items where each item is in the form expected by the hydra definition:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago +tagname&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tagname&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(defun mz/make-elfeed-cats (tags)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Returns a list of lists. Each one is line for the hydra configuratio in the form
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(c function hint)&amp;#34;&lt;/span&gt;
(interactive)
(&lt;span style=&#34;color:#a6e22e&#34;&gt;mapcar&lt;/span&gt; (lambda (tag)
(let* (
(tagstring (&lt;span style=&#34;color:#a6e22e&#34;&gt;symbol-name&lt;/span&gt; tag))
(c (z/get-hydra-option-key tagstring))
)
(&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt; c (&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(elfeed-search-set-filter) (&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago +%s&amp;#34;&lt;/span&gt; tagstring) ))tagstring  )))
tags))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Finally, here&amp;#39;s our macro:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(defmacro mz/make-elfeed-hydra ()
&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(defhydra mz/hydra-elfeed ()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;filter&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;,@&lt;/span&gt;(mz/make-elfeed-cats (elfeed-db-get-all-tags))
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago +star&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starred&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M&amp;#34;&lt;/span&gt; elfeed-toggle-star &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mark&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;All&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;T&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@1-day-ago&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Today&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Q&amp;#34;&lt;/span&gt; bjm/elfeed-save-db-and-bury &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Quit Elfeed&amp;#34;&lt;/span&gt; :color blue)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;q&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;quit&amp;#34;&lt;/span&gt; :color blue)
))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The line that starts with &lt;strong&gt;&lt;strong&gt;,@&lt;/strong&gt;&lt;/strong&gt; calls the routine that builds lines
of code for all the tags in the database and the macro leaves me with
the defhydra I need.
&lt;/p&gt;
&lt;p&gt;
I then redefine the hydra every time I need it, just in case tags
changed:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(defun mz/make-and-run-elfeed-hydra ()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
(interactive)
(mz/make-elfeed-hydra)
(mz/hydra-elfeed/body))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and bind &lt;strong&gt;&lt;strong&gt;mz/make-and-run-elfeed-hydra&lt;/strong&gt;&lt;/strong&gt; to j and J in my elfeed
keymap (this code goes in the bind section of my use-package elfeed
section):
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;j&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; mz/make-and-run-elfeed-hydra)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;J&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; mz/make-and-run-elfeed-hydra)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
As long as I remember to name my tags in a way that they don&amp;#39;t
conflict with one another I can quickly navigate all around elfeed.
&lt;/p&gt;
&lt;p&gt;
Macros FTW!!!!
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the video:
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5zuSUbAHH8c&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Enjoy.
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Will we lose CS teachers to industry?</title>
      <link>https://cestlaz.github.io/posts/draft-will-we-lose-cs-teachers-to-industry/</link>
      <pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/draft-will-we-lose-cs-teachers-to-industry/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
If we properly prepare CS teachers, won&amp;#39;t they just jump ship and take
tech industry jobs?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I hear that a lot.
&lt;/p&gt;
&lt;p&gt;
Tech pays big. Teaching? Not so much. Tech workers are respected and
have flexible jobs. Teaching? Again, not so much.
&lt;/p&gt;
&lt;p&gt;
Those chanting these refrains advocate the current simple teacher
&amp;#34;training&amp;#34; - scripted lessons, minimal pedagogical content knowledge,
even less real content knowledge. That  will keep them in the classroom.
&lt;/p&gt;
&lt;p&gt;
They&amp;#39;re wrong.
&lt;/p&gt;
&lt;p&gt;
People fearing an exodus of prepared CS teachers don&amp;#39;t get
education. True, many young CS teachers will leave the profession but
that&amp;#39;s because &lt;strong&gt;&lt;strong&gt;many young teachers leave the profession&lt;/strong&gt;&lt;/strong&gt;. Why do young
teachers leave? Regardless of subject area some of the reasons are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s much harder than everyone thinks it is
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Low pay
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Lack of respect
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Overworked
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Lack of autonomy
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Being scapegoated for poverty
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s become about testing, not teaching
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
None of these are unique to computer science teachers so the argument
that CS teachers who know too much will leave is really saying, &amp;#34;we
have to keep our teachers dumb enough to stay - make sure they don&amp;#39;t
have outside options&amp;#34; rather than &amp;#34;let&amp;#39;s make teaching a desirable
profession to be in.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Of course, this is bred from a lack of understanding about what drives
teachers. It&amp;#39;s typical of politicians and business leaders and short
term temps like TFAers who came in for a cup of coffee and now know
how to solve the education problem.
&lt;/p&gt;
&lt;p&gt;
Teacher don&amp;#39;t become teachers to
get rich or to do better than the other guy – I know I didn&amp;#39;t. We
enter it to do good - to uplift the have nots. This is why business
models like stack ranking and bonus or merit pay just don&amp;#39;t work. A
school is a team and we&amp;#39;re all in it together. Our job is to take care
of our kids, not to be better than that other guy. We wish we had more
time to work together and to improve things for our entire population.
&lt;/p&gt;
&lt;p&gt;
Back to computer science.
&lt;/p&gt;
&lt;p&gt;
My contention is that you might lose some teachers to industry but
they either weren&amp;#39;t meant to be teachers anyway or they couldn&amp;#39;t
afford to be teachers or the system beat them down. None of these are
reasons not to properly prepare them. Besides, all teachers in all
subject areas could work their way into an entry level tech job via a
summer coding boot camp.
&lt;/p&gt;
&lt;p&gt;
We can also look to the past to allay concerns. While it&amp;#39;s true that
for hiring purposes, English teachers are a dime a dozen and
candidates typically
have fewer outside options (although great English teachers are harder
to find), Math and Science teachers generally have options. I know
many top Math and Science teachers who could easily get non teaching
jobs - the Math teachers in finance the science, certainly in
pharmaceutical companies over in NJ. These options exist yet we manage
to populate our classes with teachers. True, it&amp;#39;s difficult at times,
particularly in Physics, but these are due to the lack of respect
teaching gets as a profession.
&lt;/p&gt;
&lt;p&gt;
If we prepare CS teachers properly, yes, we&amp;#39;ll lose some, but we&amp;#39;ll
keep the ones we&amp;#39;re supposed to or if we lose them it will be due to
other factors. Additionally, by having proper CS teacher
preparation programs, we&amp;#39;ll also provide an entry path to those people
meant to be teachers but prior had no way of getting in.
&lt;/p&gt;
&lt;p&gt;
As a nation, we&amp;#39;re moving away from prepared, knowledgeable teachers
and towards drill-masters. Let&amp;#39;s not let CS Education go the way of
all ed.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 30 - elfeed part 2 - Hydras</title>
      <link>https://cestlaz.github.io/posts/using-emacs-30-elfeed-2/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-30-elfeed-2/</guid>
      <description>&lt;p&gt;
In &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-29%2520elfeed/&#34;&gt;part 1&lt;/a&gt;, I talked about &lt;a href=&#34;https://github.com/skeeto/elfeed&#34;&gt;elfeed&lt;/a&gt;, a really awesome feed reader for
emacs. Generally, I&amp;#39;m really liking it but there&amp;#39;s been one problem -
not being able to navigate quickly between groups of feeds with a
keystroke or two.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s emacs so there has to be a solution.
&lt;/p&gt;
&lt;p&gt;
Enter &lt;a href=&#34;https://github.com/abo-abo/hydra&#34;&gt;hydra&lt;/a&gt; - a terrific emacs package from the same guy who brought
us &lt;a href=&#34;https://github.com/abo-abo/hydra&#34;&gt;swiper&lt;/a&gt;, another one of my favorite emacs packages.
&lt;/p&gt;
&lt;p&gt;
Basically, Hydra allows us to create Hydras - a collection of emacs
commands tied o a single prefix along with a nice interface and help
system.
&lt;/p&gt;
&lt;p&gt;
Truth be told, I don&amp;#39;t use hydra as much anymore since &lt;a href=&#34;https://github.com/justbur/emacs-which-key&#34;&gt;which-key&lt;/a&gt;
does such a great job most of the time. Which-key, however, is no help
here.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the code to install hydra along with a some of sample Hydra&amp;#39;s
I use:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package hydra
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;;; Hydra for modes that toggle on and off&lt;/span&gt;
(global-set-key
(kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-x t&amp;#34;&lt;/span&gt;)
(defhydra toggle (:color blue)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;toggle&amp;#34;&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; abbrev-mode &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;abbrev&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt; flyspell-mode &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flyspell&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt; toggle-debug-on-error &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;debug&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt; fci-mode &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fCi&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt; auto-fill-mode &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fill&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt; toggle-truncate-lines &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;truncate&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt; whitespace-mode &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;whitespace&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;q&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cancel&amp;#34;&lt;/span&gt;)))

&lt;span style=&#34;color:#75715e&#34;&gt;;; Hydra for navigation&lt;/span&gt;
(global-set-key
(kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-x j&amp;#34;&lt;/span&gt;)
(defhydra gotoline
( :pre (linum-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
:post (linum-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;))
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;goto&amp;#34;&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt; (lambda () (interactive)(move-to-window-line-top-bottom &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;top&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt; (lambda () (interactive)(move-to-window-line-top-bottom &lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt; (lambda () (interactive)(move-to-window-line-top-bottom)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;middle&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e&amp;#34;&lt;/span&gt; (lambda () (interactive)(end-of-buffer)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;end&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt; recenter-top-bottom &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;recenter&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt; next-line &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;down&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt; (lambda () (interactive) (&lt;span style=&#34;color:#a6e22e&#34;&gt;forward-line&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-1&lt;/span&gt;))  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;up&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g&amp;#34;&lt;/span&gt; goto-line &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;goto-line&amp;#34;&lt;/span&gt;)
))

&lt;span style=&#34;color:#75715e&#34;&gt;;; Hydra for some org-mode stuff&lt;/span&gt;
(global-set-key
(kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-c t&amp;#34;&lt;/span&gt;)
(defhydra hydra-global-org (:color blue)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Org&amp;#34;&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt; org-timer-start &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Start Timer&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt; org-timer-stop &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Stop Timer&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt; org-timer-set-timer &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Set Timer&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; This one requires you be in an orgmode doc, as it sets the timer for the header&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p&amp;#34;&lt;/span&gt; org-timer &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Print Timer&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; output timer value to buffer&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt; (org-clock-in &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clock-In&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; used with (org-clock-persistence-insinuate) (setq org-clock-persist t)&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;o&amp;#34;&lt;/span&gt; org-clock-out &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clock-Out&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; you might also want (setq org-log-note-clock-out t)&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;j&amp;#34;&lt;/span&gt; org-clock-goto &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clock Goto&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; global visit the clocked task&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt; org-capture &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Capture&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; Don&amp;#39;t forget to define the captures you want http://orgmode.org/manual/Capture.html&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;l&amp;#34;&lt;/span&gt; (or )rg-capture-goto-last-stored &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Last Capture&amp;#34;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Take a look at the &lt;a href=&#34;https://github.com/abo-abo/hydra&#34;&gt;Hydra&lt;/a&gt; home page for detailed information.
&lt;/p&gt;
&lt;p&gt;
With Hydra installed, I can creat one for navigating in elfeed:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;(defhydra mz/hydra-elfeed ()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;filter&amp;#34;&lt;/span&gt;
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago +cs&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cs&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;e&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago +emacs&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;emacs&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;d&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago +education&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;education&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago +star&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starred&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M&amp;#34;&lt;/span&gt; elfeed-toggle-star &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mark&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@6-months-ago&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;All&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;T&amp;#34;&lt;/span&gt; (elfeed-search-set-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@1-day-ago&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Today&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Q&amp;#34;&lt;/span&gt; bjm/elfeed-save-db-and-bury &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Quit Elfeed&amp;#34;&lt;/span&gt; :color blue)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;q&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;quit&amp;#34;&lt;/span&gt; :color blue)
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and add a binding to the elfeed key map:
&lt;/p&gt;
&lt;p&gt;
#+BEGIN_SRC emacs-lisp
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package elfeed
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:bind (:map elfeed-search-mode-map
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;q&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; bjm/elfeed-save-db-and-bury)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Q&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; bjm/elfeed-save-db-and-bury)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; elfeed-toggle-star)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; elfeed-toggle-star)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;j&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; mz/hydra-elfeed/body)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;J&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; mz/hydra-elfeed/body)))

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;+End_SRC

This isn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&lt;/span&gt; the actual Hydra I use -- we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt; to that in the next
installment where I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll&lt;/span&gt; show how to make a Hydra on the fly that
contains keys for all your elfeed tags but this is a reasonable example.

Here&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s&lt;/span&gt; the video:

&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;+begin_export html
 &amp;lt;iframe width=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;560&amp;#34;&lt;/span&gt; height=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;315&amp;#34;&lt;/span&gt; src=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.youtube.com/embed/tjnK1rkO7RU&amp;#34;&lt;/span&gt; frameborder=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
 &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;+end_export html
 

Enjoy.
Relevant links:
&lt;span style=&#34;color:#a6e22e&#34;&gt;-&lt;/span&gt; Video series overview page:
&lt;span style=&#34;color:#a6e22e&#34;&gt;-&lt;/span&gt; http://cestlaz.github.io/stories/emacs
&lt;span style=&#34;color:#a6e22e&#34;&gt;-&lt;/span&gt; Code:
&lt;span style=&#34;color:#a6e22e&#34;&gt;-&lt;/span&gt; [[https://github.com/zamansky/using-emacs/tree/master][https://github.com/zamansky/using-emacs/tree/master]]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 29 -elfeed part 1</title>
      <link>https://cestlaz.github.io/posts/using-emacs-29-elfeed/</link>
      <pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-29-elfeed/</guid>
      <description>&lt;p&gt;
Since the demise of Google Reader, I&amp;#39;ve been using &lt;a href=&#34;http://feedly.com&#34;&gt;Feedly&lt;/a&gt; to read my
streams. Feedly&amp;#39;s a nice product and it&amp;#39;s been working well for me for
quite some time.
&lt;/p&gt;
&lt;p&gt;
A few days ago, I decided to see what emacs had to offer on the feed
reader front. One solution was Gnus but then I&amp;#39;ve never been able to
get my head around Gnus. Another was &lt;a href=&#34;https://github.com/skeeto/elfeed&#34;&gt;elfeed&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I thought I&amp;#39;d give elfeed a go.
&lt;/p&gt;
&lt;p&gt;
Combined with elfeed-goodies and elfeed-org it&amp;#39;s a pretty nice
solution. You can easily search by either keywords or tags and tags
are particularly easy to set up with elfeed-org.
&lt;/p&gt;
&lt;p&gt;
If I want to display all the items from the last month, I hit &lt;strong&gt;&lt;strong&gt;s&lt;/strong&gt;&lt;/strong&gt; (for
search) and enter the query:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;@6-months-ago&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
For only unread posts:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;@6-months-ago +unread&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
For unread posts tagged emacs:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;@6-months-ago +unread +emacs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And for everything in the past 24 hours, read or not:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;@1-day-ago&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s pretty easy and pretty slick. The only thing missing is easy
single key navigation. There&amp;#39;s one solution to that problem over at
&lt;a href=&#34;http://pragmaticemacs.com/emacs/read-your-rss-feeds-in-emacs-with-elfeed/&#34;&gt;Pragmatic Emacs&lt;/a&gt; and I&amp;#39;ll present another one in the next two posts.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m using some of the code from pragmatic emacs (the functions that start
with &lt;strong&gt;&lt;strong&gt;bjm&lt;/strong&gt;&lt;/strong&gt;) which makes things easier when sharing the elfeed
database on Dropbox (see the Pragmatic Emacs post above for details) and also a couple of routines I found via web
search).
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my basic configuration:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(setq elfeed-db-directory &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/shared/elfeeddb&amp;#34;&lt;/span&gt;)


(defun elfeed-mark-all-as-read ()
(interactive)
(mark-whole-buffer)
(elfeed-search-untag-all-unread))


&lt;span style=&#34;color:#75715e&#34;&gt;;;functions to support syncing .elfeed between machines&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;;;makes sure elfeed reads index from disk before launching&lt;/span&gt;
(defun bjm/elfeed-load-db-and-open ()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wrapper to load the elfeed db from disk before opening&amp;#34;&lt;/span&gt;
(interactive)
(elfeed-db-load)
(elfeed)
(elfeed-search-update--force))

&lt;span style=&#34;color:#75715e&#34;&gt;;;write to disk when quiting&lt;/span&gt;
(defun bjm/elfeed-save-db-and-bury ()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wrapper to save the elfeed db to disk before burying buffer&amp;#34;&lt;/span&gt;
(interactive)
(elfeed-db-save)
(quit-window))



(defalias &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;elfeed-toggle-star&lt;/span&gt;
(elfeed-expose &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;elfeed-search-toggle-all &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;star&lt;/span&gt;))

(use-package elfeed
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:bind (:map elfeed-search-mode-map
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;q&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; bjm/elfeed-save-db-and-bury)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Q&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; bjm/elfeed-save-db-and-bury)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; elfeed-toggle-star)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; elfeed-toggle-star)
)
)

(use-package elfeed-goodies
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(elfeed-goodies/setup))


(use-package elfeed-org
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(elfeed-org)
(setq rmh-elfeed-org-files (&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/shared/elfeed.org&amp;#34;&lt;/span&gt;)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Check out elfeed and make sure to go to the links provided on the main
&lt;a href=&#34;https://github.com/skeeto/elfeed&#34;&gt;elfeed&lt;/a&gt; page.
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/pOFqzK1Ymr4&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Enjoy.
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Quality Devs and Coding Contests</title>
      <link>https://cestlaz.github.io/posts/quality-devs-and-coding-contests/</link>
      <pubDate>Sun, 19 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/quality-devs-and-coding-contests/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been planning to put together a response to &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt;&amp;#39;s
recent post - &lt;a href=&#34;http://blog.acthompson.net/2017/02/software-developersquantity-vs-quality.html&#34;&gt;Software Developers - Quantity vs Quality&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
TL;DR, although it isn&amp;#39;t really long and I do encourage you to read
Alfred&amp;#39;s post: a couple of articles talk about how the U.S. has the most
people entering CS competitions like HackerRank but Americans are not
at the top of the leaderboard. does this mean that there&amp;#39;s less talent
in America? Does it even matter?
&lt;/p&gt;
&lt;p&gt;
Before getting to &amp;#34;does it matter,&amp;#34; I looked over at the Kaggle
leaderboards. Looking at their top 10, 2 were from the US - no other
country had more than 1. The 11th placing competitor was also from the
US and then 12 was from China, giving them 2 in the top 12.  I also
looked at recent &lt;a href=&#34;http://stats.ioinformatics.org/delegations/2016?sort=total_desc&#34;&gt;IOI results&lt;/a&gt; and a quick glance seems to indicate that
the USA seems to do reasonably well. In short, if you buy into ranking
a country by these types of individual results on specific
competitions then we&amp;#39;re doing fine.
&lt;/p&gt;
&lt;p&gt;
But, does filling the leaderboard mean a country&amp;#39;s producing the best
tech talent? Probably not.
&lt;/p&gt;
&lt;p&gt;
Coding competitions focus on a specific skill set. There are problem
solving aspects but they also require speed, knowledge of data
structures and algorithms, and, yes, even accurate, fast typing
skills. They also require you work alone. They don&amp;#39;t encourage well
designed, architected, or written code, working on existing code bases
or working with a team.
&lt;/p&gt;
&lt;p&gt;
Over the years, I&amp;#39;ve known some very smart and talented individuals
who&amp;#39;ve excelled at these types of competitions. If you extend the pool
to math and science competitions, I&amp;#39;ve known quite a few. These
individuals have by and large done well for themselves but as a group,
you couldn&amp;#39;t call them more successful than any other subset of my
former students. A number of them have gone on and are doing well as
professors or programmers but, by and large, they&amp;#39;re not the ones
who&amp;#39;ve gone on to found companies and provide jobs for scores or even
hundreds of other people and they&amp;#39;re not necessarily the ones who&amp;#39;ve
led teams that have developed major platforms and projects[fn::Some
are but probably a smaller percent from that group than from the
general pool.]
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t argue that people who populate competition leaderboards are
talented and a necessary part of our tech ecosystem but they&amp;#39;re only a
part. I probably want one of these programmers on my team, but not as
the entire team (see Fake Grimlock&amp;#39;s laws of startups - &lt;a href=&#34;http://www.builtinchicago.org/blog/secret-laws-startups-part-2-build-right-team&#34;&gt;law 9&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
&amp;lt;div align=&amp;#34;center&amp;#34;&amp;gt;
&amp;lt;a href=&amp;#34;&lt;a href=&#34;http://www.builtinchicago.org/blog/secret-laws-startups-part-2-build-right-team&#34;&gt;http://www.builtinchicago.org/blog/secret-laws-startups-part-2-build-right-team&lt;/a&gt;&amp;#34;&amp;gt;
&amp;lt;img width=&amp;#34;30%&amp;#34;,
src=&amp;#34;&lt;img src=&#34;http://media3.cdn.builtinchicago.org/sites/default/files/imagecache/Original/images/BATMAN-THEN-ROBIN.jpg&#34; alt=&#34;http://media3.cdn.builtinchicago.org/sites/default/files/imagecache/Original/images/BATMAN-THEN-ROBIN.jpg&#34; title=&#34;http://media3.cdn.builtinchicago.org/sites/default/files/imagecache/Original/images/BATMAN-THEN-ROBIN.jpg&#34; /&gt;&amp;#34;
/&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Competitive programming is a piece of the puzzle as competitive
programmers are a part of the population. So are project based events
like &lt;a href=&#34;https://dreamitcodeitwinit.wordpress.com/&#34;&gt;Dream it. Code it. Win it.&lt;/a&gt;, science fairs, and hackathons, which
can be either cooperative, competitive, or a combination.
&lt;/p&gt;
&lt;p&gt;
What do we want? Balance. I think the Stuy program does it pretty
well. StuyCS graduates who wish to take part in coding competitions
can do so but if they want to excel at it, they have to work at it on
their own time. At the same time, the students learn how to work in
teams and take a project from idea to delivery all the while learning
some good academic CS and software engineering practices. They&amp;#39;ll
learn more in college on the academic side and the rest on the
job. I&amp;#39;d love to see better balance in the colleges between CS
programs preparing kids for graduate programs and CS programs that
prepare kids for industry. I&amp;#39;d also love to see CS minors that were
more targeted towards CS+X rather than half of a CS major targeting
students going to grad schools.
&lt;/p&gt;
&lt;p&gt;
I also think there&amp;#39;s a tremendous opportunity for community colleges
to fill the role currently occupied by code schools. They could more
easily strike a balance between academic depth and practical
preparation.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m working on building Hunter College&amp;#39;s honors CS program and while I
can&amp;#39;t move the Hunter curriculum, I&amp;#39;m seeking that balance in my own
way.
&lt;/p&gt;
&lt;p&gt;
Will we get there? I don&amp;#39;t know. Given the way education works, I
figure at some point people will decide that we have to have more of a
presence on the CS leaderboards and we&amp;#39;ll see programs pop up with
that in mind. I have no doubt that when that happens, we&amp;#39;ll see many
more Americans near the top. We have a large enough population that
talent shouldn&amp;#39;t be in question. This will be great for students to
whom these competitions attract. It won&amp;#39;t do much, however for the
rest of the students. I&amp;#39;m not really concerned one way or
another. Unlike math, where there&amp;#39;s a natural progression through K12
math classes with math team and math competitions being a natural add
on, the driving forces in CS - be they from industry, government, or
academia don&amp;#39;t seem to have partaken in any code competition Kool-Aid
so code competitions won&amp;#39;t become a driving force in CS ed any time
soon.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Starting with scheme</title>
      <link>https://cestlaz.github.io/posts/staring-with-scheme/</link>
      <pubDate>Wed, 15 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/staring-with-scheme/</guid>
      <description>&lt;p&gt;
Scheme is one of the languages used in Stuy&amp;#39;s intro CS course. Like
any other language, there are pros and cons of using it to introduce
students to CS. Here are some of the reasons why I like Scheme as a
first language and why despite that,  I don&amp;#39;t recommend it in many
cases.
&lt;/p&gt;
&lt;p&gt;
Scheme certainly isn&amp;#39;t mainstream. That&amp;#39;s not the main reason why I
like it but it is a side benefit. It&amp;#39;s less likely kids come into
class knowing it which creates a level playing field. The few times
I&amp;#39;ve had a student with a background in Scheme, they&amp;#39;ve been good,
helpful kids rather than ones that tried to show off and dominate the
class.
&lt;/p&gt;
&lt;p&gt;
I like scheme because it&amp;#39;s simple. It looks different than other
languages but is &lt;code&gt;(+ 3 4)&lt;/code&gt; really that different than &lt;code&gt;add(3,4)&lt;/code&gt; or
&lt;code&gt;3+4&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
We can tell kids &amp;#34;everything&amp;#39;s a function.&amp;#34; While technically not
true, and I tell my students that it isn&amp;#39;t, it&amp;#39;s close enough for our
purposes. Everything&amp;#39;s a function and the way we write a function is:
&lt;/p&gt;
&lt;div class=&#34;src src-scheme&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt; a b &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Apply function &lt;strong&gt;&lt;strong&gt;f&lt;/strong&gt;&lt;/strong&gt; on arguments &lt;strong&gt;&lt;strong&gt;b c …&lt;/strong&gt;&lt;/strong&gt;. So we have &lt;code&gt;(+ 2 3)&lt;/code&gt; to
add 2 and 3, &lt;code&gt;(and a b)&lt;/code&gt; for logical and &lt;code&gt;(= 3 4)&lt;/code&gt; to test to see if 3
is equal to 4, etc. We also have the same basic notation for things
like conditionals. In java, we might write:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In scheme, it would be:
&lt;/p&gt;
&lt;div class=&#34;src src-scheme&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(&amp;gt; a &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Even though we&amp;#39;re fudging the rules, we can lay out a handful of rules
for the kids such as lambda and define follow a similar form to create and
name functions:
&lt;/p&gt;
&lt;div class=&#34;src src-scheme&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;define &lt;/span&gt;add2 (&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; b) (+ a b)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
where &lt;code&gt;(lambda (a b) (+ a b))&lt;/code&gt; returns a function that adds &lt;strong&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/strong&gt; and
&lt;strong&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/strong&gt; and &lt;code&gt;define&lt;/code&gt; associates it with the identifier &lt;strong&gt;&lt;strong&gt;add2&lt;/strong&gt;&lt;/strong&gt;. Now we
can use the function: &lt;code&gt;(add2 5 10)&lt;/code&gt; which evaluates to 15.
&lt;/p&gt;
&lt;p&gt;
With lambda, define, if, and a few more basics, it&amp;#39;s off to the
races. The simple, consistent syntax makes things easy for the kids
and the constrained tool set lets us focus their way of thinking.
&lt;/p&gt;
&lt;p&gt;
Of course this wouldn&amp;#39;t work had DrScheme (now &lt;a href=&#34;https://racket-lang.org/&#34;&gt;Racket&lt;/a&gt;) not
existed. That gave us a nice learning IDE to work in.
&lt;/p&gt;
&lt;p&gt;
Using Scheme, we can not only cover the basics like conditionals,
abstraction and such but also deeper concepts like recursion, map,
filter, and reduce. When we move on from Scheme, the kids also have a
frame of reference for all the other languages and paradigms they use.
&lt;/p&gt;
&lt;p&gt;
There are downsides, however. Outside help is harder to come by and
there is some pushback from parents and it isn&amp;#39;t as pretty and flashy
as some other tool-sets. Scheme worked at Stuy for a number of
reasons. When I created the class that used it, there were no good
pre-AP classes in the school and I had a pretty good reputation as a
teacher. The class also used multiple tools with &lt;a href=&#34;https://ccl.northwestern.edu/netlogo/&#34;&gt;NetLogo&lt;/a&gt; being the
primary other one and tackled a variety of CS and non CS topics.
First time through, reputation and buzz filled the classes and after
that, the class developed a solid enough reputation to fill itself.
&lt;/p&gt;
&lt;p&gt;
It also didn&amp;#39;t hurt that our program developed from the inside
out. First, we had APCS-AB on the books as a junior year course, then
I added our post AP senior year electives. Since it was easy to show
what the kids were already graduating with, it was easy to diffuse any
pushback from not using mainstream tools in the first class.
&lt;/p&gt;
&lt;p&gt;
Scheme worked at Stuy and I feel that it still does. Would I use
Scheme for a first experience in a drop in program at an after-school
where kids might not come back if they don&amp;#39;t get to a payoff
immediately? Probably not. Would I recommend it at a school where I
want to integrate CS with some of the other subjects quickly, again,
probably not (except for integration with algebra where &lt;a href=&#34;http://www.bootstrapworld.org/&#34;&gt;Bootstrapworld&lt;/a&gt;
is a terrific program).
&lt;/p&gt;
&lt;p&gt;
In any event, if you&amp;#39;re a high school CS teacher and  haven&amp;#39;t played
with scheme  or some other functional language, I highly recommend
it - you might not actually ever teach it or use it but it can really
help develop you as a programmer and an educator.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Selecting a starting language - why not Javascript</title>
      <link>https://cestlaz.github.io/posts/starting-with-js/</link>
      <pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/starting-with-js/</guid>
      <description>&lt;p&gt;
I was catching up with the team at Stuy the other day and they
mentioned that they were periodically getting pushback on their choice
of languages, particularly in the intro class. The pushback was mostly
in the form of &amp;#34;why don&amp;#39;t you start them with Javascript?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Back in the day, when I created our intro class where we use Scheme,
NetLogo and then later Python, I&amp;#39;d get similar pushback but then it
was &amp;#34;why not Java?&amp;#34;, &amp;#34;why not C?&amp;#34;, or &amp;#34;whu not C++?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
We had a good discussion on this and I shared my thoughts as to why I
don&amp;#39;t like Javascript as a first language and I thought I&amp;#39;d share some
of them here. I&amp;#39;ll try to get around to the rationale behind Scheme
and NetLogo in a later post.
&lt;/p&gt;
&lt;p&gt;
To start, let me say that I &lt;strong&gt;&lt;strong&gt;Love&lt;/strong&gt;&lt;/strong&gt; Javascript -
particularly when approaching it as a functional language. I also
think every school and situation is different so there are likely
times when Javascript is the right beginner language for the job.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s dive in.
&lt;/p&gt;
&lt;p&gt;
Why are some of the pluses for Javascript as an intro language.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Ubiquity and availability:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If you have a browser, you have Javascript - it&amp;#39;s also available
through online IDEs and online lightweight sites like &lt;a href=&#34;https://jsfiddle.net/&#34;&gt;JSFiddle&lt;/a&gt;.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Interactivity:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
You can tweak websites almost live, use the HTML5 canvas pretty
interactively and mode
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s mainstream
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s quick to get up and running
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
This is all true, but there are also downsides.
&lt;/p&gt;
&lt;p&gt;
One of my big problems with Javascript is the lack of simple solid
educational tooling. I love to use tools like &lt;a href=&#34;http://www.drjava.org/&#34;&gt;DrJava&lt;/a&gt;, &lt;a href=&#34;http://drpython.sourceforge.net/&#34;&gt;DrPython&lt;/a&gt;, and
&lt;a href=&#34;https://racket-lang.org/&#34;&gt;Racket&lt;/a&gt; (formerly DrScheme) with beginners. All simple learning
IDEs. True, you can use a simple online IDE but I haven&amp;#39;t found them
to have as strong a learning interface. They also, generally, keep you
in an oversimplified programming sandbox. There&amp;#39;s no clean transition
from the sandbox to the real deal - particularly given the non-trivial
state of js build tools and environments. These simple learning IDEs
set the stage and then we can transition to more powerful development environments.
&lt;/p&gt;
&lt;p&gt;
I also prefer, where possible, to have kids learn locally so that they
can learn something about the underlying operating system even if
only at a user level.
&lt;/p&gt;
&lt;p&gt;
A problem relating to the lack of tooling is the fact that a JS
program can fail to run and not give you any meaningful feedback at
all - this is a problem for a beginner.
&lt;/p&gt;
&lt;p&gt;
Javascript also has all sorts of wonkiness. We have &lt;code&gt;=&lt;/code&gt;, and &lt;code&gt;==&lt;/code&gt;
which is pretty conventional, but then there&amp;#39;s also &lt;code&gt;===&lt;/code&gt;. We have
potentially confusing scoping issues and also some other real
weirdness:
&lt;/p&gt;
&lt;div class=&#34;src src-js&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
For more, check out the this &lt;a href=&#34;https://www.destroyallsoftware.com/talks/wat&#34;&gt;video&lt;/a&gt;. Start watching at about 1:20 -
it&amp;#39;s a riot.
&lt;/p&gt;
&lt;p&gt;
All of this weirdness actually makes sense - just not to a beginner.
&lt;/p&gt;
&lt;p&gt;
Javascript also gives plenty of freedom - there are many ways to do
things. This can be great for the developer but not necessarily ideal
for the learner. Loops, recursion, mapping functions - you name it,
Javascript&amp;#39;s got it. I like simpler languages for beginners because
it&amp;#39;s easier to get them thinking and problem solving in certain ways
when there tool set is somewhat restricted (more on that when I write
about Scheme).
&lt;/p&gt;
&lt;p&gt;
Finally, the fact that Javascript&amp;#39;s a mainstream language can be a
minus. Given its popularity, a beginner class could have at  least a
few kid who&amp;#39;ve at least played with the language. This can lead them
to think they know more than they do and more importantly, this can
be intimidating to the real newbies who develop the impression that
&amp;#34;everyone knows this but me.&amp;#34; A less mainstream language puts everyone
on a level playing field.
&lt;/p&gt;
&lt;p&gt;
Let me say again that I love javascript as a language and before a
student graduates Stuy they can learn all about Javascript, front end
development, some functional programming, and more. It&amp;#39;s just not the
right language to start with - at least not at Stuy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 28 -Rectangles</title>
      <link>https://cestlaz.github.io/posts/using-emacs-28-rectangles/</link>
      <pubDate>Thu, 09 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-28-rectangles/</guid>
      <description>&lt;p&gt;
One of my favorite but little used emacs features is rectangular
editing. It&amp;#39;s little used because I don&amp;#39;t need it all that often. It&amp;#39;s
one of my favorites because when I do need it, it&amp;#39;s just so amazingly
useful.
&lt;/p&gt;
&lt;p&gt;
The idea is you can mark a rectangle of text, cut it and later paste
it.  This means that if you have three columns of text:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
a b c
d e f
g h i
j k l
&lt;/pre&gt;
&lt;p&gt;
You can easily mark the middle column (b e h k) or even just the b e
and h, cut it and paste it elsewhere as a rectangle. You can also open
up a rectangular region (filled with whitespace). There are a couple
of other niceties but that&amp;#39;s the basic idea.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a link to all the functions:
&lt;/p&gt;
&lt;p&gt;
https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html
&lt;/p&gt;
&lt;p&gt;
And the video:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/pcA5NeEudgU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Enjoy.
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A Ground Hog Day Story</title>
      <link>https://cestlaz.github.io/posts/ground-hog-day/</link>
      <pubDate>Tue, 07 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ground-hog-day/</guid>
      <description>
&lt;p&gt;
This post has nothing to do with computer science, teaching,
education, policy or any of the other typical Cestlaz topics.
&lt;/p&gt;
&lt;p&gt;
Natan wrote this last week and it really gave me a chuckle.
&lt;/p&gt;
&lt;p&gt;
I thought some of you might enjoy it so here it is:
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
UPDATE
&lt;/h2&gt;
&lt;p&gt;
Apparently, if you view this on mobile it asks if you want to download
the story every time so I changed it from an inline iframe to a link:
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/ghogday.pdf&#34;&gt;Link to the story&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should CS Ed be in bed with the College Board</title>
      <link>https://cestlaz.github.io/posts/cs-ed-in-bed-college-board/</link>
      <pubDate>Sat, 04 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cs-ed-in-bed-college-board/</guid>
      <description>&lt;p&gt;
I&amp;#39;m guessing my views  on this aren&amp;#39;t very popular -that&amp;#39;s OK, every
community needs a curmudgeon.
&lt;/p&gt;
&lt;p&gt;
A few years ago, I cautioned if we weren&amp;#39;t careful, once the big
players got involved, CS Ed would go the way of other disciplines, and
not in a good way. It looks like indeed we&amp;#39;re well on our way down
that road.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve ranted before about things like non-profits, drop in and summer
programs. &lt;a href=&#34;https://cestlaz.github.io/posts/2015-05-07-learning-takes-time.html/#.WJXSS99vHmE&#34;&gt;STEM Oil Salesmen&lt;/a&gt; &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
selling easy fixes, exciting kids and parents, using the Think Method
just like Professor Harold Hill only to send the kids off where they
can blame a future teacher for failure.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also ranted about teacher preparation and how all the rage is
short term, &lt;a href=&#34;https://cestlaz.github.io/posts/scotland/#.WJXT999vHmE&#34;&gt;Superficial PD and scripted curricula&lt;/a&gt;  and my concern that
once the politicians can say CS is in the schools, &lt;a href=&#34;https://cestlaz.github.io/posts/2015-03-04-expedient-vs-good.html/#.WJXT7d9vHmE&#34;&gt;we&amp;#39;ll be done&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been working towards getting CS to all students for most of my
career and while it&amp;#39;s wonderful to see us getting closer to the goal,
I&amp;#39;m seeing more and more signs that my caution is becoming
reality. and CS Ed is going the way of other Ed - aligned to testing
and more to the whims of the power players and politicians than to
teachers and students.
&lt;/p&gt;
&lt;p&gt;
The other week I noticed, &lt;a href=&#34;http://teacherblog.code.org/post/156278055294/ap-cs-principles-could-make-history-how-can-we&#34;&gt;this post&lt;/a&gt; by Code.org trying to encourage
more students to take the APCSP exam - not encourage more students
take the class or some other class or to have more students be exposed
to CS but to actually sit for the APCSP exam. That post was followed
by &lt;a href=&#34;http://teacherblog.code.org/post/156689658029/ask-your-cs-principles-students-to-star-in-our&#34;&gt;this one&lt;/a&gt; which also highlights actually taking the exam.
&lt;/p&gt;
&lt;p&gt;
This didn&amp;#39;t sit well with me.
&lt;/p&gt;
&lt;p&gt;
What does the exam do for the kid? It doesn&amp;#39;t drive instruction - by
that time, any good teacher knows their student and is better served
by using their own &lt;a href=&#34;https://cestlaz.github.io/posts/ap-we-dont-trust-teachers/#.WJXbA99vHmE&#34;&gt;assessments&lt;/a&gt;. The college credit thing? I&amp;#39;m
skeptical. Fewer and fewer schools are giving credit for APCSA let
alone this new CS0 non major course. Blanket credit? Since full time
students pay for a range of credits, I&amp;#39;m still skeptical
here. Placement? It&amp;#39;s a course for non-majors - what exactly are you
placing out of?
&lt;/p&gt;
&lt;p&gt;
Reasons not to take the exam?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
If it doesn&amp;#39;t do anything for the kid, why take it
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Stress of taking the exam
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
There are other ways of placing out of courses once in college
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Save the expense
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
As a general rule, I&amp;#39;m against forcing students to sit for
AP exams. At the extreme case, since we&amp;#39;ve been brainwashed to think
that a school that has lots of kids sitting for exams is good, I&amp;#39;ve
seen at least one case of a principal having all his kids sit for, and
just about all &lt;strong&gt;&lt;strong&gt;fail&lt;/strong&gt;&lt;/strong&gt; AP Calculus - that is, get a 1 or 2 on the exam. This
principal had all his students take the exam, and only 2 scores were 3
or higher. This principal then parlayed his success into a higher
profile gig - he&amp;#39;s moved up in the world while setting up his students
to fail.
&lt;/p&gt;
&lt;p&gt;
This follows last year&amp;#39;s announcement that code.org was &lt;a href=&#34;https://cestlaz.github.io/posts/2015-05-19-code-org-college-board.html/#.WJXbm99vHmE&#34;&gt;partnering with
the College Board&lt;/a&gt; - offering PD to teachers for free if the schools
signed up their students for the PSAT 8/9 - another meaningless
exam. So, we get teacher training light [fn::If you think that PD based
teacher training is OK, ask yourself if you want your own child&amp;#39;s
chemistry teacher to be a history teacher with a few weeks summer
training in chemistry] as long as the school pays for
the PSAT8/9 for every kid so that the kid can take yet another test
with really no value[fn::And I&amp;#39;m guessing the exam will be offered
during the day so teachers will proctor for free rather than be
allowed to, you know, teach their students.].
&lt;/p&gt;
&lt;p&gt;
Why should students pay for an AP exam that doesn&amp;#39;t do anything for
them? Why should Jane Q Taxpayer pay for exams that only server to
enrich the College Board.
&lt;/p&gt;
&lt;p&gt;
True, The College Board is a big player. They already have much more
influence of American High School education than they should. It&amp;#39;s
easy to climb on board the AP train for entre into our schools. The
question is, should we use positions of influence to push efforts that
might help our end but leave collateral damage to students and the public.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t doubt code.org&amp;#39;s sincerity in wanting good CS in all schools
nor the efforts or value as an advocate for CS Education. I&amp;#39;m
concerned that the desire to win big and win now is moving us in a
direction that we&amp;#39;ll regret years from now.
&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
Not my term, but I really like it
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>It&#39;s not one issue, it&#39;s the President and his enablers</title>
      <link>https://cestlaz.github.io/posts/trump-issues/</link>
      <pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/trump-issues/</guid>
      <description>&lt;p&gt;
Like many of my fellow bloggers and tweeters, I generally keep this
site clear of political issues with the exception of those that are
directly related to education.
&lt;/p&gt;
&lt;p&gt;
Also, like many of my fellow bloggers and tweeters, this week has
provided a reason to break with that tradition.
&lt;/p&gt;
&lt;p&gt;
Many people, including some friends, all more eloquent than I have
already posted, tweeted, and Facebooked  about the behavior of our
President and government.
&lt;/p&gt;
&lt;p&gt;
Long time blogger &lt;a href=&#34;https://twitter.com/davewiner&#34;&gt;Dave Winer&lt;/a&gt; put together &lt;a href=&#34;http://trumpstatus.org/&#34;&gt;trumpstatus.org&lt;/a&gt; where he&amp;#39;s
collecting many of the issues that we&amp;#39;re all so alarmed with.
&lt;/p&gt;
&lt;p&gt;
I would add cabinet appointments to his list with my particular
personal concern over DeVos and the department of education. I&amp;#39;ve been
meaning to blog about that for a while - perhaps this week.
&lt;/p&gt;
&lt;p&gt;
My concern for today is something else. Every day, I see a new Trump
induced crisis and every day I see a different subset of my circles
respond. It&amp;#39;s not quite as bad as:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
First they came for the Socialists, and I did not speak out—
Because I was not a Socialist.
&lt;/p&gt;
&lt;p&gt;
Then they came for the Trade Unionists, and I did not speak out—
Because I was not a Trade Unionist.
&lt;/p&gt;
&lt;p&gt;
Then they came for the Jews, and I did not speak out—
Because I was not a Jew.
&lt;/p&gt;
&lt;p&gt;
Then they came for me—and there was no one left to speak for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
People are indeed speaking out, but I am concerned that people
are going to rise up for their personal issue and when placated go
back to business as usual - this is &lt;strong&gt;&lt;strong&gt;NOT&lt;/strong&gt;&lt;/strong&gt; the time for business as
usual.
&lt;/p&gt;
&lt;p&gt;
With the ACA repeal, I saw concerns from my working class friends and
friends that work with lower earning populations.
&lt;/p&gt;
&lt;p&gt;
Going into the DeVos hearing, mostly educators - real educators not
astroturf reformers.
&lt;/p&gt;
&lt;p&gt;
With Friday&amp;#39;s order, the whole tech community came out.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s part of a thread by tech activist &lt;a href=&#34;https://twitter.com/anildash&#34;&gt;Anil Dash&lt;/a&gt; calling out,
calling on, and crediting assorted tech players.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;When net neutrality was the issue, Google, Twitter, Wikipedia, Reddit, Tumblr, etc. had a blackout, and it worked. This is far more grave.&lt;/p&gt;&amp;mdash; Anil Dash (@anildash) &lt;a href=&#34;https://twitter.com/anildash/status/825414889908928517&#34;&gt;January 28, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A powerful, straightforward statement from the CEO of Box — another publicly-traded company. &lt;a href=&#34;https://t.co/wz5mQmTh6P&#34;&gt;https://t.co/wz5mQmTh6P&lt;/a&gt;&lt;/p&gt;&amp;mdash; Anil Dash (@anildash) &lt;a href=&#34;https://twitter.com/anildash/status/825470308463280130&#34;&gt;January 28, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
We have to remember that all these order, policies, appointments, and
plans are coming from the same place - Donald Trump and those
politicians that are enabling him.
&lt;/p&gt;
&lt;p&gt;
If he backs off on immigration, education issues remain, if he backs
off there, we still have ACA, if that eases up, what about Women&amp;#39;s
rights and on and on.
&lt;/p&gt;
&lt;p&gt;
This means we all have to get involved and stay involved.
&lt;/p&gt;
&lt;p&gt;
What have I been doing?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
I finally joined the ACLU and set up a monthly donation.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
I subscribed to &lt;a href=&#34;https://dailyaction.org&#34;&gt;Daily Action&lt;/a&gt; so that I get a reminder each day of
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
someone I can call to make a difference.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
I&amp;#39;m starting to accumulate my representatives phone numbers as I
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
make those calls and am trying to make at least a call a day to
remind our representatives who they work for.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Education and advocacy
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
And if you suggestions for me - please post them here.
&lt;/p&gt;
&lt;p&gt;
Thus ends my not business as usual post. What&amp;#39;s going on in America is
not someone else&amp;#39;s problem - it&amp;#39;s all of our problem and we all have
to be active and vigilant to make it through tough times to come.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 27 - shell and eshell</title>
      <link>https://cestlaz.github.io/posts/using-emacs-27-shell/</link>
      <pubDate>Fri, 27 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-27-shell/</guid>
      <description>&lt;p&gt;
While I use emacs for all all sorts of things, one of the things I
haven&amp;#39;t done much is run shells from within emacs. I&amp;#39;m not sure
why. I&amp;#39;m a command line wonk and adding command line goodness and
emacs together seems like a natural. Maybe it&amp;#39;s because back in the
day I spent a lot of time on MS-DOS systems. You could get a
reasonable Unixy facsimile using tools like the &lt;a href=&#34;https://en.wikipedia.org/wiki/MKS_Toolkit&#34;&gt;MKS toolkit&lt;/a&gt; and I like
so many other young computer scientists wrote our own small shells
when we learned C so I used that insted of command.com.
&lt;/p&gt;
&lt;p&gt;
In any event, I&amp;#39;m trying to use the shell within emacs more.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a quick video showing both &lt;strong&gt;&lt;strong&gt;shell&lt;/strong&gt;&lt;/strong&gt;, which runs whatever your
default shell is in an emacs buffer and &lt;strong&gt;&lt;strong&gt;eshell&lt;/strong&gt;&lt;/strong&gt; which is emacs own
shell.
&lt;/p&gt;
&lt;p&gt;
I use a couple of packages to smooth over a couple of things.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/porterjamesj/virtualenvwrapper.el&#34;&gt;Virtuelenvwrapper&lt;/a&gt; smooths things voer with the python virtaulenv and
virtualenvwrapper linux packages:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package virtualenvwrapper
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(venv-initialize-interactive-shells)
(venv-initialize-eshell))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Only relevant if you use Python and virtualenvs.
&lt;/p&gt;
&lt;p&gt;
and more importantly, &lt;a href=&#34;https://github.com/killdash9/better-shell&#34;&gt;better shell&lt;/a&gt;:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package better-shell
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:bind ((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; better-shell-shell)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; better-shell-remote-open)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
cleans things up when using a termianl to connect to a remote machine.
&lt;/p&gt;
&lt;p&gt;
If you use a shell from within emacs as part of your workflow, please
post how, or better, make a video!!!!
&lt;/p&gt;
&lt;p&gt;
Enjoy
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/pjhRFMUxBB4&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Essential topics for an intro course (not)</title>
      <link>https://cestlaz.github.io/posts/essentials-for-an-intro-course/</link>
      <pubDate>Mon, 09 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/essentials-for-an-intro-course/</guid>
      <description>&lt;p&gt;
What essential topics should we teach in our intro courses? This seems
to be a recurring topic recently.
&lt;/p&gt;
&lt;p&gt;
It can be an important topic but, unfortunately, too often, it seems
that people have too myopic a view
&lt;/p&gt;
&lt;p&gt;
I remember thinking about this years ago when APCS moved from C++ to
Java. Both languages have good and bad points both for practical and
educational use. A big loss in the move to Java was memory management
and the topics you could cover when memory issues arose.
&lt;/p&gt;
&lt;p&gt;
Of course one might say that memory management shouldn&amp;#39;t be in the
first year of CS. That&amp;#39;s fine, as long as you put it back in somewhere
later on - something that didn&amp;#39;t seem to happen universally.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the myopic view - far too few look at the overall picture.
&lt;/p&gt;
&lt;p&gt;
C++ to Java ended up in removing a topic. I&amp;#39;ve also seen the reverse.
I was talking to a friend about intro topics. He told me that it was
critical to cover (insert topic here) in an intro course. Why, I
asked? Because the kids absolutely needed to know that material in the
third year course he was teaching.
&lt;/p&gt;
&lt;p&gt;
I pressed a bit – &amp;#34;how many kids actually remember (insert topic
here) and do you have to reteach anything.&amp;#34; The answer - pretty much
no one remembered and he always retaught the subject.
&lt;/p&gt;
&lt;p&gt;
Did this mean that no one taught the topic in the earlier class?
Unlikely. More likely is that the topic was taught without purpose or
context, just because it was supposed to be taught and thus the
knowledge wasn&amp;#39;t retained. Sounds to me like the topic wasn&amp;#39;t in the
right place to begin with. Maybe it should have just been taught in
that 300 level course to begin with.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://twitter.com/alfredtwo?ref_src=twsrc%255Etfw&#34;&gt;Alfred Thompson&lt;/a&gt; wrote a post earlier today asking about &lt;a href=&#34;http://blog.acthompson.net/2017/01/how-important-are-number-bases-for-pre.html&#34;&gt;teaching
number bases&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Is it important? Maybe. Is it essential for an intro course? Probably
not.
&lt;/p&gt;
&lt;p&gt;
Binary makes sense when you start talking about low level stuff. If
your intro course never gets close to the machine then why muddy the water
with a topic that&amp;#39;s out of place. The topic probably won&amp;#39;t be
appreciated and retention and understanding will be low.
&lt;/p&gt;
&lt;p&gt;
If your intro course gets close to the machine or if you decide to
talk about compiled code or similar topics, you have an entre to talk
binary which leads to the convenience of hexadecimal. At Stuyvesant,
it was much more sensible to talk about number bases in our systems
course when we looked at C code in a debugger rather than in our intro
our AP course.
&lt;/p&gt;
&lt;p&gt;
You also might work on some application where bitmaps or similar as
useful. That might be another good time to talk about number bases.
&lt;/p&gt;
&lt;p&gt;
Is it important for a CS person to understand binary and it&amp;#39;s relation
to digital computers? Certainly. Does it have to be studied day one?
Certainly not.
&lt;/p&gt;
&lt;p&gt;
We need to keep an eye on the big picture. You can&amp;#39;t get everything
into a single class or a single yea. The question to ask is - do our students know what they have to by the time they
leave our charge?
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 26 - Google Calendar, Org Agenda</title>
      <link>https://cestlaz.github.io/posts/using-emacs-26-gcal/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-26-gcal/</guid>
      <description>&lt;p&gt;
A while ago I did a couple of videos on how I use org-capture
(&lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-23-capture-1/&#34;&gt;part 1&lt;/a&gt;, &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-24-capture-2/&#34;&gt;part 2&lt;/a&gt;). I didn&amp;#39;t get into a big part of org-capture - how I
use org-mode and capture to manage my calendar and todo lists.
&lt;/p&gt;
&lt;p&gt;
I was waiting to see if I liked my current setup - using &lt;a href=&#34;https://github.com/myuhe/org-gcal.el&#34;&gt;org-gcal&lt;/a&gt; to
sync with my Google Calendar for appointments while using my main org
file for my todo list.
&lt;/p&gt;
&lt;p&gt;
Coincidentally, Rainer König recently put up a video on how he &lt;a href=&#34;https://www.youtube.com/watch?v=cIzzjSaq2N8&amp;amp;amp;list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE&amp;amp;amp;index=33&#34;&gt;syncs
with his Google calendar&lt;/a&gt;. He uses a different method than the one I
present in this video so make sure to check out his approach. In fact,
you should check out his entire &lt;a href=&#34;https://www.youtube.com/playlist?list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE&#34;&gt;series on org-mode&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the code I use install org-gcal. The video steps through
setting up things on the Google side. You&amp;#39;ll have to replace the
&lt;strong&gt;&lt;strong&gt;client ID&lt;/strong&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;strong&gt;client secrets&lt;/strong&gt;&lt;/strong&gt; in the code below as well as use
your calendar name and whatever org file you want to sync with.
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(setq package-check-signature &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;)


(use-package org-gcal
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(setq org-gcal-client-id &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;oauth 2.0 client ID&amp;#34;&lt;/span&gt;
org-gcal-client-secret &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;client secret&amp;#34;&lt;/span&gt;
org-gcal-file-alist &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zamansky@gmail.com&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/gcal.org&amp;#34;&lt;/span&gt;))))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I use these two hooks to sync things semi-automatically. The first
hook syncs whenever I load the agenda. Since this happens in the
background, if I just added something to my calendar, I might have to
reload the agenda by hitting &lt;strong&gt;&lt;strong&gt;r&lt;/strong&gt;&lt;/strong&gt; in the agenda view.
&lt;/p&gt;
&lt;p&gt;
The second hook syncs with my Google calendar when I capture.
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-agenda-mode-hook&lt;/span&gt; (lambda () (org-gcal-sync) ))
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-capture-after-finalize-hook&lt;/span&gt; (lambda () (org-gcal-sync) ))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here are the rest of my settings. The org files I want to include in
my agenda views:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
gcal.org – the one I&amp;#39;m syncing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
i.org – my main org file for todo items (the todo capture places
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
things in here)
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
schedule.org – my old schedule before I was syncing with
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Google. Not active anymore. I should probably remove it.
&lt;/p&gt;
&lt;p&gt;
Also, my capture settings:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(setq org-agenda-files (&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/gcal.org&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/i.org&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/schedule.org&amp;#34;&lt;/span&gt;))


(setq org-capture-templates
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Appointment&amp;#34;&lt;/span&gt; entry (file  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/gcal.org&amp;#34;&lt;/span&gt; )
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\n\n%^T\n\n:PROPERTIES:\n\n:END:\n\n&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;l&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Link&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/links.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Links&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %? %^L %^g \n%T&amp;#34;&lt;/span&gt; :prepend &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog idea&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/i.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog Topics:&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\n%T&amp;#34;&lt;/span&gt; :prepend &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;To Do Item&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/i.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;To Do&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* TODO %?\n%u&amp;#34;&lt;/span&gt; :prepend &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Note&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/i.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Note space&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\n%u&amp;#34;&lt;/span&gt; :prepend &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;j&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Journal&amp;#34;&lt;/span&gt; entry (file+datetree &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/journal.org&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\nEntered on %U\n  %i\n  %a&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Screencast&amp;#34;&lt;/span&gt; entry (file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/screencastnotes.org&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\n%i\n&amp;#34;&lt;/span&gt;)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The end result is that I can add an event in my Google calendar (or
accept a calendar invite) and it appears in my org-mode
agenda. Likewise, I can add a scheduled event using capture and it
will sync up to Google. I can also just add an event by editing
gcal.org but then would have to run &lt;strong&gt;&lt;strong&gt;org-gcal-post-at-point&lt;/strong&gt;&lt;/strong&gt; to send
it up to Google.
&lt;/p&gt;
&lt;p&gt;
Now, I can use bring up a regular agenda &lt;strong&gt;&lt;strong&gt;C-a a&lt;/strong&gt;&lt;/strong&gt;, my todo list &lt;strong&gt;&lt;strong&gt;C-a
t&lt;/strong&gt;&lt;/strong&gt; or by adding a custom agenda command:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(setq org-agenda-custom-commands
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Simple agenda view&amp;#34;&lt;/span&gt;
((agenda &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
(alltodo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)))))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
a combined agenda and todo view using &lt;strong&gt;&lt;strong&gt;C-a n&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, there&amp;#39;s &lt;a href=&#34;https://github.com/kiwanami/emacs-calfw&#34;&gt;calfw&lt;/a&gt;. It&amp;#39;s a nice tool to view calendars in
Google. I don&amp;#39;t use it much anymore but it is nice:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package calfw
:ensure &lt;span style=&#34;color:#75715e&#34;&gt;;TODO:&lt;/span&gt;
:config
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;calfw&lt;/span&gt;)
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;calfw-org&lt;/span&gt;)
(setq cfw:org-overwrite-default-keybinding &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;calfw-ical&lt;/span&gt;)

(defun mycalendar ()
(interactive)
(cfw:open-calendar-buffer
:contents-sources
(&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;;; (cfw:org-create-source &amp;#34;Green&amp;#34;)  ; orgmode source&lt;/span&gt;
(cfw:ical-create-source &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcal&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://somecalnedaraddress&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IndianRed&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; devorah calender&lt;/span&gt;
(cfw:ical-create-source &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcal&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://anothercalendaraddress&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IndianRed&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;; google calendar ICS&lt;/span&gt;
)))
(setq cfw:org-overwrite-default-keybinding &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;))

(use-package calfw-gcal
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;calfw-gcal&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
&lt;p&gt;
Better version:
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vO_RF2dK7M0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Old, bad version:
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/RyNBtfu9AJ4&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>BS? - BA - addendum</title>
      <link>https://cestlaz.github.io/posts/ba-bs2/</link>
      <pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ba-bs2/</guid>
      <description>
&lt;p&gt;
Over on Facebook, a friend commented on my last post. He commented on
the rigor of BA vs BS degrees. The comment mentioned Physics and Math
degrees but I thought Id follow up a bit on CS degrees.
&lt;/p&gt;
&lt;p&gt;
I took a quick look at three computer science programs - Cornell,
UMich, and Queens College. Cornell because my daughter is there,
UMich, my son, and Queens College because it&amp;#39;s a CUNY college that
offers both a BS and a BA in computer science.
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
Cornell
&lt;/h3&gt;
&lt;p&gt;
Here&amp;#39;s a link to Cornell&amp;#39;s &lt;a href=&#34;https://www.cs.cornell.edu/undergrad/csmajor&#34;&gt;CS Major page&lt;/a&gt;. Same requirements for a BA
through their School of Arts and Sciences as for their BS in the
School of Engineering. The differences are limited to the fundamental
school differences.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
University of Michigan
&lt;/h3&gt;
&lt;p&gt;
Info on their program can be found &lt;a href=&#34;http://www.eecs.umich.edu/eecs/undergraduate/cs_lsa_vs_engr.html&#34;&gt;here&lt;/a&gt;. They note:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Identical Core Computer Science requirements
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Similar Senior Design experiences
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Identical Upper Level Elective requirement
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Slight difference in Flexible Technical Elective hours and list
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Again, the difference is fundamentally in the base school
requirements.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Queens College
&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.cs.qc.edu/index-1.html&#34;&gt;This page&lt;/a&gt; has links to degree requirements. THe page states that &amp;#34;The
B.S. augments the B.A. with more computer science, mathematics, and
experimental laboratory courses&amp;#34; but when you look at the actual &lt;a href=&#34;http://www.cs.qc.edu/undergrad/BS.pdf&#34;&gt;BS&lt;/a&gt;
and &lt;a href=&#34;http://www.cs.qc.edu/undergrad/BA.pdf&#34;&gt;BA&lt;/a&gt; requirements, they&amp;#39;re the same.
&lt;/p&gt;
&lt;p&gt;
In all cases, the differences are
the fundamental difference between the extra liberal arts and
distribution requirements in an Arts and Sciences school and the extra
science and math courses required of an engineering school.
&lt;/p&gt;
&lt;p&gt;
Which is better? It all depends. For me, personally, the liberal arts
education is very important. For others, it will be the deep dive into
science. Maybe more phyics will better enable a CS major to solve some
technical problem but then again, maybe a culteral anthropology course
will help a CS major see the world and people differently and also
color her work.
&lt;/p&gt;
&lt;p&gt;
To my original point - the important thing is that we do a better job
informing guidance counselors, teachers, and high school students as
to the possibilities so that they can make informed decisions.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BS? - BA</title>
      <link>https://cestlaz.github.io/posts/ba-bs/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ba-bs/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
I didn&amp;#39;t know Hunter College had computer science.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I heard that refrain more than once during my fall visits to high
schools. Part of the reason for this is due to Hunter CS&amp;#39;s low
profile and small size in spite of its high quality.
&lt;/p&gt;
&lt;p&gt;
Part, though, was also because of some misconceptions about Computer
Science programs. I&amp;#39;d hear things like &amp;#34;but they only offer a BA not a
BS,&amp;#34; or &amp;#34;but Hunter isn&amp;#39;t an engineering school.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve come to realize that we have to do a better job educating kids as
to what can come next after high school.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not entirely sure why many assume that CS has to be under
engineering. When I was applying to college, most of my choices were
Arts and Science schools offering BAs in CS. Maybe it&amp;#39;s because people don&amp;#39;t
disagregate STEM subjects. Even though it&amp;#39;s not a computer science
program many schools seem to associate FIRST robotics with computer
science. Likewise any class with even a modicum of coding becomes
computer science and as makerspaces and robotics are a percieved as
easy entry STEM classes that appear to be CS (something I&amp;#39;ll rant
about in a future post), CS becomes associated with engineering.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s easy enough to explain the difference between a BA in CS and a BS
in CS and it&amp;#39;s equally easy to show that you can have tremendous
success either way. All you have to do to show the validity of a BA in
CS is look at succesful people from places like NYU, Courant, Columbia
College (as opposed to Columbia Engineering), Cornell school of Arts
and Sciences, etc to balance successful people from the engineering schools.
&lt;/p&gt;
&lt;p&gt;
As I&amp;#39;m sure you know, I&amp;#39;m pretty high on Hunter CS and it&amp;#39;s certainly
one of the best value CS educations out there. Personally, I&amp;#39;m a big believer in a
liberal arts education but in any case, as a community we have to do a
better job educating the high schools so that graduating seniors are
best informed when deciding on their futures.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 25 - Tramp</title>
      <link>https://cestlaz.github.io/posts/using-emacs-25-tramp/</link>
      <pubDate>Mon, 26 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-25-tramp/</guid>
      <description>&lt;p&gt;
Today&amp;#39;s video talks about using emacs &lt;a href=&#34;https://www.emacswiki.org/emacs/TrampMode&#34;&gt;Tramp&lt;/a&gt; mode.
&lt;/p&gt;
&lt;p&gt;
Tramp mode allows you to edit remote files using your local emacs. I usually do this over ssh.
&lt;/p&gt;
&lt;p&gt;
To edit a file on a machine &lt;strong&gt;&lt;strong&gt;www.cstuy.org&lt;/strong&gt;&lt;/strong&gt; I would first
&lt;strong&gt;&lt;strong&gt;find-file&lt;/strong&gt;&lt;/strong&gt; using &lt;strong&gt;&lt;strong&gt;C-c C-f&lt;/strong&gt;&lt;/strong&gt; and then for the file name to open:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;/ssh:www.cstuy.org:/home/zamansky/sc/testfile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
this would open the file &lt;strong&gt;&lt;strong&gt;testfile&lt;/strong&gt;&lt;/strong&gt; in the absolute directory
&lt;strong&gt;&lt;strong&gt;/home/zamansky/sc&lt;/strong&gt;&lt;/strong&gt;. If my username on the remote machine is
different:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;/ssh:username@www.cstuy.org:/home/zamansky/sc/testfile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And I can also work relative to my home directory:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;/ssh:username@www.cstuy.org:sc/testfile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If I just hit enter after the machine name and &lt;strong&gt;&lt;strong&gt;:&lt;/strong&gt;&lt;/strong&gt; -
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;/ssh:username@www.cstuy.org:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I end up in a dired buffer on the remote machine.
&lt;/p&gt;
&lt;p&gt;
Likewise if I run a &lt;strong&gt;&lt;strong&gt;shell&lt;/strong&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;strong&gt;eshell&lt;/strong&gt;&lt;/strong&gt; in the tramp buffer, it
will run the shell on the remote machine. In the video I showed how
shell didn&amp;#39;t work because locally, I&amp;#39;m configured to use zsh and I
don&amp;#39;t have zsh installed remotely. Eshell, however, worked fine.
&lt;/p&gt;
&lt;p&gt;
Using tramp in this way gives us all of the power of our local emacs
configuration to edit a file on a remote machine.
&lt;/p&gt;
&lt;p&gt;
You can also use tramp to edit local files as root using sudo:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;sudo::/tmp/sc/rootfile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Note the double colon.
&lt;/p&gt;
&lt;p&gt;
Finally, you can do the double-whammy - remote root editing:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;ssh::www.cstu.org|sudo:www.cstuy.org:/home/zamansky/sc/rootfile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you use zsh and any of this freezes, just do a search on &amp;#34;zsh
tramp&amp;#34; and the top couple of hits will tell you what to add to your
configuration files to fix things.
&lt;/p&gt;
&lt;p&gt;
Finally, I mentioned in the video that I don&amp;#39;t use tramp all that much
anymore. That&amp;#39;s mostly because I don&amp;#39;t do much remote editing
anymore. I used it more when I was administering a number of machines
at Stuyvesant.
&lt;/p&gt;
&lt;p&gt;
I still use it periodically, but I also use &lt;a href=&#34;https://github.com/libfuse/sshfs&#34;&gt;sshfs&lt;/a&gt;, a Linux tool (which
may be available for other operating systems) that allows me to mount
a directory tree from a remote machine and use it on my local machine.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Iqh50fgbIVk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Being productive between terms</title>
      <link>https://cestlaz.github.io/posts/between-semesters/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/between-semesters/</guid>
      <description>&lt;p&gt;
We&amp;#39;re now at the end of my first semester at Hunter. The Spring term
classes don&amp;#39;t start until the end of January. I&amp;#39;ve got an assortment
of projects to work on but some of the students should have a nice
block of relatively free time.
&lt;/p&gt;
&lt;p&gt;
I  wanted to share some recommendations on things to explore with a
few student groups and thought it would be easier to write those
recommendations down here once and then just share a link.
&lt;/p&gt;
&lt;p&gt;
So, here we go.
&lt;/p&gt;
&lt;p&gt;
Much of the first few CS classes at Hunter and elsewhere focus on the
fundamentals of programming, data structures, and algorithms. It&amp;#39;s all
good stuff but students want to supplement that classroom knowledge
with some practical skills.
&lt;/p&gt;
&lt;p&gt;
I recommend playing with a language like Python that can be used in
all sorts of domains. If you haven&amp;#39;t played with it, check it out.
&lt;/p&gt;
&lt;p&gt;
I like &lt;a href=&#34;https://automatetheboringstuff.com/&#34;&gt;Automate the Boring Stuff with Python&lt;/a&gt; as a nice, free, online
text.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d also recommend learning a web platform like &lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask.&lt;/a&gt; Flask is a web
framework in Python. The web site has a nice getting started guide and
tutorial but here are a couple of other great learning Flask
resources:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/realpython/discover-flask&#34;&gt;Discover Flask&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://exploreflask.com/en/latest/&#34;&gt;Explore Flask&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Once armed with the above, you&amp;#39;ll be well positioned to work on a
variety of your own projects, enter hackathons, and more.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also a big believer in using good tools. I love the emacs text
editor. Why not spend some time going through the web series on &lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;Using
Emacs&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Finally, if you&amp;#39;re not using Git, you should be. Here are a couple of
playlists to get you started:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/playlist?list=PLq0VzNtDZbe9QLq8YCizFN2TVWvlLjrvX&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLq0VzNtDZbe9QLq8YCizFN2TVWvlLjrvX&#34;&gt;https://www.youtube.com/playlist?list=PLq0VzNtDZbe9QLq8YCizFN2TVWvlLjrvX&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/playlist?list=PLoGsJC6ZzSwm959Do9ZgZM9U-xp27NEaQ&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLoGsJC6ZzSwm959Do9ZgZM9U-xp27NEaQ&#34;&gt;https://www.youtube.com/playlist?list=PLoGsJC6ZzSwm959Do9ZgZM9U-xp27NEaQ&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
And if you haven&amp;#39;t done so already, head over to &lt;a href=&#34;https://education.github.com/pack&#34;&gt;Github Education&lt;/a&gt; and
sign up for a student developer pack.
&lt;/p&gt;
&lt;p&gt;
So, there are a few recommendations on things to work on before the
next term begins.
&lt;/p&gt;
&lt;p&gt;
Enjoy
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It gets easier (or advent of code 2016 day 19)</title>
      <link>https://cestlaz.github.io/posts/it-gets-easier-advent19/</link>
      <pubDate>Mon, 19 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/it-gets-easier-advent19/</guid>
      <description>&lt;p&gt;
Today&amp;#39;s &lt;a href=&#34;http://adventofcode.com/2016/day/19&#34;&gt;Advent of Code&lt;/a&gt; problem was a variant on the &lt;a href=&#34;http://mathworld.wolfram.com/JosephusProblem.html&#34;&gt;Josephus
problem&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I recalled that there was a formula to figure out the
sole survivor but I decide to run a simulation rather than looking it
up. I also decided to write it up in C++, well, really C with cout
instead of printf.
&lt;/p&gt;
&lt;p&gt;
Part 1 was the traditional problem. Part 2 was a variant where at each
iteration, you remove the elf opposite the elf being processed (see
the &lt;a href=&#34;http://adventofcode.com/2016/day/19&#34;&gt;problem description&lt;/a&gt; for details).
&lt;/p&gt;
&lt;p&gt;
For both solutions I coded up a circular doubly linked list:
&lt;/p&gt;
&lt;div class=&#34;src src-c&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You can see my complete solutions &lt;a href=&#34;https://github.com/zamansky/advent2016/blob/master/day19.cpp&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I was thinking about how I wrote the code – I just rolled it off the
top of my head. The same was true for the earlier AoC problems where I
had to implement a breadth first search or something similar.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not making a statement about my amazing coding abilities - linked
lists and graph searches are pretty basic, but rather than having done
the CS thing for so long, these fundamentals have become somewhat
routine. I haven&amp;#39;t really written C code in years but other than a
couple of typos (and a stupid mistake in calculating steps) things
worked right off the bat.
&lt;/p&gt;
&lt;p&gt;
I remember a time when I was in college or even a young professional
when I would use an array and an index as a stack or queue - not
because it made more sense but rather, because I wasn&amp;#39;t fully
comfortable with memory manipulation and linked lists. The same could
be said for my first few years working with anything more than the
simplest recursion.
&lt;/p&gt;
&lt;p&gt;
All of this is to say that it does get easier.
&lt;/p&gt;
&lt;p&gt;
Things that seem trivial to us now seemed
insurmountable when we were beginners. Last year, I wrote about an overnight homework
assignment I gave to my class that would have been a final project a
year earlier (the post is &lt;a href=&#34;http://cestlaz.github.io/posts/2015-02-11-taking-stock-self-assess.html/#.WFiGl99iekA&#34;&gt;here&lt;/a&gt; but the homework links are no longer
active) and a few weeks ago I recall a fellow CS teacher talking about
how much longer it takes his students to write a chunk of code than it
takes the teacher.
&lt;/p&gt;
&lt;p&gt;
New things are challenging and take time but with practice and
persistence techniques that were once daunting can become tools ready
at our disposal to use on a whim.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A couple of things I learned from Danny Jaye</title>
      <link>https://cestlaz.github.io/posts/danny_jaye/</link>
      <pubDate>Sun, 18 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/danny_jaye/</guid>
      <description>&lt;p&gt;
I got an email from my good friend and mentor this weekend. Danny
Jaye, after 45 years, is finally retiring for real.
&lt;/p&gt;
&lt;p&gt;
Danny, the Maestro, or Doc, as we sometimes called him spent most of
his career at Stuyvesant. First as a math teacher, then math
chair. Danny also spent time as the director of the Bergen Academies
and his last few years as the Chief Academic Officer at Solomon
Schecter in Bergen.
&lt;/p&gt;
&lt;p&gt;
Danny&amp;#39;s always been a master teacher - back in the day, he managed to
teach Calculus to my brother - no small feat and as a department and
school leader, he has a great eye for collecting and developing
talent. Over the years, Danny&amp;#39;s influenced a number people who&amp;#39;ve gone
on to be education leaders of one form or another.
&lt;/p&gt;
&lt;p&gt;
For me, Danny was and continues to be a great mentor. I can&amp;#39;t tell you
how much I learned - much of it on our 5:00am bike rides from Stuy up
to the GW bridge and back.
&lt;/p&gt;
&lt;p&gt;
Far too much to share here but let me drop a couple of thoughts:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
It doesn&amp;#39;t cost anything to be nice.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and the related:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
It&amp;#39;s easy to be nice on a good day.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The former talking about treating everyone with respect regardless of
station and the latter a reminder not to forget it on a bad day. Also a
valuable reminder when sizing up new school leaders.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;d spend hours discussing class, departmental, and school
strategies. How to develop a program with safety nets, how to separate
real value from the hypes and how to always remember that it&amp;#39;s the
student first and the big picture, not just our little corner of the world.
&lt;/p&gt;
&lt;p&gt;
It feels weird for me to know that my go to guy on Ed stuff is no
longer working and is now moving towards a life of leisure.
&lt;/p&gt;
&lt;p&gt;
It doesn&amp;#39;t change anything other than a reminder to me that I&amp;#39;m now
one of the more senior people in my circles and that now Danny can
mock me for having to go in to the office every day.
&lt;/p&gt;
&lt;p&gt;
So, here&amp;#39;s to you Danny – one of the best education people out
there.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rookie Season Redux</title>
      <link>https://cestlaz.github.io/posts/rookie-season-redux/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/rookie-season-redux/</guid>
      <description>&lt;p&gt;
Today was the last day of classes at Hunter thus ending my first
semester of teaching at Hunter College.
&lt;/p&gt;
&lt;p&gt;
I very much enjoyed the semester and my class and look forward to
working with the same group when the spring term starts in a few
weeks.
&lt;/p&gt;
&lt;p&gt;
At the same time, even though I&amp;#39;m a quarter century veteran teacher,
in many ways this was like my rookie season all over again.
&lt;/p&gt;
&lt;p&gt;
My class was an honors intro class so the material wasn&amp;#39;t new to me
but there were a number of adjustments going from high school to college.
&lt;/p&gt;
&lt;p&gt;
I taught a few college classes as an adjunct back in the nineties but
I was a young teacher at the time and that was a lifetime ago.
&lt;/p&gt;
&lt;p&gt;
The biggest difference is that we only met two days a week. Monday and
Thursday and we met for 1:45 rather than 45 minutes. The longer class
is nice but the twice a week means that you don&amp;#39;t get that every day
reinforcement you have in high school.
&lt;/p&gt;
&lt;p&gt;
It also means that there were times when we would go a week between
classes due to a single day off.
&lt;/p&gt;
&lt;p&gt;
The biggest challenge, one that I&amp;#39;m continuing to work on, is figuring
out how much we can do in a class, what and how much to assign between
classes and what&amp;#39;s the best way to motivate the student&amp;#39;s to space out
the work while doing something every day.
&lt;/p&gt;
&lt;p&gt;
That wasn&amp;#39;t much of a challenge at Stuy. Having been there so long, I
had a good feel for my students as well as the pace and rhythm of
Stuy. Hunter has it&amp;#39;s own rhythm and pace and I&amp;#39;m still figuring it
out.
&lt;/p&gt;
&lt;p&gt;
We also had to pivot early on as the student laptops didn&amp;#39;t arrive
until a third of the semester was over.
&lt;/p&gt;
&lt;p&gt;
On the other hand, much of my work these days has to do with
developing the overall honors program as well as Hunter&amp;#39;s forthcoming
teacher education programs in CS so I&amp;#39;m only teaching a single class
right now and it&amp;#39;s small.
&lt;/p&gt;
&lt;p&gt;
If there are any rookie teachers reading this, congratulations on
getting through your first semester. I know you guys go a little bit
longer, but you&amp;#39;re in the home stretch.
&lt;/p&gt;
&lt;p&gt;
Teaching right, particularly in public schools with large classes  will
always be an all in activity - certainly harder and more draining than
anything I ever did in industry but it does get easier as you learn
your school and students and develop your craft.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2016 - Check your data</title>
      <link>https://cestlaz.github.io/posts/advent-of-code-2016-check-data/</link>
      <pubDate>Sat, 10 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-of-code-2016-check-data/</guid>
      <description>&lt;p&gt;
I&amp;#39;m spending the weekend up in Michigan. Visiting my brother and is
family. We&amp;#39;re here to see the &lt;a href=&#34;http://umgass.org&#34;&gt;UMGASS&lt;/a&gt; production of Gilbert and
Sullivan&amp;#39;s &lt;a href=&#34;http://www.umgass.org/current-production&#34;&gt;The Sorcerer&lt;/a&gt;. Batya also came up from Cornell to join us so
the two families are all togehter for the first time in about 10
years.
&lt;/p&gt;
&lt;p&gt;
This hasn&amp;#39;t left much time for &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; but I did manage to
finish yesterday&amp;#39;s challenge this morning.
&lt;/p&gt;
&lt;p&gt;
What took me so long? Much like last year, it was &lt;a href=&#34;http://cestlaz.github.io/posts/2015-12-17-im-an-idiot.html/&#34;&gt;because I&amp;#39;m an
idiot&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;a href=&#34;http://adventofcode.com/2016/day/9&#34;&gt;problem&lt;/a&gt; seemed pretty straighforward. I coded a solution and it
worked for all the test cases. I tried it on my data set but
the grader said the answer was wrong. I went through the problem a
number of times as well sa my code. I figured I either mis-interpreted
the question or had some bug. I found neither to be true.
&lt;/p&gt;
&lt;p&gt;
After some frustration, I went over to the Advent of Code &lt;a href=&#34;https://www.reddit.com/r/adventofcode/&#34;&gt;subreddit&lt;/a&gt;
grabbed a couple of posted solutions (trying not to look at them) and
ran both on my data - those solutions got the same answer on my data
set as I did.
&lt;/p&gt;
&lt;p&gt;
This morning, I asked Batya to look over my code and the problem (it&amp;#39;s
always good to have a daughter that&amp;#39;s smarted than you are) but she
saw no problems.
&lt;/p&gt;
&lt;p&gt;
Finally, I emailed my buddy JonAlf since I know he completed the problem. He sent back his answer along
with his data set and I got the same answer as he did on his data.
&lt;/p&gt;
&lt;p&gt;
What could be the problem.
&lt;/p&gt;
&lt;p&gt;
His data set was about 12k characters long, mine was 4k. Something had
to be wrong here. I went back to the Advent of Code site and grabbed
the data set again. This time, I went to the page and did a &amp;#34;save-as&amp;#34;
to save it - last time, I cut and pasted.
&lt;/p&gt;
&lt;p&gt;
The cut and paste version was 4k, the save-as was 12k. This time it
worked and was accepted and I also finished part 2 in short order.
&lt;/p&gt;
&lt;p&gt;
The moral of the story – make sure you check the integrity of your
data set - you&amp;#39;ll never get the right answer if you&amp;#39;re working with
the wrong data.
&lt;/p&gt;
&lt;p&gt;
In case anyone&amp;#39;s interested, you can find my AoC code &lt;a href=&#34;https://github.com/zamansky/advent2016&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Teacher looks at Advent of Code 2016 #2</title>
      <link>https://cestlaz.github.io/posts/advent-of-code-2016-2/</link>
      <pubDate>Thu, 08 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-of-code-2016-2/</guid>
      <description>&lt;p&gt;
Today we&amp;#39;re looking at &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; 2016 &lt;a href=&#34;http://adventofcode.com/2016/day/2&#34;&gt;number 2&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
To change things up, I thought I&amp;#39;d do a video where I live code a solution.
&lt;/p&gt;
&lt;p&gt;
The solution I present is pretty straightforward - use a 2D array (or
technically, an array of strings) to represent the keypad, parse the
input, and follow the input instructions to build the code.
&lt;/p&gt;
&lt;p&gt;
One of the things I really like about Advent of Code is that every
problem has two parts and depending on how you solved part 1, you may
or may not have extra work to do for part 2.
&lt;/p&gt;
&lt;p&gt;
A couple of years ago, I wrote about one of the coding techniques I
try to convey to my students. The idea of &lt;a href=&#34;http://cestlaz.github.io/posts/2014-02-26-change-the-data.md&#34;&gt;changing the data&lt;/a&gt; to take
away edge and special cases.
&lt;/p&gt;
&lt;p&gt;
Part two of this problem is a perfect time to use that technique.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the video, I hope you enjoy it:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/EC8gSrYQ11g&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>A Teacher looks at Advent of Code 2016 #1</title>
      <link>https://cestlaz.github.io/posts/advent-of-code-2016-1/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-of-code-2016-1/</guid>
      <description>&lt;p&gt;
I recently &lt;a href=&#34;http://cestlaz.github.io/posts/advent-of-code-2016/&#34;&gt;posted&lt;/a&gt; about &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; - a series of programming
problems relseased one a day. While they vary in terms of level of
difficulty, a number of them make nice problems for introductory to
mid level programming classes.
&lt;/p&gt;
&lt;p&gt;
I thought I&amp;#39;d share some of my thoughts on a few of them starting with
the first problem from this years competition.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://adventofcode.com/2016/day/1&#34;&gt;Take a minute to read it over.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
At first glance, it might seem to a young programmer that this problem
requires a two dimensional array - all about (x,y) coordinates but
then there&amp;#39;s a problem - there are no limits on coordinates and we
can&amp;#39;t make an unlimited size array.
&lt;/p&gt;
&lt;p&gt;
After thinking a bit, hopefully the programmer realizes that all they
need to do is keep track of the how the &lt;strong&gt;&lt;strong&gt;(x,y)&lt;/strong&gt;&lt;/strong&gt; location changes over
time. In the solution below, we start at &lt;strong&gt;&lt;strong&gt;(0,0)&lt;/strong&gt;&lt;/strong&gt; and count the steps as
we update two variables &lt;strong&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
When we finish processing the moves, we have our current location in
&lt;strong&gt;&lt;strong&gt;(x,y)&lt;/strong&gt;&lt;/strong&gt; and we have the number of steps taken to get there.
&lt;/p&gt;
&lt;p&gt;
The solution below hsa a couple of niceties that a beginning
programmer might not know or use (and I&amp;#39;m not arguing that what&amp;#39;s written is
superior in any way, it&amp;#39;s just what I ended up writing).
&lt;/p&gt;
&lt;p&gt;
I make use of tuple destructuring:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
which assigns &lt;strong&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/strong&gt; to the first item in the tuple and &lt;strong&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/strong&gt; the
second. I used that a number of times
&lt;/p&gt;
&lt;p&gt;
I also use a list  I call &lt;strong&gt;&lt;strong&gt;dirs&lt;/strong&gt;&lt;/strong&gt; to hold dx and dy values for the
four direcitons:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This made it easier to to update the location based on the 4
directions. I could also have just used if statements.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s all the code:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Overall, a nice little problem for beginning and intermediate
students.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2016</title>
      <link>https://cestlaz.github.io/posts/advent-of-code-2016/</link>
      <pubDate>Sat, 03 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/advent-of-code-2016/</guid>
      <description>&lt;p&gt;
Once again, it&amp;#39;s time for &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; - a series of small
programming problems released once a day.
&lt;/p&gt;
&lt;p&gt;
I wrote a bit about it &lt;a href=&#34;http://cestlaz.github.io/posts/2015-12-15-advent.html/&#34;&gt;last&lt;/a&gt; &lt;a href=&#34;http://cestlaz.github.io/posts/2015-12-17-im-an-idiot.html/#.WEMqBB9ieYQ&#34;&gt;year&lt;/a&gt; and you can still find last years
problems &lt;a href=&#34;http://adventofcode.com/2015/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s only day three but so far, all of the problems look really nice
for students in APCS-A or any similar intro course. I&amp;#39;m thinking of
looking at a couple of the problems this week with my class at Hunter.
&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t think about this much last year but one thing I really like
about the competition is that each problem comes in two parts. You&amp;#39;re
first presented with the problem and the input and once you put in the
correct answer, you&amp;#39;re presented with part two.
&lt;/p&gt;
&lt;p&gt;
This can be annoying at times, particularly when it requires a large
code rewrite but it also means that well designed, not too specific
solutions are rewarded.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not quite the same as changing the specs on a project mid way but
it does encourage thinking about more than just solving a super
specific problem.
&lt;/p&gt;
&lt;p&gt;
Check out &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; and see if it&amp;#39;s something you or your classes
might enjoy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 24 - Org Capture 2</title>
      <link>https://cestlaz.github.io/posts/using-emacs-24-capture-2/</link>
      <pubDate>Sat, 03 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-24-capture-2/</guid>
      <description>&lt;p&gt;
Not much in today&amp;#39;s actual post. The video is a continuation of the last one on &lt;a href=&#34;http://cestlaz.github.io/posts/using-emacs-23-capture-1&#34;&gt;org-capture&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The video goes over how I set things up to pop up a new frame to do a
capture even if emacs isn&amp;#39;t on screen (as long as it&amp;#39;s running) by
hitting &lt;strong&gt;&lt;strong&gt;F1&lt;/strong&gt;&lt;/strong&gt;. I would  have preferred to bind to &lt;strong&gt;&lt;strong&gt;C-c c&lt;/strong&gt;&lt;/strong&gt; - the
same as within emacs but I havn&amp;#39;t figured out how to do that in Ubuntu
or Mint Linux yet.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the elisp code for the configuration file to do the heavy
lifting. I can&amp;#39;t for th elife of me remember who&amp;#39;s blog I found it
on. If anyone knows, please leave a comment - I&amp;#39;d like to give credit
where credit&amp;#39;s due:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(defadvice org-capture-finalize
(after delete-capture-frame activate)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Advise capture-finalize to close the frame&amp;#34;&lt;/span&gt;
(if (&lt;span style=&#34;color:#a6e22e&#34;&gt;equal&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;capture&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;frame-parameter&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&lt;/span&gt;))
(&lt;span style=&#34;color:#a6e22e&#34;&gt;delete-frame&lt;/span&gt;)))

(defadvice org-capture-destroy
(after delete-capture-frame activate)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Advise capture-destroy to close the frame&amp;#34;&lt;/span&gt;
(if (&lt;span style=&#34;color:#a6e22e&#34;&gt;equal&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;capture&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;frame-parameter&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&lt;/span&gt;))
(&lt;span style=&#34;color:#a6e22e&#34;&gt;delete-frame&lt;/span&gt;)))

(use-package noflet
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; )
(defun make-capture-frame ()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Create a new frame and run org-capture.&amp;#34;&lt;/span&gt;
(interactive)
(make-frame &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((name &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;capture&amp;#34;&lt;/span&gt;)))
(select-frame-by-name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;capture&amp;#34;&lt;/span&gt;)
(delete-other-windows)
(noflet ((switch-to-buffer-other-window (buf) (switch-to-buffer buf)))
(org-capture)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The command I bind to the keyboard shortcut in my window manager:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;emacsclient -ne &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(make-capture-frame)&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
There will be a third capture video in a few weeks where I&amp;#39;ll talk
about scheduling and agendas. Right now, I&amp;#39;m playing with org-gcal to
sync with my Google calendar and want to figure out a config I&amp;#39;m happy
with before making that video.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/gjr9mP01oWE&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Selling out or getting a seat at the table</title>
      <link>https://cestlaz.github.io/posts/selling-out-or-a-seat-at-the-table/</link>
      <pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/selling-out-or-a-seat-at-the-table/</guid>
      <description>&lt;p&gt;
The other day, a friend posited a question on Facebook (paraphrased):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
If called upon, would you take a job in an administration who&amp;#39;s policies you strongly
disagreed with?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would you go work for an administration that you reviled in order to
get a seat at the table? To try to affect change from the inside or
would you consider yourself a sellout or worse, publicly promote
positions you disagree with.
&lt;/p&gt;
&lt;p&gt;
Tough question.
&lt;/p&gt;
&lt;p&gt;
The original question implied national level positions. I&amp;#39;ve never and
will never breath such rarefied air but I have had such experiences
closer to ground level, both with DOE projects and also in
conversations with some charter chains.
&lt;/p&gt;
&lt;p&gt;
My take?
&lt;/p&gt;
&lt;p&gt;
Anyone that knows me knows that I&amp;#39;ve had various dealings with the NYC
DOE and also knows that those dealings never resulted in outcomes I
was happy with. Over my time at Stuy, I had many philosophical
differences with Tweed (a common nickname for the NYC DOE as they&amp;#39;re
housed in the old Tweed courthouse) and these were times where I tried
to play nice to have a seat at the table.
&lt;/p&gt;
&lt;p&gt;
Once I was at a meeting that also included a number of tech industry
heavy hitters. After the meeting, one came over to me. He knew me
by having worked with my former students. I knew him by reputation. He
asked &amp;#34;do they really want our thoughts on this or are we just here so
that they can do what they wanted in the first place and then parade us out
to say that they consulted experts in the tech industry?&amp;#34; I honestly
didn&amp;#39;t know at the time but I had my doubts as to the DOE&amp;#39;s sincerity
in being open to either my views or this CTO&amp;#39;s As it turned out, they
just did want to parade us. Later in the process, I was told in a back
room that it would be wise of me not to publicly voice my thoughts
about the direction of one particular project.
&lt;/p&gt;
&lt;p&gt;
So there you have it. I was given a seat at the table but only as long
as my views mirrored the views of those in power. Not really much of a
seat.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also sat down with some charter chains - chains that I&amp;#39;ve been
more than happy to denounce publicly. Why did I take the meetings?
Mostly to find out if I was mistaken in my position and if so, maybe
I could help them. Every time I&amp;#39;ve had such a meeting, however, I&amp;#39;ve
left the table with my feelings unchanged and knowing that I would
never willingly help them as I felt their practices were harmful to
kids.
&lt;/p&gt;
&lt;p&gt;
In one case, I took the seat but failed to affect change. In the other
I refused the seat. I&amp;#39;ll always take a meeting and I&amp;#39;ll always work
with someone who wants to help kids and who has an open mind but I&amp;#39;ve
found that the more powerful the player, at least in education, the
more likely they are to just want confirmation of their own bias.
&lt;/p&gt;
&lt;p&gt;
You might get a seat at the table but you also might end up lending
your reputation to a cause you don&amp;#39;t believe in.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 23 - Org Capture 1</title>
      <link>https://cestlaz.github.io/posts/using-emacs-23-capture-1/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-23-capture-1/</guid>
      <description>&lt;p&gt;
Org mode has an amazing feature - &lt;strong&gt;&lt;strong&gt;org-capture&lt;/strong&gt;&lt;/strong&gt;. I only started
using it recently but it&amp;#39;s really awesome.
&lt;/p&gt;
&lt;p&gt;
What took me so long?
&lt;/p&gt;
&lt;p&gt;
Probably that the manual seemed a little intimidating.
&lt;/p&gt;
&lt;p&gt;
It really isn&amp;#39;t hard, though. Combined with what I&amp;#39;ll go over in the
next video and post (and a future one for Google calendar sync) it&amp;#39;s
what I use for:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
recording blog ideas
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
managing bookmarks
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
taking short Notes
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
managing my calendar.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I use the binding:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-c c&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-capture&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
By default, running org-capture brings up a form to capture a &amp;#34;task&amp;#34;
but things get really cool when you start making your own capture
templates. With capture templates, you can speed up recording
information and then tell org-mode to store it where you want it.
&lt;/p&gt;
&lt;p&gt;
Here are my template settings.
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(setq org-capture-templates
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Appointment&amp;#34;&lt;/span&gt; entry (file  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/gcal.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Appointments&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* TODO %?\n:PROPERTIES:\n\n:END:\nDEADLINE: %^T \n %i\n&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Note&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/notes.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Notes&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* Note %?\n%T&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;l&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Link&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/links.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Links&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %? %^L %^g \n%T&amp;#34;&lt;/span&gt; :prepend &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog idea&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/i.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog Topics:&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\n%T&amp;#34;&lt;/span&gt; :prepend &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;To Do Item&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/i.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;To Do Items&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\n%T&amp;#34;&lt;/span&gt; :prepend &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;j&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Journal&amp;#34;&lt;/span&gt; entry (file+datetree &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/journal.org&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\nEntered on %U\n  %i\n  %a&amp;#34;&lt;/span&gt;)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Screencast&amp;#34;&lt;/span&gt; entry (file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/screencastnotes.org&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\n%i\n&amp;#34;&lt;/span&gt;)))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Let&amp;#39;s look at the &lt;strong&gt;&lt;strong&gt;Blog&lt;/strong&gt;&lt;/strong&gt; entry:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog idea&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Dropbox/orgfiles/i.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog Topics:&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %?\n%T&amp;#34;&lt;/span&gt; :prepend &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s a list with a bunch of options. The first string &lt;strong&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/strong&gt; is the
key to type to select this template, &lt;strong&gt;&lt;strong&gt;Blog idea&lt;/strong&gt;&lt;/strong&gt; is the actual name
for this template.
&lt;/p&gt;
&lt;p&gt;
The next item, &lt;strong&gt;&lt;strong&gt;entry&lt;/strong&gt;&lt;/strong&gt; describes the type of template you&amp;#39;re
creating. &lt;strong&gt;&lt;strong&gt;entry&lt;/strong&gt;&lt;/strong&gt; says you&amp;#39;re going to create an org node with a
headline which can then be added to an org-file. You can also have
your template create things like an org list &lt;strong&gt;&lt;strong&gt;item&lt;/strong&gt;&lt;/strong&gt; a checkbox
&lt;strong&gt;&lt;strong&gt;checkitem&lt;/strong&gt;&lt;/strong&gt; or even &lt;strong&gt;&lt;strong&gt;plain&lt;/strong&gt;&lt;/strong&gt; text. You can see the full set of
options &lt;a href=&#34;http://orgmode.org/manual/Template-elements.html#Template-elements&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Next, in parentheses, you have the target - where to store the captured
info. The &lt;strong&gt;&lt;strong&gt;Blog idea&lt;/strong&gt;&lt;/strong&gt; template says &lt;strong&gt;&lt;strong&gt;file+headline&lt;/strong&gt;&lt;/strong&gt; followed by a
filename in quotes and a headline in quotes. This says to store the
new org heading you&amp;#39;re capturing in the file
&amp;#34;~/Dropbox/orgfiles/i.org&amp;#34; under the heading &amp;#34;Blog Topics:&amp;#34; Contrast
this to the &lt;strong&gt;&lt;strong&gt;appointments&lt;/strong&gt;&lt;/strong&gt; template which just specifies &lt;strong&gt;&lt;strong&gt;file&lt;/strong&gt;&lt;/strong&gt;
and a filename. The &lt;strong&gt;&lt;strong&gt;appointments&lt;/strong&gt;&lt;/strong&gt; template will just append the new
appointment to its specified file whereas &lt;strong&gt;&lt;strong&gt;Blog idea&lt;/strong&gt;&lt;/strong&gt; will prepend
(due to the &lt;strong&gt;&lt;strong&gt;:prepend&lt;/strong&gt;&lt;/strong&gt; option at the end of the template) to the
&amp;#34;Blog Topics:&amp;#34; heading in &lt;strong&gt;&lt;strong&gt;i.org&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
After this we have the actual template: &amp;#34;* %?\n%T&amp;#34; - the %? and %T are
placeholders for substitutions. The &lt;strong&gt;&lt;strong&gt;%T&lt;/strong&gt;&lt;/strong&gt; prompts for a date with a
timestamp and the &lt;strong&gt;&lt;strong&gt;%?&lt;/strong&gt;&lt;/strong&gt; is where to leave the cursor for final input
before saving the capture.
&lt;/p&gt;
&lt;p&gt;
Finally, &lt;strong&gt;&lt;strong&gt;:prepend&lt;/strong&gt;&lt;/strong&gt; and other options can be found at the above link.
&lt;/p&gt;
&lt;p&gt;
All the substitutions can be found in &lt;a href=&#34;http://orgmode.org/manual/Template-expansion.html#Template-expansion&#34;&gt;the docs&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Once you&amp;#39;ve set up your templates, it&amp;#39;s quick and easy to capture
information.
&lt;/p&gt;
&lt;p&gt;
This video shows the basics. The next one shows how to pop up a
capture even when you&amp;#39;re not in emacs and how I use org-capture to
maintain my web bookmarks.
&lt;/p&gt;
&lt;p&gt;
More information on capture templates can be found &lt;a href=&#34;http://orgmode.org/manual/Capture-templates.html&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/-wPfxuxIfeU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Inverted Index Project</title>
      <link>https://cestlaz.github.io/posts/inverted-index/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/inverted-index/</guid>
      <description>&lt;p&gt;
I haven&amp;#39;t spoken much about the class I&amp;#39;ve been teaching this
semester. It&amp;#39;s an intro CS course - a programming heavy intro. I
decided to use Python with a transition at the end to C++. The
transition is to mirror Hunter&amp;#39;s normal first CS course that ends with
a C++ intro to prepare the students for next semester&amp;#39;s CS course
which is a more intense OOP class using C++ - the language we use in
our core courses.
&lt;/p&gt;
&lt;p&gt;
Throughout the semester I&amp;#39;ve tried to use a variety of interesting
application areas so as to try to give the students some idea of the
possibilities that studying CS will open up for them.
&lt;/p&gt;
&lt;p&gt;
After covering Python dictionaries and lists I thought we&amp;#39;d play by
building an inverted Index.
&lt;/p&gt;
&lt;p&gt;
The basic idea is to map a set of words back to source files. For
example, given the following four one line files:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;files&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th&gt;contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;file.01&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;if you prick us do we not bleed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file.02&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;if you tickle us do we not laugh&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file.03&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;if you poison us do we not die and&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file.04&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;if you wrong us shall we not revenge&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
You could build a data structure mapping each word back to the file(s)
that contain it (partially shown here),
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Word&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th&gt;Files containing It&amp;#39;s&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;if&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;file.01 file.02 file.03 file.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;you&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;file.01 file.02 file.03 file.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;prick&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;file.01&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;us&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;file.01 file.02 file.03 file.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;do&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;file.01 file.02 file.03&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
You can, of course, store more information - how many times a word
appears in a file, where it appears, etc.
&lt;/p&gt;
&lt;p&gt;
This is a fairly easy structure to build. A dictionary where the keys
are the words in the file and the values are lists of the documents
containing the words.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In addition to letting us work with dictionaries and lists, we can
also review file access and even the python CSV module if we want.
&lt;/p&gt;
&lt;p&gt;
We can immediately write simple queries – &amp;#34;what document(s) contain
the word &amp;#39;prick,&amp;#39; but things get more interesting if you write
functions to perform &lt;strong&gt;&lt;strong&gt;and&lt;/strong&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/strong&gt; queries - &amp;#34;what document(s)
contain the words &amp;#39;prick&amp;#39; &lt;strong&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/strong&gt; &amp;#39;do&amp;#39;&amp;#34; for instance.
&lt;/p&gt;
&lt;p&gt;
Why are we building this (besides as a data structure and programming
exercise)? I&amp;#39;ve seen a number of references to using an inverted index
when building a web search engine. In fact, I think that&amp;#39;s something
you do early on in the Udacity Mooc. I just wanted to play with
information retrieval.
&lt;/p&gt;
&lt;p&gt;
I remembered that there was a collection of information, including
last statements from &lt;a href=&#34;https://www.tdcj.state.tx.us/death_row/dr_executed_offenders.html&#34;&gt;executed offenders in Texas&lt;/a&gt;. Someone conveniently
converted it into a &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1HAjZTtPriClY-X3n9whTkA4i5D7bn3bmtHnLoaVICvI/edit#gid=1&#34;&gt;Google Spreadsheet&lt;/a&gt;. The format&amp;#39;s a little
different from our simple four file example but then there&amp;#39;s more
data. It&amp;#39;s straightforward enough to download the spreadsheet as a CSV
file and then read it with a Python program that builds it into an
inverted index.
&lt;/p&gt;
&lt;p&gt;
Now we have some interesting data to play with.
&lt;/p&gt;
&lt;p&gt;
How many offenders used words like &amp;#34;sorry&amp;#34; or &amp;#34;apologize?&amp;#34; How about
references to religion? We can do all sorts of &lt;strong&gt;&lt;strong&gt;and&lt;/strong&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;strong&gt;or&lt;/strong&gt;&lt;/strong&gt;
queries.
&lt;/p&gt;
&lt;p&gt;
We just played with this a bit but I could see all sorts of
explorations. What about taking some great work of literature and
turning it into an inverted index by chapter. You could query
characters or certain words and see where and when they appear in the
book. A new and different way of exploring literature.
&lt;/p&gt;
&lt;p&gt;
So, there you have it - an interesting little project we played with
this past semester. We did it in an intro Python course but I could
see it as an interesting project in AP CS A using hashmaps and lists.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Evaluate teachers like they do in the real world</title>
      <link>https://cestlaz.github.io/posts/evaluating-teachers/</link>
      <pubDate>Sat, 19 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/evaluating-teachers/</guid>
      <description>&lt;p&gt;
This old article has been reposted a few times in my circles over the
past few weeks &lt;a href=&#34;http://educationnext.org/facadeofexcellence/.&#34;&gt;http://educationnext.org/facadeofexcellence/.&lt;/a&gt; It&amp;#39;s from
2003 and complains about the lack of flexibility schools had back then
with regard to hiring and salary. The article is old and out of date
and the seniority system no longer holds for hiring but it does for
lay offs. The salary scale from back then, though, is still in place.
&lt;/p&gt;
&lt;p&gt;
My friend Alex  asked my thought about how we might deal with evaluating
teacher quality. I thought I&amp;#39;d share them here.
&lt;/p&gt;
&lt;p&gt;
Alex listed a number of commonly tried and suggested options on
teacher evaluation and why they&amp;#39;re all flawed.
&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t asked Alex&amp;#39;s permission so I won&amp;#39;t post his list and
comments here. Instead let&amp;#39;s start with the boogeyman those that attack public
education always trot out – tenure.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s get a couple of things straight - tenure is not a job for
life. For K12 teachers, it&amp;#39;s the right to due process. That means you
can&amp;#39;t be fired without cause.
&lt;/p&gt;
&lt;p&gt;
I hear the free market capitalists out there already – &amp;#34;in the real
world, you&amp;#39;re an at will employee, why do teachers need this due
process?&amp;#34; - I&amp;#39;ll get to that down below. For now, let&amp;#39;s look at a few
points on tenure:
&lt;/p&gt;
&lt;p&gt;
First - you can fire a tenured teacher, you just have to document your
case. This means that the supervisor has to actually do their job.
&lt;/p&gt;
&lt;p&gt;
Next - people can complain about rubber rooms and the time it takes to
fire one of these tenured teachers. That&amp;#39;s because the DOE won&amp;#39;t hire
sufficient hearing officers. In a recently resolved case, a friend of
mine - a terrific AP was finally returned to her post after she was
railroaded on false charges. She was in the rubber room for years. The
DOE kept delaying the process – all she wanted was to go to &amp;#34;trial&amp;#34;
since everyone knew she&amp;#39;d be exonerated - the fact that she was up on
charges at all speaks to why teachers need tenure.
&lt;/p&gt;
&lt;p&gt;
Next - teachers don&amp;#39;t grant tenure, the administration does. Why are
all these horrible teachers being granted tenure? Stories abound of
administrators granting tenure to bad teachers so long as they
transfer to another school - who&amp;#39;s to blame here?
&lt;/p&gt;
&lt;p&gt;
Finally, the contract that establishes tenure is jointly negotiated
by the teachers union and the city - no one ever seems to complain
about the city.
&lt;/p&gt;
&lt;p&gt;
Next, let&amp;#39;s talk about bonuses and competition. People in the business
world take the false assumption that everyone thinks, acts, and feels like
they do. Here&amp;#39;s a surprising fact – teachers aren&amp;#39;t in it for the
money. Sure, we&amp;#39;d like to make a little more - perhaps enough to
actually  live in a decent apartment and not need a second job to make
ends meet -  but no one went into teaching to get rich. Teachers are in
it to uplift ALL their students and their school as a whole.
&lt;/p&gt;
&lt;p&gt;
Now let&amp;#39;s look at the model currently in vogue - value added
measures. Besides the fact that they&amp;#39;re arbitrary and don&amp;#39;t work (see
&lt;a href=&#34;http://cestlaz.github.io/posts/2013-09-06-why_i_might_no_longer_be_an_effective_teacher.md/&#34;&gt;this post&lt;/a&gt; and &lt;a href=&#34;http://cestlaz.github.io/posts/2013-10-25-effective-teacher-2.md/&#34;&gt;this one&lt;/a&gt;) they&amp;#39;re nothing like how people are evaluated
in the real world.
&lt;/p&gt;
&lt;p&gt;
How are people evaluated in regular jobs? As far as I know, they&amp;#39;re
evaluated by their managers and bosses - possibly also by their peers.
&lt;/p&gt;
&lt;p&gt;
Funny thing - that&amp;#39;s how teachers used to be evaluated before all this
nonsense brought about by the &amp;#34;reformers.&amp;#34; Of course, no one will
admit to this.
&lt;/p&gt;
&lt;p&gt;
Did this system work? For the most part, but not entirely. Why were
there problems? Because, unlike a business, principals are not
necessarily incentivized to have the best teachers.
&lt;/p&gt;
&lt;p&gt;
Schools and principals are evaluated on ridiculous metrics - the same
standardized tests they use to evaluate teachers. To look at a small
piece – to graduate high school, kids need to pass at least one math
regents and pass three years of math classes. To be &amp;#34;college ready&amp;#34; a
student still only needs to pass one math regents and take at least
one year of geometry or trig.
&lt;/p&gt;
&lt;p&gt;
This means that as far as math is concerned, a principal is
incentivized to have a math department that can get their kids through
the algebra regents. Here&amp;#39;s how this frequently plays out. The kids
take algebra over two years and then passes the exam. The kids take
geometry as their third year. They don&amp;#39;t have to pass the regents, but
it appears that in order to increase a student&amp;#39;s chances of passing
that exam, classes don&amp;#39;t teach proof - the most important and hardest
part of the class. Why not? Because it&amp;#39;s easier to pass the exam by
learning most of the other stuff.
&lt;/p&gt;
&lt;p&gt;
Here we have a school where the incentive is to hire teachers that can
teach to the algebra regents and that&amp;#39;s about it.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s at a school with a low performing population. In a higher
performing school, the kids will do well on the standardized tests
regardless of teacher quality so there&amp;#39;s no incentive to hire the
best. Even if that&amp;#39;s what they want to do, there&amp;#39;s no way to know if
they&amp;#39;re actually doing it.
&lt;/p&gt;
&lt;p&gt;
Back to why teachers need due process. Since principals aren&amp;#39;t held
accountable in any reasonable way, teachers can&amp;#39;t be. The end result
is that teachers are subject to abuses by principals. I myself was
once brought up on bogus charges raised by a principal (not a Stuy
one) who wanted to make trouble. Without due process, I would be out
of a job. So would many others.
&lt;/p&gt;
&lt;p&gt;
The answer? To me it&amp;#39;s figure out how to hold principals
accountable. In Alex&amp;#39;s Facebook post he  mentions evaluation by
college and workforce success but that has a slow feedback loop. The
truth is, education does have a slow feedback loop. Schools, however,
exist for along time and principals should have tenure periods of more than
just a couple of years.
&lt;/p&gt;
&lt;p&gt;
My feelings? Why not look at graduates succeeding in college or on the
tax rolls? This wouldn&amp;#39;t be perfect but it would be a start. While NY
can&amp;#39;t count on private universities sharing accurate information in a
timely manner there should be a way of tracking if a high school
graduate is enrolled in a SUNY or CUNY one, two, three, or four
semesters after graduation. Create a baseline for a school and start
from there.
&lt;/p&gt;
&lt;p&gt;
If principals were actually accountable in a reasonable
way they&amp;#39;d have incentive to have the best teachers. Then we can get
back to the old system which was indeed the way the &amp;#34;real world&amp;#34;
works.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 21 - web mode</title>
      <link>https://cestlaz.github.io/posts/using-emacs-21-web-mode/</link>
      <pubDate>Wed, 16 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-21-web-mode/</guid>
      <description>&lt;p&gt;
Quick post today.
&lt;/p&gt;
&lt;p&gt;
The video goes over web-mode - my preferred weapon for html and all the goodies you embed in an html file.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s multi-modal so it acts sensibly regardless of wether you&amp;#39;re editing html, css, javascript or even templates in a single file.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/strong&gt; In the video, web-mode wasn&amp;#39;t automatically inserting
quotes. I had to set hte following variable to fix this:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-listp&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-emacs-listp&#34; data-lang=&#34;emacs-listp&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-emacs-listp&#34; data-lang=&#34;emacs-listp&#34;&gt;(setq web-mode-enable-auto-quoting t)&lt;/code&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
Giving the final configuration I&amp;#39;m currently using:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package web-mode
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;auto-mode-alist&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\.html?\\&amp;#39;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; web-mode))
(setq web-mode-engines-alist
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;django&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\.html\\&amp;#39;&amp;#34;&lt;/span&gt;)))
(setq web-mode-ac-sources-alist
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;css&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; (ac-source-css-property))
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;html&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; (ac-source-words-in-buffer ac-source-abbrev))))

(setq web-mode-enable-auto-closing &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(setq web-mode-enable-auto-quoting &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)) &lt;span style=&#34;color:#75715e&#34;&gt;; this fixes the quote problem I mentioned&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The web-mode &lt;a href=&#34;http://web-mode.org&#34;&gt;documentation&lt;/a&gt; has more information including a nice chart of all the key bindings.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/69bQa5n23jc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 22 - emacsclient</title>
      <link>https://cestlaz.github.io/posts/using-emacs-22-emacsclient/</link>
      <pubDate>Wed, 16 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-22-emacsclient/</guid>
      <description>&lt;p&gt;
Another quick hit today.
&lt;/p&gt;
&lt;p&gt;
This video is really setting the stage for hte next two, where I talk about org-mode capturing.
&lt;/p&gt;
&lt;p&gt;
Today, we&amp;#39;re demoing the use of the emacs server and client.
&lt;/p&gt;
&lt;p&gt;
Back in the old days, emacs took a LOOONG time to load. A complex
conviguration could take on the order of 10 to 20 seconds. This
resulted in people loading emacs at the start of the day and leaving
it up forever. While load times aren&amp;#39;t much of an issue anymore, it&amp;#39;s
still nice to leave emacs around all the time.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s where running emacs as a server comes in.. I set up a keyboard shortcut my window manager to run:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;emacsclient -a &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; -c&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Rather than trying to run emacs, this tries to connect to an already
running emacs server. The &lt;strong&gt;&lt;strong&gt;-c&lt;/strong&gt;&lt;/strong&gt; creates a new frame. Instead if you
use &lt;strong&gt;&lt;strong&gt;-t&lt;/strong&gt;&lt;/strong&gt; it will open emacs in the terminal. The &lt;strong&gt;&lt;strong&gt;-a &amp;#34;&amp;#34;&lt;/strong&gt;&lt;/strong&gt; tells
emacs to run itself as a server (daemon) if it isn&amp;#39;t already running.
&lt;/p&gt;
&lt;p&gt;
Later on, running &lt;strong&gt;&lt;strong&gt;emacsclient -c&lt;/strong&gt;&lt;/strong&gt; will very quickly bring up a new frame to the server.
&lt;/p&gt;
&lt;p&gt;
In addition to instant loading, Running emacs this way has the
advantage, or some may say disadvantage of keeping buffers around
forever since you just keep emacs up and running.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/9AHGsCtsClg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 20 - yanking</title>
      <link>https://cestlaz.github.io/posts/using-emacs-20-yanking/</link>
      <pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-20-yanking/</guid>
      <description>&lt;p&gt;
Today&amp;#39;s video is a bit of a follow up on the last one as well as a few
miscillaneous configuration.
&lt;/p&gt;
&lt;p&gt;
We got some comments on alternate ways to load a file if it exists -
it&amp;#39;s always cool to see how different people end up doing similar things.
&lt;/p&gt;
&lt;p&gt;
We then talk about three little configurations. Two I found out about
reading Jon Sander&amp;#39;s (jcs) blog &lt;a href=&#34;http://irreal.org/blog&#34;&gt;Irreal&lt;/a&gt;. Jon&amp;#39;s blog is a terrific
source of emacs info - if you don&amp;#39;t subscribe, you should.
&lt;/p&gt;
&lt;p&gt;
I go over using counsel for working with the kill-ring. The command
counsel-yank-pop acts as a replamcement for yank-pop and it lets you
easily yank anything from the kill ring - not just the most previously
killed/whacked piece.
&lt;/p&gt;
&lt;p&gt;
You just hit &lt;strong&gt;&lt;strong&gt;M-y&lt;/strong&gt;&lt;/strong&gt; and then either keep hitting it or use up and
down to select what you want to yank.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the original post from Irreal: &lt;a href=&#34;http://irreal.org/blog/?p=5707&#34;&gt;http://irreal.org/blog/?p=5707&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I then briefly talk about smoothing things over between the system
clipboard and the kill ring, also from Irreal:
&lt;a href=&#34;http://irreal.org/blog/?p=5702&#34;&gt;http://irreal.org/blog/?p=5702&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Finally, I talk about auto-revert-mode - this monitors files on your
file system and when they change, they reload your buffer. I find this
very useful to keep multiple machines in sync when I&amp;#39;m working with
files in a could based filesystem like Dropbox or Owncloud.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/LReZI7VAy8w&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Science Talent Search winners do not a great school make</title>
      <link>https://cestlaz.github.io/posts/dont-focus-on-sts/</link>
      <pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/dont-focus-on-sts/</guid>
      <description>&lt;p&gt;
Over on Facebook, my Alma Mater and long time employer, Stuyvesant
High School seems to be making a big push to up it&amp;#39;s Regeneron Science
Talent Search game. For those of you who aren&amp;#39;t familiar, that&amp;#39;s the
latest incarnation of &lt;a href=&#34;https://en.wikipedia.org/wiki/Regeneron_Science_Talent_Search&#34;&gt;the Westinghouse Science Talent Search&lt;/a&gt; from
back in my day.
&lt;/p&gt;
&lt;p&gt;
It seems that Stuyvesant hasn&amp;#39;t had that many semi finalists,
finalists, and winners over the past few years and isn&amp;#39;t happy about
it. The result is a bunch of social media reminding us of old winners
and trying to raise funds to get us back to the glory days.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d rather they spent there time, energy, and money elsewhere.
&lt;/p&gt;
&lt;p&gt;
When I was a young teacher, I was enamored with those types of
results. When my kids did well on a USACO competition, for example, I
felt pretty good about myself.
&lt;/p&gt;
&lt;p&gt;
Then one day, I had an epiphany. I was looking over the results of a
big USACO competition. My kids came in 4th, 5th, and I think
fifteenth. I was feeling pretty good about myself but then I realized
that Dan, Evan, and Jon - my three top scorers would probably have
done just fine without me. Sure, I do believe that I was able to help
them in their growth as both computer scientists and as people but
they were already off the charts smart.
&lt;/p&gt;
&lt;p&gt;
The same is true about the Science Talent Search (STS) winners. A
friend of mine ran Stuyvesant&amp;#39;s math research class for a number of
years. He had a pretty impressive string of finalists and winners. How
did he do it?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Identify Stuyvesant&amp;#39;s top talent - the ones already most likely to
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
succeed in the STS.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Pawn them off on a lab or professor.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The Stuy class, by and large, did little or nothing for these kids yet
we would hold them up as shining examples of how wonderful we were.
&lt;/p&gt;
&lt;p&gt;
When I had my epiphany, I started designing my intro class and
focusing my efforts on the whole school population. The results?
Scores of people succeeding in tech who never would have considered it
otherwise.
&lt;/p&gt;
&lt;p&gt;
While my super high achievers have indeed gone  on to successful lives
and careers, some of my most successful graduates, by any number of
measures have been the students who would otherwise have gotten lost
in the crowd at Stuy.
&lt;/p&gt;
&lt;p&gt;
The truth is, many of Stuyvesant&amp;#39;s STS winners would have been STS
winners regardless of where they went. We may or may not have helped
them along the way but STS results are not the measure of a great
school.
&lt;/p&gt;
&lt;p&gt;
Improving a school, any school, for all its students might not help in
those bogus national ratings but that really should be what we&amp;#39;re
about.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 19 - moving to a live config</title>
      <link>https://cestlaz.github.io/posts/using-emacs-19-live/</link>
      <pubDate>Thu, 10 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-19-live/</guid>
      <description>&lt;p&gt;
Some of the videos I want to make are going to be much easier to do if
I&amp;#39;m working in my own account where my whole file tree is available.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also a little annoying changing between my full emacs config and
the one I&amp;#39;m developing here.
&lt;/p&gt;
&lt;p&gt;
So, I decided to move to this config for my real config and as I make
more videos move parts of my old configuration over to this new one.
&lt;/p&gt;
&lt;p&gt;
The only problem is that I &lt;strong&gt;&lt;strong&gt;need&lt;/strong&gt;&lt;/strong&gt; some of my current config right
now – things like my email setup.
&lt;/p&gt;
&lt;p&gt;
This video talks about how I&amp;#39;m going to set things up to take care of
everything.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/8RwQNXOjSis&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Flask - deploying to DigitalOcean</title>
      <link>https://cestlaz.github.io/posts/digitaloceanflask/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/digitaloceanflask/</guid>
      <description>
&lt;p&gt;
This post points to the next three videos in the Flask series.
&lt;/p&gt;
&lt;p&gt;
The first covers setting up a droplet (virtual server) on
&lt;a href=&#34;http://digitalocean.com&#34;&gt;DigitalOcean&lt;/a&gt;. The second, deploying a flask application using &lt;a href=&#34;http://gunicorn.org/&#34;&gt;Green
Unicorn&lt;/a&gt;, and the third, using &lt;a href=&#34;https://github.com/libfuse/sshfs&#34;&gt;sshfs&lt;/a&gt; to remotely mount your files from
your DO box to your local machine and how to set up DNS using &lt;a href=&#34;http://freedns.afraid.org&#34;&gt;FreeDNS&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
To help you on your way with DigitalOcean, here are links to a few of
their tutorials
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04&#34;&gt;Server Setup (Ubuntu)&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-connect-to-your-droplet-with-ssh%0A&#34;&gt;Connecting to your droplet with ssh&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-sqet-up-ssh-keys--2&#34;&gt;Setting up ssh keys&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.digitalocean.com/community/tutorial_series/getting-started-with-linux&#34;&gt;Getting started with Linux (series)&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
In general, there are lots of great tutorials and guides at the
&lt;a href=&#34;http://digitalocean.com/community&#34;&gt;Digital Ocean Community&lt;/a&gt;.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Setting up a Droplet
&lt;/h2&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/LOS8PscXhz8&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Deploying with Gunicorn
&lt;/h2&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/oum5Kh-69pg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
sshfs and FreeDNS
&lt;/h2&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/aha2r5I18i0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 18 - Narrowing and iedit</title>
      <link>https://cestlaz.github.io/posts/using-emacs-18-narrow/</link>
      <pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-18-narrow/</guid>
      <description>&lt;p&gt;
I meant to cover these last time but decided not to so as to keep the
videos to about 10 minutes each.
&lt;/p&gt;
&lt;p&gt;
First up this time round is &lt;a href=&#34;https://github.com/victorhge/iedit&#34;&gt;iedit&lt;/a&gt; - a really cool mode that lets you
select all the instances of the marked selection at the same time and
edit them all at once. By default it&amp;#39;s bound to &lt;strong&gt;&lt;strong&gt;C-l&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
For example, let&amp;#39;s say you had the following code:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You could mark one instance of &lt;strong&gt;&lt;strong&gt;somevar&lt;/strong&gt;&lt;/strong&gt;, hit &lt;strong&gt;&lt;strong&gt;C-;&lt;/strong&gt;&lt;/strong&gt; and you&amp;#39;d be
editing them all at once. When you&amp;#39;re done, you hit &lt;strong&gt;&lt;strong&gt;C-;&lt;/strong&gt;&lt;/strong&gt; again and
everything is un-selected.
&lt;/p&gt;
&lt;p&gt;
There are other ways to modify multiple instances of a selection. You
can always search and replace or use Magnar Sveen&amp;#39;s really cool
&lt;a href=&#34;https://github.com/magnars/multiple-cursors.el&#34;&gt;multiple cursors&lt;/a&gt; package and I&amp;#39;m sure there are others but I like
iedit since it&amp;#39;s small and simple. It also works for rectangular
editing but I didn&amp;#39;t cover that in the video. I&amp;#39;ll probably demo it
when I cover rectangular editing in general.
&lt;/p&gt;
&lt;p&gt;
Iedit has limitations. For insance, since it works globally, it isn&amp;#39;t
perfect for renaming variables. If the above code snippet was part of
a larger program with many other instances of &lt;strong&gt;&lt;strong&gt;somevar&lt;/strong&gt;&lt;/strong&gt;, iedit
wouldn&amp;#39;t, by itself, be as useful.
&lt;/p&gt;
&lt;p&gt;
You could reach for a language specific refactoring package but for
me, that&amp;#39;s where &lt;strong&gt;&lt;strong&gt;narrowing&lt;/strong&gt;&lt;/strong&gt; comes in. You can mark a region and
tell emcas to &lt;strong&gt;&lt;strong&gt;narrow-to-region&lt;/strong&gt;&lt;/strong&gt; which hides everything outside the
region and temporarily (until you &lt;strong&gt;&lt;strong&gt;widen&lt;/strong&gt;&lt;/strong&gt;) treats the region as the
whole document.
&lt;/p&gt;
&lt;p&gt;
So, you could narrow to the section of code you want to edit and then
use iedit from within.
&lt;/p&gt;
&lt;p&gt;
To make things easier, I grabed &lt;a href=&#34;http://endlessparentheses.com/emacs-narrow-or-widen-dwim.html&#34;&gt;narrow-or-winden-dwim&lt;/a&gt; from &lt;a href=&#34;http://endlessparentheses.com/&#34;&gt;Endless
Parentheses&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I think the video makes the behaviour pretty clear.
&lt;/p&gt;
&lt;p&gt;
Enjoy
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/xne0kS1DfVs&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cornell Technion Project Studio</title>
      <link>https://cestlaz.github.io/posts/cornell-tech-proj-studio/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cornell-tech-proj-studio/</guid>
      <description>&lt;p&gt;
I spent this evening as a crit advisor for this semesters &lt;a href=&#34;http://tech.cornell.edu/studio/curriculum/product-studio&#34;&gt;Project
Studio&lt;/a&gt;. The class is basically a finishing class for their Masters
students. The class forms teams that work with a &amp;#34;company champion&amp;#34;
that acts an advisor to build a product.
&lt;/p&gt;
&lt;p&gt;
As a Crit Advisor, I, along with two other people from the tech
industry have a give and take with three groups and hopefully we can
provide useful feedback.
&lt;/p&gt;
&lt;p&gt;
As a &amp;#34;tech industry person&amp;#34; I feel a bit like an outsider since I&amp;#39;m
really the &amp;#34;teacher guy,&amp;#34; but I think I had some worthwhile things to
share with the groups.  Besides,
I&amp;#39;d like to think I&amp;#39;m sufficiently in touch with the tech industry
through &amp;#34;the family&amp;#34; to be a reasonably sound advisor.
&lt;/p&gt;
&lt;p&gt;
As it turns out, two of the groups I worked with had an education bent
so at least in terms of product they were in my wheelhouse.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t want to talk specifically about the student products since I
didn&amp;#39;t ask permission but I did want to share a few thoughts.
&lt;/p&gt;
&lt;p&gt;
The products reminded me very much of the projects my Stuy kids
produced in their senior SoftDev class. This is not to belittle the
Cornell Tech people but rather noting how advanced the work of the
Stuy kids is. Beyond that, I liked the composition of the groups I
talked to - nice combinations of skill sets and backgrounds.
&lt;/p&gt;
&lt;p&gt;
I love the idea of the mentoring company which had an interesting effect on
the groups. In all cases, the mentoring company helped provide the
teams with an idea framework but in one case, I think the company&amp;#39;s point of
view actually limited the groups vision a bit. This came up in our
discussions and I&amp;#39;m hoping that the students got something out of
that.
&lt;/p&gt;
&lt;p&gt;
I also liked the crit review I was part of - bringing in outsiders to
show your work to and to get feedback from. It would probably hard
logistically at Stuy, but I&amp;#39;ll talk to the guys there about the
concept.
&lt;/p&gt;
&lt;p&gt;
I shared my contact info with the two groups that asked and if they
follow up, I&amp;#39;d love to be a resource for them.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also looking forward to taking part in more events like this in
the future.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Halloween 2016</title>
      <link>https://cestlaz.github.io/posts/halloween-2016/</link>
      <pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/halloween-2016/</guid>
      <description>&lt;p&gt;
It&amp;#39;s Halloween and for the first time in 21 years, I&amp;#39;m not at work in costume.
&lt;/p&gt;
&lt;p&gt;
It all began as a lark in October 1994:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;div align=&amp;#34;center&amp;#34;&amp;gt;
&amp;lt;a href=&amp;#34;/img/2013-10-31-halloween/groo.jpg&amp;#34; rel=&amp;#34;lightbox&amp;#34;&amp;gt;
&amp;lt;img width=&amp;#34;30%&amp;#34; src=&amp;#34;/img/2013-10-31-halloween/groo.jpg&amp;#34; class=&amp;#34;&amp;#34; alt=&amp;#34;&amp;#34; /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/p&gt;
&lt;p&gt;
And grew from there. A partial list of characters include:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Groo the Wanderer,
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Little Ceaser (Pizza Pizza)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The Jolly Green Giant
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Homer Simpson (with my seniors as the rest of the cast)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Duffman
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Hans and Franz (with Boris)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The Hulk
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The Blues Brothers (with JonAlf)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Dr. Evil (with JonAlf as Austin Powers)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
While it was a lark, I noticed that days after, my students were
somewhat more relaxed and fun. If nothing else, it accelerated us
getting to know each other.
&lt;/p&gt;
&lt;p&gt;
A likely turning point was when I was Bob Ross:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;div align=&amp;#34;center&amp;#34;&amp;gt;
&amp;lt;a href=&amp;#34;/img/2013-10-31-halloween/bob_ross.jpg&amp;#34; rel=&amp;#34;lightbox&amp;#34;&amp;gt;
&amp;lt;img width=&amp;#34;30%&amp;#34; src=&amp;#34;/img/2013-10-31-halloween/bob_ross.jpg&amp;#34; class=&amp;#34;&amp;#34; alt=&amp;#34;&amp;#34; /&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;a href=&amp;#34;/img/2013-10-31-halloween/painting.jpg&amp;#34; rel=&amp;#34;lightbox&amp;#34;&amp;gt;
&amp;lt;img width=&amp;#34;30%&amp;#34; src=&amp;#34;/img/2013-10-31-halloween/painting.jpg&amp;#34; class=&amp;#34;&amp;#34; alt=&amp;#34;&amp;#34; /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/p&gt;
&lt;p&gt;
That was the first year that was just as performance based as it was costume based.
&lt;/p&gt;
&lt;p&gt;
Of course, the downside is that pretty soon, I was expected to top
myself every year. The last couple of years were fun but part of me
felt like I was going through the motions. I needed a break.
&lt;/p&gt;
&lt;p&gt;
So, now at Hunter College, I&amp;#39;m taking that break - no costume this
year. We&amp;#39;ll see what the future holds, but here&amp;#39;s a youtube playlist
with some of my favorite halloweens past.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/videoseries?list=PL9KxKa8NpFxJYgovyJhF4HZRsAqYKBLiG&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Why Hunter CS is so important to NYC</title>
      <link>https://cestlaz.github.io/posts/hunter-cs-important/</link>
      <pubDate>Sun, 30 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hunter-cs-important/</guid>
      <description>&lt;p&gt;
If you know me you know that my morning reads include a visit over to
&lt;a href=&#34;http://avc.com&#34;&gt;avc.com&lt;/a&gt;, Today, &lt;a href=&#34;http://avc.com/2016/10/cranes/&#34;&gt;Fred&amp;#39;s post&lt;/a&gt; talked about development and progress,
evolution, if you would, in the city. Although not directly related,
it got me thinking about gentrification.
&lt;/p&gt;
&lt;p&gt;
To me, gentrification all too often seems to result in pushing out
people and business that were there during the hard times.
&lt;/p&gt;
&lt;p&gt;
We don&amp;#39;t need to force out long time residents that can no longer make
rent - we need to uplift communities with pathways to towards greater
economic opportunity.
&lt;/p&gt;
&lt;p&gt;
Those of us in CS Education, each in our own way, are trying to help
build those pathways.
&lt;/p&gt;
&lt;p&gt;
Return readers know that I&amp;#39;ve ranted about some of the popular magic
bullets. I&amp;#39;ve periodically talked about my concerns over code schools
but even at their best they represent a workforce program for the well
to do. I&amp;#39;ve also talked about efforts like P-Tech which sound good,
but besides the fact that &lt;a href=&#34;https://garyrubinstein.wordpress.com/2016/10/06/p-tech-principal-responds/&#34;&gt;the emperor has no clothes&lt;/a&gt;, is the school
really preparing kids for opportunities in their own neighborhoods or
in data centers far from home?
&lt;/p&gt;
&lt;p&gt;
There are some workforce programs like &lt;a href=&#34;https://perscholas.org/&#34;&gt;Per Scholas&lt;/a&gt; that I really like
and respect but they&amp;#39;re limited in what they can do.
&lt;/p&gt;
&lt;p&gt;
What does that leave us with? The traditional path – college.
&lt;/p&gt;
&lt;p&gt;
In terms of tech, New York City has some amazing colleges. You ask
most people, they&amp;#39;ll come back with NYU, Columbia. Great institutions
but &lt;strong&gt;&lt;strong&gt;very&lt;/strong&gt;&lt;/strong&gt; expensive.  Not everyone can afford $75,000 a year and
not everyone can afford to go into hundreds of thousands of debt.
&lt;/p&gt;
&lt;p&gt;
This is why Hunter CS is so important. Actually CUNY but I can only
affect my little corner of the world.
&lt;/p&gt;
&lt;p&gt;
Hunter College has a really nice CS program and department. It&amp;#39;s small
and has flown under the radar but it&amp;#39;s one of the reasons I came over
to Hunter.
&lt;/p&gt;
&lt;p&gt;
One of my responsibilities at Hunter is to develop our new honors CS
program and to connect all of  Hunter CS to the tech sector in NY.
&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t written much about what&amp;#39;s been going on but that will change
int the months to come. Suffice it to say that to uplift our
communities we need real, affordable educational opportunities and in
terms of tech, education that leads to real opportunities in
our city&amp;#39;s tech sector.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m convinced that Hunter College can be a game changer for the wealth
of young talent we have in New York and for our tech sector.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 17 - misc small packages</title>
      <link>https://cestlaz.github.io/posts/using-emacs-17-misc/</link>
      <pubDate>Fri, 28 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-17-misc/</guid>
      <description>
&lt;p&gt;
I&amp;#39;m working on getting enough of my real configuration into this
series so that I can dump my current one and use this one all them
time and grow it back up an episode at a time.
&lt;/p&gt;
&lt;p&gt;
I think we&amp;#39;re almost there.
&lt;/p&gt;
&lt;p&gt;
This time, we&amp;#39;re looking at a few small packages that I use all the
time.
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
Highlight line Mode
&lt;/h3&gt;
&lt;div class=&#34;src src-emacs-listp&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-emacs-listp&#34; data-lang=&#34;emacs-listp&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-emacs-listp&#34; data-lang=&#34;emacs-listp&#34;&gt;(global-hl-line-mode t)&lt;/code&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
this turns on highlight line mode.  It makes it easy to see the line
the cursor&amp;#39;s on. Nothing huge, I just like it.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
&lt;a href=&#34;https://github.com/Malabarba/beacon&#34;&gt;Beacon mode&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/Malabarba/beacon&#34;&gt;Beacon mode&lt;/a&gt; flashes the cursor whenever you scroll. It makes things
easy to locate the cursor when scrolling
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;; flashes the cursor&amp;#39;s line when you scroll&lt;/span&gt;
(use-package beacon
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(beacon-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;; this color looks good for the zenburn theme but not for the one&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;; I&amp;#39;m using for the videos&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;; (setq beacon-color &amp;#34;#666600&amp;#34;)&lt;/span&gt;
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
&lt;a href=&#34;https://github.com/nflath/hungry-delete&#34;&gt;Hungry Delete mode&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/nflath/hungry-delete&#34;&gt;This mode&lt;/a&gt; deletes all the whitespace after the cursor (or before it)
when you use delete or backspace.
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;; deletes all the whitespace when you hit backspace or delete&lt;/span&gt;
(use-package hungry-delete
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(global-hungry-delete-mode))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
&lt;a href=&#34;https://github.com/magnars/expand-region.el&#34;&gt;Expand Region&lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/magnars&#34;&gt;Magnar Sveen&amp;#39;s&lt;/a&gt; awesome expand region mode is a must have. He also
wrote the amazing &lt;a href=&#34;https://github.com/magnars/multiple-cursors.el&#34;&gt;multiple cursors&lt;/a&gt; package. I highly recommend
checking out his work.
&lt;/p&gt;
&lt;p&gt;
Expand region expands the marked region by semantic units. It&amp;#39;s my go
to way of marking text for manipulation
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;; expand the marked region in semantic increments (negative prefix to reduce region)&lt;/span&gt;
(use-package expand-region
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-=&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;er/expand-region&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I also tried to look at aggressive indent but that had some problems
so we&amp;#39;ll come back to that later.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/vKIFi1h0I5Y&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Knitting at a Tech Conference</title>
      <link>https://cestlaz.github.io/posts/knitting-tech-conference/</link>
      <pubDate>Tue, 25 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/knitting-tech-conference/</guid>
      <description>&lt;img src=&#34;https://cestlaz.github.io/img/knitting-tech-conference/top.jpg&#34; alt=&#34;/img/knitting-tech-conference/top.jpg&#34; title=&#34;/img/knitting-tech-conference/top.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
This past weekend was &lt;a href=&#34;http://catskillsconf.com&#34;&gt;Catskills Conf&lt;/a&gt;, one of my favorite events of the
year.
&lt;/p&gt;
&lt;p&gt;
Last year, Devorah joined me and also enjoyed the show.
&lt;/p&gt;
&lt;p&gt;
If you know my wife, you know she&amp;#39;s &lt;strong&gt;&lt;strong&gt;always&lt;/strong&gt;&lt;/strong&gt; knitting. Ok, not true,
she&amp;#39;s always knitting, spinning, weaving or performing some other form
of fiber craft.
&lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t complain. That&amp;#39;s how I ended up with my Kandinsky, Dust Puppy
and Yoda sweaters and my awesome Kang and Kodos socks. It also
keeps her an my entire family in warm amazingly beautiful knit wear.
&lt;/p&gt;
&lt;p&gt;
While at the conference, Devorah was her usual self - knitting during
the talks. That doesn&amp;#39;t mean she wasn&amp;#39;t paying attention, it&amp;#39;s just
what she does. We also noted a few other attendees knitting throughout
the weekend.
&lt;/p&gt;
&lt;p&gt;
So, this year, Devorah had an idea – let&amp;#39;s focus those idle hands to
do some good. She asked the conference organizers to send out an email
to attendees - knit squares during the conference and Devorah will put
them together at the end and we&amp;#39;ll donate the blanket we make to
children in need through &lt;a href=&#34;https://projectlinus.org/&#34;&gt;Project Linus&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The organizers were supportive, if not somewhat skeptical. That was
ok - we also had no idea if this would be a win or a flop.
&lt;/p&gt;
&lt;p&gt;
Conference came and Devorah announced the project. She brought yarn,
needles, crochet hooks and instructions and also offered to teach
knitting during the breaks.
&lt;/p&gt;
&lt;p&gt;
It started slowly, but as the conference progressed, people started
knitting both during the talks and during the breaks.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/DevorahZamansky&#34;&gt;@DevorahZamansky&lt;/a&gt; leading knitting for children in need at &lt;a href=&#34;https://twitter.com/catskillsconf&#34;&gt;@catskillsconf&lt;/a&gt; &lt;a href=&#34;https://t.co/hn0rx633e1&#34;&gt;pic.twitter.com/hn0rx633e1&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/789839861813575680&#34;&gt;October 22, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
Experienced knitters cranked out squares and newbies learned.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/knitting-tech-conference/learning.jpg&#34; alt=&#34;/img/knitting-tech-conference/learning.jpg&#34; title=&#34;/img/knitting-tech-conference/learning.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
&amp;lt;br&amp;gt;
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/jcn&#34;&gt;@jcn&lt;/a&gt; knitting for charity with &lt;a href=&#34;https://twitter.com/DevorahZamansky&#34;&gt;@DevorahZamansky&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/catskillsconf?src=hash&#34;&gt;#catskillsconf&lt;/a&gt; &lt;a href=&#34;https://t.co/rvkSnMYDCp&#34;&gt;pic.twitter.com/rvkSnMYDCp&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/790164027494326272&#34;&gt;October 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
&amp;lt;br&amp;gt;
&lt;/p&gt;
&lt;p&gt;
At the end of the conference, we collected the partials. Devorah&amp;#39;s
going to finish the blanket up this week and then it gets donated.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;6 X 5 and growing! &lt;a href=&#34;https://twitter.com/catskillsconf&#34;&gt;@catskillsconf&lt;/a&gt; &lt;a href=&#34;https://t.co/epC9b3ap0t&#34;&gt;pic.twitter.com/epC9b3ap0t&lt;/a&gt;&lt;/p&gt;&amp;mdash; Devorah Zamansky (@DevorahZamansky) &lt;a href=&#34;https://twitter.com/DevorahZamansky/status/790697247965151232&#34;&gt;October 24, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
So, how much of a win was this? We got a blanket to donate to charity
and a couple of new knitters. We also heard and overheard some
interesting comments.
&lt;/p&gt;
&lt;p&gt;
One speaker commented that it as much better to see members of the
audience knitting for good rather than checking their cell phones.
&lt;/p&gt;
&lt;p&gt;
We also overheard some attendees talking about how the knitting
project left them feeling more connected to the conference since they
were able to contribute something.
&lt;/p&gt;
&lt;p&gt;
Sounds like a pretty big win to me.
&lt;/p&gt;
&lt;p&gt;
So much so that Devorah&amp;#39;s thinking about taking the show on the road -
maybe other conferences would like their idle hands doing some good
while listening to talks.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Waking up in the Hudson Valley</title>
      <link>https://cestlaz.github.io/posts/catskillsconf-2016/</link>
      <pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/catskillsconf-2016/</guid>
      <description>&lt;img src=&#34;https://cestlaz.github.io/img/catskills-conf-2016/cc.jpg&#34; alt=&#34;/img/catskills-conf-2016/cc.jpg&#34; title=&#34;/img/catskills-conf-2016/cc.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
Waking up to a beautiful brisk morning at the Ashokan Center in the Hudson Valley.
&lt;/p&gt;
&lt;p&gt;
Last year, Devorah and I attended the first &lt;a href=&#34;http://catskillsconf.com&#34;&gt;Catskillsconf&lt;/a&gt;, a tech
conference in Olivebridge, NY. It was an amazing and unique
experience. I can only describe it as Tech Conference meets Summer
camp. Where else can you hear talks by people like &lt;a href=&#34;https://twitter.com/dens?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor&#34;&gt;Dennis Crowley&lt;/a&gt; and
an alos hear the music of &lt;a href=&#34;http://www.mikeandruthy.com/&#34;&gt;Mike and ruthy&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This year, I gave another educaiton rant and to add to the fun,
Devorah&amp;#39;s been leading a knitting for Charity project and teaching
attendees to knit:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Progress on the charity knitting project led by &lt;a href=&#34;https://twitter.com/DevorahZamansky&#34;&gt;@DevorahZamansky&lt;/a&gt; &lt;a href=&#34;https://twitter.com/catskillsconf&#34;&gt;@catskillsconf&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/catskillsconf?src=hash&#34;&gt;#catskillsconf&lt;/a&gt; &lt;a href=&#34;https://t.co/yoal7r48wO&#34;&gt;pic.twitter.com/yoal7r48wO&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/790155915307737088&#34;&gt;October 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
and we brought up my Hunter College students to join in the fun.
&lt;/p&gt;
&lt;p&gt;
In spite of the fact that we were out late at the bonfiere:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Ending a great day by relaxing next to the fire &lt;a href=&#34;https://twitter.com/catskillsconf&#34;&gt;@catskillsconf&lt;/a&gt;. &lt;a href=&#34;https://t.co/LzKbftZamz&#34;&gt;pic.twitter.com/LzKbftZamz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Christopher Short (@Shortoutloud) &lt;a href=&#34;https://twitter.com/Shortoutloud/status/790020785943539712&#34;&gt;October 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
and then were kept up by the students bonding and chatting in the
bunkhouse, Devorah and I are first up, bright and early.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll write up more about this amazing event some time over the
week. Right now, I think I&amp;#39;ll just go out and enjoy a cup of coffee
and the clean brisk Hudson Valley air.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Flask in a virtualenv</title>
      <link>https://cestlaz.github.io/posts/flask-install-flask/</link>
      <pubDate>Sat, 15 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/flask-install-flask/</guid>
      <description>&lt;p&gt;
Second video in the Flask series. This one goes over installing Flask
in a virtualenv and running a simple Flask application.
&lt;/p&gt;
&lt;p&gt;
Nothing much to say about this other then check out the video:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/2ZIhczsu1EQ&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Setting up Linux for Flask Web Development</title>
      <link>https://cestlaz.github.io/posts/flask-setup-virtualenv/</link>
      <pubDate>Fri, 14 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/flask-setup-virtualenv/</guid>
      <description>&lt;p&gt;
Those laptops that my Hunter students were supposed to get have
finally arrived. We&amp;#39;re distributing them on Monday. Each student will
have a Dell laptop running Ubuntu 16.04 for as long as they&amp;#39;re in the
program.
&lt;/p&gt;
&lt;p&gt;
This means we can finally start using the web as a way of displaying
and sharing our projects.
&lt;/p&gt;
&lt;p&gt;
For this type of web development, I&amp;#39;m a big fan of using &lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask&lt;/a&gt;. Flask
is a Python microframework. The easiest analogy is saying it&amp;#39;s like
Ruby on rails but in Python. That&amp;#39;s close enough for our purposes.
&lt;/p&gt;
&lt;p&gt;
I much prefer Python to Ruby as a teaching tool because it leads to
roads going in all sorts of directions so it was merely a matter of
figuring out which framework or platform to use. I found Django to be
far too big, cumbersome, and all encompasing while on the other hand,
&lt;a href=&#34;http://werkzeug.pocoo.org/&#34;&gt;Werkzeug&lt;/a&gt;, which Flask is based on is a little too low level.
&lt;/p&gt;
&lt;p&gt;
Flask hit the sweet spot. Easy routing, session and form handling,
templates, pretty much everything I was looking for but very
unopinionated and open ended. Perfect for teaching and learning and
perfect for lightweight projects. The sourecode is also
straightforward enough for a student to explore.
&lt;/p&gt;
&lt;p&gt;
Below is a video going over setting up Linux from right after an
install to use the python virtualenv package. The next video will go
over installing Flask and setting up a simple application. Later, I&amp;#39;ll
post a video on deployment to a &lt;a href=&#34;http://digitalocean.com&#34;&gt;Digital Ocean&lt;/a&gt; Droplet.
&lt;/p&gt;
&lt;p&gt;
Here are some notes relating to the video.
&lt;/p&gt;
&lt;p&gt;
First, go to your &amp;#34;software sources&amp;#34; or &amp;#34;software updates&amp;#34;
application from the menu and select all the sources (as described n
the video)
&lt;/p&gt;
&lt;p&gt;
To update a new system:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgade&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To install the most recent emacs snapshot
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo apt-add repository -y ppa:ubuntu-lisp
sudo apt-get update
sudo apt-get install emacs-snapshot&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To install python pip (used to install other python packages)
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo apt-get install python-pip&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and then to install the virtualenv packages
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo pip install virtualenv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To create a python3 virtual environment
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;pip install -p python3 venv-folder&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
You can activate the envorinment (assuming you create the folder under
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
your home directory):
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;source ~/venv-folder/bin/activate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And to deactivate it, from the activated terminal
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;deactivate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here&amp;#39;s the video. Next time, we&amp;#39;ll install Flask into an virtual
environment.
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cEqB4pkR1c4&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 16 - Undo Tree</title>
      <link>https://cestlaz.github.io/posts/using-emacs-16-undo-tree/</link>
      <pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-16-undo-tree/</guid>
      <description>&lt;p&gt;
If you use emacs, you should keep an eye on Jon Snader&amp;#39;s &lt;a href=&#34;http://irreal.org/blog/&#34;&gt;blog&lt;/a&gt;,
&lt;a href=&#34;http://irreal.org/blog/&#34;&gt;irreal.org&lt;/a&gt;. A few days he posted on &lt;a href=&#34;http://irreal.org/blog/?p=5621&#34;&gt;Undo Tree&lt;/a&gt; - a package that extends
Emacs&amp;#39;s built in undo functionality.
&lt;/p&gt;
&lt;p&gt;
Basic emacs has undo, bound to &lt;strong&gt;&lt;strong&gt;C-/&lt;/strong&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;strong&gt;C-_&lt;/strong&gt;&lt;/strong&gt; but that&amp;#39;s about
it. Undo tree, which you can set up with:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package undo-tree
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(global-undo-tree-mode))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
adds two key features. First is redo, which you get by adding the
shift key to the undo keychords.
&lt;/p&gt;
&lt;p&gt;
The other, is the visual undo tree. You can bring that up wit &lt;strong&gt;&lt;strong&gt;C-x
u&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Once you bring up the undo tree, you can use the up and down arrows or
&lt;strong&gt;&lt;strong&gt;C-n&lt;/strong&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;strong&gt;C-p&lt;/strong&gt;&lt;/strong&gt; to move between undo and redos. When you get to
what you want, just quit the undo tree visualizer with &lt;strong&gt;&lt;strong&gt;q&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
The cool part is that once you undo a few things and add new stuff,
you get a tree that you can navigate through using the arrows.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s much easier to get the flavor of this by watching the video
(which also has a lame example of using artist-mode which I&amp;#39;ll come
back t at some point).
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zL0FJ-jbDPU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Chromebooks in K12</title>
      <link>https://cestlaz.github.io/posts/chromebooks/</link>
      <pubDate>Thu, 06 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/chromebooks/</guid>
      <description>&lt;p&gt;
The discussion today over on &lt;a href=&#34;http://avc.com&#34;&gt;AVC&lt;/a&gt; was &lt;a href=&#34;http://avc.com/2016/10/chromebooks-in-k12/&#34;&gt;Chromebooks in K12&lt;/a&gt;, a title I
conveniently lifted.
&lt;/p&gt;
&lt;p&gt;
In the comments, I was asked my thoughts on chromebooks vs Linux on
low end hardware so, here they are.
&lt;/p&gt;
&lt;p&gt;
Chromebooks are cheap, near instant on, and, if you&amp;#39;re using Google
Apps for education, little to no administration necessary.
&lt;/p&gt;
&lt;p&gt;
This is a HUGE win for schools.
&lt;/p&gt;
&lt;p&gt;
There are some issues. School WiFi, for example, is frequently
insufficient which can be a problem for a device that&amp;#39;s meant to be
connected to the cloud. People might think that schools are well
connected but I know multiple schools that keep kids off the WiFi to
keep it from being overloaded. This is a problem and I don&amp;#39;t know if
it&amp;#39;s really being addressed.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also worth noting that DOE pricing is also a far cry from &amp;#34;lowest
bidder.&amp;#34; We keep seeing sub $200 chromebooks on the market but buying
through the DOE approved vendor looks to cost about $300 per unit or
more. Of course this is better than the equally inflated PC/Mac
prices.
&lt;/p&gt;
&lt;p&gt;
Still, the price and easy of deployment and administration seem to
make chromebooks the way to go.
&lt;/p&gt;
&lt;p&gt;
As to other issues, first, you have to buy in to the Google platform
– email, docs, classroom, etc. This isn&amp;#39;t necessarily a problem. I
personally like most of Google&amp;#39;s offerings. My big concern is giving
away student data. I have mixed feelings on the whole privacy thing
but it&amp;#39;s more clear cut when it comes to minors in public schools -
schools shouldn&amp;#39;t be sharing their data and schools shouldn&amp;#39;t be
forcing them to share their data. Google Suite for Education is FERPA
compliant but what about all the other Google services the kids might
be using? I haven&amp;#39;t looked at this carefully but we&amp;#39;ve already given
too much power to private interests over education (see the College
Board or Pearsons) so, at least to me, this is a concern.
&lt;/p&gt;
&lt;p&gt;
My only other issue is a selfish one. As a CS educator, I look to
coding tools and environments. While there are online platforms like
cloud9 or &lt;a href=&#34;http://repl.it&#34;&gt;repl.it&lt;/a&gt;, they don&amp;#39;t have the same power and flexibility of
using local installs. I&amp;#39;ve been using repl.it and it&amp;#39;s a great tool
but I think it&amp;#39;s best used as a stepping stone to a local install and
then afterwards for some of it&amp;#39;s specific value added features. I&amp;#39;m
also a big believer in teaching &lt;a href=&#34;http://cestlaz.github.io/categories/shell/&#34;&gt;operating system as tool box&lt;/a&gt;,
something you can&amp;#39;t currently do with a chromebook.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://twitter.com/willykaram&#34;&gt;Willy Karam&lt;/a&gt; commented over at AVC about using cheap hardware running
Linux. This is something I&amp;#39;ve done for years and it&amp;#39;s been a
lifesaver. CSTUY&amp;#39;s entire laptop collection consists of really old
laptops running Linux.
&lt;/p&gt;
&lt;p&gt;
For a CS class, this works well. Even for a non CS class it can work
well. Modern Linux distributions run pretty much the same as Windows
and MacOS. Use the mouse to click on menus and icons. It doesn&amp;#39;t give
you the power of the command line but it means it&amp;#39;s a suitable
alternative for the masses that use the operating system as a program loader..
&lt;/p&gt;
&lt;p&gt;
The downside of Linux for the general population is the administration
and maintenance. At Stuy, we set up NIS and NFS. Both horrible but
probably easier and better than most alternatives. I was never able to
come up with a better way to do authentication and file sharing and
the NFS stuff would have killed our wifi (we only used it in wired
labs). Customizing software installs is also a real problem. We made
it work but it took far too much time and effort.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re in a situation where you can do a stock install and then
give the machine to the student for the semester, then Linux can work
really well. If you&amp;#39;re talking about shared machines with custom
installs, it&amp;#39;s harder to justify over chromebooks.
&lt;/p&gt;
&lt;p&gt;
A final note on chromebooks is that last year, I played with putting Linux on a
chromebook. It worked pretty well. Almost the best of both worlds. Low
end hardware with good battery life and a full operating system. This
is something I have to play with on the current generation of chromebooks.
&lt;/p&gt;
&lt;p&gt;
So, where do I stand on this? The cloud isn&amp;#39;t there yet in terms of
teaching computer science. It&amp;#39;s fine for a gentle introduction but
eventually, you&amp;#39;ll need the power of a full blown OS and local
installs. We may very well get to where a cloud OS is just as
expressive, we&amp;#39;re just not there yet. On the other hand, for general
computing in schools, chromebooks are a big win.
&lt;/p&gt;
&lt;p&gt;
It would be wonderful if schools had sufficient infrastructure,
support staff and training so that technology was just there and just
worked and we didn&amp;#39;t have to make these sort of decisions and
compromises. Somehow I don&amp;#39;t thing that will be happening any time soon.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Computational Thinkers in Scotland</title>
      <link>https://cestlaz.github.io/posts/scotland/</link>
      <pubDate>Fri, 30 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/scotland/</guid>
      <description>&lt;p&gt;
I&amp;#39;m way behind on my &lt;a href=&#34;http://cacm.acm.org/&#34;&gt;Communications of the ACM&lt;/a&gt;. I generally only read
them when I use my trainer in the mornings and with summer running and
outside riding, I&amp;#39;m still on the December 2015 issue.
&lt;/p&gt;
&lt;p&gt;
This morning, I read a viewpoint by Jeremy Scott and Alan Bundy on &lt;a href=&#34;http://cacm.acm.org/magazines/2015/12/194638-creating-a-new-generation-of-computational-thinkers/abstract&#34;&gt;a
program in Scotland&lt;/a&gt;. If you&amp;#39;re an ACM member, and if you&amp;#39;re a CS
practitioner, student, academic, or teacher you should be, you can read the piece for details.
&lt;/p&gt;
&lt;p&gt;
Me? I noticed a number of similarities between what Bundy and Scott
described and efforts here in the USA including some of the red flags.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not here to talk about the program described in detail or their
successes and failures. I don&amp;#39;t have enough information to fairly
comment on that. I&amp;#39;m here in my usual role of curmudgeon to highlight
common red flags that if unheeded could cost all of us the opportunity
to get really great CS Ed to all of our students.
&lt;/p&gt;
&lt;p&gt;
One red flag right away were a number of references to the program
being curriculum and materials driven, not teacher driven. The
viewpoint states that materials &amp;#34;were designed to be used by even
non-specialist teachers.&amp;#34; We see the same thing here in the USA and
not just in CS Ed. Teaching overall is being devalued with the elite
pushing programs that handcuff good teachers to a script (which leads
students towards &amp;#34;success&amp;#34; in passing a nonsense standardized exam)
all the while sending their own kids to elite private schools with
knowledgeable teachers.
&lt;/p&gt;
&lt;p&gt;
I know i didn&amp;#39;t want my kids to be taught chemistry history or any
other subject by a teacher that hasn&amp;#39;t studied the content yet here we
go saying it&amp;#39;s okay for CS.
&lt;/p&gt;
&lt;p&gt;
The counter argument is that we have to do something now and we&amp;#39;ll do
better later. We all go in with the best of intentions but more often
than not, once a politician has their sound bite and once a cheap
apparent solution is in place, it&amp;#39;s good enough and we&amp;#39;re done. I
ranted about that a while back both &lt;a href=&#34;http://cestlaz.github.io/posts/2015-03-04-expedient-vs-good.html/#.V-5UqN9vGAk&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;http://cestlaz.github.io/posts/2015-05-07-learning-takes-time.html/#.V-5Uot9vGAk&#34;&gt;here&lt;/a&gt;. To their credit,
Bundy and Scott talk a bit about this concern in the piece.
&lt;/p&gt;
&lt;p&gt;
The piece also said &amp;#34;It is also necessary to employ a pedagogy that is
informed by the latest research into the most effective ways to teach
computing.&amp;#34; This sounds good but the truth is, education research
doesn&amp;#39;t have the best reputation among educators. Last month, I
asked one of the best math teachers around what was being bandied
about as best practices in math education according to &amp;#34;the
research?&amp;#34; He basically said &amp;#34;the research says do &lt;strong&gt;&lt;strong&gt;fad du jour&lt;/strong&gt;&lt;/strong&gt;
but that doesn&amp;#39;t work for me so I just do &lt;strong&gt;&lt;strong&gt;actually good technique&lt;/strong&gt;&lt;/strong&gt;.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Over the years, I&amp;#39;ve spoken to many teachers and by and large the best
ones discredit &amp;#34;the research.&amp;#34; Of course, my comment will be
discredited by ed researchers saying that &amp;#34;you&amp;#39;re just giving
anecdotes&amp;#34; but then, if I did the same thing while employed as a
researcher, did a couple of surveys and submitted it for publication,
then it would be &amp;#34;research.&amp;#34; So much of teaching is a craft and the
truth is, practitioners know best.
&lt;/p&gt;
&lt;p&gt;
Related to this is authentication by citing authority. Particularly
dangerous in our field because many people with little to no real
background in teaching CS are anointed as experts and thought leaders
(see this post: &lt;a href=&#34;http://cestlaz.github.io/posts/2015-10-26-self-appointed-experts.html/&#34;&gt;here&lt;/a&gt;). In this case, the viewpoint cites Cameron
Fadjo. I&amp;#39;ve only met Cameron once or twice and he seems like a sharp
guy but when he was given the post of Director of Software Engineering
for NYC, according to his linked in profile, he had neither taught k12
nor had any real CS background.  This is of course the profile of many
CS Education thought leaders.
&lt;/p&gt;
&lt;p&gt;
My overall take. It sounds like just like here, Scotland has people
trying to make a difference and trying to do good. It also sounds like
they&amp;#39;re falling into the same traps and pitfalls as we are on this
side of the Atlantic.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>User friendly - I do not think that means what you think it means</title>
      <link>https://cestlaz.github.io/posts/user-friendly/</link>
      <pubDate>Wed, 28 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/user-friendly/</guid>
      <description>&lt;p&gt;
Saw this post the other day: &lt;a href=&#34;https://pupeno.com/2016/09/26/emacs-is-hurting-clojure/&#34;&gt;Emacs is hurting Clojure&lt;/a&gt; and this response: &lt;a href=&#34;http://irreal.org/blog/?p=5597&#34;&gt;Is Emacs Really HJard to Learn / Use&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This called to mind those countless discussions about tools being user
friendly. I&amp;#39;m frequently on the unpopular side of these
discussions. Linux vs Windows vs Mac, Shell vs GUI, Emacs vs
fill-in-the-blank-editor-or-IDE and on and on.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t use Emacs, it isn&amp;#39;t user
friendly. Don&amp;#39;t use Linux, it isn&amp;#39;t user friendly.
&lt;/p&gt;
&lt;p&gt;
The thing is, I don&amp;#39;t think that word means what they think it does.
&lt;/p&gt;
&lt;p&gt;
I tell my kids that Linux and the shell is amazingly user friendly and
Windows and Macs aren&amp;#39;t user friendly at all. Windows, rather, is
&amp;#34;Learner Friendly.&amp;#34; For years, it&amp;#39;s been easy to learn what you can do
on Windows or Mac (as used via the GUI, not dropping to a shell) but
the truth is you can&amp;#39;t do that much. They&amp;#39;re designed as program
loaders not tool kits.
&lt;/p&gt;
&lt;p&gt;
You can learn how to get around and load programs and files very
quickly - much more quickly at first than using a command line
interface. The problem is, at that point, you hit a wall. No doubt
those operating systems are more learner friendly than Linux and the
shell but once you learn the command line, it can be leveraged for all
sorts of things and pretty easily at that - user friendly (see these
posts for some examples: &lt;a href=&#34;http://localhost:8000/categories/cli/&#34;&gt;Shell posts&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
This is important because we have our students use all sorts of tools
and we should be thinking about things like usability but we really
should be thinking about them a little differently.
&lt;/p&gt;
&lt;p&gt;
First, is it learner friendly. Part of this is cost of
entry. Linux has a high cost of entry. On the other hand, while Emacs
might look uglier than other modern editors, the cost of entry is
pretty much the same as any other editor - click or type a command and then you can use
the mouse and drop down menus to get started. Vim, in my opinion, on
the other hand has a higher cost of entry due to its modal nature.
&lt;/p&gt;
&lt;p&gt;
So, there&amp;#39;s no reason not to use Emacs (vs another editor) but you
might pause before using Linux. My approach is to start as if it were
Windows - use the gui, icons and menus, and then slowly introduce the
command line.
&lt;/p&gt;
&lt;p&gt;
Once your past the cost of entry, the we can think about being learner
friendly. As I mentioned, Linux, not so much. Emacs, sure - just like
any other editor with drop downs that then give you keyboard
equivalents.
&lt;/p&gt;
&lt;p&gt;
The keyboard equivalents lead us to another part of learner friendly
– discoverability - can you easily discover new things about the
tool. Here Emacs shines. Linux, maybe not so much.
&lt;/p&gt;
&lt;p&gt;
Once past learner friendly we get to user friendly. The core question
is &amp;#34;can I do what I need to and want to do easily.&amp;#34; For most people, it
comes down to - the tool I know is user friendly and the one I don&amp;#39;t
know and don&amp;#39;t want to take the time to know isn&amp;#39;t. There are some
things that are cumbersome no matter what, but really, when we say
user friendly, most people mean &amp;#34;what I like.&amp;#34; To me, it&amp;#39;s a little
more - is the tool expressive and powerful as well.
&lt;/p&gt;
&lt;p&gt;
So, why is this important? First, we shouldn&amp;#39;t allow our biases to
color the way we expose our kids to tools but at the same time, we
should pay attention to learnability, cost of entry, discoverability,
and indeed, true user friendliness.
&lt;/p&gt;
&lt;table border-spacing=&#34;10px&#34; padding=&#34;10px&#34; rules=&#34;all&#34; frame=&#34;border&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Low Power&lt;/th&gt;
&lt;th&gt;High Power&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;strong&gt;Low Learnability&lt;/strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;CP/M&lt;/td&gt;
&lt;td&gt;Linux Shell, Mac Terminal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;strong&gt;High Learnability&lt;/strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Windows / Mac OS GUI&lt;/td&gt;
&lt;td&gt;Most editors, including Emacs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
So, let&amp;#39;s stop with this &amp;#34;your tool isn&amp;#39;t easy to use&amp;#34; nonsense. Any
tool we don&amp;#39;t know isn&amp;#39;t easy to use until we learn it. Let&amp;#39;s focus on
the path to learning the useful ones.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Can NYCIST become in leader in CS Education?</title>
      <link>https://cestlaz.github.io/posts/nycist/</link>
      <pubDate>Sat, 24 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/nycist/</guid>
      <description>&lt;p&gt;
I only learned about NYCIST last spring. They&amp;#39;re the &amp;#34;New York
Consortium for Independent School Technologists.&amp;#34; They had something
of an open house that I attended. I heard about them from friend
and fellow CS educator &lt;a href=&#34;https://twitter.com/ed_saber&#34;&gt;Saber Khan&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Last Thursday I spent an afternoon and evening with NYCIST members for
a discussion of the state of K12 Computer Science Education in the
City.
&lt;/p&gt;
&lt;p&gt;
Most of my work has been with public schools and most of the teachers
I know, public school teachers so it was great to make new friends in
the Independent school community.
&lt;/p&gt;
&lt;p&gt;
One thing I realized during the evening was that NYCIST has a real
opportunity to do something special.
&lt;/p&gt;
&lt;p&gt;
In some ways, the public schools are leading the way in computer
science education as a result of this administrations CS4All
initiative but at the same time, public schools face some real
challenges. While some &amp;#34;early adopters&amp;#34; have developed their own take
on computer science education, by and large, CS4All is being defined
and driven by few for all and, at least right now, the model seems to
be the &amp;#34;a little PD and you&amp;#39;re a CS teacher&amp;#34; model.
&lt;/p&gt;
&lt;p&gt;
At the same time, standardized testing and teacher evaluations are
pressuring schools, particularly schools of our most vulnerable
students to push resources towards test prep in tested subjects rather
than real education, including CS.
&lt;/p&gt;
&lt;p&gt;
In this particular instance, NYCIST and independent schools can be
what charter schools were supposed to be before they were corrupted.
&lt;/p&gt;
&lt;p&gt;
Laboratories of innovation.
&lt;/p&gt;
&lt;p&gt;
NYCIST has already gathered together interested parties and the
independent schools aren&amp;#39;t burdened by the weight of politically
driven testing and teacher evaluation. At the same time, small class
sizes and flexible models allow for innovation.
&lt;/p&gt;
&lt;p&gt;
If they wanted to, they could probably create curricular and
instructional frameworks for CS education and. dare I say it, share it
back to the public schools.
&lt;/p&gt;
&lt;p&gt;
I know I&amp;#39;m ignoring independent school politics and other issues that
would prevent this from happening, but I just feel that if there&amp;#39;s a
desire to do so from a group like NYCIST, it could happen.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m looking forward to continuing to work with my new friends and if
any of you are interested in finding out more about NYCIST, just tweet
to &lt;a href=&#34;https://twitter.com/ed_saber&#34;&gt;Saber&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if my idea here will take root but if it does, I&amp;#39;d love
to work with NYCIST to make something happen.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Impostor Syndrome - I&#39;m not good enough</title>
      <link>https://cestlaz.github.io/posts/imposters/</link>
      <pubDate>Fri, 09 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/imposters/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been meaning to comment on these tweets for a while:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I went to high school with some scary smart people. Never made math team. Didn&amp;#39;t get into honors math. Thought I wasn&amp;#39;t good at it.&lt;/p&gt;&amp;mdash; Stanislav Nikolov (@snikolov) &lt;a href=&#34;https://twitter.com/snikolov/status/748660381392871424&#34;&gt;June 30, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/zamansky&#34;&gt;@zamansky&lt;/a&gt; :D&lt;br&gt;&lt;br&gt;that&amp;#39;s the thing though you can get such an inferiority complex by always comparing yourself to others &lt;a href=&#34;https://t.co/LvaMjp1WVf&#34;&gt;https://t.co/LvaMjp1WVf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Stanislav Nikolov (@snikolov) &lt;a href=&#34;https://twitter.com/snikolov/status/748918417667727360&#34;&gt;July 1, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
Stan, of course, is one of the most talented people I know.
&lt;/p&gt;
&lt;p&gt;
It reminded me of a conversation I had with my colleague and friend
Jim last year. I had just recieved an email from a former student
turned friend. We were trying to find some time to catch up.  I told
Jim I had just heard from this young lady and Jim replied &amp;#34;I remember
her, she&amp;#39;s awesome. Really smart.&amp;#34; I mention this because the
individual we were talking about, while to us, extremely talented in
addition to being just a terrific person spent much of her career
living in self doubt.
&lt;/p&gt;
&lt;p&gt;
Meantime, I was having a conversation with another friend and the
topic turned to impostor syndrome and the desire to make it a thing of
the past.
&lt;/p&gt;
&lt;p&gt;
Problem is, I don&amp;#39;t know if that will ever be the case. I&amp;#39;m
approaching 50 and have a career of good work behind me but I still
find myself questioning my credentials, work, and ability. Then I realized I wasn&amp;#39;t alone
when I read &lt;a href=&#34;https://twitter.com/RobertTalbert&#34;&gt;Robert Talbert&amp;#39;s&lt;/a&gt; recent &lt;a href=&#34;http://rtalbert.org/blog/2016/tenure-second-time&#34;&gt;blog post&lt;/a&gt; about his going through
the tenure process for a second time and &amp;#34;learning through this process
that I have not outrun impostor syndrome and probably never will.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Stan&amp;#39;s tweets tell part of the story. When we surround ourselves with
smart, accomplished people, we sometimes feel we don&amp;#39;t measure
up. I&amp;#39;ve found that for the most part, the extremely accomplished
people I&amp;#39;ve worked with are very unassuming and low key. They seem to
operate assuming that  everyone else is at least as capable and quick as
they. I recall &lt;a href=&#34;http://paulgraham.com/articles.html&#34;&gt;Paul Graham&lt;/a&gt; talking about this in an essay but
I don&amp;#39;t remember which one. The problem is, if you don&amp;#39;t understand
their sincerity, you end up feeling even more inadequate.
&lt;/p&gt;
&lt;p&gt;
It gets worse when we start comparing ourselves to some unreal
composite. I remember feeling pretty stupid back when I was younger
comparing myself with others. The problem was that I clearly didn&amp;#39;t
measure up to the best math kid, or the best computer kid, the best
fencer, the best violinist, etc. Now, the best math kid might have
been a lousy athlete and the best fencer, a so so mathematician, but
to me, I was comparing myself with this composite super human. No
wonder I never measured up. Eventually, though, I realized three
things. First, there&amp;#39;s always someone better at something and always
someone worse. Second, that&amp;#39;s not the true value of ones worth as a
person, and three, I bring some good stuff to the table and I should
be (and am) content with that
&lt;/p&gt;
&lt;p&gt;
So, I still struggle with impostor syndrome but at the end of the day,
it just serves as a reminder to look back on what I&amp;#39;ve done and what
I&amp;#39;ve learned in the process.  I start out in question but in the end,
leave confident. Maybe the trick isn&amp;#39;t to eliminate impostor syndrome
but rather to understand and contain it. We don&amp;#39;t want to live in fear
and anxiety but both are useful emotions when we control them and not
the reverse.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s probably good when we question ourselves and re-evaluate our
positions - we just have to make sure as we&amp;#39;re bringing new people
into the tech fold that we foster acceptance and confidence  and when
impostor syndrome sets in that it can be channeled into a positive
and not scare people away.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First day back, or not</title>
      <link>https://cestlaz.github.io/posts/first-day-back/</link>
      <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/first-day-back/</guid>
      <description>&lt;p&gt;
The day after Labor Day. The day NYC teachers traditionally return to
work. For the first time in a quarter century, I&amp;#39;m not one of them.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s weird.
&lt;/p&gt;
&lt;p&gt;
Instead, I&amp;#39;m in the second week of Hunter College&amp;#39;s fall semester. So
far so good on that front. I&amp;#39;m getting to know my students, planning
activities and overall having a good time.
&lt;/p&gt;
&lt;p&gt;
But, I do have to reflect on some of the things I&amp;#39;m not going to get
to do this week:
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to have the opportunity to be blindsided by a CS
schedule made without consulting me or any other CS teacher and having
to work frantically to fix it so that the CS teachers have the
programs and rooms they want.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to be able to have that panic attack when the NFS/NIS
server isn&amp;#39;t working and no one can log in.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to sit through a mindless faculty meeting where nothing
is really ever accomplished.
&lt;/p&gt;
&lt;p&gt;
More seriously, I am going to miss seing my friends and colleagues
after the summer and Thursday - the day the kids get back is always a
thrill and I&amp;#39;m going to miss that.
&lt;/p&gt;
&lt;p&gt;
In a way, I&amp;#39;m experiencing a version of what retired teachers go
through. Many teachers retire in June but it&amp;#39;s not until after Labor
Day when the change really sinks in.
&lt;/p&gt;
&lt;p&gt;
Soon, I&amp;#39;ll start posting CS teaching content again but for today, I
want to tip my cap to all the public school teachers in NY that are
going back to work today and who will shortly be teaching their five classes
of thirty four kids each [fn:: also tipping my cap to my favorite TJ
teacher who&amp;#39;s students are back today. I got called to task for
failing to mention her on my facebook shoutout.].
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New Term, New Tool - repl.it</title>
      <link>https://cestlaz.github.io/posts/new-term-new-tool-repl.it/</link>
      <pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/new-term-new-tool-repl.it/</guid>
      <description>&lt;p&gt;
We&amp;#39;re now a week in to my first class at Hunter. It&amp;#39;s a little early
for me to really compare and contrast the high school to college
experience but I thought I&amp;#39;d share some thoughts on a tool that I&amp;#39;ve
recently started to play with.
&lt;/p&gt;
&lt;p&gt;
My students were all supposed to be issued laptops at the beginning of
the semester. The plan was to have them learn Linux, the command line,
and a little DevOps along the way. I guess I shouldn&amp;#39;t have been too
surprised to learn that the laptops weren&amp;#39;t going to come in until
late September.
&lt;/p&gt;
&lt;p&gt;
Scratch all that advance lesson planning. A brief scramble and I was
able to relocate the class into a computer lab but now we can&amp;#39;t
customize the kids environments.
&lt;/p&gt;
&lt;p&gt;
Time to look for an online solution.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re starting the kids off in Python, a choice that I&amp;#39;ll talk about
in some future post and normally my online go to for Python is
&lt;a href=&#34;http://codesters.com&#34;&gt;codesters.com&lt;/a&gt;. I&amp;#39;m a big fan of the codesters team and product. This
time, though, I decided to try something else. Specifically &lt;a href=&#34;http://repl.it&#34;&gt;repl.it&lt;/a&gt;. Partly because, as with
codesters, I like the people behind it. It&amp;#39;s also pretty simple and it
supports a lot of different languages:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
APL, ES2015 ,Bloop, BrainF, C, CoffeeScript, C++, C++11, C#, Emoticon,
Forth, F#, Go, Java, JavaScript, LOLCODE, Lua, Nodejs, PHP, Python,
Python3, QBasic, Roy, Ruby, Rust, Scheme, Swift, Unlambda, and HTML, CSS, JS
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It&amp;#39;s still a pretty new product so there are occasional hiccups but
I&amp;#39;m really liking things so far. Some of the things I like include:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
a simple clean interface.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
sharing and embedding code:
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&amp;lt;script src=&amp;#34;//repl.it/embed/DF3m/19.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
project mode which allows multi file projects
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
examples to get you started
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
But the thing I&amp;#39;m really liking are the teacher features they&amp;#39;re
working on. The teacher interface isn&amp;#39;t fancy. I like that. Things are
simple and clean and they let me get the job done.
&lt;/p&gt;
&lt;p&gt;
I had two extra minutes in class yesterday and in that time, I was
able to:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Make a classroom
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Invite all my students by email
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Create 2 quick assignments.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
The assignment page lets you give starter code as well as instructions
and it also lets you put in tests that are run when a student submits
their work for instant feedback.
&lt;/p&gt;
&lt;p&gt;
I really like the tests feature on projects. So far, I&amp;#39;ve only played
with Python unit tests. Repl.it uses a really easy to follow
interface and has a sample test to guide you. There&amp;#39;s also an option
for input/output matching which includes flexible matching and regular
expressions but I haven&amp;#39;t played with it yet.
&lt;/p&gt;
&lt;p&gt;
Overall, I&amp;#39;m liking this tool. When the kids get their laptops we&amp;#39;ll
probably use it somewhat less as they start to learn to use their own
systems but I&amp;#39;m glad to have repl.it in my teaching arsenal.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 15 - Macros</title>
      <link>https://cestlaz.github.io/posts/using-emacs-15-macros/</link>
      <pubDate>Fri, 02 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-15-macros/</guid>
      <description>&lt;p&gt;
I originally planned on do some videos on C++ development but I&amp;#39;m just
not feeling it. Probably because I&amp;#39;m excited to be working with my
new class and we&amp;#39;re working in Python. We&amp;#39;re not going to be using
C+++ for a few months so I&amp;#39;ll get to those videos a little later.
&lt;/p&gt;
&lt;p&gt;
Today, I want to cover what I consider a leatherman or multi-tool for
Emacs. Something that isn&amp;#39;t perfect for any particular job but can get
almost any job done: Macros.
&lt;/p&gt;
&lt;p&gt;
In their simplest form, macros let you record and play back
keystrokes.
&lt;/p&gt;
&lt;p&gt;
The video goes over the specifics.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Y1oVNBuIoXo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Here are the main functions / keystrokes.
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;kmacro-start-macro-or-insert-counter&lt;/td&gt;
&lt;td&gt;F3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kmacro-end-and-call-macro&lt;/td&gt;
&lt;td&gt;F4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kmacro-name-last-macro&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;insert-kbd-macro&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
This covers most of my use of macros but there&amp;#39;s more. You can adjust
or set the counter, edit old macros and there&amp;#39;s even a way to have a
macro pause for input in the middle.
&lt;/p&gt;
&lt;p&gt;
Here are some links with more information:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Keyboard-Macros.html#Keyboard-Macros&#34;&gt;Emacs manual on macros&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://ergoemacs.org/emacs/emacs_macro_example.html&#34;&gt;http://ergoemacs.org/emacs/emacs_macro_example.html&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://emacs-fu.blogspot.com/2010/07/keyboard-macros.html&#34;&gt;http://emacs-fu.blogspot.com/2010/07/keyboard-macros.html&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If you&amp;#39;re interested in checking out &lt;a href=&#34;http://repl.it&#34;&gt;Repl.it&lt;/a&gt;, which I reference in the
video, check out &lt;a href=&#34;http://cestlaz.github.io/posts/new-term-new-tool-replit/#.V8n_Ed9vH0o%0A&#34;&gt;my blog post&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Federal Aid for Code Schools - is this a good thing?</title>
      <link>https://cestlaz.github.io/posts/fed-aid-for-code-schools/</link>
      <pubDate>Tue, 30 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/fed-aid-for-code-schools/</guid>
      <description>&lt;p&gt;
I saw this headline earlier today: &lt;a href=&#34;http://www.inc.com/salvador-rodriguez/coding-bootcamps-just-got-a-big-boost.html&#34;&gt;The U.S. Just Made a Bold Move to Improve Diversity in Tech&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The article talks about a program by which a number of code schools
will be able to accept federal student aid. I don&amp;#39;t know if we&amp;#39;re
talking student loans or  grants but I&amp;#39;m not sure it matters.
&lt;/p&gt;
&lt;p&gt;
The headline sounds great. I&amp;#39;m not so sure that this is a good thing.
&lt;/p&gt;
&lt;p&gt;
My thinking&amp;#39;s evolved over the years but right now, everything tells
me that public funds and for profit education don&amp;#39;t mix.
&lt;/p&gt;
&lt;p&gt;
What we, more often than not, end up with is a cash cow for a private concern.
&lt;/p&gt;
&lt;p&gt;
Example one: The edTPA - a required exam for teacher licensing, at
least in NY. Prospective teachers pay hundreds of dollars to pass this
gatekeeper. Pearson, a private company (and not even an American one)
is essentially in charge of teacher licensing. They make the
assessments, they grade them, they decide who passes. A foreign
company is deciding who teaches our kids and at great expense to those
prospective teachers.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;d be much better off going back to the old days. To become a
teacher, you had to pass through &amp;#34;The board of examiners.&amp;#34; Basically,
to get your permanent license you had to do an oral defense. Teachers
would be placed in a room of principals, supervisors, and master
teachers for an open grilling. It was cheaper and MUCH more
effective.
&lt;/p&gt;
&lt;p&gt;
Example two: The PSAT 8/9, PSAT, and SAT. These are exams that tell us
one thing: how kids will do on future PSAT and SAT tests. They&amp;#39;re not
good predictors of college success but the college board (a non-profit
in name only) has convinced us, or at least &amp;#34;convinced&amp;#34; our
politicians of the exams importance. So, rather than having
individuals make a choice as to whether or not to take these exams, NY
forks over who knows how much money per year so that our kids can take
a test with the belief that the exam will mystically make them college
ready. To make matters worse, students lose a day of instruction and
teachers have to proctor the exam instead of teaching.
&lt;/p&gt;
&lt;p&gt;
Example three: Common core tests. Made in secret, graded in secret
with cut off scores designed after the fact. Absolutely no educational
value but once again, public funds flow freely into testing companies.
&lt;/p&gt;
&lt;p&gt;
The problem is that these private concerns never really have to show
results and they&amp;#39;re never held accountable and since the money we pay
them is hidden in city and state budgets, the taxpayer is none the wiser.
&lt;/p&gt;
&lt;p&gt;
So, what about code schools?
&lt;/p&gt;
&lt;p&gt;
In a similar vein, money will flow from the government to the code
schools. The question is, do they really have the secret sauce.
&lt;/p&gt;
&lt;p&gt;
I have lots of friends who run and work in code schools and have met
many more. Some code schools are trying to really educate and some
not so much. In any case, let&amp;#39;s take a look.
&lt;/p&gt;
&lt;p&gt;
You frequently hear about the success stories but for every one of
those, you can also find a manager talking about the fact that the
code school graduate can&amp;#39;t do anything other than ape the narrow tool
that they were exposed to in the three or so months at the code
school. So, the truth is that results are probably a mixed bag.
&lt;/p&gt;
&lt;p&gt;
Is this good? Well, when you consider the typical code school MO it
really isn&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
To attend a for profit code school you have to not only afford the
tuition but also be able to sustain yourself for the duration of the
program. That makes most code schools options for the well to do -
those already well positioned for success.
&lt;/p&gt;
&lt;p&gt;
Then they make the candidates go through pre-work – frequently online
course work. So, before you even step into a code school, they know
you&amp;#39;re likely going to succeed.
&lt;/p&gt;
&lt;p&gt;
Once in, they train the candidates in a narrow slice of tech. I&amp;#39;ve
talked to a number of code school leaders about that. I&amp;#39;ve asked how
well the kids would be able to adapt given the constraints of their 3
month or so training. The typical answer was that the candidate could
just re-up and pay again to learn the next limited time only skill.
&lt;/p&gt;
&lt;p&gt;
Should taxpayer dollars go to this? Probably not. There&amp;#39;s no
indication that code schools can provide meaningful long lasting
education to even those who are best prepared to learn on their
own. Whats&amp;#39; more, we haven&amp;#39;t seen evidence that they have the answers
for the under-served. Combine that with government&amp;#39;s history of not
keeping an eye on and not holding accountable private education
providers, I think we&amp;#39;re just setting up a new line of corporate
welfare that will, on the surface help some but it is in no way the
answer.
&lt;/p&gt;
&lt;p&gt;
Too often public/private means that the private entity gets the money
and the public gets stuck holding the bag. Better would be to have
tech companies foot the bill. Some coding schools already do
this. Tech companies that are happy with coding school graduates can
finance the program.
&lt;/p&gt;
&lt;p&gt;
What we should be doing is focusing on things like community
colleges. Organizations that are supposed to be real, long term,
community centers. With moderate tweaking, there&amp;#39;s no reason why a
community college, not to mention 4 year schools, couldn&amp;#39;t provide far
superior preparation than even the best code school.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 14 - Thoughts</title>
      <link>https://cestlaz.github.io/posts/using-emacs-14-thoughts/</link>
      <pubDate>Wed, 17 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-14-thoughts/</guid>
      <description>&lt;p&gt;
Sorry for the incosistancy of the posts. I hope to get to that one
video a week soon but I&amp;#39;ve still got a hectic couple of weeks ahead.
&lt;/p&gt;
&lt;p&gt;
No new material this week, or at least very little. This week, I talk
about some thoughts on the &amp;#34;Using Emacs&amp;#34; series.
&lt;/p&gt;
&lt;p&gt;
In the video I talk about Sacha Chua and her work as a leader in the
Emacs community. Check out her stuff here: &lt;a href=&#34;http://sachachua.com/blog/&#34;&gt;http://sachachua.com/blog/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the video - I hope you enjoy it.
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/tSx_sGgoVNk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
As always, please leave feedback here or on the video.
&lt;/p&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 13 - Yasnippet</title>
      <link>https://cestlaz.github.io/posts/using-emacs-13-yasnippet/</link>
      <pubDate>Thu, 04 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-13-yasnippet/</guid>
      <description>&lt;p&gt;
It turns out that &lt;a href=&#34;https://github.com/jorgenschaefer/elpy&#34;&gt;Elpy&lt;/a&gt;, a popular emacs package for python development
is much easier to set up than I remember. It turns out all you need
is:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package elpy
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(elpy-enable))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The video shows how to install and a bit of use. I don&amp;#39;t think it&amp;#39;s a
package I&amp;#39;m going to use much since I use other tools to do similar
things but it&amp;#39;s worth checking out.
&lt;/p&gt;
&lt;p&gt;
The main event this week is &lt;a href=&#34;https://github.com/joaotavora/yasnippet&#34;&gt;yasnippet&lt;/a&gt;, a package that lets you expand
text aliases. Let&amp;#39;s say you want to put the fairly standard:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
in my file. I can just type &lt;strong&gt;&lt;strong&gt;ifm&lt;/strong&gt;&lt;/strong&gt; and then hit the &lt;strong&gt;&lt;strong&gt;TAB&lt;/strong&gt;&lt;/strong&gt; key and
it would expand to the above code. Yasnippet also lets you leave
placeholders for variables, function names and more. It&amp;#39;s a pretty
neat package.
&lt;/p&gt;
&lt;p&gt;
I use it for boilerplate code. The example in the video shows how I
set up a snippet for the boilerplate code used when creating an
application with the &lt;strong&gt;&lt;strong&gt;Flask&lt;/strong&gt;&lt;/strong&gt; python microframework.
&lt;/p&gt;
&lt;p&gt;
Setting up yasnippet is as easy as:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package yasnippet
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(yas-global-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and it has built in support for &lt;a href=&#34;https://github.com/AndreaCrotti/yasnippet-snippets/tree/9ce0b05f4b4d693831e67dd65d660716a8192e8d&#34;&gt;tons of langauges&lt;/a&gt;. You can also easily
create your own snippets. See the documentation for details on the
file format. Just create a text file for the snippet and place it in a
subidectory under the snippets subdirectory of .emacs.d. The name of
the subdirectory should be the name of the emacs mode for which the
snippet is defined. I put up the snippet I use for flask so feel free
to check that out.
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/4aYMa8f6B0o&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Yasnippet:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/joaotavora/yasnippet&#34;&gt;Home Page&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://joaotavora.github.io/yasnippet/&#34;&gt;Docs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/AndreaCrotti/yasnippet-snippets/tree/9ce0b05f4b4d693831e67dd65d660716a8192e8d&#34;&gt;Included snippets&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Elpy:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/jorgenschaefer/elpy&#34;&gt;Home Page&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Flask:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask Home Page&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 12 - Flycheck, Jedi, Python</title>
      <link>https://cestlaz.github.io/posts/using-emacs-12-python/</link>
      <pubDate>Wed, 27 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-12-python/</guid>
      <description>&lt;p&gt;
This week, we&amp;#39;re going to look at my setup for Python programming.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m an educator, not a professional developer so I&amp;#39;m not working in
huge code bases with dozens or more files at a time. I do periodically
work in medium size code bases and will talk about cross file
navigation and project management later on. There are also more
powerful emacs Python packages. One being &lt;a href=&#34;https://github.com/jorgenschaefer/elpy&#34;&gt;elpy&lt;/a&gt;. Elpy looks pretty cool
but for me, it&amp;#39;s overkill.
&lt;/p&gt;
&lt;p&gt;
Today&amp;#39;s about the basics.
&lt;/p&gt;
&lt;p&gt;
The first tool I show is &lt;a href=&#34;http://www.flycheck.org/en/latest/&#34;&gt;flycheck&lt;/a&gt;. It does code checking on the fly
and supports &lt;a href=&#34;http://www.flycheck.org/en/latest/languages.html#flycheck-languages&#34;&gt;tons of languages&lt;/a&gt;. You might have to install some
external checkers though. For instance, I installed &lt;strong&gt;&lt;strong&gt;pylint&lt;/strong&gt;&lt;/strong&gt; for
python syntax checking with:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo pip install pylint&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Cofiguring flycheck is as easy as:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package flycheck
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(global-flycheck-mode &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The video all shows how I like to run Python from within emacs.
&lt;/p&gt;
&lt;p&gt;
The other tool I use is &lt;a href=&#34;https://github.com/tkf/emacs-jedi&#34;&gt;Jedi&lt;/a&gt;. It provides more extensive completion
for Python.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the setup:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package jedi
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jedi:setup&lt;/span&gt;)
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jedi:ac-setup&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The last hook sets up the autocomplete.
&lt;/p&gt;
&lt;p&gt;
For jedi to work, you&amp;#39;ll need to install the jedi server which is done
in emacs by running &lt;strong&gt;&lt;strong&gt;M-x jedi:install-server&lt;/strong&gt;&lt;/strong&gt;. For that to work,
though, you&amp;#39;ll need to have &lt;a href=&#34;http://docs.python-guide.org/en/latest/dev/virtualenvs/&#34;&gt;Python Virtualenv&lt;/a&gt; istalled. I did that
with:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;EDIT:&lt;/strong&gt;&lt;/strong&gt; I just got a report that you might need to also install epc (&lt;strong&gt;&lt;strong&gt;sudo pip install epc&lt;/strong&gt;&lt;/strong&gt;).
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo pip install virtualenv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here&amp;#39;s the video:
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/wbj_Wjm1Tuw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Flycheck:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://flycheck.org&#34;&gt;Flycheck home page&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.pylint.org/&#34;&gt;Pylint&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://flake8.pycqa.org/en/latest/&#34;&gt;Flake8&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Jedi:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/davidhalter/jedi&#34;&gt;Jedi&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://virtualenv.pypa.io/en/stable/&#34;&gt;Virtualenv&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ed Disruption - why it&#39;s different</title>
      <link>https://cestlaz.github.io/posts/ed-disrupt-why-diff/</link>
      <pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ed-disrupt-why-diff/</guid>
      <description>&lt;p&gt;
Earlier today I read &lt;a href=&#34;http://www.eliothorowitz.com/blog/2016/07/25/innovate-vs-appropriate/&#34;&gt;this post&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/eliothorowitz&#34;&gt;Eliot Horowitz&lt;/a&gt;, founder and CTO of MongoDB.
&lt;/p&gt;
&lt;p&gt;
Eliot titled the post &amp;#34;Innovate vs Appropriate&amp;#34; and talks about the
importance of knowing when to come up with something new vs when to
use the accepted tool, technique, or method. Eliot, of course is
discussing this as it applies to MongoDB and it&amp;#39;s well worth a read
but it got me thinking about the ever popular need to &amp;#34;disrupt&amp;#34;
education.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve witnessed this disruption or Ed Reform for the last decade
plus. The basic notion that public education isn&amp;#39;t working so we need
to disrupt things. We&amp;#39;ve suffered through:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Vouchers
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Charters
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Online &amp;#34;learning&amp;#34; replacing teachers
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Teach for America and other temp type efforts
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Merit pay
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
VAM for teacher evaluation
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
and more
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
These disruptions are brought to you by your friendly neighborhood
billionaire &amp;#34;philanthropist&amp;#34; or your politicians.
&lt;/p&gt;
&lt;p&gt;
By and large, they haven&amp;#39;t worked.
&lt;/p&gt;
&lt;p&gt;
Bill Gates got us to close down community schools and create small
ones. While we did need more small schools, overall it didn&amp;#39;t work
(&lt;a href=&#34;http://www.huffingtonpost.com/marc-epstein/small-schools-miracle-or_b_2641400.html?utm_hp_ref=new-york&#34;&gt;link&lt;/a&gt;, &lt;a href=&#34;https://www.washingtonpost.com/news/answer-sheet/wp/2014/06/09/how-much-bill-gatess-disappointing-small-schools-effort-really-cost/%0A&#34;&gt;link&lt;/a&gt;). VAM teacher evaluation is &lt;a href=&#34;https://www.washingtonpost.com/news/answer-sheet/wp/2014/06/09/how-much-bill-gatess-disappointing-small-schools-effort-really-cost/%0A&#34;&gt;arbitrary and capricious&lt;/a&gt;,
merit pay has &lt;a href=&#34;https://www.washingtonpost.com/blogs/answer-sheet/post/ravitch-why-merit-pay-for-teachers-doesnt-work/2011/03/29/AFn5w9yB_blog.html&#34;&gt;never worked&lt;/a&gt;, nor does the &lt;a href=&#34;http://educationnext.org/online-charters-mostly-dont-work-forum-virtual-schools-greg-richmond/&#34;&gt;online thing&lt;/a&gt;. Meanwhile, charter
schools by and large &lt;a href=&#34;http://www.nea.org/home/32999.htm&#34;&gt;don&amp;#39;t do better&lt;/a&gt; than public schools.
&lt;/p&gt;
&lt;p&gt;
Rather than saving our schools, these efforts have lowered teacher
morale and done little for our most vulnerable children.
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the difference between ed disruption and the tech world?
Well, for starters, those disrupting education totally ignore the very
advice that Eliot posted about today.
&lt;/p&gt;
&lt;p&gt;
Disruption to and of our public schools hasn&amp;#39;t been a matter
appropriating what works and innovating what needs to be innovated but rather
a playground for pet projects of politicians and well meaning rich
folk.  Rather than looking at something simple that works, like, say,
smaller class sizes, we get computerized testing. Instead of
experienced teachers, we get inexperienced newbies that leave after
their commitment is up.
&lt;/p&gt;
&lt;p&gt;
Why the difference? It hit me while reading Eliot&amp;#39;s post. When a
founder is &amp;#34;disrupting&amp;#34; he has skin in the game - it&amp;#39;s his company -
sink or swim. Not so for education reformers. Politicians merely need
to be re-elected.Sso as long as something looks good short term, it is
good. Those who disrupt schools are never held accountable. We got
small schools and VAM from among other places, Bill Gates. He admitted
his reforms didn&amp;#39;t work but was there any penalty for disrupting so
many lives? Nope. For politicians, it&amp;#39;s the same story. As Mayor Mike
Bloomberg once said &amp;#34;If they don&amp;#39;t like my education policy, they can
boo me at parades.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Can we fix this? Sure, but not unless those forcing the changes have
real skin in the game. Will it happen? I&amp;#39;m not holding my breath.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 11 - Reveal.js presentations</title>
      <link>https://cestlaz.github.io/posts/using-emacs-11-reveal/</link>
      <pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-11-reveal/</guid>
      <description>&lt;p&gt;
Happy to be back after a couple of weeks.
&lt;/p&gt;
&lt;p&gt;
My wife and son spent some time in San Francisco, Mountain View, and
Seattle. The main reason was to see our daughter who&amp;#39;s interning out
there for the summer but it was also a great opportunity to catch up
with over 100 former students. If you&amp;#39;re interested in seeing more, I
wrote a bit about it &lt;a href=&#34;http://cestlaz.github.io/posts/end-to-act-1/#.V45OGt9vGAk&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I was originally going to start talking about Python development but
then saw &lt;a href=&#34;https://www.reddit.com/r/emacs/comments/4sp0xs/emacs_org_mode_and_revealjs/&#34;&gt;this&lt;/a&gt; post on reddit about &lt;a href=&#34;https://github.com/hakimel/reveal.js/&#34;&gt;reveal.js&lt;/a&gt; and using it with
org-mode. Since reveal.js with org-mode  is my goto presentation tool
I thought I&amp;#39;d do a video on that before getting back to &amp;#34;your
regularly schedueld program.&amp;#34;
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/psDpCpcIVYs&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
The main package you have to use for reveal.js presentations in
org-mode is org-reveal. The package to install is &lt;strong&gt;&lt;strong&gt;ox-reveal&lt;/strong&gt;&lt;/strong&gt;. I also
installed &lt;strong&gt;&lt;strong&gt;htmlize&lt;/strong&gt;&lt;/strong&gt; for syntax highlighting. Here&amp;#39;s the code from
our configuration file:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package ox-reveal
:ensure ox-reveal)

(setq org-reveal-root &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://cdn.jsdelivr.net/reveal.js/3.0.0/&amp;#34;&lt;/span&gt;)
(setq org-reveal-mathjax &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)

(use-package htmlize
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The org-reveal-root setq tells your presentation where to find the
reveal.js code. In this example, we&amp;#39;re getting from the cloud. You can
also install it locally.
&lt;/p&gt;
&lt;p&gt;
The org-reveal-mathjax is just so that LaTeX equations will look nice.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m hoping the video is pretty self-explanitory and the org-reveal
&lt;a href=&#34;https://github.com/yjwen/org-reveal%0A&#34;&gt;home page&lt;/a&gt; is pretty thorough but since the documentation is lagging a
bit behind the code and due to some versioning issues, here are a
couple of things to watch out for:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
I made a &lt;strong&gt;&lt;strong&gt;samples&lt;/strong&gt;&lt;/strong&gt; folder where I&amp;#39;ll put code for this series that
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
isn&amp;#39;t part of the configurations.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
I showed &lt;strong&gt;&lt;strong&gt;:frag (roll-in)&lt;/strong&gt;&lt;/strong&gt; as an example of revealing list items
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
one at a time. Those parens are important and are needed but weren&amp;#39;t
in earlier versions - this took me far too long to figure out.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
If you read the docs you&amp;#39;ll see that there are many more transitions
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and you can mix and match them on a page.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
You might have to upgrade your emacs packages. If you
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;list-packages&lt;/strong&gt;&lt;/strong&gt;  in eamcs it will tell you if you have packages to
upgrade. You mark them for upgrading by typing &lt;strong&gt;&lt;strong&gt;U&lt;/strong&gt;&lt;/strong&gt; and then do the
upgrade with &lt;strong&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/strong&gt;. If this doesn&amp;#39;t work, you can try getting rid fo
the &lt;strong&gt;&lt;strong&gt;elpa&lt;/strong&gt;&lt;/strong&gt; folder and then re-installing.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The &lt;a href=&#34;http://github.com/zamansky/mazelesson&#34;&gt;mazelesson&lt;/a&gt; sample presentation shows more features, many that we
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
haven&amp;#39;t covered yet. Check it out but remember that it&amp;#39;s for an
earlier version of org-reveal.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Github pages and rawgit are cool.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Hope you enjoy this. Please add any reveal.js tips and tricks of your
own.
&lt;/p&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Reveal.js related linls:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js/&#34;&gt;reveal.js home page&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/yjwen/org-reveal%0A&#34;&gt;org-reveal home page&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://github.com/zamansky/mazelesson&#34;&gt;Sample org reveal site (mazelesson from video)&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
rawgit.com - serving stuff from github
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Github pages: &lt;a href=&#34;https://pages.github.com/&#34;&gt;https://pages.github.com/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>West coast trip - a nice close to act I</title>
      <link>https://cestlaz.github.io/posts/end-to-act-1/</link>
      <pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/end-to-act-1/</guid>
      <description>&lt;img src=&#34;https://cestlaz.github.io/img/end-act-1/facebook.jpg&#34; alt=&#34;/img/end-act-1/facebook.jpg&#34; title=&#34;/img/end-act-1/facebook.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
If I look at my leaving Stuyvesant and the NYC Department of
Education to join Hunter College as the end of Act I of my teaching
career, then our family&amp;#39;s West Coast swing was a nice way to pull
down the curtain.
&lt;/p&gt;
&lt;p&gt;
The impetus for the trip was visiting Batya - she&amp;#39;s interning at
Facebook this summer and having an absolute blast.
&lt;/p&gt;
&lt;p&gt;
The plan was to spend a few days in San Francisco, then a little south
to Mountain View, where Batya was staying, and then fly up to Seattle
for a couple of days.
&lt;/p&gt;
&lt;p&gt;
Of course, while out there, why not see if some of the StuyCS family
wanted to get together.
&lt;/p&gt;
&lt;p&gt;
I knew I had a lot of former students out on the West Coast but still, I was
overwhelmed and humbled by the number of people who wanted to spend
time and catch up.
&lt;/p&gt;
&lt;p&gt;
We kicked things off at Bloomberg Beta thanks to &lt;a href=&#34;https://twitter.com/roybahat&#34;&gt;Roy Bahat.&lt;/a&gt; Roy was
never actually my student but we&amp;#39;ve gotten to know each other over the
years and I value him as a friend and advisor. Roy provided the food
and the space and about 60 former students + a few old timers showed.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/end-act-1/bloomberg.jpg&#34; alt=&#34;/img/end-act-1/bloomberg.jpg&#34; title=&#34;/img/end-act-1/bloomberg.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
A couple of days later, we had a lunch meetup for the Googlers:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/end-act-1/google.jpg&#34; alt=&#34;/img/end-act-1/google.jpg&#34; title=&#34;/img/end-act-1/google.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
and a happy hour at Facebook (sorry, no picture). Then in Seattle, a
nice dinner to close things out.
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/end-act-1/seattle.jpg&#34; alt=&#34;/img/end-act-1/seattle.jpg&#34; title=&#34;/img/end-act-1/seattle.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
Between these events there were some lunches, a barbecue at Batya&amp;#39;s
place  and even a drive by visit with a former student at
Microsoft. Overall, it was easily over 100 students over the course of
the week or so we were out there.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve often said that one of the things I&amp;#39;m proudest of is helping to
build the StuyCS family. A community of people spanning decades. Over
the week, we had events mixing students from the mid 90&amp;#39;s to
youngsters currently in college and on their internships.
&lt;/p&gt;
&lt;p&gt;
Seeing all these people meeting and supporting each other gave me a
&amp;#34;proud pappa&amp;#34; type feeling even though I didn&amp;#39;t do any more than set
the stage for them getting together.
&lt;/p&gt;
&lt;p&gt;
Over the week, the conversations were also great - not the straight
tech ones, but the ones that really made me proud of the crew. From
Seth talking about how to better get good CS Ed to more kids, to PJ
discussing why he feels it&amp;#39;s so important to be an active mentor to
his young programmers and how to get them to be real thinkers, to
Mike, Sam, Kathy, and Leo discussing the disconnect between
privileged families and those struggling to get by.
&lt;/p&gt;
&lt;p&gt;
What more could a teacher want than their former students being both
happy in their lives and careers as well as good people seeking to
make the world better for everyone.
&lt;/p&gt;
&lt;p&gt;
The only thing that made me sad about the trip is that with all the
big events, I really didn&amp;#39;t get a chance to spend the time I wanted
with everyone. I hope to do better next time.
&lt;/p&gt;
&lt;p&gt;
So, I&amp;#39;ve now been at Hunter for one semester and things will really
ramp up in the Fall. I&amp;#39;m still a proud part of our StuyCS family and if
being a part of pulling it together is the legacy I left, I can live
with that.
&lt;/p&gt;
&lt;p&gt;
The trip was a nice symbolic way to lower the curtain on act 1. I&amp;#39;m
counting on the StuyCS family and all the other players to help so
that we can make sure act 2 is a success and we can build something
similar for more young people throughout the city and perhaps the country.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 10 - org init files</title>
      <link>https://cestlaz.github.io/posts/using-emacs-10-org-init/</link>
      <pubDate>Fri, 01 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-10-org-init/</guid>
      <description>&lt;p&gt;
I&amp;#39;ll be traveling for the next couple of weeks so I probably won&amp;#39;t
have time for another video until mid to late July. I&amp;#39;ll probably
write a post about this series and do some regular blogging over that
time but probably no new videos for a couple of weeks.
&lt;/p&gt;
&lt;p&gt;
Also, a couple of notes about the series:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Instead of making a separate git branch for each episode, I&amp;#39;m just
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
adding on to the master branch on GitHub. If you&amp;#39;re not familiar
with Git and GitHub don&amp;#39;t worry about this. Hardly anyone will
notice a difference.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
If this theme doesn&amp;#39;t show well on video, please let me know, I&amp;#39;ll
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
change it.
&lt;/p&gt;
&lt;p&gt;
Ok, now to this installments video.
&lt;/p&gt;
&lt;p&gt;
It talks about using org-mode to store our emacs init file.
&lt;/p&gt;
&lt;p&gt;
The first key is that you can put code-blocks in org-mode:
&lt;/p&gt;
&lt;div class=&#34;src src-org&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;,#+BEGIN_SRC emacs-lisp
(emacs-lisp code goes here)
(more emacs lisp goes here)
(and you can have even more here)
,#+END_SRC&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Since it&amp;#39;s elisp you can run the individual line using the usual &lt;strong&gt;&lt;strong&gt;C-x C-e&lt;/strong&gt;&lt;/strong&gt;
but you can run the entire block by placing your cursor anywhere in
the block and typing &lt;strong&gt;&lt;strong&gt;C-c C-c&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
One minor annoyance about editing code blocks is that it doesn&amp;#39;t do
syntax highlighting or auto indentation. To solve this, emacs lets you
pull up an editing buffer by typing &lt;strong&gt;&lt;strong&gt;C-c &amp;#39;&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;re supposed to be able to save your changes with &lt;strong&gt;&lt;strong&gt;C-c &amp;#39;&lt;/strong&gt;&lt;/strong&gt; again
or &lt;strong&gt;&lt;strong&gt;C-x C-s&lt;/strong&gt;&lt;/strong&gt; and kill the buffer without saving changes with &lt;strong&gt;&lt;strong&gt;C-x
C-k&lt;/strong&gt;&lt;/strong&gt;
but the version of org-mode that came with my version of emacs
didn&amp;#39;t support it - I had to install a newer version of org-mode from
melpa.
&lt;/p&gt;
&lt;p&gt;
I couldn&amp;#39;t figure out how to do this via use-package, but if this
problem happens to you, you can just type &lt;strong&gt;&lt;strong&gt;Alt-x package-install&lt;/strong&gt;&lt;/strong&gt;
and then type &lt;strong&gt;&lt;strong&gt;org&lt;/strong&gt;&lt;/strong&gt; and hit enter to install it.
&lt;/p&gt;
&lt;p&gt;
Once you do that, you might have to reload emacs but then everything
should work.
&lt;/p&gt;
&lt;p&gt;
This lets us move most of our configuration to a separate file. We&amp;#39;re
calling it &lt;strong&gt;&lt;strong&gt;myinit.org&lt;/strong&gt;&lt;/strong&gt; and storing it in our .emacs.d
directory. You can use any name &lt;strong&gt;&lt;strong&gt;except&lt;/strong&gt;&lt;/strong&gt; init.org as I mentioned in
the video.
&lt;/p&gt;
&lt;p&gt;
The file&amp;#39;s a little big so here&amp;#39;s a link to it:
&lt;a href=&#34;https://github.com/zamansky/using-emacs/blob/master/myinit.org&#34;&gt;https://github.com/zamansky/using-emacs/blob/master/myinit.org&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Notice how GitHub formats it to look all nice.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the raw file so you can see the gory details:
&lt;a href=&#34;https://raw.githubusercontent.com/zamansky/using-emacs/master/myinit.org&#34;&gt;https://raw.githubusercontent.com/zamansky/using-emacs/master/myinit.org&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re loading the file in overview mode, when we load it in
emacs we see:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; interface tweaks
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; try
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; which key
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; Org mode
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; Ace windows for easy window switching
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; Swiper &lt;span style=&#34;color:#a6e22e&#34;&gt;/&lt;/span&gt; Ivy &lt;span style=&#34;color:#a6e22e&#34;&gt;/&lt;/span&gt; Counsel
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; Avy &lt;span style=&#34;color:#a6e22e&#34;&gt;-&lt;/span&gt; navigate by searching for a letter on the screen and jumping to it
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; Autocomplete
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; Themes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
We can tab open and close each section and add text to clarify things
around the code blocks.
&lt;/p&gt;
&lt;p&gt;
All that&amp;#39;s left in &lt;strong&gt;&lt;strong&gt;init.el&lt;/strong&gt;&lt;/strong&gt; is:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package&lt;/span&gt;)
(setq package-enable-at-startup &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;)
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package-archives&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://melpa.org/packages/&amp;#34;&lt;/span&gt;))
(package-initialize)

&lt;span style=&#34;color:#75715e&#34;&gt;;; Bootstrap `use-package&amp;#39;&lt;/span&gt;
(unless (package-installed-p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package&lt;/span&gt;)
(package-refresh-contents)
(package-install &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package&lt;/span&gt;))

(org-babel-load-file (&lt;span style=&#34;color:#a6e22e&#34;&gt;expand-file-name&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/.emacs.d/myinit.org&amp;#34;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
With the last line performing the magic of loading our org file and
running all the code blocks.
&lt;/p&gt;
&lt;p&gt;
Finally, we added a couple of small interface changes:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fset&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yes-or-no-p&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;y-or-n-p&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;f5&amp;gt;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;revert-buffer&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The first line lets us type y or n instead of yes or no and the second
let&amp;#39;s us reload a file into our current buffer using the &lt;strong&gt;&lt;strong&gt;f5&lt;/strong&gt;&lt;/strong&gt; key.
&lt;/p&gt;
&lt;p&gt;
I hope you enjoy this video and find it useful:
&lt;/p&gt;
 &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/EX9PKK3EMaw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hillary and Student Loans</title>
      <link>https://cestlaz.github.io/posts/hillary-loans/</link>
      <pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/hillary-loans/</guid>
      <description>&lt;p&gt;
Yesterday I read over Hillary&amp;#39;s briefing on her initiative on
&lt;a href=&#34;https://www.hillaryclinton.com/briefing/factsheets/2016/06/27/hillary-clintons-initiative-on-technology-innovation/&#34;&gt;Technology and Innovation&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
A lot of it sounds good but, at least for the education piece, I have
my doubts. My feeling is that she&amp;#39;s pretty much aligned with the
current administration education wise and the current administration
has been as bad if not worse than the previous with respect to public
education.
&lt;/p&gt;
&lt;p&gt;
While I have issues with some of the education pieces and very much
like some of the others, I don&amp;#39;t want to get into that today. I want
to focus on one specific part of her plan. The part that defers
college debt for up to 3 years for founders and entrepreneurs. This
sounds great but is this really a good thing?
&lt;/p&gt;
&lt;p&gt;
Some initial responses from the education community is &amp;#34;what about
young teachers, don&amp;#39;t they deserve some help on college debt? What
about nurses?…&amp;#34; and of course they&amp;#39;re right. On the other hand, I
don&amp;#39;t want people to go into teaching for 2 or 3 years just to get
some debt relief benefit and then jump ship. That&amp;#39;s the Teach for
America model that I feel has become so harmful.
&lt;/p&gt;
&lt;p&gt;
But again, that&amp;#39;s not where I&amp;#39;m going with this.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s start with &amp;#34;who are these founders?&amp;#34; I don&amp;#39;t have any hard data
but I have read a couple of recent pieces that indicate that founders
right out of college are typically from well to do backgrounds. This
of course makes sense. A kid up to his or her eyes in debt from a poor
background. No savings, no property, likely a family, that is siblings
and parents who are also treading water can ill afford to take a big
financial risk. A kid from a monied family? Much more so.
&lt;/p&gt;
&lt;p&gt;
This alone makes Hillary&amp;#39;s plan a boon for the wealthy but not so
much for the people we need to give a hand up.
&lt;/p&gt;
&lt;p&gt;
Next, this plan talks about the founders and only says it will
&amp;#34;explore similar incentives&amp;#34;  for early employees, citing &amp;#34;10 to 20.&amp;#34;
This doesn&amp;#39;t seem right to me.
&lt;/p&gt;
&lt;p&gt;
Now let&amp;#39;s look further into the benefits. I don&amp;#39;t know what the
success and failure rates are for startups. I&amp;#39;ve seen a bunch of
figures including:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
90% of startups fail within the first three years
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Three out of four startups fail
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Of 10 startups, 3 or 4 totally fail, 3 or 4 break even and the
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
others turn a profit.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know where the truth lies but I&amp;#39;d imagine that the success
rate for startup by a recent college graduate, wet behind the ears is
probably higher than for a more season professionals.
&lt;/p&gt;
&lt;p&gt;
Hillary&amp;#39;s plan defers debt for up to three years. If any of the
failure numbers cited above are near correct it means that these kids
will have burned through up to three years with the experience of a
failed startup to show for it.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve always advised my students, all things being equal, start at a
big or mid size company, develop your chops, learn how they do it,
further build out your network, and then go out and do your
thing. Most kids are better served not going directly from college to
their first startup.
&lt;/p&gt;
&lt;p&gt;
So there it is. A plan that makes for great &amp;#34;press release&amp;#34; but is it
really addressing the issues?
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Teaching,  Mentors, and Role Models</title>
      <link>https://cestlaz.github.io/posts/mentors/</link>
      <pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/mentors/</guid>
      <description>&lt;p&gt;
Yesterday over at &lt;a href=&#34;http://avc.com&#34;&gt;AVC&lt;/a&gt; Fred blogged about the AFSE graduation and
posted a &lt;a href=&#34;http://avc.com/2016/06/afse-commencement-speech/&#34;&gt;transcript of the speech he gave&lt;/a&gt;. It&amp;#39;s well worth a read.
&lt;/p&gt;
&lt;p&gt;
Some of the comments touched on mentors and role models so I though
I&amp;#39;d talk a little about that here.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve always believed that as a parent, modeling - that is, how we
behave is one of the largest shapers of our kids. It&amp;#39;s one thing to
take your kid to a museum because that&amp;#39;s what you should do as a good
parent and another if you think - &amp;#34;I wants to go to that museum and
damn it, I&amp;#39;m taking you along.&amp;#34; I&amp;#39;m no psychologist but my gut tells
me the former is good but the latter is better.
&lt;/p&gt;
&lt;p&gt;
This of course extends to schools. As teachers we deliver instruction
but we also communicate through how we behave. Students are very
perceptive and we can have influences that we don&amp;#39;t even know. I
remember a parent who thanked me because their child started
exercising and being more active because of me. It&amp;#39;s not something I
ever talked to the kid about but I would run after my classes at Stuy,
ride to school and in class I might give an exercise anecdote or
two. Just by doing something healthy and positive where kids can see
it led to some good.
&lt;/p&gt;
&lt;p&gt;
Now, as teachers, we have limited reach and just as in many cases
where a child won&amp;#39;t listen to a parent and needs a friendly teacher to
weigh in, there are plenty of times a student won&amp;#39;t really listen to a
teacher, particularly in CS. Most CS teachers don&amp;#39;t have extensive CS
backgrounds and self taught kids frequently feel they know more. Even
when a student believes that a CS teacher&amp;#39;s got the goods, they&amp;#39;re
skeptical - teaching as a profession has been so beaten up many
students will have a &amp;#34;&amp;#34;so why are you teaching and not working at
Google&amp;#34; attitude.
&lt;/p&gt;
&lt;p&gt;
Even with the best intentions from parents and teachers, for many students,
particularly those from poor backgrounds there are limits to our
influence. If a parent has to work multiple jobs at crazy hours, they
have less time to be a positive role model. If they&amp;#39;ve never been to
college or worked in a white collar profession they won&amp;#39;t have the
connections and resources to effectively guide their child through the
education to profession maze.
&lt;/p&gt;
&lt;p&gt;
This is where mentors and role models become so important.
&lt;/p&gt;
&lt;p&gt;
For me, I first saw this when I was a young teacher. My graduates
hadn&amp;#39;t gotten to the real world yet and I hadn&amp;#39;t developed a
reputation. I&amp;#39;d have friends come in to give tech and industry
talks. What I found was that in addition to being inspirational, it
help authenticate me as being legit. When they would talk about a best
practice that I had already taught them, the classes got the idea that
maybe I did know a thing or two about this CS stuff.
&lt;/p&gt;
&lt;p&gt;
You could see the impact when we held &lt;a href=&#34;http://cestlaz.github.io/posts/2012-03-31-checking-in-with-family.html/#.V3Qkkx9vGAk&#34;&gt;&amp;#34;Tech speed dating&amp;#34; events&lt;/a&gt; where
I mixed current high school students with professionals.
&lt;/p&gt;
&lt;p&gt;
So many comments afterwards like &amp;#34;I didn&amp;#39; know I could do that in CS,&amp;#34;
&amp;#34;now I know what I want to do….&amp;#34; Slam dunk!!
&lt;/p&gt;
&lt;p&gt;
Of course, you have to curate your volunteers. While a guest talk from
a very senior, very established adult can be inspiring some times,
they can be so far removed from the kids next steps, it can actually
be intimidating and a turn off. As a side note, I don&amp;#39;t think that
this would be the case at all with respect to Fred&amp;#39;s graduation
speech. His overall sincerity and the fact that he&amp;#39;s so connected to
the school and known to the kids made sure of that.
&lt;/p&gt;
&lt;p&gt;
When I made my first Hunter college event, I wanted to kick start and
excite the current students and also give myself some CS street cred so
I carefully selected the participants for our first panel / mixer. I
had:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
A young VC
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A mid 30s CTO of a mid size company
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A mid 30s Facebook engineer who also spent time at Google
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Assorted recent college grad tech people from big companies, start ups,
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and everything in between.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
I tried to have a diverse crowd.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I wanted a couple of more senior people to show the end of the road
but I wanted most of the people there to be at &amp;#34;the next rung in the
ladder.&amp;#34; All indications were that the event was also a slam dunk.
&lt;/p&gt;
&lt;p&gt;
Through all of this it&amp;#39;s become pretty apparent to me that bringing in
adult mentors and role models can be even more important than covering
every little bit of whatever curriculum you&amp;#39;re teaching.  Some people
say that we need more female High School CS teachers and while I agree
with that sentiment, I&amp;#39;d rather have the best CS teacher I can get
regardless of background as long as I have amazing women in tech to
provide for my students as role models.
&lt;/p&gt;
&lt;p&gt;
This led me to think about a couple of the CS Ed programs that I
support. TEALS and ScriptEd. I like both, but they&amp;#39;re different
models. In TEALS the volunteer works with the teacher. In ScriptEd,
the volunteer is the teacher. I have many former students that have
volunteered through TEALS but I don&amp;#39;t know any who&amp;#39;ve done SciptEd so
I don&amp;#39;t have the same &amp;#34;inside&amp;#34; info.
&lt;/p&gt;
&lt;p&gt;
For TEALS, those volunteers are also role models. Every day that Etsy
engineer is in the classroom those students see and hear from a tech
professional. What&amp;#39;s more, they see and hear from one who&amp;#39;s taking the
time to be with them.
&lt;/p&gt;
&lt;p&gt;
Of course the same is true for ScriptEd but I wonder if after some
time the students view the ScriptEd volunteer as the teacher rather
than the tech professional.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s probably some interesting research in there.
&lt;/p&gt;
&lt;p&gt;
Finally nothing is better than really being able to hook kids up with
long term mentors. This is something that I think AFSE&amp;#39;s been able to
do but it&amp;#39;s an expensive proposition. It&amp;#39;s something I&amp;#39;d love to see
more of at schools and as part of the basic budget but with all the
money wasted on things like standardized testing and flawed teacher
evaluation systems, I don&amp;#39;t see it coming any time soon.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 9 - Themes</title>
      <link>https://cestlaz.github.io/posts/using-emacs-9-themes/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-9-themes/</guid>
      <description>&lt;p&gt;
Now that we have a nice basic configuration, let&amp;#39;s make Emacs look a
little nicer.
&lt;/p&gt;
&lt;p&gt;
Like most editors, Emacs can be extensively themed.
&lt;/p&gt;
&lt;p&gt;
As shown in the video, you can quickly see the built in themes using
the &lt;strong&gt;&lt;strong&gt;customize-themes&lt;/strong&gt;&lt;/strong&gt; command.
&lt;/p&gt;
&lt;p&gt;
You can load one of these themes by using the &lt;strong&gt;&lt;strong&gt;load-theme&lt;/strong&gt;&lt;/strong&gt; command
interactively or, more likely by putting:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(load-theme &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;leuven&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
in your init.el. The above code loads the built in &lt;strong&gt;&lt;strong&gt;leuven&lt;/strong&gt;&lt;/strong&gt; theme.
&lt;/p&gt;
&lt;p&gt;
I prefer the &lt;strong&gt;&lt;strong&gt;zenburn&lt;/strong&gt;&lt;/strong&gt; theme. For that, you have to load the zenburn
package. Here&amp;#39;s the code in our init.el:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package zenburn-theme
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config (load-theme &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zenburn&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
In the video, I also mention the color theme package.
&lt;/p&gt;
&lt;p&gt;
So, customize away.
&lt;/p&gt;
&lt;p&gt;
In the links, you&amp;#39;ll find some links to some Emacs theme gallery sites
to help find something you like.
&lt;/p&gt;
&lt;p&gt;
Thanks for reading and watching and as always, please leave comments,
suggestions and favorite themes.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the video:
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/cod2ABxlrV8&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Zenburn theme home page: &lt;a href=&#34;https://github.com/bbatsov/zenburn-emacs&#34;&gt;https://github.com/bbatsov/zenburn-emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Emacs theme gallery: &lt;a href=&#34;https://pawelbx.github.io/emacs-theme-gallery/&#34;&gt;https://pawelbx.github.io/emacs-theme-gallery/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Another one: &lt;a href=&#34;https://emacsthemes.com/&#34;&gt;https://emacsthemes.com/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-9-themes&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-9-themes&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 8 - Autocomplete</title>
      <link>https://cestlaz.github.io/posts/using-emacs-8-autocomplete/</link>
      <pubDate>Sun, 26 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-8-autocomplete/</guid>
      <description>&lt;p&gt;
Out of the box, Emacs supports various types of completion.
&lt;/p&gt;
&lt;p&gt;
Tab completion for filenames and commands basically work right out of
the box and Emacs has built in modes like &lt;a href=&#34;https://www.emacswiki.org/emacs/AbbrevMode&#34;&gt;Abbrev&lt;/a&gt;, &lt;a href=&#34;https://www.emacswiki.org/emacs/HippieExpand&#34;&gt;Hippie Expand&lt;/a&gt;, and
&lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Dynamic-Abbrevs.html&#34;&gt;Dabbrev&lt;/a&gt; provide a manner of completion for in buffer text.
&lt;/p&gt;
&lt;p&gt;
I briefly show Dabbrev (Dynamic Abbrevs) in the video and if you&amp;#39;re
interested in the others, follow the links.
&lt;/p&gt;
&lt;p&gt;
We saw ow the built in Ido mode and third party packages like Ivy,
which I prefer, and Helm make for better completions on functions,
filenames, and the like and Emacs also has third party packages for in
buffer completion.
&lt;/p&gt;
&lt;p&gt;
The two main contenders are &lt;a href=&#34;https://github.com/auto-complete/auto-complete&#34;&gt;auto-complete Mode&lt;/a&gt; and &lt;a href=&#34;http://company-mode.github.io/%0A&#34;&gt;company Mode&lt;/a&gt;. I use
auto-complete, others swear by company. The video shows the basics of
auto-complete mode but check both out and decide for yourself.
&lt;/p&gt;
&lt;p&gt;
If you feel strongly about one or the other, please share in the
comments.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a basic configuration:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package auto-complete
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:init
(progn
(ac-config-default)
(global-auto-complete-mode &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
We&amp;#39;ll modify this as move along in the series.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the video:
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5FBVhdyU4dA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Autocomplete home page: &lt;a href=&#34;https://github.com/auto-complete/auto-complete&#34;&gt;https://github.com/auto-complete/auto-complete&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Autocomplete manual: &lt;a href=&#34;http://auto-complete.org/doc/manual.html&#34;&gt;http://auto-complete.org/doc/manual.html&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-8-autocompete&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-8-autocompete&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 7- Navigation with Avy</title>
      <link>https://cestlaz.github.io/posts/using-emacs-7-avy/</link>
      <pubDate>Fri, 24 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-7-avy/</guid>
      <description>&lt;p&gt;
Here&amp;#39;s a really cool navigation method that I&amp;#39;ve been meaning to use
more. Avy is a replacement for ace-jump mode which is an
implementation of easymotion, a vim plugin.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s pretty cool and lets you quickly navigate to any spot on the
screen.
&lt;/p&gt;
&lt;p&gt;
After triggering avy, or more specifically the &lt;strong&gt;&lt;strong&gt;avy-goto-char&lt;/strong&gt;&lt;/strong&gt;
function, emacs prompts you for a single character. When you type it,
all instances of the character that start out words change to a
highlighted letter. Type the highlighted letter and you jump to that
location.
&lt;/p&gt;
&lt;p&gt;
The avy package comes with a bunch of options including a 2 character
search variant, a timed variant which drops into search, and more.
&lt;/p&gt;
&lt;p&gt;
The Avy home page has all the details.
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ziytRbASKeU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Here&amp;#39;s the configuration I&amp;#39;m using:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package avy
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:bind (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M-s&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; avy-goto-char))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You can check the &lt;a href=&#34;https://github.com/abo-abo/avy&#34;&gt;avy home page&lt;/a&gt; for their recommended configuration
which you get by configuring this way instead:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(use-package avy
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
:config
(avy-setup-default))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Avy: &lt;a href=&#34;https://github.com/abo-abo/avy&#34;&gt;https://github.com/abo-abo/avy&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-7-avy&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-7-avy&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Lesson plans - scripts to springboards</title>
      <link>https://cestlaz.github.io/posts/lesson-plans/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/lesson-plans/</guid>
      <description>&lt;p&gt;
I spent last Saturday up at the Microsoft offices in Times Square
observing a &lt;a href=&#34;https://www.tealsk12.org/&#34;&gt;TEALS&lt;/a&gt; training session. My fried &lt;a href=&#34;https://twitter.com/nathanielgranor&#34;&gt;Nathaniel Granor&lt;/a&gt;, Teals
Regional Manager in the east has invited me a number of times and this
time I was able to make it.
&lt;/p&gt;
&lt;p&gt;
If you don&amp;#39;t know, TEALS is a program that takes volunteers in the
tech industry and places them in classrooms. Unlike other programs,
the TEALS volunteers work with the teachers while the kids learn some
CS. The idea is that the teacher will learn about CS from the
volunteer and the volunteer will learn something about teaching.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not the same as having a strong, knowledgeable CS teacher in the
classroom but until we get there, TEALS is doing great work giving
kids something that they need and otherwise wouldn&amp;#39;t get.
&lt;/p&gt;
&lt;p&gt;
At one point, Nathaniel started to talk to the volunteers about lesson
plans emphasizing the fact that TEALS would provide all the lesson materials and
the plans so these new to teaching tech volunteers wouldn&amp;#39;t have to
make curricular decisions.
&lt;/p&gt;
&lt;p&gt;
The lesson plan form was pretty traditional and pretty formulaic:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
warm up
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
hook
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
instruction
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
practice
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Assessment
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Very similar to what I was shown back in the day during my two day
&amp;#34;teaching boot camp&amp;#34; that kicked off my career [fn:: full disclosure: I
came in to teaching with zero education credentials and took the
minimum number of ed classes for my license after I started.] and very
appropriate as an effective and efficient way to prepare these
volunteers for their first days.
&lt;/p&gt;
&lt;p&gt;
This got me thinking about my lesson planning over the years.
&lt;/p&gt;
&lt;p&gt;
When I started, I was teaching math but I wasn&amp;#39;t really a math
guy - I was CS all the way. I had to remember the math from high
school, learn the new topics, and figure out how to teach it.
&lt;/p&gt;
&lt;p&gt;
I had a very supportive department but they were busy with their own
classes and this was pre internet. Fortunately, the NYC DOE published
lesson plan books. They were basically bound volumes of xerox copies
of hand written and typed lesson plans provided by experienced
teachers.
&lt;/p&gt;
&lt;p&gt;
I spent many hours copying them, studying  them, and then later
tweaking them.
&lt;/p&gt;
&lt;p&gt;
They were a life saver back then. How was the teaching? OK. Not
great. I got the material to the kids but I was nothing special. This
is where I started to form my bias against the scripted teaching
that&amp;#39;s being pushed down today.
&lt;/p&gt;
&lt;p&gt;
As I developed my chops, I started to design my own experiences for my
classes and things improved. By the time I was done teaching math -
maybe 4 years in, I was just scratching the surface of being a math
teacher.
&lt;/p&gt;
&lt;p&gt;
One year in, I started teaching CS along with math at Seward
Park. When I was bumped to Stuy, I went back to math for  a year and a
half and then it was all CS all the time.
&lt;/p&gt;
&lt;p&gt;
For CS, we didn&amp;#39;t have lesson plan books so I had to craft everything
from scratch. It was a lot of work but the results were much better.
&lt;/p&gt;
&lt;p&gt;
At first, I would actually write out lesson plans a la math lesson
plans. A &amp;#34;do now,&amp;#34; &amp;#34;instructional objectives,&amp;#34; &amp;#34;applications,&amp;#34;
&amp;#34;Homework,&amp;#34; etc. The only thing I never formally wrote out was a
&amp;#34;medial summary.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Over time, my lessons got better but my lesson plans looked worse and
worse.
&lt;/p&gt;
&lt;p&gt;
There were times a lesson plan might look something like this:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/lesson-plans/plan.jpg&#34; alt=&#34;/img/lesson-plans/plan.jpg&#34; title=&#34;/img/lesson-plans/plan.jpg&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
OK, not exactly but as I developed at my craft, I didn&amp;#39;t need a laid
out script to follow line for line  rather, just a set of little
reminders and maybe some printed out code. If we were going to develop
a complicated algorithm or derivation, though, I would still write out
all the steps.
&lt;/p&gt;
&lt;p&gt;
This doesn&amp;#39;t mean that as my career progressed I planned any less. It
might appear that I&amp;#39;m winging it but even if little to nothing is
written down, there is a plan and there&amp;#39;s always a lot of pre work
before class begins.
&lt;/p&gt;
&lt;p&gt;
Now, to bring this back to TEALS.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s interesting how what&amp;#39;s good in one context is not so much in
another.
&lt;/p&gt;
&lt;p&gt;
What TEALS is doing is great - they&amp;#39;ve got to get a lot of
technologists in to classrooms quickly but once there, they&amp;#39;ll be with
real, hopefully experienced teachers. What they&amp;#39;re doing gets them
ready to go. It&amp;#39;s a starting point, not an end.
&lt;/p&gt;
&lt;p&gt;
On the other hand, when I see scripted curriculum being sold as the
special sauce, be it in CS teacher &amp;#34;training,&amp;#34; Teach for America
summer prep or in the name of charter school uniformity, I run the
other way.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s prepare curricular  materials for important programs like TEALS
and for beginning teachers just starting out but let&amp;#39;s not confuse a
scripted lesson that can be delivered by one and all to be anything
close to the work of a master educator and craftsman.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Better Comments or tooling as a time sink</title>
      <link>https://cestlaz.github.io/posts/better-comments/</link>
      <pubDate>Wed, 22 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/better-comments/</guid>
      <description>&lt;p&gt;
The other day my friend and fellow CS Ed Blogger &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt; wrote
about &lt;a href=&#34;http://blog.acthompson.net/2016/06/better-comments-in-visual-studio.html&#34;&gt;Better Comments&lt;/a&gt;, an extension for visual studio that displays
comments that are marked up  with special characters in order to
highlight them. Here&amp;#39;s a screenshot:
&lt;/p&gt;
&lt;p&gt;
https://raw.githubusercontent.com/omsharp/BetterComments/master/screenshots/ClassificationC.png
&lt;/p&gt;
&lt;p&gt;
So, the first thing I though was &amp;#34;I bet emacs could do that pretty
easily&amp;#34; and down the rabbit hole I went.
&lt;/p&gt;
&lt;p&gt;
I had to figure out something about how emacs themes and font-locking
(emacs for syntax highlighting) works and of course spent far too much
time learning about Emacs, my favored tool, rather than getting actual
work done, but I came up with this:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(make-face &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-important&lt;/span&gt;)
(set-face-foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-important&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#00ff00&amp;#34;&lt;/span&gt;)

(make-face &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-todo&lt;/span&gt;)
(set-face-foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-todo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ff0000&amp;#34;&lt;/span&gt;)

(make-face &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-strike&lt;/span&gt;)
(set-face-attribute &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-strike&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; :strike-through &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)

(defun add-custom-keyw()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adds a few special keywords&amp;#34;&lt;/span&gt;
(font-lock-add-keywords
&lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cx \\(.+\\)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-strike&lt;/span&gt; prepend)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ct \\(.+\\)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-todo&lt;/span&gt; prepend)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ci \\(.+\\)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-important&lt;/span&gt; prepend)
)
))
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;add-custom-keyw&lt;/span&gt;)
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;js2-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;add-custom-keyw&lt;/span&gt;)
(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;js-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;add-custom-keyw&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s a hack but it does indeed work. In action, it looks something
like this:
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/3TLw1yOMKMc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Truth be told, it really colors anything following cx, ct, or ci, not
just in comments – I have to look a bit more into how emacs handles
comments to figure that one out.
&lt;/p&gt;
&lt;p&gt;
In any event, even though I spent too much time doing this, it&amp;#39;s nice
to know I&amp;#39;m working in a tool in which I can.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;&lt;/strong&gt; Thanks to user ncsuwolf on /r/emacs on reddit, here&amp;#39;s a
fully working, more properly done solution:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;(defface font-lock-comment-strike
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; (:strike-through &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)))
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;For strike-through comments&amp;#34;&lt;/span&gt;)

(defface font-lock-comment-important
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; (:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#00ff00&amp;#34;&lt;/span&gt;)))
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;For important&amp;#34;&lt;/span&gt;)
(defface font-lock-comment-todo
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; (:foreground &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#ff0000&amp;#34;&lt;/span&gt;))
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;For todo comments&amp;#34;&lt;/span&gt;)
(defun add-custom-keyw()
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adds a few special keywords&amp;#34;&lt;/span&gt;
(font-lock-add-keywords
&lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\s&amp;lt;+x[[:space:]]*\\(.*?\\)[[:space:]]*\\s&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-strike&lt;/span&gt; prepend)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\s&amp;lt;+t[[:space:]]*\\(.*?\\)[[:space:]]*\\s&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-todo&lt;/span&gt; prepend)
(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\s&amp;lt;+i[[:space:]]*\\(.*?\\)[[:space:]]*\\s&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;font-lock-comment-important&lt;/span&gt; prepend))))

(add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prog-mode-hook&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;add-custom-keyw)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 6 - Searching a Swiper</title>
      <link>https://cestlaz.github.io/posts/using-emacs-6-swiper/</link>
      <pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-6-swiper/</guid>
      <description>&lt;p&gt;
This video is all about using incremental search to navigate through your emacs buffers.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/0mwwN0S1dnQ&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
You can use the default incremental searchb, bound to &lt;strong&gt;&lt;strong&gt;C-s&lt;/strong&gt;&lt;/strong&gt; for
isearch-forward &lt;strong&gt;&lt;strong&gt;C-r&lt;/strong&gt;&lt;/strong&gt; to search backwards (reverse).
&lt;/p&gt;
&lt;p&gt;
They work really well as is but I prefer using &lt;a href=&#34;https://github.com/abo-abo/swiper&#34;&gt;Swiper&lt;/a&gt;. The video demos
both and the &lt;a href=&#34;https://github.com/abo-abo/swiper&#34;&gt;Swiper&lt;/a&gt; home page has loads of details.
&lt;/p&gt;
&lt;p&gt;
Part of the Swiper package includes ivy and counsel which I use instead of ido.
&lt;/p&gt;
&lt;p&gt;
The video also mentions lorem-ipsum mode for generating text quickly and &lt;strong&gt;&lt;strong&gt;describe-mode&lt;/strong&gt;&lt;/strong&gt; in the help system.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the code we added for swiper:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; it looks like counsel is a requirement for swiper&lt;/span&gt;
(use-package counsel
:ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
)

(use-package swiper
:ensure try
:config
(progn
(ivy-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
(setq ivy-use-virtual-buffers &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
(global-set-key &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\C-s&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;swiper&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-c C-r&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ivy-resume&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;f6&amp;gt;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ivy-resume&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;M-x&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-M-x&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-x C-f&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-find-file&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;f1&amp;gt; f&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-describe-function&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;f1&amp;gt; v&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-describe-variable&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;f1&amp;gt; l&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-load-library&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;f2&amp;gt; i&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-info-lookup-symbol&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;f2&amp;gt; u&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-unicode-char&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-c g&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-git&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-c j&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-git-grep&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-c k&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-ag&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-x l&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-locate&lt;/span&gt;)
(global-set-key (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-S-o&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-rhythmbox&lt;/span&gt;)
(&lt;span style=&#34;color:#a6e22e&#34;&gt;define-key&lt;/span&gt; read-expression-map (kbd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C-r&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;counsel-expression-history&lt;/span&gt;)
))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and we commented out the ido stuff:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;;; using swiper so ido no longer needed&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;;;(setq ido-enable-flex-matching t)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;;;(setq ido-everywhere t)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;;;(ido-mode 1)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you want to see a nice video specifically on swiper by the author, here it is:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/VvnJQpTFVDc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Swiper: &lt;a href=&#34;https://github.com/abo-abo/swiper&#34;&gt;&lt;a href=&#34;https://github.com/abo-abo/swiper&#34;&gt;https://github.com/abo-abo/swiper&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The Swiper Manual: &lt;a href=&#34;http://oremacs.com/swiper/&#34;&gt;http://oremacs.com/swiper/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-6-swiper&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-6-swiper&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Robots platforms and practicalities</title>
      <link>https://cestlaz.github.io/posts/robot-survey/</link>
      <pubDate>Wed, 15 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/robot-survey/</guid>
      <description>&lt;p&gt;
I received an email from a friend the other day asking me about a
particular robotics platform she recently saw.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve played with robotics on and off over the years ranging from
building them from (not using) scratch using Atmel chips and programming them in
assembly to using Arduino based platforms to using pre-built robot
platforms. They&amp;#39;re really cool and since they interact with the real
world you can do all sorts of interesting and motivational things with students.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve done these on my own as a hobbyist and also with students either
individually or in small groups, but never as part of a class I had
been teaching.
&lt;/p&gt;
&lt;p&gt;
Why not?
&lt;/p&gt;
&lt;p&gt;
The biggest reason is that the classes I&amp;#39;ve taught are already so
packed full of CS goodness that we can&amp;#39;t even get everything done
that&amp;#39;s theoretically on the syllabi.
&lt;/p&gt;
&lt;p&gt;
The other has to do with practical concerns.
&lt;/p&gt;
&lt;p&gt;
Equipment costs - Let&amp;#39;s say we can get our platform at $100 a pop. I
just can&amp;#39;t see a public school with 34 kids in a class getting one per
student or one for every two.
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the robot to student ratio and how much actual access do
the kids get? If they&amp;#39;re designing  building, do they all get to
design and build? Same question with coding and operating.
&lt;/p&gt;
&lt;p&gt;
Then there&amp;#39;s space – if we&amp;#39;re talking about a mobile platform as
opposed to something that sits on the desk and is near stationary, we
have a problem. The classrooms I&amp;#39;ve taught in can barely hold the
students.
&lt;/p&gt;
&lt;p&gt;
There are also issues with breakage, loss, theft and long term
maintainability - will we be able to or even want to fill in with
compatible units in a few years as needed or will we have to reboot
the program from scratch.
&lt;/p&gt;
&lt;p&gt;
All that to deal with before we even get to the fun of teaching and learning.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m really curious about the experiences of those of you who do teach
using robots and similar platforms.
&lt;/p&gt;
&lt;p&gt;
If you are such a teacher, could you please fill out this form or
leave a comment for anything that the form doesn&amp;#39;t cover?
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe src=&amp;#34;&lt;a href=&#34;https://docs.google.com/forms/d/1FlppDbeiK8uPxh_RkXoCbbdE_UDY_4qXmZWbXlZ0gGg/viewform?embedded=true&#34;&gt;https://docs.google.com/forms/d/1FlppDbeiK8uPxh_RkXoCbbdE_UDY_4qXmZWbXlZ0gGg/viewform?embedded=true&lt;/a&gt;&amp;#34; width=&amp;#34;760&amp;#34; height=&amp;#34;500&amp;#34; frameborder=&amp;#34;0&amp;#34; marginheight=&amp;#34;0&amp;#34; marginwidth=&amp;#34;0&amp;#34;&amp;gt;Loading…&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 5 - Windows</title>
      <link>https://cestlaz.github.io/posts/using-emacs-5-windows/</link>
      <pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-5-windows/</guid>
      <description>&lt;p&gt;
Sorry for the delay in getting this next video / post up. I spent the
last part of last week at &lt;a href=&#34;http://go.personaldemocracy.com/&#34;&gt;The Personal Democracy Forum 2016&lt;/a&gt; which is really an exceptional conference.
&lt;/p&gt;
&lt;p&gt;
I posted a bit about it in my &lt;a href=&#34;http://cestlaz.github.io/posts/pdf2016-lost-in-the-silo/#.V2B9th9vGAk&#34;&gt;last post&lt;/a&gt; and plan to write some more on it, but for now, more Emacs.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/D6OUMVbPKSA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
This video concerns using windows. By using buffers and windows and
the basics you got from the tutorial, you shouldn&amp;#39;t have to ever leave emacs.
&lt;/p&gt;
&lt;p&gt;
From here, we&amp;#39;ll be able to start going over effective Emacs and then
using it for things like development or document creation.
&lt;/p&gt;
&lt;p&gt;
Some of the key window bindings:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;key&lt;/th&gt;
&lt;th&gt;what it does&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;C-x 2&lt;/td&gt;
&lt;td&gt;split-window-below (vertically)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C-x 3&lt;/td&gt;
&lt;td&gt;split-window-right (horizontally)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C-x 0&lt;/td&gt;
&lt;td&gt;delete-window (this one)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C-x 1&lt;/td&gt;
&lt;td&gt;delete-other-windows&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C-x o&lt;/td&gt;
&lt;td&gt;other-window (moves foxus to the next window&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
You also have frames which use &lt;strong&gt;&lt;strong&gt;C-x 5&lt;/strong&gt;&lt;/strong&gt; as the prefix, so &lt;strong&gt;&lt;strong&gt;C-x 5 2&lt;/strong&gt;&lt;/strong&gt;
creats a new frame and &lt;strong&gt;&lt;strong&gt;C-x 5 1&lt;/strong&gt;&lt;/strong&gt; closes the other frames.
&lt;/p&gt;
&lt;p&gt;
Remember, you can always use the help system, in particular &lt;strong&gt;&lt;strong&gt;C-x k&lt;/strong&gt;&lt;/strong&gt;
to describe a key and &lt;strong&gt;&lt;strong&gt;C-x f&lt;/strong&gt;&lt;/strong&gt; to describe a function.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;C-x o&lt;/strong&gt;&lt;/strong&gt; can be a little clunky so some people like to use
&lt;strong&gt;&lt;strong&gt;windmove&lt;/strong&gt;&lt;/strong&gt; which lets you move between windows by holding the shift
key and with the arrows. To set that up, you can add this to your
&lt;strong&gt;&lt;strong&gt;init.el&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(windmove&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;default&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;keybindings)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I prefer using &lt;strong&gt;&lt;strong&gt;ace-window&lt;/strong&gt;&lt;/strong&gt; mode which still uses &lt;strong&gt;&lt;strong&gt;C-x o&lt;/strong&gt;&lt;/strong&gt;:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;; add this to init&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;el
(use&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;package ace&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;window
:ensure t
:init
(progn
(&lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;set&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;key [remap other&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;window] &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ace-window)&lt;/span&gt;
(custom&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;set&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;faces
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(aw-leading-char-face&lt;/span&gt;
((t (:inherit ace&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;jump&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;face&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;foreground :height &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)))))
))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The other mode I mention in the video is winner mode:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(winner&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Which will allow you to use &lt;strong&gt;&lt;strong&gt;C-c left or right&lt;/strong&gt;&lt;/strong&gt; to move through past
window configurations.
&lt;/p&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Ace window mode: &lt;a href=&#34;https://github.com/abo-abo/ace-window&#34;&gt;https://github.com/abo-abo/ace-window&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-5-windows&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-5-windows&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>PDF 2016 - How we lost the open web</title>
      <link>https://cestlaz.github.io/posts/pdf2016-lost-in-the-silo/</link>
      <pubDate>Sat, 11 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/pdf2016-lost-in-the-silo/</guid>
      <description>&lt;p&gt;
I spent the last couple of days attending &lt;a href=&#34;http://go.personaldemocracy.com/&#34;&gt;Personal Democracy Forum
2016&lt;/a&gt;, described on their landing site as:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
The world’s leading conference exploring and analyzing technology&amp;#39;s
impact on politics, government, and society.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That&amp;#39;s the reason why I haven&amp;#39;t posted my latest Emacs video.
&lt;/p&gt;
&lt;p&gt;
PDF is a great conference and raised a huge number of important
issues. I&amp;#39;ll probably blog about a few over the next few weeks.
&lt;/p&gt;
&lt;p&gt;
One topic that I&amp;#39;ve already lamented about has been the way we as a
society are allowing so much information to be silo-ed in platforms
like Facebook.
&lt;/p&gt;
&lt;p&gt;
I use Facebook as much as the next guy but it always irks me when I
see a CS Education post followed by rich discussion hidden within
Facebook&amp;#39;s walls and not available for discovery to the outside world
and the future.
&lt;/p&gt;
&lt;p&gt;
I generally don&amp;#39;t get a lot of comments on my posts, but when I do,
more appear in the Facebook link to my post rather than publicly on
the post itself.
&lt;/p&gt;
&lt;p&gt;
At the conference, we watched a video by &lt;a href=&#34;https://en.wikipedia.org/wiki/Hossein_Derakhshan&#34;&gt;Hossein Derakhshan&lt;/a&gt; which
talked about the direction the web is moving in and the red flags it
should raise with all of us. He echoed my concerns and beyond but in a much more
eloquent way.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m urging you to take the less than ten minutes to watch this
video. I know school&amp;#39;s winding down for all of us but for those of you
who are teachers out there - share this with your students. I&amp;#39;m sure a
rich discussion will follow.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/oBLAZZd_Xqc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Navajo Math Circles</title>
      <link>https://cestlaz.github.io/posts/navajo-circles/</link>
      <pubDate>Wed, 08 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/navajo-circles/</guid>
      <description>&lt;p&gt;
Yesterday, I saw the New York Premiere of &lt;a href=&#34;http://www.zalafilms.com/navajo/&#34;&gt;Navajo Math Circles&lt;/a&gt;, a
documentary on a &lt;a href=&#34;http://www.mathcircles.org/&#34;&gt;Math Circle&lt;/a&gt; put in place to support and enrich the
currently under-served community in the Navajo educational system.
&lt;/p&gt;
&lt;p&gt;
At their core, Math Circles are math outreach and enrichment
programs. I&amp;#39;m most familiar with the &lt;a href=&#34;https://www.nymathcircle.org/&#34;&gt;New York Math Circle&lt;/a&gt;. I&amp;#39;m friends
with many of their teachers and organizers and my son took part in
their summer program for a couple of years.
&lt;/p&gt;
&lt;p&gt;
Over in the southwest, these Math Circles have been bringing together
students, frequently across great distances each day to explore
problem solving and creativity through mathematics.
&lt;/p&gt;
&lt;p&gt;
As someone who&amp;#39;s worked hard to bring educational opportunities to the
have nots, I love the program. Some of the highlights include the kids
working on open ended problems, focusing on process and techniques
more than specific results, working both collaboratively but also
developing self sufficiency, and more. I also love the fact that
they&amp;#39;ve started teacher math circles to help to bring some of that
math circle magic to the everyday classroom.
&lt;/p&gt;
&lt;p&gt;
I enjoyed the film and recommend you check it out to see what&amp;#39;s
possible and I want to share my two big takeaways.
&lt;/p&gt;
&lt;p&gt;
First, early on in the film, one of the people running the program
talked about developing a math enrichment program through and with
Navajo traditions and culture. This is HUGE and I feel it&amp;#39;s something
we&amp;#39;re losing. America is so diverse from coast to coast and here in
New York City you can see radically different ways of life living
right across the street from each other. Everyone pays lip service to
&amp;#34;making the work interesting and relevant to the student&amp;#34; but few
people walk the walk. These folk do.
&lt;/p&gt;
&lt;p&gt;
Second, I left the documentary with a sour taste in my mouth. Not
because of the program but because the Navajo Math Circle project and
projects like it are scraping together what little resources they can
to try to do what the school systems should be doing to begin with.
&lt;/p&gt;
&lt;p&gt;
As we move to scripted lessons, national standards, curricula dictated
or at least influenced by large private concerns and standardized
tests, our schools are moving further and further away from community
and local culture.
&lt;/p&gt;
&lt;p&gt;
In the documentary, one student pointed out that in math class, they
have to use the textbook. They learn the process and then have to
solve the problems. In Math Circle, there are no textbooks.
&lt;/p&gt;
&lt;p&gt;
Afterwards, the students in from the Math Circle did some Q&amp;amp;A. I asked
them to elaborate - what&amp;#39;s the difference between there Math Circle
experiences and their in school ones. I got:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Math Circle is fun!!!!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that says it all.
&lt;/p&gt;
&lt;p&gt;
I know many great teachers who try to bring culture and community to
their classes. One of my son&amp;#39;s best teachers, &lt;a href=&#34;http://www.heinemann.com/authors/828.aspx&#34;&gt;Paula Rogovin&lt;/a&gt; did it all
the time. Many of my friends and colleagues try to do so as well but
the powers that be make it harder and harder.
&lt;/p&gt;
&lt;p&gt;
Until we win back public education it&amp;#39;s important to support programs
like Math Circles (and, if I do say so myself, programs like our own
&lt;a href=&#34;http://cstuy.org&#34;&gt;CSTUY&lt;/a&gt;) and it&amp;#39;s also critical that we work to try to bring community
and culture to our regular classes.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 3 - How to think about Emacs</title>
      <link>https://cestlaz.github.io/posts/using-emacs-3-elisp/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-3-elisp/</guid>
      <description>  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/nyQxRarVYH4&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Many people think of Emacs as an editor. I like to think of it as an Elisp interpreter where you live code documents.
&lt;/p&gt;
&lt;p&gt;
In some ways, it&amp;#39;s like those new fangled interactive programming environments where you type in code and the updates are reflected instantly.
&lt;/p&gt;
&lt;p&gt;
In this video, I try to explain the way I think about Emacs and why it&amp;#39;s so cool.
&lt;/p&gt;
&lt;p&gt;
The only change we made to our configuration was adding:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(tool&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;bar&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Which gets rid of the tool bar at the top.
&lt;/p&gt;
&lt;p&gt;
Next time, we start talking about efficiently using Emacs.
&lt;/p&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-2-org&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-3-elisp&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-3-elisp&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - 4 - Buffers</title>
      <link>https://cestlaz.github.io/posts/using-emacs-4-buffers/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-4-buffers/</guid>
      <description>  &lt;iframe width=&#34;480&#34; height=&#34;270&#34; src=&#34;https://www.youtube.com/embed/v5eTK5lC0xs&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Now that we&amp;#39;re past the intro material, we&amp;#39;ll start looking at emacs
features one at a time. This will let you focus on using the one
feature we&amp;#39;re covering, fit it into your work flow, and really get
comfortable with it.
&lt;/p&gt;
&lt;p&gt;
This time we&amp;#39;ll dive into using Emacs effectively with buffers.
&lt;/p&gt;
&lt;p&gt;
Watch the video and then make a real effort to use buffers over the
next few emacs sessions. Before you know it, they&amp;#39;ll be a natural part
of your work flow.
&lt;/p&gt;
&lt;p&gt;
The idea of incrementally learning a tool this way seems to be called
&lt;a href=&#34;http://sachachua.com/blog/2015/01/developing-emacs-micro-habits-text-automation/&#34;&gt;developing micro-habits&lt;/a&gt; and I first read about the idea from &lt;a href=&#34;https://twitter.com/sachac&#34;&gt;Sacha
Chua&lt;/a&gt; who is an amazing member of the emacs community.
&lt;/p&gt;
&lt;p&gt;
When seeing beginners, I&amp;#39;ll frequently observe this work flow:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Open a terminal
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Load emacs on a file
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Edit the file
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Save and quit emacs
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Try to compile and run the program (since usually this is in a programming class)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
repeat
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If the beginner needs to see multiple files at once, they fire up multiple separate emacs.
&lt;/p&gt;
&lt;p&gt;
All of this causes me physical pain.
&lt;/p&gt;
&lt;p&gt;
In emacs, your editor can load several buffers at once, each
associated with a separate file. You can quickly switch between them,
search across them, and more. The video will get you started.
&lt;/p&gt;
&lt;p&gt;
The video also mentions &lt;strong&gt;ido&lt;/strong&gt; mode. To set up &lt;strong&gt;ido&lt;/strong&gt; mode, add the
following code to your init.el:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(setq ido&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;flex&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;matching t)
(setq ido&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;everywhere t)
(ido&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And here&amp;#39;s a great little write up on it by &lt;a href=&#34;https://www.masteringemacs.org/reading-guide&#34;&gt;Mickey Petersen&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
https://www.masteringemacs.org/article/introduction-to-ido-mode
&lt;/p&gt;
&lt;p&gt;
As I mentioned in the video, I actually use another mode for completions (&lt;a href=&#34;https://github.com/abo-abo/swiper&#34;&gt;swiper&lt;/a&gt;),
which I&amp;#39;ll cover in a future video and another popular option is &lt;a href=&#34;https://github.com/emacs-helm/helm&#34;&gt;helm&lt;/a&gt;
which we&amp;#39;ll also cover.
&lt;/p&gt;
&lt;p&gt;
For buffers, the keys to remember are:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Key&lt;/th&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;C-x b&lt;/td&gt;
&lt;td&gt;switch-buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;C-x C-b&lt;/td&gt;
&lt;td&gt;list-buffers&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
To use ibuffer, which is more powerful than list-buffers you can add
either:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(defalias &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;list-buffers &amp;#39;&lt;/span&gt;ibuffer) ; make ibuffer default&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Or if you want to open ibuffer in another Window:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(defalias &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;list-buffers &amp;#39;&lt;/span&gt;ibuffer&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;other&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;window) ; make ibuffer default&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here are a couple of useful links on ibuffer and buffer switching:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://ergoemacs.org/emacs/emacs_buffer_switching.html&#34;&gt;http://ergoemacs.org/emacs/emacs_buffer_switching.html&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://mytechrants.wordpress.com/2010/03/25/emacs-tip-of-the-day-start-using-ibuffer-asap/&#34;&gt;https://mytechrants.wordpress.com/2010/03/25/emacs-tip-of-the-day-start-using-ibuffer-asap/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Finally, if you like a tab bar, you can add the following to your
init.el:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(use&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;package tabbar
:ensure t
:config (tabbar&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
There&amp;#39;s also a package &lt;a href=&#34;https://github.com/mattfidler/tabbar-ruler.el&#34;&gt;tabbar-ruler&lt;/a&gt; which is supposed to make the
tabbar look nicer but since I don&amp;#39;t use the tabbar at all, I haven&amp;#39;t
checked it out.
&lt;/p&gt;
&lt;p&gt;
Hope this gets you using emacs more effectively.
&lt;/p&gt;
&lt;p&gt;
Stay tuned for our next video on window management.
&lt;/p&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-4-buffers&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-4-buffers&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-4-buffers&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - Intro to Org Mode</title>
      <link>https://cestlaz.github.io/posts/using-emacs-2-org/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-2-org/</guid>
      <description>  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/x5KiYDd9s8k?list=PL9KxKa8NpFxIcNQa9js7dQQIHc81b0-Xg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
This video is a brief introduction to org-mode, a mode I use for all
sorts of things.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll dive into org-mode later in the series. Right now I just want
you to see the basics since we&amp;#39;ll be using org-mode for any notes that
are written up during this series.
&lt;/p&gt;
&lt;p&gt;
Actually, all my blog posts are written in org-mode.
&lt;/p&gt;
&lt;p&gt;
Here are the important lines to add to your Emacs &lt;strong&gt;init.el&lt;/strong&gt; file  to
get the nice looking bullets when in org-mode:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(use&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;package org&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;bullets
:ensure t
:config
(add&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-mode-hook (lambda () (org-bullets-mode 1))))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
About a month ago, Emacs user Harry Schwartz gave a nice overview talk
on org-mode. If you want to get a better idea as to all the things you
can do with it, check it out: &lt;a href=&#34;https://www.youtube.com/watch?v=SzA2YODtgK4&#34;&gt;https://www.youtube.com/watch?v=SzA2YODtgK4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Next time, we&amp;#39;ll look at a little Elisp. After that, we&amp;#39;ll dive in to
using Emacs effectively and efficiently.
&lt;/p&gt;
&lt;p&gt;
Relevant links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-2-org&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-2-org&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-2-org&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Packages
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/sabof/org-bullets&#34;&gt;org-bullets&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - Introduction</title>
      <link>https://cestlaz.github.io/posts/using-emacs-introduction/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-introduction/</guid>
      <description>
&lt;p&gt;
I&amp;#39;m sure I&amp;#39;ve mentioned that I&amp;#39;ve been an Emacs wonk for
decades. Since the mid-80&amp;#39;s in fact. I&amp;#39;ve spent time using other
editors, word processors, and development tools but always find my way
back.
&lt;/p&gt;
&lt;p&gt;
I recommend that budding computer science students develop a good tool
set and encourage them to explore Emacs but while it&amp;#39;s pretty easy to
load Emacs and find your way around, particularly if you use the mouse
and menus there isn&amp;#39;t a clear path to take you from beginner to using
it as an efficient tool let alone customizing it.
&lt;/p&gt;
&lt;p&gt;
Inspired by &lt;a href=&#34;https://www.youtube.com/channel/UCO1cgjhGzsSYb1rsB4bFe4Q/featured&#34;&gt;Mattias Petter Johansson&lt;/a&gt;, or MPJ who make a weekly video,
I decided to try to create a series of YouTube videos and matching
blog posts. I&amp;#39;ll try to post one a week and I&amp;#39;ll try to keep the
videos, at least after the first couple to just a few minutes and have
them focus on &lt;a href=&#34;http://sachachua.com/blog/2015/01/developing-emacs-micro-habits-text-automation/&#34;&gt;micro-habits&lt;/a&gt; - one or two small things that you can
bring to your work flow and internalize.
&lt;/p&gt;
&lt;p&gt;
The first three four (this one and the next three) will focus on
setting things up. After this post we&amp;#39;ll have
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Setting up the package manager
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Intro to org-mode (just so that you recognize the markup)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Intro to Elisp (just so you have an idea of those configuration
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
lines)
&lt;/p&gt;
&lt;p&gt;
and then we&amp;#39;re off to the races. Here&amp;#39;s what I&amp;#39;m thinking about for
the first few topics after the above mentioned ones:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Efficient Navigation
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Windows and Buffers
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Theming
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Auto Completion
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and then a series of short topics to show some of my favorite editing
tools. We&amp;#39;ll also cover some larger topics including:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Python Development
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
C/C++ Development
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Document Preparation
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Scheduling / Calendaring / Note Taking
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I&amp;#39;ll put together an index to these posts along with any ancillary
materials here: &lt;a href=&#34;https://cestlaz.github.io/stories/emacs&#34;&gt;&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;&lt;/a&gt;.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Getting started
&lt;/h2&gt;
&lt;p&gt;
This series is going to assume you&amp;#39;ve installed emacs and worked your
way through the included tutorial.
&lt;/p&gt;
&lt;p&gt;
To help you get to that point, here are some links to posts and sites
that I&amp;#39;ve found useful:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.braveclojure.com/basic-emacs/&#34;&gt;http://www.braveclojure.com/basic-emacs/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.masteringemacs.org/article/beginners-guide-to-emacs&#34;&gt;https://www.masteringemacs.org/article/beginners-guide-to-emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.jesshamrick.com/2012/09/10/absolute-beginners-guide-to-emacs&#34;&gt;http://www.jesshamrick.com/2012/09/10/absolute-beginners-guide-to-emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-use-the-emacs-editor-in-linux&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-use-the-emacs-editor-in-linux&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
And here&amp;#39;s a 10 minute getting started guide:
&lt;/p&gt;
  &lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/K3_SFerNIeI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
So, stay tuned.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs - Setting up the Package Manager</title>
      <link>https://cestlaz.github.io/posts/using-emacs-1-setup/</link>
      <pubDate>Mon, 23 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/using-emacs-1-setup/</guid>
      <description>&lt;p&gt;
This video will step you through setting up Emacs to use &lt;a href=&#34;http://melpa.org/#/&#34;&gt;MELPA&lt;/a&gt; for packages.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/49kBWM3RQQ8?list=PL9KxKa8NpFxIcNQa9js7dQQIHc81b0-Xg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
We configured emacs by creating a folder named &lt;strong&gt;.emacs.d&lt;/strong&gt; and creating a
file within it named &lt;strong&gt;init.el&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the contents of that file:
&lt;/p&gt;
&lt;div class=&#34;src src-emacs-lisp&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-emacs-lisp&#34; data-lang=&#34;emacs-lisp&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;(setq inhibit&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;startup&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;message t)


(require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package)&lt;/span&gt;
(setq package&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;at&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;startup nil)
(add&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;package-archives&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(&amp;#34;melpa&amp;#34; . &amp;#34;https://melpa.org/packages/&amp;#34;))&lt;/span&gt;

(package&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;initialize)

;; Bootstrap &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;`&lt;/span&gt;use&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;package&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
(unless (package&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;installed&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package)&lt;/span&gt;
(package&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;refresh&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;contents)
(package&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;install &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;use-package))&lt;/span&gt;

(use&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;package &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;
:ensure t)

(use&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;package which&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;key
:ensure t
:config
(which&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;key&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;mode))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The last two &lt;strong&gt;inituse-package&lt;/strong&gt; clauses install two helpful packages:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;strong&gt;try&lt;/strong&gt;: let&amp;#39;s you try packages without installing them.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;strong&gt;which-key&lt;/strong&gt;: brings up help on key combinations.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Relavent links:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Video series overview page:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/stories/emacs&#34;&gt;http://cestlaz.github.io/stories/emacs&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code for this video:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-1-setup&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/lesson-1-setup&#34;&gt;https://github.com/zamansky/using-emacs/tree/lesson-1-setup&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Complete code built up over all videos:
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/using-emacs/tree/master&#34;&gt;https://github.com/zamansky/using-emacs/tree/master&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Melpa and packages
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://melpa.org&#34;&gt;&lt;a href=&#34;http://melpa.org&#34;&gt;http://melpa.org&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/justbur/emacs-which-key&#34;&gt;which-key&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/larstvei/Try&#34;&gt;try&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Collaborative Coding or Cheating</title>
      <link>https://cestlaz.github.io/posts/collaborative-coding-or-cheating/</link>
      <pubDate>Fri, 20 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/collaborative-coding-or-cheating/</guid>
      <description>&lt;p&gt;
I haven&amp;#39;t been teaching this past semester. That&amp;#39;s why I haven&amp;#39;t been
writing much about lessons. I miss working with students but that will
resume in the fall and this semester has allowed me to get a jump on
new projects.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also allowed me to look at some student issues from a bit of a
distance.
&lt;/p&gt;
&lt;p&gt;
One issue that keeps coming up is cheating.
&lt;/p&gt;
&lt;p&gt;
Some of it, classroom cheating. my friend &lt;a href=&#34;https://twitter.com/cscheerleader&#34;&gt;Ria&lt;/a&gt; recently asked a
question on Facebook about it. A nice thread ensued but unfortunately,
it&amp;#39;s locked in the Facebook silo. I&amp;#39;ve got a lot to say on that and
hope to explore it soon but today let&amp;#39;s focus on project
cheating - something that could just as easily apply to homeworks and
student essays and research papers as well.
&lt;/p&gt;
&lt;p&gt;
One part of the question is on students using code they find out in
the wild. &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred&lt;/a&gt; wrote a bit about it on his blog &lt;a href=&#34;http://blog.acthompson.net/2016/05/copying-codesteal-from-best.html&#34;&gt;here&lt;/a&gt; where he points
out some pluses, some minuses, and raises some good thought points.
&lt;/p&gt;
&lt;p&gt;
I want to keep it in the class - code sharing amongst students,
project and source code submission, and group projects.
&lt;/p&gt;
&lt;p&gt;
Teachers have all sorts of options these days including:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Using a CMS like Blackboard or Moodle
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Dropbox based solutions
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Emailing projects
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Using development tools and sites such as git with GitHub, BitBucket
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
or other repository hosting services
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve always been a fan of having the kids learn real software
engineering skills along with the CS so Git, GitHub and public repos
have been my weapon of choice.
&lt;/p&gt;
&lt;p&gt;
Interesting enough, I&amp;#39;ve gotten an earful both from fellow teachers
and professors and online for my stance on public repos.
&lt;/p&gt;
&lt;p&gt;
I keep hearing &amp;#34;the kids will copy from each other&amp;#34; or something like
that.
&lt;/p&gt;
&lt;p&gt;
As Alfred said in his post: &amp;#34;Students have been copying from
classmates for years.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Students who want to copy assignments have done so long before we&amp;#39;ve
been teaching CS and they&amp;#39;ll be doing it for years to come.
&lt;/p&gt;
&lt;p&gt;
Using a hidden submission system doesn&amp;#39;t help and could hurt.
&lt;/p&gt;
&lt;p&gt;
Far better to create an open environment. You get an opportunity to
talk about code sharing, attribution, learning from each other,
supporting each other, and where to draw the line.
&lt;/p&gt;
&lt;p&gt;
On top of that, the students learn a real tool set and have a chance
to learn real development methodologies.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a win all around.
&lt;/p&gt;
&lt;p&gt;
Will open repos stop cheating and irresponsible copying? Certainly
not. It could, however, raise awareness.
&lt;/p&gt;
&lt;p&gt;
So what do I do on the cheating front?
&lt;/p&gt;
&lt;p&gt;
Besides trying to create a culture where cheating is discouraged,
cooperation is encouraged but where students know the line, I will try
to keep them honest.
&lt;/p&gt;
&lt;p&gt;
Frequently, the day a big project is due, I&amp;#39;ll give a quiz on the
project. Students will have to describe parts of the project and what
they did. Either a student will have had to contributed or at least
will have had to have studied the rest of the teams code to pass the
quiz.
&lt;/p&gt;
&lt;p&gt;
GitHub also gives tools that help.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the GitHub graph for a project:
&lt;/p&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/github-graph.png&#34; alt=&#34;/img/github-graph.png&#34; title=&#34;/img/github-graph.png&#34; align=&#34;center&#34;/&gt;
&lt;p&gt;
You can see who did what and when. The teacher can drill down further
to examine the diffs – what code did each student write, when, and
from where. If two students submit very similar code, the commit
timestamps will even tell you who was first.
&lt;/p&gt;
&lt;p&gt;
The tooling for teachers could be better but the infrastructure is
there.
&lt;/p&gt;
&lt;p&gt;
Technology isn&amp;#39;t going to prevent cheating and more often than not, it
seems that measures taken don&amp;#39;t stop the bad guys but inconvenience
those trying to do it right.
&lt;/p&gt;
&lt;p&gt;
Much better to build a class culture where the kids want to do it the
right way.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shell short - tagging old posts in Nikola</title>
      <link>https://cestlaz.github.io/posts/shell-short-tagging/</link>
      <pubDate>Sun, 15 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/shell-short-tagging/</guid>
      <description>
&lt;p&gt;
Quick post to add to the recent command line fu I&amp;#39;ve been writing
about.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://twitter.com/dougpete&#34;&gt;Douglas Peterson&lt;/a&gt; had another &lt;strong&gt;&lt;strong&gt;Whatever happened to&lt;/strong&gt;&lt;/strong&gt; post. This time
on &lt;a href=&#34;https://dougpete.wordpress.com/2016/05/15/whatever-happened-to-6/&#34;&gt;Logo&lt;/a&gt;. I wanted to reply, talk about NetLogo  and link to some of my
old NetLogo posts to help show how cool it is.
&lt;/p&gt;
&lt;p&gt;
Nikola supports tags, makes a nice &lt;a href=&#34;http://cestlaz.github.io/categories&#34;&gt;tags&lt;/a&gt; page and for each tag, a nice
page of all the &lt;a href=&#34;http://cestlaz.github.io/categories/netlogo&#34;&gt;links&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Nikola has a plugin &lt;strong&gt;&lt;strong&gt;tags&lt;/strong&gt;&lt;/strong&gt; which lets you manage tags from the
command line. For instance:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;nikola tags -a netlogo posts/somepost.org&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Would add the tag &lt;strong&gt;&lt;strong&gt;netlogo&lt;/strong&gt;&lt;/strong&gt; to the specified post.
&lt;/p&gt;
&lt;p&gt;
The problem: The tags plugin only works if the post has a &lt;strong&gt;&lt;strong&gt;tag:&lt;/strong&gt;&lt;/strong&gt;
line already present in it&amp;#39;s header comment and I hadn&amp;#39;t put them in
my older posts.
&lt;/p&gt;
&lt;p&gt;
I had a bunch of posts, all of them in one directory. All the new ones
were &lt;strong&gt;&lt;strong&gt;.org&lt;/strong&gt;&lt;/strong&gt; files and had the tag slug. The others were &lt;strong&gt;&lt;strong&gt;.md&lt;/strong&gt;&lt;/strong&gt; markdown
files and &lt;strong&gt;&lt;strong&gt;.html&lt;/strong&gt;&lt;/strong&gt; html files.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what a typical top block looks like:
&lt;/p&gt;
&lt;div class=&#34;src src-html&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;title: &amp;#34;Looking for interesting questions&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;date: 2010-01-03
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;--&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Sed to the rescue. Here&amp;#39;s the what I ended up typing (from within the
posts directory) to add the
&lt;strong&gt;&lt;strong&gt;tags&lt;/strong&gt;&lt;/strong&gt; slug to the top comments right above the &lt;strong&gt;&lt;strong&gt;.. type: text:&lt;/strong&gt;&lt;/strong&gt; line:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ls *md *html | &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read filename
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/type: text/ i .. tags: &amp;#34;&lt;/span&gt; $filename
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
A line at a time:
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
ls *md *html
&lt;/h3&gt;
&lt;p&gt;
This lists all the files with that end in &lt;strong&gt;&lt;strong&gt;md&lt;/strong&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;strong&gt;html&lt;/strong&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
| while read filename
&lt;/h3&gt;
&lt;p&gt;
The vertical bar (pipe) sends the output of &lt;strong&gt;&lt;strong&gt;ls&lt;/strong&gt;&lt;/strong&gt; into the &lt;strong&gt;&lt;strong&gt;while read&lt;/strong&gt;&lt;/strong&gt;
command. The &lt;strong&gt;&lt;strong&gt;while&lt;/strong&gt;&lt;/strong&gt; command sets up a loop which, each time
through, reads the next input and places into the variable
&lt;strong&gt;&lt;strong&gt;filename&lt;/strong&gt;&lt;/strong&gt;. The body of the loop is between the &lt;strong&gt;&lt;strong&gt;do&lt;/strong&gt;&lt;/strong&gt; and the
&lt;strong&gt;&lt;strong&gt;done&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
sed &amp;#34;/ type: text/  i .. tags: &amp;#34; $filename
&lt;/h3&gt;
&lt;p&gt;
Sed is the stream editor. The stuff between the slashes finds the line
with the text &lt;strong&gt;&lt;strong&gt;type: text&lt;/strong&gt;&lt;/strong&gt; in it. The &lt;strong&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/strong&gt; inserts a line above and
the rest of the stuff in the quotes is what to insert. The
&lt;strong&gt;&lt;strong&gt;$filename&lt;/strong&gt;&lt;/strong&gt; expands to each filename, one each time through the
loop.
&lt;/p&gt;
&lt;p&gt;
Now all of my files have blank &lt;strong&gt;&lt;strong&gt;tag&lt;/strong&gt;&lt;/strong&gt; slugs so I can find my netlogo
posts and tag them:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;nikola tags -a netlogo &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;grep -i -l netlogo posts/*&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Any command in backticks expands to the result of the commmand. The
grep command has two argiments: &lt;strong&gt;&lt;strong&gt;-i&lt;/strong&gt;&lt;/strong&gt; means ignore case so it will
find netlogo, NetLogo, NETLOGO, etc.. The &lt;strong&gt;&lt;strong&gt;-l&lt;/strong&gt;&lt;/strong&gt; tells grep to just
output the filenames. So, the grep command will expand to a list of
files that mention netlogo. The full command adds the netlogo tag to
all of them.
&lt;/p&gt;
&lt;p&gt;
So, just a bit of quick shell scripting and I&amp;#39;ve:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
modified all old posts to accept tags.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
added the netlogo tag to all my netlogo posts.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
You can find all those posts &lt;a href=&#34;http://cestlaz.github.io/categories/netlogo&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BASH scripting?</title>
      <link>https://cestlaz.github.io/posts/bash-scripting/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/bash-scripting/</guid>
      <description>&lt;p&gt;
Over in the Facebook AP Computer Science Teachers group someone asked
for thoughts on covering BASH scripting as a post AP topic.
&lt;/p&gt;
&lt;p&gt;
A number of us made suggestions. I linked to &lt;a href=&#34;http://cestlaz.github.io/posts/2014-07-06-spreadsheet-vs-cli.html/#.VzR7Et9vETt&#34;&gt;this&lt;/a&gt; old blog post.
&lt;/p&gt;
&lt;p&gt;
One group member said she asked around for similar suggestions and the
response she got was &amp;#34;vi and awk.&amp;#34; I wanted to jokingly respond &amp;#34;and
after they suggested that they got into their time machine and went
back to the 70&amp;#39;s.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
In all seriousness though, I think that suggesting specific tools or
commands is off base.
&lt;/p&gt;
&lt;p&gt;
The important thing to know about Vi is how to get out of it but it
isn&amp;#39;t really a tool in the scripting sense. I do think students should
spend a good amount of time learning a powerful editor and should try
bot Emacs (my choice) and Vim but that&amp;#39;s another story.
&lt;/p&gt;
&lt;p&gt;
I also use AWK but as it&amp;#39;s a programming language in it&amp;#39;s own right,
I&amp;#39;m not sure if I&amp;#39;d introduce it right off the bat.
&lt;/p&gt;
&lt;p&gt;
There are a number of important ideas kids can take away from learning
some Linux (or other Unix flavor):
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
There&amp;#39;s something out there besides Windows and MacOS
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
All about free software
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_philosophy&#34;&gt;The Unix Philosophy&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
That last one is the biggie and more specifically, there&amp;#39;s a huge
upside in teaching kids the value of &amp;#34;OS as Toolset&amp;#34; where they can
compose the many tools that comprise the Linux experience to get
things done.
&lt;/p&gt;
&lt;p&gt;
I gave an example of that in the &lt;a href=&#34;http://cestlaz.github.io/posts/2014-07-06-spreadsheet-vs-cli.html/#.VzSBHt9vETu&#34;&gt;post&lt;/a&gt; I previously linked to.
&lt;/p&gt;
&lt;p&gt;
For the teacher, that means wrapping your head around that way of
working. Living in the shell and using pipes to connect program to
progarm to program.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d recommend getting into a time
machine ourselves and taking a look at:
&lt;/p&gt;
&lt;p width=&#34;250px&#34; align=&#34;center&#34;&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Unix_Programming_Environment&#34;&gt;&lt;img src=&#34;http://upload.wikimedia.org/wikipedia/en/4/43/English4.gif&#34; alt=&#34;http://upload.wikimedia.org/wikipedia/en/4/43/English4.gif&#34; title=&#34;http://upload.wikimedia.org/wikipedia/en/4/43/English4.gif&#34;/&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s dated but it&amp;#39;s really a great book on getting into the Unix way
of doing things, particularly the chapter about filters. It also has
one of the best and clearest introductions to writing a compiler in
the chapter on program development.
&lt;/p&gt;
&lt;p&gt;
As I said, it is dated - shells are much easier to use and much more
robust, there are many more tools now, and they&amp;#39;ve evolved but it&amp;#39;s
really a must read book.
&lt;/p&gt;
&lt;p&gt;
In terms of tools, I get a lot of mileage out of:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;command&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;example&lt;/th&gt;
&lt;th&gt;explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cat&lt;/td&gt;
&lt;td&gt;catenate or display a file&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tr&lt;/td&gt;
&lt;td&gt;Translate characters&lt;/td&gt;
&lt;td&gt;tr A-Z a-z&lt;/td&gt;
&lt;td&gt;convert upper to lower case&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sed&lt;/td&gt;
&lt;td&gt;Stream editor&lt;/td&gt;
&lt;td&gt;sed &amp;#34;s/a/b/g&amp;#34;&lt;/td&gt;
&lt;td&gt;Replace all a with b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wc&lt;/td&gt;
&lt;td&gt;word count&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;counts words lines and chars&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cut&lt;/td&gt;
&lt;td&gt;cut columns&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sort&lt;/td&gt;
&lt;td&gt;sort lines&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
A nice simple thing you can do with these is clean data. Let&amp;#39;s say you
want to do some analytics on a book from Project Gutenberg. You might
want to convert all non letters to spaces, and all letters to lower
case:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;cat book&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;txt &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s/[^a-zA-Z ]/ /g | tr A-Z a-z&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
That sends book.txt into sed which uses a regular expression to convert
no space and letters to spaces. The tr command converts all upper case
letters to lower case.
&lt;/p&gt;
&lt;p&gt;
If you want one word per line, add:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/g&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and maybe get rid of blank lines:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/^$/d&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
We can now count the number of words in the file using &lt;strong&gt;&lt;strong&gt;*wc&lt;/strong&gt;&lt;/strong&gt; or even
get counts of all the words:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sort &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; uniq &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; sort &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;strong&gt;&lt;strong&gt;sort&lt;/strong&gt;&lt;/strong&gt; will sort all the lines, &lt;strong&gt;&lt;strong&gt;uniq -c&lt;/strong&gt;&lt;/strong&gt; will compress the lines that are
adjacent and the same and give you a count and then &lt;strong&gt;&lt;strong&gt;sort -n&lt;/strong&gt;&lt;/strong&gt; will
sort the results numerically.
&lt;/p&gt;
&lt;p&gt;
I wrote another post a while ago about using the shell to detect
who responded on a Google form. It looks like it didn&amp;#39;t convert when
I moved to my current blogging platform - I&amp;#39;ll repost that shortly.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>REPOST - Shell games - who confirmed attendance</title>
      <link>https://cestlaz.github.io/posts/duplicate-emails/</link>
      <pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/duplicate-emails/</guid>
      <description>
&lt;h3 id=&#34;headline-1&#34;&gt;
Repost
&lt;/h3&gt;
&lt;p&gt;
This is a repost from March 2015. It didn&amp;#39;t transfer when I rebooted the blog.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Original
&lt;/h3&gt;
&lt;p&gt;
Quick post on why I love the Unix command line.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re busy organizing &lt;a href=&#34;http://cstuy.org&#34;&gt;CSTUY&amp;#39;s&lt;/a&gt; first &lt;a href=&#34;http://cstuy.org/programs/defhacks&#34;&gt;hackathon&lt;/a&gt;. It&amp;#39;s going to be at
&lt;a href=&#34;http://sumall.com&#34;&gt;SumAll&lt;/a&gt;, where we hold our weekly &lt;a href=&#34;http://cstuy.org/programs/hacking_sessions&#34;&gt;hacking sessions&lt;/a&gt; but while taking
registration, we had a little program.
&lt;/p&gt;
&lt;p&gt;
The kids signed up on a Google doc but we all know the story – when
people sign up for a free event, even one with free food and t-shirts,
many don&amp;#39;t show. I asked all of the applicants to confirm by filling
out a second Google doc.
&lt;/p&gt;
&lt;p&gt;
Then it got to reminder time - I wanted to send an email out to all
those kids who signed up on the first form, but hadn&amp;#39;t confirmed on
the second.
&lt;/p&gt;
&lt;p&gt;
Two Google spreadsheets with an email field. I needed all the people
on sheet 1 that weren&amp;#39;t on sheet 2. I&amp;#39;m sure there&amp;#39;s some
spreadsheet-fu that accomplishes this, but nothing I know. I also
could have written a little python script which isn&amp;#39;t so bad, but this
was a perfect time to turn to the shell.
&lt;/p&gt;
&lt;p&gt;
So, here&amp;#39;s how a command line guy would do this.
&lt;/p&gt;
&lt;p&gt;
To start, I put the emails in two files: e1 and e2. The first has
all the original applicants, the second those that confirmed.
&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;e1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;e2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;25&amp;gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a@a.com&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;b@b.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b@b.com&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;F@f.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c@c.com&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;c@c.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d@d.com&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;d@d.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;e@e.com&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;f@f.com&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;g@g.com&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;h@h.com&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
If we put these lists together, any email that appears twice would
indicate that it&amp;#39;s the email of someone that confirmed entry. Here we
use cat to catenate e1 and e2 and pipe them through sort.
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat e1 e2 | sort&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
First problem –the upper case F – let&amp;#39;s use &lt;strong&gt;&lt;strong&gt;tr&lt;/strong&gt;&lt;/strong&gt; to make
everything lower case:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat e1 e2 |  tr A-Z a-z | sort&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now we can see the duplicates next to each other. Next, &lt;strong&gt;&lt;strong&gt;uniq
-c&lt;/strong&gt;&lt;/strong&gt; tells us how many times each line appears:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat e1 e2 | tr A-Z a-z | sort | uniq -c | sort&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
I added the sort at the end, but we didn&amp;#39;t need it.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what we get:
&lt;/p&gt;
&lt;div class=&#34;verse-block&#34;&gt;
&lt;p&gt;
1 a@a.com
1 c@c.com
1 c@c.dom
1 e@e.com
1 g@g.com
1 h@hc.om
2 b@b.com
2 d@d.com
2 f@f.com
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
To pull out the ones that haven&amp;#39;t replied I used egrep with a regex
that means &amp;#34;any line that starts with 1 or more spaces followed by the
number 1&amp;#34;:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat e1 e2 | tr A-z a-z | sort | uniq -c | egrep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^ +1&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and finally to isolate the emails using sed which removes the spaces
and number 1 from the beginning of the line:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat e1 e2 | tr A-z a-z | sort | uniq -c | egrep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^ +1&amp;#34;&lt;/span&gt; | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s/\ \+1 //g&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Each of the little utilities aren&amp;#39;t all too useful by themselves but
if you learn them over time you start thinking about how you can
combine them to solve problems.
&lt;/p&gt;
&lt;p&gt;
If you think this way and know some basic tools, all of a sudden all
manner of text manipulation problems become pretty easy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Should We Teach HTML?</title>
      <link>https://cestlaz.github.io/posts/teaching_html/</link>
      <pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/teaching_html/</guid>
      <description>&lt;p&gt;
Yesterday, &lt;a href=&#34;https://twitter.com/dougpete&#34;&gt;Doug Peterson&lt;/a&gt; wrote a &amp;#34;Whatever happened to&amp;#34; post subtitled
&lt;a href=&#34;https://dougpete.wordpress.com/2016/05/08/whatever-happened-to-5/&#34;&gt;HTML as an essential 21st Century skill?&lt;/a&gt; It&amp;#39;s a nice post.
&lt;/p&gt;
&lt;p&gt;
I left a comment but thought I&amp;#39;d elaborate here.
&lt;/p&gt;
&lt;p&gt;
No, knowing HTML is not programming - it&amp;#39;s markup. Even so, when I
help people design CS programs, I&amp;#39;ll frequently recommend starting
with HTML or at least introducing it early.
&lt;/p&gt;
&lt;p&gt;
Why?
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a gateway and not just to programming.
&lt;/p&gt;
&lt;p&gt;
HTML is pretty easy, you want &lt;strong&gt;&lt;strong&gt;something&lt;/strong&gt;&lt;/strong&gt; bold, you just wrap the
word in &lt;code class=&#34;verbatim&#34;&gt;&amp;lt;b&amp;gt;&lt;/code&gt; and &lt;code class=&#34;verbatim&#34;&gt;&amp;lt;/b&amp;gt;&lt;/code&gt;:
&lt;/p&gt;
&lt;div class=&#34;src src-html&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-HTML&#34; data-lang=&#34;HTML&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;b&lt;/span&gt;&amp;gt;something&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;b&lt;/span&gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s also empowering and demystifies the web. Kids can create a simple
web page and load it right into their browser.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s true that today&amp;#39;s web pages are chock-full-o javascript and css
but with just the basics, students can get the idea. You can also show
them pages by right clicking and viewing source.
&lt;/p&gt;
&lt;p&gt;
You can even have them change a live page.
&lt;/p&gt;
&lt;p&gt;
Try it.
&lt;/p&gt;
&lt;p&gt;
Right click on the top of this page where it says &amp;#34;Musings about…&amp;#34;
Chose &lt;strong&gt;&lt;strong&gt;inspect element&lt;/strong&gt;&lt;/strong&gt;. In the &amp;#34;debugger&amp;#34; window double click the
text, change it and hit enter. This is just temporary - just reload
the page but it&amp;#39;s pretty neat for a kid to change an article and then
screenshot it.
&lt;/p&gt;
&lt;p&gt;
HTML is also a nice stepping stone towards coding. You&amp;#39;re working in a
plain text editor by adding special code words to basic text which are
then interpreted by, in this case, the web browser.
&lt;/p&gt;
&lt;p&gt;
The big reason for teaching html actually goes beyond this. Next step
after learning HTML is having the kids programatically generating web
pages in whatever language you&amp;#39;re using for the class. I like using
Python. This requires a little infrastructure setup to serve kids work
but then there are two huge wins.
&lt;/p&gt;
&lt;p&gt;
First, as the kids learn programming, instead of just printing out
results, they can make a web site with their results and share it with
friends, family, and the world.
&lt;/p&gt;
&lt;p&gt;
The other big bonus is that kids might be able to leverage take these
skills to other classes. If the student has a history paper to write,
maybe the teacher will accept a history web site where the student can
write code to do their analytics and build nice looking tables and
graphs with results.
&lt;/p&gt;
&lt;p&gt;
So while knowledge of HTML in and of itself isn&amp;#39;t really needed
anymore it&amp;#39;s still an important part of the programs I build.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A World Without Advanced Placement</title>
      <link>https://cestlaz.github.io/posts/world-without-ap/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/world-without-ap/</guid>
      <description>&lt;p&gt;
Some good points in the Facebook comments on my &lt;a href=&#34;http://cestlaz.github.io/posts/ap-we-dont-trust-teachers/#.Vy5aAd9vH0o&#34;&gt;last post&lt;/a&gt;. One notable
comment was the fact that many teachers wouldn&amp;#39;t be able to gain the
traction needed to teach CS without an AP designation. This is true
but also sad that we&amp;#39;ve awarded such educational authority to a
private company that&amp;#39;s accountable to no one. Schools should run
courses because they&amp;#39;re good for kids not specifically because they&amp;#39;re
AP.
&lt;/p&gt;
&lt;p&gt;
Stuyvesant just implemented a policy that every student has to take at
least one AP class to graduate and that now every student in an AP
class has to take the AP exam. There&amp;#39;s also been a push for Stuy to
run APCS Principles in spite of the fact that the current home grown
intro course is superior.
&lt;/p&gt;
&lt;p&gt;
These policies and pushes at Stuy are purely for the sake of ratings
and in no way for the benefit of the student.
&lt;/p&gt;
&lt;p&gt;
But let&amp;#39;s imagine a world without the college board.  To do this we&amp;#39;re
going to have to take off our computer science hats and look at
another, more established high school subject area - mathematics.
&lt;/p&gt;
&lt;p&gt;
First, setting the stage.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s the mid 1990&amp;#39;s. High school students across the nation are taking
math classes. Some are even taking calculus. This makes the College
Board happy since they offer two AP Calculus exams. But the College
Board notices that many students aren&amp;#39;t ready for calculus. To fill
this gap, they create &lt;a href=&#34;https://en.wikipedia.org/wiki/AP_Statistics&#34;&gt;AP Statistics&lt;/a&gt;. First offered in 1997 to 7,667
students it was given to almost 200,000 students last year.
&lt;/p&gt;
&lt;p&gt;
According to wikipedia, the course was created to give an AP
mathematics option for students not ready for calculus.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t seem to recall any huge demand for an AP statistics course but
it was created and adopted. It turned into one of the fastest growing
AP classes and a nice money maker for the college board. I don&amp;#39;t know
how the class was pushed or perceived in other schools but at Stuy it
was seen as a way to get an easy AP math course on the
transcript. Before any statisticians get the torches and pitchforks -
I&amp;#39;m just relaying the student perception. I haven&amp;#39;t looked into the
course sufficiently to form an opinion on it.
&lt;/p&gt;
&lt;p&gt;
Now, let&amp;#39;s imagine a world without the College Board.
&lt;/p&gt;
&lt;p&gt;
An individual school would look at it&amp;#39;s students needs and decide if
they needed an additional math course. Maybe they&amp;#39;d conclude that what they
were doing was fine or maybe they would conclude that a new class was
needed.
&lt;/p&gt;
&lt;p&gt;
If they decided they needed a new advanced course the school would
either have the expertise to create it in house or they&amp;#39;d probably
turn to the local college or university for guidance.
&lt;/p&gt;
&lt;p&gt;
They might end up with a course very similar to AP Statistics or they
might end up with something very different. They might
end up with another class like Discrete Math or they might end up
partnering with the college and having students take classes there. In
all cases, since math teachers generally have a pretty good math
backgroud, schools could make good decisions and design sound
educational experiences for their kids.
&lt;/p&gt;
&lt;p&gt;
All of these seem to be better results for the students than blindly
following the College Board - keeping
education and education decisions local.
&lt;/p&gt;
&lt;p&gt;
What about CS?
&lt;/p&gt;
&lt;p&gt;
I admit that&amp;#39;s a tougher nut to crack.
&lt;/p&gt;
&lt;p&gt;
Most schools generally don&amp;#39;t currently have the in house expertise
needed to build their own solutions or even to really critically judge
what&amp;#39;s out there.
&lt;/p&gt;
&lt;p&gt;
That said, even if you need join the cult of the College Board to get
your school to run some CS you can:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Grab all the materials you can find - those labeled AP and those not
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
labeled AP.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Don&amp;#39;t bother with AP Syllabus certification. Teach what you think is
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
best. Designate the class as honors to differentiate them from other
classes.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Engage with your local college and tech sector. They&amp;#39;re not high
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
school educators but they are valuable resources.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Unrelated side note - be wary of code schools - most don&amp;#39;t really
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
have any educational chops.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Don&amp;#39;t force kids to sit for the exams and only encourage them to do
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
so if the exam will likely do something for the kid.
&lt;/p&gt;
&lt;p&gt;
I think that&amp;#39;s it or my College Board rants.
&lt;/p&gt;
&lt;p&gt;
Then again, I also thought that when I wrote Friday&amp;#39;s post.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advanced Placement - Because We Don&#39;t Trust Teachers</title>
      <link>https://cestlaz.github.io/posts/ap-we-dont-trust-teachers/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/ap-we-dont-trust-teachers/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/college-board/&#34;&gt;Yesterday&lt;/a&gt;, I ranted on about the College Board. This led to a Facebook
hosted discussion which got me thinking a little more:
&lt;/p&gt;
&lt;p&gt;
Advanced Placement exams basically exist because we don&amp;#39;t trust our
high school teachers.
&lt;/p&gt;
&lt;p&gt;
I usually use phrases like &amp;#34;society doesn&amp;#39;t trust&amp;#34; but let&amp;#39;s
personalize it this time – for parents, think about whether or not you trust your
kids teachers? Do you a large private, unaccountable organization
more?
&lt;/p&gt;
&lt;p&gt;
If you teach an advanced placement course, in order for your class to
be listed as AP you have to submit your syllabus to the college board
for approval. This sounds like they&amp;#39;re setting a standard but it&amp;#39;s
not. I can point to a bunch of teachers who have submitted identical syllabi
where sometimes it&amp;#39;s accepted but ofttimes it&amp;#39;s rejected. This is the
syllabus we submitted originally for Stuy. Yes, we have high achieving
kids, but given the fact that the syllabus was approved originally and
that Stuy students just about all score 4 or 5 on APCS-A should tell
you something about the level of care or competence of the College
Board.
&lt;/p&gt;
&lt;p&gt;
Then you teach the class and in May, one to two months before the end
of the semester the kids take the AP exam - you don&amp;#39;t see results
until the summer.
&lt;/p&gt;
&lt;p&gt;
In theory, if the kids do well they can receive placement or
credit. The problem is, fewer and fewer schools are giving credit,
when they do, it might not help due to the way undergrads pay for
courses and placement can generally be achieved by appealing to
college departments or by taking college administered placements.
&lt;/p&gt;
&lt;p&gt;
Back to the trust thing.
&lt;/p&gt;
&lt;p&gt;
In college, you take a course, the final exam is created by the
professor or a group of professors and it&amp;#39;s graded by the people that
teach the course - possibly as a committee. Kids final grades include
these exams but a student can fail a final or even miss one and still
pass the class whereas an AP exam is a one shot deal and even if you
&amp;#34;pass&amp;#34; you might not get anything from it. I&amp;#39;m not even getting into
questioning the quality and content of the exams.
&lt;/p&gt;
&lt;p&gt;
Kids get their grades and college credit. There are no outside
&amp;#34;standardized exams&amp;#34; and we trust that the professors and the colleges
are educating our kids.
&lt;/p&gt;
&lt;p&gt;
Now, in high school, teachers make their lessons, teach their classes,
create, administer, and grade final exams and kids get grade - but not
for college level classes.
&lt;/p&gt;
&lt;p&gt;
I know multiple high school physics, chemistry, math, and computer
science teachers who are far better at teaching than their college
counterparts yet my friend the math teacher isn&amp;#39;t trusted to assess
his calculus students for the purpose of college credit - we don&amp;#39;t
trust him but we trust the faceless entity known as the College
Board.
&lt;/p&gt;
&lt;p&gt;
Why?
&lt;/p&gt;
&lt;p&gt;
Think about that for a minute.
&lt;/p&gt;
&lt;p&gt;
You trust your child&amp;#39;s teacher with your child&amp;#39;s well being every
day but you don&amp;#39;t trust him to say whether or not your kid knows
calculus?
&lt;/p&gt;
&lt;p&gt;
This is a real problem.
&lt;/p&gt;
&lt;p&gt;
I have a friend who frequently doesn&amp;#39;t quite finish the BC Calculus
test topics because he actually teaches the material in depth –
instead of &amp;#34;follow the scripts&amp;#34; the kids go through proofs and
derivations. It costs the kids - I know a number of them who got a 4
on the BC exam rather than a 5 but come the end of June when the class
is done, they know more calculus more deeply than a lot of kids who&amp;#39;ve
taken the class in college.
&lt;/p&gt;
&lt;p&gt;
The lines of college have been blurred with more and more &amp;#34;remedial&amp;#34;
classes being taught at the college level and more and more &amp;#34;college
level&amp;#34; being taught in the high schools.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a really sad state of affairs when we trust our professors - many
of whom are hired more for research than for their teaching chops
and we don&amp;#39;t trust our teachers during our kids more formative years.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>As curricula changes, what&#39;s falling through the cracks?</title>
      <link>https://cestlaz.github.io/posts/semaphores/</link>
      <pubDate>Sun, 01 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/semaphores/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Edit:
&lt;/h2&gt;
&lt;p&gt;
Just a brief note to clarify a couple of things. As indicated in the
comments, this post isn&amp;#39;t  about what&amp;#39;s appropriate for HS CS. It&amp;#39;s
more about what kids have after they finish their education - be it
high school, college, code school, or other.
&lt;/p&gt;
&lt;p&gt;
Some of my thoughts are the results of pondering on the exacerbations
of friends after interviewing people for entry level positions.
&lt;/p&gt;
&lt;p&gt;
The two examples are just to illustrate the point.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Original Post:
&lt;/h2&gt;
&lt;p&gt;
I enjoy reading blogs. It&amp;#39;s one of the ways I keep current. Not only
in terms of what&amp;#39;s going on in CS Education, but also trends in CS -
academic or professional as well as on a range of other topics.
&lt;/p&gt;
&lt;p&gt;
One of the blogs I enjoy is authored by &lt;a href=&#34;https://twitter.com/b0rk&#34;&gt;Julia Evans&lt;/a&gt;. I don&amp;#39;t know
Julia, but we do have some mutual friends. I&amp;#39;ve enjoyed her &lt;a href=&#34;http://jvns.ca&#34;&gt;blog&lt;/a&gt;. She
does a nice job talking about any number of systems related
issue. I&amp;#39;ve tried to leave comments a few times but for some reason,
my comments always end up deleted or otherwise not showing up.
&lt;/p&gt;
&lt;p&gt;
One recent post, one on &lt;a href=&#34;http://jvns.ca/blog/2016/03/29/thread-pools-part-ii-i-love-blocking/&#34;&gt;concurrency&lt;/a&gt; got me thinking. Since the comment
I left there didn&amp;#39;t take, I thought I&amp;#39;d write about it here.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a nice post but the thing that caught my eye was when Julia
said that she &amp;#34; didn&amp;#39;t know what a semaphore was until I read this
code and I was like OH THIS IS AMAZING AND SO USEFUL AND WOW.&amp;#34; I was a
little surprised, semaphores seem to be one of those basic concepts
that you just know but that is, of course incorrect. I first learned
about semaphores in my honors Systems class with my mentor, the late
&lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_Dewar&#34;&gt;Robert Dewar&lt;/a&gt;. We started from test and set and worked our way up. I
had two other undergraduate classes that at least mentioned the topic.
&lt;/p&gt;
&lt;p&gt;
Then again, I knew that many undergrads would never get a good
treatment of concurrency so I tried to build a bit in to the System
Level Programming  course I designed while at Stuy.
&lt;/p&gt;
&lt;p&gt;
This got me thinking - according to her linked in, Julia was a CS
major at McGill - a university that I hold in high regard but either
semaphores were never covered or their treatment didn&amp;#39;t make enough of
an impact to be worth remembering. What topics do we cover in our
classes that kids just let fall to the wayside and what topics do we
end up losing as curricula change and we don&amp;#39;t have an eye on the big
picture.
&lt;/p&gt;
&lt;p&gt;
One big one is memory management. When APCS and college 101 classes
went to Java, memory management went out the window. Not a problem, as
long as memory issues are covered in some other course. Unfortunately
the don&amp;#39;t seem to be. You can make a case that kids don&amp;#39;t need to
understand memory management or anything about garbage collection but
I&amp;#39;d argue that while one might never have to do their own memory
management a good CS person should have some understanding of what&amp;#39;s
going on under the hood or as my friend Gerry says &amp;#34;never use a
technology you couldn&amp;#39;t write yourself.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Another biggie that I lived through was the IBM PC era. Prior to the
mid to late 80&amp;#39;s when the IBM PC ruled the world, kids learned about
CS on timesharing systems. Once the PC took hold, every kid learning
programming or studying CS was working on their own machine. They had
full access to everything and the machine just supported a single
thread.
&lt;/p&gt;
&lt;p&gt;
On the one hand, it was nice since you could easily play with low
level programming and hardware but on the other hand, a hole
generation didn&amp;#39;t learn about the complexities of multiple users and
multiple processes.
&lt;/p&gt;
&lt;p&gt;
Early in my career I designed courses and only later did I realize
that you can&amp;#39;t just design a course, you have to look at the full arc
of a students education.
&lt;/p&gt;
&lt;p&gt;
I think it&amp;#39;s interesting to think about what concepts are getting left
on the side of the road and I wonder if the big players driving CS
education spend any time thinking about this bigger picture.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NYC DOE - Doing what it can to keep opportunities away from kids</title>
      <link>https://cestlaz.github.io/posts/cstuy-coi/</link>
      <pubDate>Thu, 28 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/cstuy-coi/</guid>
      <description>
&lt;p&gt;
The difficulties I&amp;#39;ve had with the city and DOE are pretty well
documented by now.
&lt;/p&gt;
&lt;p&gt;
Today I&amp;#39;m going to tell you about my latest dealings with DOE and how
they prevented my team from bringing free quality CS education to city
students.
&lt;/p&gt;
&lt;p&gt;
CSTUY&amp;#39;s not running SHIP, its summer program this year.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s not something I&amp;#39;m happy about but part of me knew it might
happen. What did surprise me, although it shouldn&amp;#39;t have, was the role that
the NYC DOE played in preventing it from happening.
&lt;/p&gt;
&lt;p&gt;
The bottom line initial reason for us not running SHIP this summer
was my time. Moving over to my new position at Hunter has
been terrific but I haven&amp;#39;t had the time needed for adequate
fundraising and outreach.
&lt;/p&gt;
&lt;p&gt;
I recently talked a bit about the difficulties we&amp;#39;ve had with
fundraising as compared to the &amp;#34;chosen programs&amp;#34; in
&lt;a href=&#34;http://cestlaz.github.io/posts/2016-04-10-thought-leaders/#.VyKAnh9vH0o&#34;&gt;this post&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve also written a bit about related issues in these posts:
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/2015-11-03-teachers-suck.html/#.VyKA9R9vH0o&#34;&gt;http://cestlaz.github.io/posts/2015-11-03-teachers-suck.html/#.VyKA9R9vH0o&lt;/a&gt;
&lt;/h2&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/2015-10-26-self-appointed-experts.html/#.VyKA-x9vH0o&#34;&gt;http://cestlaz.github.io/posts/2015-10-26-self-appointed-experts.html/#.VyKA-x9vH0o&lt;/a&gt;
&lt;/h2&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
&lt;a href=&#34;http://cestlaz.github.io/posts/2015-05-07-learning-takes-time.html/#.VyKBHB9vH0o&#34;&gt;http://cestlaz.github.io/posts/2015-05-07-learning-takes-time.html/#.VyKBHB9vH0o&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;
In any event, we weren&amp;#39;t going to be able to run this summer.
&lt;/p&gt;
&lt;p&gt;
When I spoke to the team, Sam asked, &amp;#34;if we can keep the budget down
and figure out how to not be dependent on fundraising and outreach, can
we do something?&amp;#34; I told him, I&amp;#39;d love to.
&lt;/p&gt;
&lt;p&gt;
He came up with a plan. Instead of a full day program, we&amp;#39;d run half
day - this means fewer staff hours and no lunch. If we could run it at
Stuyvesant, in the computer labs (which already run Linux), we
wouldn&amp;#39;t have to worry about equipment.
&lt;/p&gt;
&lt;p&gt;
Under this plan, additional fundraising wasn&amp;#39;t needed, in fact, kids
could attend free of charge.
&lt;/p&gt;
&lt;p&gt;
In terms of outreach, since we already had sufficient funds, even if
we only got returning shipmates and a few from word of mouth we&amp;#39;d be
ok and if we could cast a wider net, so much the better.
&lt;/p&gt;
&lt;p&gt;
Oh, and the plan was for me to take the summer off. I&amp;#39;d help with
initial organization but I wouldn&amp;#39;t actually work the summer.
&lt;/p&gt;
&lt;p&gt;
So, to summarize:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Free for the kids
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
I&amp;#39;m not involved and receive no compensation for the summer (this is
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
important for later)
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
My teachers would be paid for teaching in the program and CSTUY
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
would supply the funds to pay them.
&lt;/p&gt;
&lt;p&gt;
We floated the idea to Stuyvesant&amp;#39;s principal figuring that since
the teaching staff is from there and some of the kids tat would
benefit are Stuy students it wouldn&amp;#39;t be a problem. She said she loved
the idea but had to send it off to the conflict of interests people.
&lt;/p&gt;
&lt;p&gt;
You see, it&amp;#39;s very important that teachers and former teachers don&amp;#39;t
actually benefit from working extra – it&amp;#39;s critical that teachers be
kept down.
&lt;/p&gt;
&lt;p&gt;
Long story short - the teachers could work the program but aren&amp;#39;t
allowed to run it. They can come in and teach but can&amp;#39;t talk to the
principal about organizing it. For some reason, running a &lt;strong&gt;&lt;strong&gt;free&lt;/strong&gt;&lt;/strong&gt;
program for kids instead of relaxing over the summer means that the
teachers are getting this &lt;strong&gt;&lt;strong&gt;huge&lt;/strong&gt;&lt;/strong&gt; benefit. Sure they&amp;#39;d be paid for
their time, but that seems fair.
&lt;/p&gt;
&lt;p&gt;
As to me, I&amp;#39;m not allowed any dealings with the DOE for a year. Forget
the fact that I wanted to set this up while taking &lt;strong&gt;&lt;strong&gt;no&lt;/strong&gt;&lt;/strong&gt; pay so that
the kids wouldn&amp;#39;t be left without a program. Nope, that&amp;#39;s no good -
can&amp;#39;t have us bringing quality CS education to the kids.
&lt;/p&gt;
&lt;p&gt;
I dealt with these folks once before so I wasn&amp;#39;t really surprised.
&lt;/p&gt;
&lt;p&gt;
A few years ago, a friend connected me with people at Amplify
to see about creating their APCS MOOC. We met a couple of times but
then the DOE people said I couldn&amp;#39;t work with them even though I was
just going to be working on the MOOC and not dealing directly with the
DOE in any way. I wasn&amp;#39;t negotiating contracts, making sales pitches,
or anything. I was just going to work on MOOC content.
&lt;/p&gt;
&lt;p&gt;
It wasn&amp;#39;t like a certain NYC School&amp;#39;s Chancellor who had just left the DOE and
took the leadership position at Amplify. That wasn&amp;#39;t a conflict - I
guess it&amp;#39;s just important to keep the teachers in line - the rules
aren&amp;#39;t meant for the higher ups.
&lt;/p&gt;
&lt;p&gt;
Funny side note – when I shared the fact that I couldn&amp;#39;t work for
Amplify with my friend, his first reaction was &amp;#34;because of the union?&amp;#34;
That seems to be the knee-jerk reaction from people in the business
world. Nope - the union was fine with it - it was the administration /
city. The city has done &lt;strong&gt;&lt;strong&gt;far&lt;/strong&gt;&lt;/strong&gt; more harm to the public schools than
the union ever could. Pretty much all the union does is make sure the
city follows the jointly negotiated contract.
&lt;/p&gt;
&lt;p&gt;
Back to the story.
&lt;/p&gt;
&lt;p&gt;
So, we&amp;#39;re not allowed to use school space to bring free CS education
to kids this summer. Plenty of other organizations non-profit and
for-profit alike seem to have no problem bringing their programs into
the schools. I&amp;#39;m sure many are getting money for this, grant based or
otherwise. In all cases, I&amp;#39;d take my team and their program over what
the DOE is actually rolling out.
&lt;/p&gt;
&lt;p&gt;
This is the type of thing makes me want to say to hell with DOE but,
unfortunately, they aren&amp;#39;t affected, it&amp;#39;s the kids that lose out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Awards for Educators</title>
      <link>https://cestlaz.github.io/posts/awards/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/awards/</guid>
      <description>&lt;p&gt;
There are all sorts of awards for teachers. The Presidential awards,
NEA awards, National and State level awards, and more. There are also
awards and honors given in more narrow areas like NCTM for math and
our own ACM.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve haven&amp;#39;t won any and never expected to. I&amp;#39;ve never played well
with the establishment.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s ok though. For every honoree that I can point to and say &amp;#34;there&amp;#39;s
a master teacher,&amp;#34; there are half a dozen who you look at just know
that it was more about politics and connections than about teaching
chops.
&lt;/p&gt;
&lt;p&gt;
Like anyone else, though, I do like a pat on the back and it is nice
to get some confirmation that you&amp;#39;re having a positive effect on kids
lives.
&lt;/p&gt;
&lt;p&gt;
So what are my awards? Well, I received what I consider my highest
honor this past weekend. I was in Hot Springs Arkansas for Jen and
Marcel&amp;#39;s wedding.
&lt;/p&gt;
&lt;p&gt;
It was a great weekend with old friends and new celerbrating a
wonderful event and I couldn&amp;#39;t be happier for the couple.
&lt;/p&gt;
&lt;p&gt;
As a teacher, to be included in your former students life events is as
big as it gets. I can&amp;#39;t begin to say how honored I was to be included
in their day. Even more special, that Marcel&amp;#39;s brother Barnabas and
his wife Suki are my oldest couple - they started dating back in my
class back in the beginning.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not the first time I&amp;#39;ve been invited to former students
weddings. I&amp;#39;ve seen around a dozen or so of my students wed. Every
time it&amp;#39;s special, just as it&amp;#39;s special when a former student decides
to reach out to let me know how they&amp;#39;re doing or to reconnect in
general. When they elect to share part of their lives with me, it
tells me that I was at least a little bit of a force for good way back
when.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Become a CS Education Thought Leader - No Experience Needed</title>
      <link>https://cestlaz.github.io/posts/2016-04-20-thought-leaders/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-04-20-thought-leaders/</guid>
      <description>&lt;p&gt;
A few weeks ago, a friend asked if I knew any CS teachers that were
available to work this summer. At the time, I didn&amp;#39;t have anyone to
recommend. We were still up in the air on running CSTUY&amp;#39;s SHIP summer
immersion program.
&lt;/p&gt;
&lt;p&gt;
We ultimately decided not to run SHIP this summer. Mostly due to the
fact that in my new position, I didn&amp;#39;t have the time to do the
necessary fund-raising and outreach. We&amp;#39;re continuing with our Saturday
program through mid May and plan to bring more opportunities to the
kids of New York City in the future.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s not what I want to write about today. That summer program
looking for a teacher, let&amp;#39;s call it program X made me think about
many of the players driving K12 CS education both in NY and beyond.
&lt;/p&gt;
&lt;p&gt;
It turns out, the people that were running program X didn&amp;#39;t have a
teacher, didn&amp;#39;t have curriculum or program, and in fact didn&amp;#39;t have
a plan. What they were able to do, however, was raise money.
&lt;/p&gt;
&lt;p&gt;
This is a sore spot with me - for CSTUY, we run program to program and
for me, fund-raising is the hardest part. Here we have a program that
has no idea as to what they&amp;#39;re going to do or who&amp;#39;s going to do it and
they ended up with substantial capital to work this non-existent
program.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a sore spot because I&amp;#39;ve seen it before and seen it over and
over. People with either little or no CS experience, little or no
teaching experience and frequently neither being anointed as thought
leaders in CS Education or at the very least, the people with the &amp;#34;hot
program.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen this in companies, non-profits, for-profits, and
government. Some of these groups and programs are now considered
undisputed leaders when, if you dig beneath the hype, they really
don&amp;#39;t know what they&amp;#39;re doing.
&lt;/p&gt;
&lt;p&gt;
Now, there are some &amp;#34;thought leaders&amp;#34; who have been in the trenches
and know their stuff but they seem few and far between.
&lt;/p&gt;
&lt;p&gt;
I know that all of these people running these programs and being given
this platform to influence our young are well meaning and I welcome
everybody to the table but maybe, just maybe they should take a step
back and ask themselves - do they really know what they&amp;#39;re doing or
are the just experimenting with other peoples children.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I hate ruby or why I&#39;m switching blogging platforms</title>
      <link>https://cestlaz.github.io/posts/2016-04-14-i-hate-ruby/</link>
      <pubDate>Thu, 14 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-04-14-i-hate-ruby/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;p&gt;
I&#39;m moving to a new blogging platform. I&#39;m still going to use GitHub
pages but after a few years of using &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, I&#39;m switching to &lt;a href=&#34;https://getnikola.com/&#34;&gt;Nikola&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I think I&#39;ve got the move worked out but if you&#39;re reading this via an
rss or atom reader, make sure to check back in a couple of days - you
might have to re-subscribe.
&lt;/p&gt;

&lt;p&gt;
Why am I switching?
&lt;/p&gt;

&lt;p&gt;
Because I hate Ruby.
&lt;/p&gt;

&lt;p&gt;
Ok, not really - I barely know the language. I was already a  Python
guy when Ruby came along and I didn&#39;t see any real added value to
switching.
&lt;/p&gt;

&lt;p&gt;
This isn&#39;t really about Ruby though, it&#39;s really about how that which
we don&#39;t know is strange and frightening. In this case, the ruby ecosystem.
&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/LV0wTtiJygY&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
I started using Jekyll because that&#39;s what was supported by GitHub
pages. It&#39;s fairly simple and it basically worked. It had a few
warts, specifically, I&#39;ve had problems getting org-mode blog posts to
publish just the way I&#39;d like and it&#39;s hard to debug when a post has
some bad markup in it, but it got the job done.
&lt;/p&gt;

&lt;p&gt;
Recently, though, I&#39;ve had to re-install Jekyll a number of  times and
for me, that&#39;s been a nightmare.
&lt;/p&gt;

&lt;p&gt;
One is supposed to just be able to &lt;b&gt;&lt;b&gt;sudo gem install jekyll&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
Ok, so you need some packages installed:
&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ruby-dev
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
But I&#39;ve got ruby 1.9 and I need ruby 2 point something. Ok:
&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ruby2.0 ruby2.0-dev
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
But that fails since we&#39;re still running 1.9. Every time I look for a
solution I go down the ruby ecosystem rabbit hole.
&lt;/p&gt;

&lt;p&gt;
All I want is Jekyll!!!!!!
&lt;/p&gt;

&lt;p&gt;
Why can&#39;t I just &lt;b&gt;&lt;b&gt;pip install jekyll&lt;/b&gt;&lt;/b&gt; like I can do with Python
packages!!!!!
&lt;/p&gt;

&lt;p&gt;
In truth, there&#39;s nothing wrong with the ruby ecosystem, It&#39;s just
something I&#39;m not familiar with. I probably had to go through the same
battles with Python it&#39;s just that I did them incrementally over time.
&lt;/p&gt;

&lt;p&gt;
The truth is, setting up a development environment should be much
easier. It used to be that I installed Linux, it had C installed and I
just had to install &lt;a href=&#34;https://en.wikipedia.org/wiki/Make_(software)&#34;&gt;make&lt;/a&gt;. Now it&#39;s all about tool chains, virtual
environments, containers, and more.
&lt;/p&gt;

&lt;p&gt;
I think this is what &lt;a href=&#34;https://twitter.com/roybahat&#34;&gt;Roy&lt;/a&gt; was talking about when we traded
tweets on using development environments in an  &lt;a href=&#34;http://cestlaz.github.io/2016/04/12/ide-or-cloud.html#.Vw_nPN9vETt&#34;&gt;Ide or in the cloud&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
If it&#39;s hard for me to get an environment running, imagine some poor
soul who just went through a &#34;learn to code&#34; web site and now has to
figure out how to set up his or her own machine!!!!!!
&lt;/p&gt;

&lt;p&gt;
I don&#39;t have a solution but at least it hasn&#39;t stopped me and others
from trying new things.
&lt;/p&gt;

&lt;p&gt;
Two of my CS blogging friends, &lt;a href=&#34;https://gflint.wordpress.com/&#34;&gt;Garth Flint&lt;/a&gt; and &lt;a href=&#34;http://blog.acthompson.net/&#34;&gt;Alfred Thompson&lt;/a&gt; have in
their own ways talked about this same issue. Garth, showing a bias
towards VB yet still working to get his head around Python. Alfred
shows the same disdain for Linux and the command line as I show
towards Windows. All this leads to valuable learning experiences and
discussions.
&lt;/p&gt;

&lt;p&gt;
Personally, I&#39;m also going through this battle as I continue to
explore Clojure.
&lt;/p&gt;

&lt;p&gt;
So, I&#39;m going to finish the changeover to Nikola in the next day or
two. Remember to check back in case the feeds aren&#39;t working.
&lt;/p&gt;

&lt;p&gt;
Once I make the change, I&#39;ll talk about Jekyll vs Nikola as actual
blogging platforms.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IDE or the Cloud</title>
      <link>https://cestlaz.github.io/posts/2016-04-12-ide-or-cloud/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-04-12-ide-or-cloud/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;
&lt;div id=&#34;outline-container-orgheadline1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline1&#34;&gt;
&lt;p&gt;
This weekend, I had a conversation on Twitter with my friend &lt;a href=&#34;https://twitter.com/roybahat&#34;&gt;Roy Bahat&lt;/a&gt;:
&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/zamansky&#34;&gt;@zamansky&lt;/a&gt; Mike, unrelated, what do you think of &lt;a href=&#34;https://t.co/BT1ublbajF&#34;&gt;https://t.co/BT1ublbajF&lt;/a&gt; ?&lt;/p&gt;&amp;mdash; Roy Bahat (@roybahat) &lt;a href=&#34;https://twitter.com/roybahat/status/718835740738650112&#34;&gt;April 9, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/roybahat&#34;&gt;@roybahat&lt;/a&gt;Maybe I&amp;#39;ll blog about my thoughts about online environments vs local installs&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky)
&lt;a href=&#34;https://twitter.com/zamansky/status/718837282334240768&#34;&gt;April 9, 2016&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/roybahat&#34;&gt;@roybahat&lt;/a&gt; Agree with this but there are many issues. I&amp;#39;ll try to write more later. Now going to see my son in &lt;a href=&#34;https://twitter.com/umgass&#34;&gt;@umgass&lt;/a&gt; prod of Pinafore.&lt;/p&gt;&amp;mdash; Mike Zamansky (@zamansky) &lt;a href=&#34;https://twitter.com/zamansky/status/718838508689993728&#34;&gt;April 9, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;
Another friend had just asked me about IDEs vs local installs for learning enviromnents the day before.
&lt;/p&gt;

&lt;p&gt;
So, should we use cloud based IDEs when teaching CS or should we use
local installs.
&lt;/p&gt;

&lt;p&gt;
There isn&#39;t a single right answer but I thought I&#39;d share some of my thoughts here.
&lt;/p&gt;

&lt;p&gt;
I&#39;m hoping this is helpful to both those of us in the trenches as well
as maybe some platform developers out there.
&lt;/p&gt;

&lt;p&gt;
Some times, you don&#39;t have a choice.
&lt;/p&gt;

&lt;p&gt;
On the web based side, does your school have the bandwidth. We&#39;re not
only talking about the pipe to the outside world but also &lt;a href=&#34;http://www.nytimes.com/2016/01/14/nyregion/bronx-science-bans-cellphones-from-wi-fi-as-students-devour-it.html?_r=0&#34;&gt;wifi within
the school&lt;/a&gt;.  If kids can&#39;t reliably get to the web based environment,
it&#39;s not a viable option. On the other hand, cloud based software will
always be up to date and properly configured and kids can use them
from home or pretty much anywhere they have a connection.
&lt;/p&gt;

&lt;p&gt;
On the other side we have local installs. This can also present
problems. Is the teacher allowed to install locally? Does he or she
know how to do it? Who&#39;s going keep all the machines up to date and configured?
&lt;/p&gt;

&lt;p&gt;
Assuming we can get past the technical issues we can start looking at
the education side of thing.
&lt;/p&gt;

&lt;p&gt;
On the web based side, you&#39;ve got a silo. This can be both good and
bad. In an intro class, using a tool like &lt;a href=&#34;http://codesters.com&#34;&gt;Codesters&lt;/a&gt; can keep the cost
of entry low, allow students to share work online and allow teachers
to make use of their curricular materials. If you can&#39;t tell, I&#39;m a
big fan of Codesters and the Codesters team. The limitation is that
you have to use their simplified interface and toolset.
&lt;/p&gt;

&lt;p&gt;
Some web based IDEs like &lt;a href=&#34;http://koding.com&#34;&gt;Koding&lt;/a&gt; offer more flexibility - one tool with
many languages as well as deployment. The cost is complexity. With
Koding, you&#39;re basically running a virtual machine in the
cloud. You&#39;ve got their web based IDE and a terminal shell so it&#39;s not
as complex as doign everything from scratch locally but it&#39;s not as
structured as Codesters and is more of a general purpose site rather
than one focussed soley on learning.
&lt;/p&gt;

&lt;p&gt;
Then you have &lt;a href=&#34;http://repl.it&#34;&gt;repl.it&lt;/a&gt;. This looks to be a great platform for
experienced programmers to play with and explore new languages but I&#39;d
be concerned about using it with beginners. It looks like they&#39;re
rolling out some teacher tools so this might be worth revisiting soon.
&lt;/p&gt;

&lt;p&gt;
In any case and with other web based products, you&#39;re living in the
providers silo.
&lt;/p&gt;

&lt;p&gt;
Personally, I&#39;m a command line wonk and confessed Emacs geek so I&#39;m
generally wary of an online environment without an exit strategy to
real world tools. Eventually, if all development moves into the
browser as platform then this problem goes away, but for now, you&#39;re
not going to have the expressive power and flexibility that a local
install gives.
&lt;/p&gt;

&lt;p&gt;
Local installs let you use more powerful and flexible tools either
alone or in combination.
&lt;/p&gt;

&lt;p&gt;
Keeping kids out of silos also makes it easier for them to learn new
tools, languages, and techniques.
&lt;/p&gt;

&lt;p&gt;
Since I like generic tools, I&#39;m not a fan of big professional IDEs
like Eclipse. I&#39;m an Emacs geek but Atom, Sublime Text, and Vim are
all good as well.
&lt;/p&gt;

&lt;p&gt;
There are also an assortment of beginner IDEs like Dr. Racket and I&#39;m
a fan with these for beginners as long as there&#39;s an exit strategy.
&lt;/p&gt;

&lt;p&gt;
For completeness, I should mention that if I weren&#39;t an old school
Emacs guy, I might check out something like JetBrain&#39;s IDEs. They&#39;re
much lighter weight than something like Eclipse but still full
featured. Somewhere between a true general purpose, customizable,
programmable editor and an all encompassing IDE.
&lt;/p&gt;


&lt;p&gt;
In general, I use online enviromnents with my classes early on when:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;They&#39;re pretty much identical or equivalent to the installed version.&lt;/li&gt;
&lt;li&gt;They provide some value added (&lt;a href=&#34;http://codingbat.com&#34;&gt;codingbat&lt;/a&gt; for example) so they&#39;re not
being used as a development environment but for some other purpose.&lt;/li&gt;
&lt;li&gt;They help with student collaboration (such as cloud9 or Koding.com
for more advanced kids).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
In any case, it&#39;s imporant that our kids aren&#39;t locked into any IDE be
it web based or local.
&lt;/p&gt;

&lt;p&gt;
Our kids that go on to more advanced CS studies will certainly need to
break out of sheltered world of a learning IDE and we&#39;re not doing
them a service if we shelter them too long.
&lt;/p&gt;

&lt;p&gt;
Our other kids also benefit from seeing beyond these restrictive
environments. A student might learn to code in Python in one of our
classes, but if we do our jobs right, that student might be writing a
little Javascript to automate Google Docs.
&lt;/p&gt;

&lt;p&gt;
I can&#39;t tell you how many people I&#39;ve seen go through online coding
courses in a web based enviromnent only to be unable to do anything
outside of that enviromnent.
&lt;/p&gt;

&lt;p&gt;
At the end of the day, we want our kids to be empowered to grow on
their own. All of the things I&#39;ve talked about here are merely
tools. Each has it&#39;s place. It&#39;s up to the teacher to make the roadmap
and to lead the student down the path.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hunter College - Honors CS</title>
      <link>https://cestlaz.github.io/posts/2016-03-29-hunter-cs/</link>
      <pubDate>Tue, 29 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-03-29-hunter-cs/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
It&#39;s been a while since my last post and a while since I started at
Hunter.
&lt;/p&gt;

&lt;p&gt;
Time to share a bit about what I&#39;ve been up to.
&lt;/p&gt;

&lt;p&gt;
One of the better kept secrets in New York City is Hunter College&#39;s
computer science program. It&#39;s been around for years and it&#39;s been
that way for years. In fact, when I was looking to get my masters
degree back in the mid nineties I carefully researched all of the
area&#39;s MS in CS programs. It came down to Hunter College and Courant
Institute at NYU. I was going to go with Hunter since the programs
seemed comparable and Hunter was far more affordable but I had to go
with NYU due to class schedules. Too many of the Hunter offerings were
to early in the day and I had my full time teaching job to consider.
&lt;/p&gt;

&lt;p&gt;
Hunter isn&#39;t currently offering their Masters program but their
Bachelor of Arts program is alive and well, it&#39;s just that people
don&#39;t know about it.
&lt;/p&gt;

&lt;p&gt;
Part of my job is to change that.
&lt;/p&gt;

&lt;p&gt;
Well, not really, part of my job is to add my piece to the puzzle. The
rest will take care of itself.
&lt;/p&gt;

&lt;p&gt;
My piece? It&#39;s all about creating a tech culture, tying into the NY
Tech ecosystem, and filling in the gaps that are shared by just about
every college computer science program.
&lt;/p&gt;

&lt;p&gt;
How do we do it?
&lt;/p&gt;

&lt;p&gt;
The long term plan is that we&#39;re starting a new CS Honors program. In
the fall, I&#39;ll be teaching and mentoring a group of entering
undergrads. We&#39;ll have workshops, trips, activities. You name it. I&#39;ll
also be teaching them modified versions of our courses with the hope
of bringing some of my modifications back to the rest of the student
body. Things like integrating real tools and professional techniques
into what is already a solid academic program.
&lt;/p&gt;

&lt;p&gt;
In the mean time, I&#39;m getting to know Hunter&#39;s current CS students and
working to energize the existing community.
&lt;/p&gt;

&lt;p&gt;
We already had an amazing event hosted at &lt;a href=&#34;http://yext.com&#34;&gt;Yext&lt;/a&gt;. We had a panel and
mixer with representatives from about a dozen companies talking to the
kids about the possibilities ahead of them.
&lt;/p&gt;

&lt;p&gt;
We&#39;ve also set up a couple of workshops in house.
&lt;/p&gt;

&lt;p&gt;
I&#39;m also starting to talk to friends at companies across the city to
plan out both curriculum and programs to set up our kids to
succeed.
&lt;/p&gt;

&lt;p&gt;
My goal is that within five years, I want people to realize that
Hunter CS is the place to be for CS Education in NYC. Not everyone can
afford the 40K and up private college tuition and there&#39;s no reason to
when you can get a great CS education with ties to the tech community
at CUNY prices.
&lt;/p&gt;

&lt;p&gt;
If you want to help, drop me a note. We&#39;re looking to start something
very special and you have a chance to be a part of it.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DevOps, or You don&#39;t know what the F you&#39;re doing!</title>
      <link>https://cestlaz.github.io/posts/2016-01-31-devops/</link>
      <pubDate>Sun, 31 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-01-31-devops/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Having just concluded almost a quarter century at one job in one
place, I&#39;ve been reflecting on a number of things.
&lt;/p&gt;

&lt;p&gt;
What I accomplished, what I&#39;ve failed to accomplish, highlights,
low lights and everything in between.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve also learned a lot over these twenty five years.
&lt;/p&gt;

&lt;p&gt;
One thing I learned is DevOps and System Administration.
&lt;/p&gt;

&lt;p&gt;
Back around 1993 or 1994 Stuy wasn&#39;t really on the internet. Yes, we
were able to scam stuy.edu even though we were a high school and yes
we did have a class B address block but no one really had access.
&lt;/p&gt;

&lt;p&gt;
Somehow, Bruce, a student of mine at the time and I ended up with the
job of getting Stuy onto the internet. Bruce was one of our superstar
kids and people thought I had extensive experience setting up and
running networks. Truth be told I messed around a bit but there&#39;s no
way I would have hired myself for the job.
&lt;/p&gt;

&lt;p&gt;
Nonetheless, we were off.
&lt;/p&gt;

&lt;p&gt;
We were able to take one of the RS/6000 AIX workstations that were
supposed to be used as CAD stations and repurposed it as a server. We
made email accounts for everyone and were off.
&lt;/p&gt;

&lt;p&gt;
Neither Bruce nor I really knew what we were doing but we figured
things out. I learned a lot from him and I&#39;d like to think he also got
some benefit out of working with me. Fortunately, we seemed to have a
knack for &lt;a href=&#34;http://www.amazon.com/Linux-System-Administration-Handbook-Edition/dp/0131480057/ref=pd_sim_14_2?ie=UTF8&amp;amp;dpID=61%2B57ajucML&amp;amp;dpSrc=sims&amp;amp;preST=_AC_UL160_SR117%2C160_&amp;amp;refRID=164V89GZMZM2X9M2S8AH&#34;&gt;finding the answers&lt;/a&gt;.
&lt;/p&gt;


&lt;p&gt;
Of course, we had our moments. Once, we got a critical patch
announcement from IBM. It said that if we needed the patch and didn&#39;t
apply it were were in big trouble but if our machine didn&#39;t need it,
applying the patch would kill our system. It was unclear whether we
needed the patch or not.
&lt;/p&gt;

&lt;p&gt;
After about a half hour research, we determined that we didn&#39;t need
the patch.
&lt;/p&gt;

&lt;p&gt;
But applied it anyway :-(.
&lt;/p&gt;

&lt;p&gt;
D&#39;Oh.
&lt;/p&gt;

&lt;p&gt;
After a brief set of panic attacks and a bunch of fumbling around, we
did manage to restore things.
&lt;/p&gt;

&lt;p&gt;
So, Bruce and I ran the system for a year or so and as I said, I
learned a lot. Now, Bruce was close to graduating so I was starting to
worry that I&#39;d have to figure this all out myself soon. That was a
seriously frightening thought.
&lt;/p&gt;

&lt;p&gt;
I figured it would be good to bring in a couple of new super smart
students. As it turns out, Jon was one of them.
&lt;/p&gt;

&lt;p&gt;
At one point, there was some problem and Bruce and I were going to
head to the office to try to figure it out. Jon asked if he could come
and watch. I thought that was a great idea so I agreed.
&lt;/p&gt;

&lt;p&gt;
We all went to the office and Bruce and I went to work. After about
fifteen minutes, Jon blurted out:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
&#34;I just figured how you guys do it!!!&#34;
&lt;/p&gt;

&lt;p&gt;
&#34;You guys have no idea what the F you&#39;re doing!!!!!&#34;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
We all cracked up.
&lt;/p&gt;

&lt;p&gt;
He was absolutely right. We had no clue. We didn&#39;t know what we were
doing but we had become pretty good at figuring things out.
&lt;/p&gt;

&lt;p&gt;
Truth be told, that really is the norm. If you already knew how to
solve the problem, well, then it really wouldn&#39;t have been a problem
to begin with.
&lt;/p&gt;

&lt;p&gt;
So, you learn to figure it out. It&#39;s something I learned not to be
afraid of a long time ago. I hope that it&#39;s something I&#39;ve been able
to convey to my students.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debugging deployment</title>
      <link>https://cestlaz.github.io/posts/2016-01-23-debugging-deployment/</link>
      <pubDate>Sat, 23 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-01-23-debugging-deployment/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
SoftDev students are hard at work on their final projects. By now,
they all have fairly complex code bases. This limits how much I can
help them with debugging.
&lt;/p&gt;

&lt;p&gt;
There are some problems, though, that they have to contend with that
even with experience, are hard to spot. Notably because the very
tools you use to debug these errors are part of the problem.
&lt;/p&gt;

&lt;p&gt;
Last week, this happened twice. Both cases were brought to me by
really strong students which just goes to underscore how insidious
these problems can be.
&lt;/p&gt;


&lt;p&gt;
Here&#39;s a fake code snippet of a &lt;a href=&#34;http://flask.pocoo.org/&#34;&gt;Flask&lt;/a&gt; application that illustrates
both problems.
&lt;/p&gt;


&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span class=&#34;linenr&#34;&gt; 1: &lt;/span&gt;from flask import Flask, render_template
&lt;span class=&#34;linenr&#34;&gt; 2: &lt;/span&gt;
&lt;span class=&#34;linenr&#34;&gt; 3: &lt;/span&gt;app = Flask(__name__)
&lt;span class=&#34;linenr&#34;&gt; 4: &lt;/span&gt;
&lt;span class=&#34;linenr&#34;&gt; 5: &lt;/span&gt;@app.route(&#34;/&#34;)
&lt;span class=&#34;linenr&#34;&gt; 6: &lt;/span&gt;def index():
&lt;span class=&#34;linenr&#34;&gt; 7: &lt;/span&gt;    return &#34;hello&#34;
&lt;span class=&#34;linenr&#34;&gt; 8: &lt;/span&gt;
&lt;span class=&#34;linenr&#34;&gt; 9: &lt;/span&gt;@app.route(&#39;/test/&amp;lt;some_data&amp;gt;&#39;)
&lt;span class=&#34;linenr&#34;&gt;10: &lt;/span&gt;def test():
&lt;span class=&#34;linenr&#34;&gt;11: &lt;/span&gt;    picture_url = build_url(some_data)
&lt;span class=&#34;linenr&#34;&gt;12: &lt;/span&gt;    result = api_test(picture_url)
&lt;span class=&#34;linenr&#34;&gt;13: &lt;/span&gt;    do_something(result)
&lt;span class=&#34;linenr&#34;&gt;14: &lt;/span&gt;
&lt;span class=&#34;linenr&#34;&gt;15: &lt;/span&gt;if __name__ == &#34;__main__&#34;:
&lt;span class=&#34;linenr&#34;&gt;16: &lt;/span&gt;   app.debug = True
&lt;span class=&#34;linenr&#34;&gt;17: &lt;/span&gt;   app.secret_key = &#34;some secret key&#34;
&lt;span class=&#34;linenr&#34;&gt;18: &lt;/span&gt;   app.run(host=&#34;0.0.0.0&#34;, port=8000)
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;
First, the &#34;easy&#34; one. The student was trying to deploy the
application. We use &lt;a href=&#34;http://gunicorn.org/&#34;&gt;Green Unicorn&lt;/a&gt; to deploy our applications,
ultimately on &lt;a href=&#34;http://digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt; servers in the cloud.
&lt;/p&gt;

&lt;p&gt;
The student was using the correct command:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-shell&#34;&gt;gunicorn -W 4 -b 0.0.0.0:8000 app:app
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
but it wasn&#39;t working. It ran, but whenever he went to the site, it
came back with an error.
&lt;/p&gt;

&lt;p&gt;
The problem?
&lt;/p&gt;

&lt;p&gt;
He had to change:
&lt;/p&gt;
&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;if __name__ == &#34;__main__&#34;:
app.debug = True
app.secret_key = &#34;some secret key&#34;
app.run(host=&#34;0.0.0.0&#34;, port=8000)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
to
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;app.secret_key = &#34;some secret key&#34;
if __name__ == &#34;__main__&#34;:
app.debug = True
app.run(host=&#34;0.0.0.0&#34;, port=8000)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Normally, when developing and testing our applications, we use the
test server that&#39;s bundled with Flask. The line that reads
&#34;app.run&amp;#x2026;&#34; takes care of this.
&lt;/p&gt;

&lt;p&gt;
When running the application as a &#34;main program&#34; - &#34;python app.py&#34; the
if statement is true and it runs the indented lines, setting the
secret key which is required for session management.
&lt;/p&gt;

&lt;p&gt;
When running under &lt;b&gt;&lt;b&gt;gunicorn&lt;/b&gt;&lt;/b&gt;, the &lt;b&gt;&lt;b&gt;gunicorn&lt;/b&gt;&lt;/b&gt; server loads the
application as a module and then runs it. In this case name isn&#39;t main
so it never sets secret key and so we have a problem.
&lt;/p&gt;

&lt;p&gt;
Pretty subtle and even though we did cover this in class, it comes up
pretty rarely so it&#39;s not an easy catch.
&lt;/p&gt;

&lt;p&gt;
Then there was this problem.
&lt;/p&gt;

&lt;p&gt;
The setup for this one&#39;s a little more complicated. The group was
using a facial recognition api. You provide the API with the url to an
image, it fetches it and does recognition.
&lt;/p&gt;

&lt;p&gt;
It&#39;s also important to note that when Flask is running, it will serve
files from a static directory, so, if I&#39;m running my flask server on
myhost, port 800 and you stored an image named picture.jpg in the
static directory, going to:
&lt;/p&gt;

&lt;verbatim&gt;
http://myhost:8000/static/picture.jpg
&lt;/verbatim&gt;
&lt;br&gt;&lt;br&gt;


&lt;p&gt;
would get that image.
&lt;/p&gt;

&lt;p&gt;
The group did things right. They ran the Flask test server to serve
the static files and then wrote a small python program to test the
api:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;picture_url = build_url(some_data)
result = api_test(picture_url)
do_something(result)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Everything worked fine.
&lt;/p&gt;

&lt;p&gt;
But, when they put this code in as a route in their web app (as in the
top code fragment), it froze.
&lt;/p&gt;

&lt;p&gt;
They couldn&#39;t figure it out.
&lt;/p&gt;

&lt;p&gt;
The code worked as a &#34;stand alone&#34; but not in the web app.
&lt;/p&gt;

&lt;p&gt;
The problem?
&lt;/p&gt;

&lt;p&gt;
Once again, the built in Flask development server.
&lt;/p&gt;

&lt;p&gt;
The development server runs in a single thread / process. This means
it can only do one thing at a time. When they ran their test as a
separate program, the api they used made a request to their app to
serve up the static picture file and it worked.
&lt;/p&gt;

&lt;p&gt;
When they ran from the Flask application itself, their app made a call
to the web api (line 12) and then blocked while waiting for the
response. The web api tried to request the image from the Flask app
but it was blocked &amp;#x2013; &lt;b&gt;&lt;b&gt;deadlock&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
Again, the solution was to run the web app using a server that could
handle multiple requests - gunicorn.
&lt;/p&gt;

&lt;p&gt;
Once again, that solved the problem.
&lt;/p&gt;

&lt;p&gt;
Both of these problems were fairly subtle and very hard to catch -
even with experience. I remember the hours I lost when I was learning
this stuff.
&lt;/p&gt;

&lt;p&gt;
Some times kids get caught up in algorithms or poor code design but
sometimes, it&#39;s just the tools.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cellular Automata for Pathfinding in NetLogo</title>
      <link>https://cestlaz.github.io/posts/2016-01-17-maze-ca/</link>
      <pubDate>Sun, 17 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-01-17-maze-ca/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;link href=&#34;//cdn.rawgit.com/noelboss/featherlight/1.3.5/release/featherlight.min.css&#34; type=&#34;text/css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;//cdn.rawgit.com/noelboss/featherlight/1.3.5/release/featherlight.min.js&#34; type=&#34;text/javascript&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;style&gt;
div.center {text-align:center;}
.smaller {height:200px;width:200px}

.center {text-align:center;}
.frame {width:600px;height:800px;}

&lt;/style&gt;


&lt;div class=&#34;center&#34;&gt;
&lt;a class=&#34;center&#34; href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-start.png&#34;&gt;
&lt;img src=&#34;https://cestlaz.github.io/img/maze-ca/maze-start.png&#34;&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;

&lt;div id=&#34;outline-container-orgheadline1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline1&#34;&gt;
&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/2016/01/15/shift-image.html#.Vpvy4x8SrmE&#34;&gt;Last time&lt;/a&gt; we took a look at implementing a Cellular Automaton in
NetLogo to do some simple image manipulation. We just scratched the
surface. In class, the kids write pretty nice Photoshop Light
applications.
&lt;/p&gt;

&lt;p&gt;
Today we&#39;ll look at some more ambitious problem solving - using a
Cellular Automaton to find a path through a maze.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline2&#34;&gt;Part 1 - finding possible paths&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline2&#34;&gt;
&lt;p&gt;
We&#39;ll use the image above as an example and a live model with all the
code is at the end of this post.
&lt;/p&gt;

&lt;p&gt;
Each square of the maze is a
NetLogo patch. White square represent possible paths, Red is our
entrance, green our exit. As we explore the maze, we&#39;ll color the
cells yellow.
&lt;/p&gt;

&lt;p&gt;
Remember, in  a Cellular Automaton (CA), each cell makes a decision as to
it&#39;s next state based on information about its neighbors (up, down,
left, and right only in this case).
&lt;/p&gt;

&lt;p&gt;
So, if every cell is looking around at it&#39;s neighbors, most cells
don&#39;t have enough information. The only white cell that might be on
the path from entrance to exit is the one next to the entrance - it
might be on the path.
&lt;/p&gt;

&lt;p&gt;
This leads us to the first step of our CA rule set:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-netlogo&#34;&gt;; if I have a green neighbor, I might be on the path, turn yellow
ask patches with [pcolor = white] [
if any? neighbors with [pcolor = red] [
set pcolor yellow
]
]
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
(click images to enlarge)
&lt;/p&gt;

&lt;a href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-1.png&#34;&gt;
&lt;img class=&#34;smaller&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze-1.png&#34;&gt;
&lt;/a&gt;

&lt;p&gt;
Next time through, we notice that a cell might be on the path if it&#39;s
white and it has either red or yellow neighbors.
&lt;/p&gt;


&lt;a href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-2.png&#34;&gt;
&lt;img class=&#34;smaller&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze-2.png&#34;&gt;
&lt;/a&gt;
&lt;a href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-3.png&#34;&gt;
&lt;img class=&#34;smaller&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze-3.png&#34;&gt;
&lt;/a&gt;

&lt;a href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-4.png&#34;&gt;
&lt;img class=&#34;smaller&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze-4.png&#34;&gt;
&lt;/a&gt;

&lt;p&gt;
Eventually, we end up with a yellow abutting green - the exit.
&lt;/p&gt;

&lt;a href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-found.png&#34;&gt;
&lt;img class=&#34;smaller&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze-found.png&#34;&gt;
&lt;/a&gt;

&lt;p&gt;
Notice that each yellow cell is also numbered. The number indicates
how many steps it took to get there from the entrance. The
implementation is trivial:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Start by giving each patch a variable &lt;b&gt;&lt;b&gt;step&lt;/b&gt;&lt;/b&gt; and starting it at 0.&lt;/li&gt;
&lt;li&gt;When a cell is about to turn yellow, it should look at it&#39;s yellow
or red neighbors, ask for their &lt;b&gt;&lt;b&gt;step&lt;/b&gt;&lt;/b&gt; value (they&#39;ll all be the
same - think about why), and set it&#39;s &lt;b&gt;&lt;b&gt;step&lt;/b&gt;&lt;/b&gt; value to one more
than that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
We&#39;ll use these step numbers to recover the actual shortest path.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline3&#34;&gt;Part 2 - recovering the shortest path.&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline3&#34;&gt;
&lt;p&gt;
We can now use the yellow patches with the step numbers to find our
way back.
&lt;/p&gt;

&lt;p&gt;
We&#39;re going to build a solution set.
&lt;/p&gt;
&lt;ol class=&#34;org-ol&#34;&gt;
&lt;li&gt;start with an empty solution set.&lt;/li&gt;
&lt;li&gt;take the only green cell not in the solution set (let&#39;s call it &lt;b&gt;&lt;b&gt;G&lt;/b&gt;&lt;/b&gt;).&lt;/li&gt;
&lt;li&gt;Ask &lt;b&gt;&lt;b&gt;G&lt;/b&gt;&lt;/b&gt;&#39;s yellow neighbor with lowest step number to turn
itself green (that cell will be &lt;b&gt;&lt;b&gt;G&lt;/b&gt;&lt;/b&gt; next time around).&lt;/li&gt;
&lt;li&gt;Place &lt;b&gt;&lt;b&gt;G&lt;/b&gt;&lt;/b&gt; into the solution set (leaving the new green cell as
the only green cell not in the solution set).&lt;/li&gt;
&lt;li&gt;Repeat 2 - 5 until we&#39;re back at the entrance.&lt;/li&gt;
&lt;/ol&gt;



&lt;a href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-back-1.png&#34;&gt;
&lt;img class=&#34;smaller&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze-back-1.png&#34;&gt;
&lt;/a&gt;
&lt;a href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-back-2.png&#34;&gt;
&lt;img class=&#34;smaller&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze-back-2.png&#34;&gt;
&lt;/a&gt;
&lt;a href=&#34;#&#34; data-featherlight=&#34;/img/maze-ca/maze-solved.png&#34;&gt;
&lt;img class=&#34;smaller&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze-solved.png&#34;&gt;
&lt;/a&gt;

&lt;p&gt;
This is one of my favorite intro topics. It&#39;s using a CA - something
normally just presented as a toy idea, to solve a real problem. It
reinforces parallel processing and foreshadows all sorts of pathfinding
ideas to come.
&lt;/p&gt;

&lt;p&gt;
Below is the complete NetLogo program. You can look at the code by
clicking on the code tab at the bottom.
&lt;/p&gt;

&lt;p&gt;
To run:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;&lt;b&gt;&lt;b&gt;setup&lt;/b&gt;&lt;/b&gt; sets up all the variables and clears the world.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;&lt;b&gt;buildmaze&lt;/b&gt;&lt;/b&gt; builds a random maze.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;&lt;b&gt;solve&lt;/b&gt;&lt;/b&gt; is a toggle to run through an entire solution.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;&lt;b&gt;step&lt;/b&gt;&lt;/b&gt; single steps through the CA.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;&lt;b&gt;reset&lt;/b&gt;&lt;/b&gt; Resets all the variables and recolors the maze to
unsolved.&lt;/li&gt;
&lt;li&gt;The other buttons are toggles for drawing your own maze.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;center frame&#34;&gt;
&lt;iframe class=&#34;center frame&#34; src=&#34;https://cestlaz.github.io/img/maze-ca/maze.html&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cellular Automata, NetLogo and real problems</title>
      <link>https://cestlaz.github.io/posts/2016-01-15-shift-image/</link>
      <pubDate>Fri, 15 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-01-15-shift-image/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
.center {text-align:center;}
.frame {width:640px;height:800px;}
&lt;/style&gt;


&lt;p&gt;
We&#39;ve been using &lt;a href=&#34;https://ccl.northwestern.edu/netlogo/&#34;&gt;NetLogo&lt;/a&gt; in our intro course for years. It&#39;s a
wonderful programming environment. Many of you recall the &lt;a href=&#34;https://en.wikipedia.org/wiki/Logo_(programming_language)&#34;&gt;Logo&lt;/a&gt;
programming language. NetLogo is like Logo but instead of programming
a turtle, you write a program that&#39;s run by multiple, perhaps hundreds
of turtles and also by the world the turtles live on.
&lt;/p&gt;

&lt;p&gt;
Some of the reasons we like it are that it&#39;s:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;An easy accessible textual programming language&lt;/li&gt;
&lt;li&gt;Makes building a graphical interface trivial&lt;/li&gt;
&lt;li&gt;great for modeling&lt;/li&gt;
&lt;li&gt;Comes with tons of demo models&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
And now, with the latest version, NetLogo programs/models can be
deployed as web sites. All you have to do is save your program as
&#34;NetLogo Web&#34; and put it up on a observer somewhere.
&lt;/p&gt;

&lt;p&gt;
If you haven&#39;t you should download and install NetLogo, run it, then
go to the file menu and look at the built in models.
&lt;/p&gt;

&lt;p&gt;
I also enjoy playing with &lt;a href=&#34;https://en.wikipedia.org/wiki/Cellular_automaton&#34;&gt;Cellular Automata&lt;/a&gt; and NetLogo&#39;s a wonderful
platform to play with. The turtles live on a grid of patches and just
like the turtles, the patches will all run your program over and over.
&lt;/p&gt;

&lt;p&gt;
The patches make perfect cells for a cellular automaton and you can
implement a rule set in your patches.
&lt;/p&gt;

&lt;p&gt;
NetLogo even comes with a bunch of built in demo models for Cellular
Automata including &lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&#34;&gt;Conway&#39;s Game of Life&lt;/a&gt;, probably the most famous CA.
&lt;/p&gt;

&lt;p&gt;
On the other hand, Conway&#39;s Game of Life is somewhat cliche and while
I find it fascinating, it doesn&#39;t really solve a practical problem, at
least on on the surface.
&lt;/p&gt;

&lt;p&gt;
So, I was looking for something more practical to do and something
where we could explore some deeper CS concepts.
&lt;/p&gt;

&lt;p&gt;
Image manipulation.
&lt;/p&gt;

&lt;p&gt;
In class, we make a Cellular Automaton where each cell or patch is a
pixel in an image. In NetLogo, you can do this with the
&#34;import-pcolors&#34; command. Lower down, I have a demo that just manually
colors patches - the web version of NetLogo doesn&#39;t yet support that
command.
&lt;/p&gt;

&lt;p&gt;
Task 1 - what if we want to shift the image over? The kids come up
with a solution pretty quickly: &#34;We can just have each patch ask its
neighbor for its color.&#34; Here&#39;s the code they try:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-netlogo&#34;&gt;; ask each patch to set its color to the color of the
; patch at relative location -1,0
to shift-naive
ask patches [ set pcolor [pcolor] of patch-at -1 0]
end
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
To see what happens, scroll down to the NetLogo model below, click on
setup and then hit the &lt;b&gt;&lt;b&gt;shift-naive&lt;/b&gt;&lt;/b&gt; button a few times.
&lt;/p&gt;

&lt;p&gt;
It doesn&#39;t work.
&lt;/p&gt;

&lt;p&gt;
What&#39;s going on?
&lt;/p&gt;

&lt;p&gt;
It&#39;s a synchronization issue.
&lt;/p&gt;

&lt;p&gt;
Suppose we have the following three cells in a row:
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;https://cestlaz.github.io/img/shift-image/image1.png&#34; alt=&#34;image1.png&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
If cell 3 asks cell 2 it&#39;s color before cell 2 asks cell 1&#39;s color, we
get the desired result:
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;https://cestlaz.github.io/img/shift-image/image2.png&#34; alt=&#34;image2.png&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
But if cell 2 asks cell 1 for it&#39;s color first then cell 3 will
actually get cell 1&#39;s color:
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;https://cestlaz.github.io/img/shift-image/image3.png&#34; alt=&#34;image3.png&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
So now we have the students thinking about synchronization and
parallel processing and they don&#39;t even know it.
&lt;/p&gt;

&lt;p&gt;
The solution&#39;s pretty easy, break the problem up into two steps.
&lt;/p&gt;

&lt;p&gt;
First, have every patch ask its neighbor for its color and then once
everyone knows their neighbor&#39;s color, then change:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-html&#34;&gt;patches-own [next-color]

to shift-correct
; figure out my next color
ask patches [ set next-color [pcolor] of patch-at -1 0 ]
; then switch to it
ask patches [ set pcolor next-color]
end
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
You can run that by clicking &lt;b&gt;&lt;b&gt;setup&lt;/b&gt;&lt;/b&gt; again and then &lt;b&gt;&lt;b&gt;shift-correct&lt;/b&gt;&lt;/b&gt; a
few times.
&lt;/p&gt;

&lt;p&gt;
There&#39;s some of the beauty of NetLogo - we can get kids to think about
some deep concepts while playing with an easy to use, fun, interactive
environment with a real textual programming language.
&lt;/p&gt;

&lt;p&gt;
Stay tuned for part 2 when I&#39;ll talk about creating a cellular
automaton that can solve a maze.
&lt;/p&gt;

&lt;div class=&#34;center frame&#34;&gt;
&lt;iframe class=&#34;center frame&#34; src=&#34;https://cestlaz.github.io/img/shift-image/shift-image.html&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>International Blog Delurking Week 2016</title>
      <link>https://cestlaz.github.io/posts/2016-01-06-delurking-week/</link>
      <pubDate>Wed, 06 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-01-06-delurking-week/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;



&lt;p&gt;
It&#39;s been pointed out by a couple of bloggers I follow:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://gasstationwithoutpumps.wordpress.com/&#34;&gt;Gas station without pumps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.acthompson.net/&#34;&gt;Computer Science Teacher (Alfred Thompson&#39;s blog)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
That it&#39;s International Blog Delurking Week.
&lt;/p&gt;

&lt;p&gt;
So, I know I don&#39;t have a large readership, but if you do read this
blog, why not give a brief hi in the comments.  I&#39;d love to know who you are and what you do.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Discussion Silos</title>
      <link>https://cestlaz.github.io/posts/2016-01-03-discussion-silos/</link>
      <pubDate>Sun, 03 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-01-03-discussion-silos/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
In response to the past couple of days where my friends and fellow CS
Ed advocates Alfred Thompson, Rob Underwood, and I had a nice little
discussion via our blogs, Alfred wrote &lt;a href=&#34;http://blog.acthompson.net/2016/01/when-blogging-works-for-educators.html&#34;&gt;this&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
It&#39;s great when a number of voices in the community have an open
discussion but one of the things I found myself lamenting was the fact
that a lot of the discussion isn&#39;t truly accessible.
&lt;/p&gt;

&lt;p&gt;
Why not?
&lt;/p&gt;

&lt;p&gt;
The silo known as Facebook.
&lt;/p&gt;

&lt;p&gt;
I have no problem with Facebook - I like it and use it daily - it&#39;s a great way to
keep in touch with former students turned friends. The problem is that
much like Las Vegas, discussions that happen on Facebook stay on
Facebook.
&lt;/p&gt;

&lt;p&gt;
Recently I&#39;ve seen a number of blog posts, some mine, some Alfred&#39;s,
some others where the post garnered nary a comment. Head over to
Facebook  and if you&#39;re friends with the right people, you might find
a lively, informative discussion.
&lt;/p&gt;

&lt;p&gt;
In one case in particular, one post had independent, overlapping
discussions in at least three Facebook threads.
&lt;/p&gt;

&lt;p&gt;
How much richer would the discussion have been  in a public forum
plus it would be left open for people to discover in the future.
&lt;/p&gt;

&lt;p&gt;
Personally, I use &lt;a href=&#34;http://disqus.com/&#34;&gt;Disqus&lt;/a&gt;. I like it since I can also follow people on
it and I can just embed the code in any page but others like what
Wordpress or Blogger uses for comment threads. In any event, it keeps
the conversation open.
&lt;/p&gt;

&lt;p&gt;
Is this really a problem? Maybe not but I do wish people would look
beyond Facebook for discussions.
&lt;/p&gt;

&lt;p&gt;
It&#39;s something I&#39;ve been trying to get my students to do for
years. I&#39;ve used a number of tools for class communication:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;mail lists&lt;/li&gt;
&lt;li&gt;Piazza&lt;/li&gt;
&lt;li&gt;custom forum software like vanilla&lt;/li&gt;
&lt;li&gt;slack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
and haven&#39;t found anything that really does the job quite right. I&#39;m
still looking.
&lt;/p&gt;

&lt;p&gt;
The kids use these but invariably end up also setting up a Facebook
group for my class and their other classes. I encourage this - they
certainly should have a forum that I can&#39;t see. How else can they plan
that surprise party for me :-). In all seriousness though, ideally
they should have a forum free of teachers but they should use the one
with the teacher as much as possible.
&lt;/p&gt;

&lt;p&gt;
The real problem with the kids setting up Facebook groups every year
is that there&#39;s no institutional memory. I see the kids, year after
year, have to clear the same hurdles. If they started thinking outside
of the silo of their Facebook communities and just had an ongoing
community for each class - one that passed on from year to year, it
would be of tremendous value for them.
&lt;/p&gt;

&lt;p&gt;
So, I&#39;d like to encourage everyone out there to get our discussions
out into public forums. It would be terrific if more of us would blog
or blog more often and also to take the time to add to the dialog in a
public place.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching Coding - getting beyond superficial syntax</title>
      <link>https://cestlaz.github.io/posts/2016-01-01-different-languages/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-01-01-different-languages/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
The other day, Alfred Thompson put up a piece about &lt;a href=&#34;http://blog.acthompson.net/2015/12/code-in-different-languages.html&#34;&gt;coding in multiple
languages&lt;/a&gt;. Alfred references a post written last May by &lt;a href=&#34;http://robunderwood.com/2015/05/31/code-syntax-compared-part-1/%0A&#34;&gt;Rob Underwood.&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Both pieces are worth a look.
&lt;/p&gt;

&lt;p&gt;
Rob is trying to illustrate many of the superficial similarities in
popular languages.
&lt;/p&gt;

&lt;p&gt;
In the comments on Alfred&#39;s blog, both Alfred and I alluded to coding
in an appropriate style for the language.
&lt;/p&gt;

&lt;p&gt;
For me the issue is even bigger.
&lt;/p&gt;

&lt;p&gt;
Learning to code is all the rage and places to learn are popping out of
the woodwork.
&lt;/p&gt;

&lt;p&gt;
There are:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;In classes, in schools, with teachers&lt;/li&gt;
&lt;li&gt;Drop in programs in schools.&lt;/li&gt;
&lt;li&gt;Programs run by coding schools&lt;/li&gt;
&lt;li&gt;Moocs and other online resources&lt;/li&gt;
&lt;li&gt;Summer and weekend programs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
And probably more. All of these options are giving more and more
people a way to learn to code.
&lt;/p&gt;

&lt;p&gt;
That&#39;s great, but it also raises concerns given that very few people
involved in CS education have both strong teaching and CS backgrounds.
&lt;/p&gt;

&lt;p&gt;
What I&#39;m starting to see are the results as I meet young people coming
out of all of these programs.
&lt;/p&gt;

&lt;p&gt;
Unfortunately, what I&#39;m frequently seeing, at best, is very
superficial coverage of syntax.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve seen kids who would have no basis for understanding that the
ramifications of this Python code:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;a = 30
def f():
a=20
print a

print a
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
and this Javascript code:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-javascript&#34;&gt;a = 30;
function f(){
a = 20
console.log(a);
}
console.log(a);
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
are very different.
&lt;/p&gt;

&lt;p&gt;
It gets worse when I meet kids who &#34;know C&#34; because they were exposed
to constructs like:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-c&#34;&gt;for (i=0;i&amp;lt;10;i++){
// code goes here
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
I think the most common issue come from kids being &#34;taught&#34;
programming using javascript which seems deceptively simple but is
really rather deep.
&lt;/p&gt;

&lt;p&gt;
It&#39;s important that as CS becomes more mainstream that we make sure
that we have teachers and programs that are teaching the real deal. It
can be fun and accessible but it does require teachers that know their
stuff and are willing to continue to learn.
&lt;/p&gt;


&lt;p&gt;
Do our kids deserve any less?
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Leaving Stuyvesant</title>
      <link>https://cestlaz.github.io/posts/2015-12-23-leaving-stuy/</link>
      <pubDate>Wed, 23 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-12-23-leaving-stuy/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;p&gt;
Almost twenty six years. That&#39;s how long I&#39;ve been a NYC public school
teacher. Most of that time at my alma mater, Stuyvesant.
&lt;/p&gt;

&lt;p&gt;
A couple of years ago, the school paper wrote up an overview of my
career. I re-posted it &lt;a href=&#34;http://cestlaz.github.io/2014/09/17/stuycs-spectator.html#.Vnqfxh8Sr0o&#34;&gt;here&lt;/a&gt;. I&#39;m somtimes amazed at where we are now
and how we got here.
&lt;/p&gt;

&lt;p&gt;
Regulars here also know my frustrations. To Stuy, I&#39;m an
interchangeable, generic math teacher and the DOE has shown no
interested in supporting what we&#39;ve built. I&#39;ve also written about my
concerns with the direction the city&#39;s going with respect to K12 CS
education.
&lt;/p&gt;

&lt;p&gt;
It was time for me to start the next phase of my career.
&lt;/p&gt;

&lt;p&gt;
I&#39;m happy to say that I will be joining Hunter College in late
January. I&#39;ll be developing their CS Teacher Ed program and also
working with their computer science undergrads. I&#39;ll also have the
opportunity to work with the Manhattan/Hunter Science High School and
Hunter College High School.
&lt;/p&gt;

&lt;p&gt;
I also look forward to the opportunity to work more closely with my
friends in the K12 Ed space.
&lt;/p&gt;

&lt;p&gt;
I&#39;m very excited about this opportunity but it feels a bit weird after
being in the same place for so long. I don&#39;t feel any special
attachment to the institution that is Stuyvesant, my allegiance is to
my current and former students and that community isn&#39;t going
anywhere. Next year I&#39;ll still be working with terrific young people,
just in a different location under a different name.
&lt;/p&gt;

&lt;p&gt;
I will miss the team that we&#39;ve put together but even then, we get to
continue our work with CSTUY.
&lt;/p&gt;

&lt;p&gt;
With the new year comes new opportunity and I can&#39;t wait.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code - because I&#39;m an idiot</title>
      <link>https://cestlaz.github.io/posts/2015-12-17-im-an-idiot/</link>
      <pubDate>Thu, 17 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-12-17-im-an-idiot/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/advent/advent.png&#34; alt=&#34;advent.png&#34; width=&#34;480px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
I wish our kids believed us when we tell them that we have the same
programming troubles as they do. We stare at code for hours not seeing
problems that could be a simple as passing the wrong value. We spend
an inordinate amount of time trying to see the problem and then
realize that we just forgot something silly.
&lt;/p&gt;

&lt;p&gt;
At this point, it&#39;s common for us CS teachers to tell each other &#34;I
figured out the problem I was having &amp;#x2013; it&#39;s that I was an idiot.&#34;
&lt;/p&gt;

&lt;p&gt;
Last time, I talked about &lt;a href=&#34;http://adventofcode.com/&#34;&gt;Advent of Code&lt;/a&gt; and how I was somewhat behind
the curve. In part because I started late and in part because I&#39;ve
been using it as an excuse to learn some Clojure.
&lt;/p&gt;

&lt;p&gt;
Here&#39;s how I burned over two days on &lt;a href=&#34;http://adventofcode.com/day/6&#34;&gt;Day 6&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
The problem is pretty straight forward. You have a 1,000 x 1,000 grid
representing a light board and you have to repeatedly do operations on
smaller rectangles on that grid. Turning individual lights on and off,
if you would.
&lt;/p&gt;

&lt;p&gt;
If I were doing this in a language like C, I&#39;d probably just take a
big block of memory and loop through the instructions but since I was
working in Clojure, I thought I&#39;d try to do something in more of the
functional mode, that is, with immutable data types.
&lt;/p&gt;

&lt;p&gt;
After a while, I was getting the feeling that it was going to be too
slow so I shifted to just modifying a big block of memory.
&lt;/p&gt;

&lt;p&gt;
Try as I could, I couldn&#39;t get it to work. I was sure my algorithm was
fine - it wasn&#39;t a hard problem, but I couldn&#39;t get the right answer.
&lt;/p&gt;

&lt;p&gt;
After a while, I started looking at existing solutions and they were
basically the same as mine.
&lt;/p&gt;

&lt;p&gt;
I was stumped.
&lt;/p&gt;

&lt;p&gt;
Two days after the start, I figured it out.
&lt;/p&gt;

&lt;p&gt;
No matter how hard you try, if your problem specifies the data in the
form &lt;b&gt;&lt;b&gt;row1,col1 row2,col2&lt;/b&gt;&lt;/b&gt;, you&#39;re not going to get the right answer
if you decide that the input is in the form &lt;b&gt;&lt;b&gt;row1,row2 col1,col2&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;D&#39;Oh&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
Ok, after that the problem was pretty trivial.
&lt;/p&gt;

&lt;p&gt;
Hopefully I&#39;ll have some time to do problem 7 and beyond this weekend.
&lt;/p&gt;

&lt;p&gt;
If there are any Clojure people out there, I&#39;m putting my solutions up
on &lt;a href=&#34;https://github.com/zamansky/adventofcodeclojure&#34;&gt;GitHub&lt;/a&gt; - I&#39;d love some feedback on how to get more idiomatic.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code</title>
      <link>https://cestlaz.github.io/posts/2015-12-15-advent/</link>
      <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-12-15-advent/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/advent/advent.png&#34; alt=&#34;advent.png&#34; width=&#34;480px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
Has everyone seen &lt;a href=&#34;http://adventofcode.com/&#34;&gt;Advent of Code&lt;/a&gt;?
&lt;/p&gt;

&lt;p&gt;
It&#39;s a site with a series of programming problems that are being
revealed one a day, a la an advent calendar. You can read more about
it &lt;a href=&#34;http://adventofcode.com/about&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
I came to the party a little late so I&#39;m only up to day 6.
&lt;/p&gt;

&lt;p&gt;
Each problem comes in two parts. The second is revealed after you
complete the first. Both students and teachers are enjoying the
problems.
&lt;/p&gt;

&lt;p&gt;
What I like about the Advent of code, besides the one a day release,
is the fact that at least so far, the problems aren&#39;t super crazy
hard. They require a little thought but they seem very doable.
&lt;/p&gt;

&lt;p&gt;
For me, that makes them a perfect platform on which to play with a new
language. I&#39;m working through these in Clojure. I&#39;ve been putting my
solutions up &lt;a href=&#34;https://github.com/zamansky/adventofcodeclojure&#34;&gt;here&lt;/a&gt;. I have no idea if my code is &#34;good&#34; Clojure but
it&#39;s been fun nonetheless.
&lt;/p&gt;

&lt;p&gt;
So, if you&#39;re looking for a nice set of small programming problems
and want to explore something new, check it out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>We&#39;re Number One!! We&#39;re Number One!!!</title>
      <link>https://cestlaz.github.io/posts/2015-11-19-were-number-one/</link>
      <pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-11-19-were-number-one/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
I woke up this morning to an email from my principal &#34;Stuy is #1.&#34;
This followed a bunch of Facebook posts by friends and alums of a
similar vein.
&lt;/p&gt;

&lt;p&gt;
It was all about a couple of reports, &lt;a href=&#34;https://k12.niche.com/rankings/public-high-schools/best-overall/&#34;&gt;here&lt;/a&gt;, and &lt;a href=&#34;http://www.businessinsider.com/best-public-high-schools-in-america-2015-11&#34;&gt;here&lt;/a&gt;. It turns out
Stuy is ranked #1. Woo Hoo. We&#39;re awesome.
&lt;/p&gt;

&lt;p&gt;
Of course, everyone whooping it up now was quick to say &#34;all those
rankings are meaningless&#34; back when US News and World report ranked
Stuy way down on their list.
&lt;/p&gt;

&lt;p&gt;
We all know what makes a great school: great students. At least in
terms of perception. Look at most of these lists and they&#39;ll be
dominated by high schools that take in high performing students.
&lt;/p&gt;

&lt;p&gt;
Truth be told, in many ways, Stuyvesant isn&#39;t a special place, but
more on that down below.
&lt;/p&gt;

&lt;p&gt;
In terms of the ratings and rankings they&#39;re meaningless but in a way
dangerous. I see it at Stuy. Under the current administration AP is
the word of the day. It&#39;s all Advanced Placement all the time.  Why?
That&#39;s one of the ways to rise up in the rankings. So are the school
surveys which is why there&#39;s been more pressure to get those done.
&lt;/p&gt;

&lt;p&gt;
My feelings? AP is all about making money for the College Board. I&#39;m
not a fan of &#34;early college,&#34; I&#39;m a fan of enrichment. I&#39;ve said it
many times - if a course is such that it can be mastered equally well
by a 15 year old in 10th grade as by a 19 or 20 year old in college,
well, it really isn&#39;t college level. High achieving, well prepared
high school kids can do college level work in 11th and 12th grades but
probably not in all subject areas. Sure they can memorize, ape, and
mimic, but the depth of knowledge won&#39;t be there. Regardless, we
should trust schools and teachers to do it right. Schools can roll out
rigorous courses as good or better than AP. There&#39;s no real need for
the College Board seal of approval. Look at &lt;a href=&#34;http://www.huffingtonpost.com/alex-mallory/private-schools-ap-tests_b_823616.html&#34;&gt;Fieldston and other
private schools&lt;/a&gt; as examples.
&lt;/p&gt;

&lt;p&gt;
We&#39;ve been teaching our own introductory CS class at Stuy for
years. The entire team knows that it&#39;s far superior, at least for our
students, than the new AP CS Principles course yet our principal keeps
pushing the AP course.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve spoken to a number of administrators  from highly regarded schools
over the past couple of years and all are pushing test scores, AP
classes, and anything to get those rankings up.
&lt;/p&gt;

&lt;p&gt;
So, there&#39;s a movement to make Stuy a generic school that happens to
have high performing students which brings me back to are we number
one or indeed are we special?
&lt;/p&gt;

&lt;p&gt;
It certainly has a couple of things going for it. Great kids and a
large size. The large size ensures lots of electives. Stuy is one of
the few schools with a robust set of humanities classes, stem classes,
multiple music groups, and more. That&#39;s important. When I sent my kids
to Stuy a big part of the decision was due to the fact that they&#39;d be
surrounded by smart kids whose interests range all over the place. The
kids come from all backgrounds. Also, my kids would be able to explore all
of their current interests and maybe even pick up some new ones.
&lt;/p&gt;


&lt;p&gt;
But then there&#39;s the other side. We have lots of electives and some
are great but then, some are lousy. Just like any other school we have
some amazing teachers and some garbage. For the most part, if you
switched Stuy&#39;s faculty and administration with another school, you
might lose a few special electives and gain a few different ones but
by and large people wouldn&#39;t notice the difference.
&lt;/p&gt;

&lt;p&gt;
Regardless, Stuy and all similar institution should be charged with
something extra. We should be leaders in developing programs and
sharing them with other schools. We should be developing experiences
for our kids that are appropriate to their level of development, not
being happy with high regents scores or the fact that we had a bunch
of Intel semifinalists, many who probably would have accomplished
similar feats regardless of the school they attended.
&lt;/p&gt;

&lt;p&gt;
Kowtowing to the rankings kills that possibility. To reach the top of
the charts you have to follow the book. If you want to lead, you have
to write the book.
&lt;/p&gt;

&lt;p&gt;
It would be silly of me to judge my success by how many kids pass the
APCS exam. It&#39;s an easy test for them. I&#39;ve worked hard not to create
classes because I like them, but because they make sense for our
kids. They sequence appropriately, and they give the kids
opportunities and experiences that they wouldn&#39;t get had they not
attended Stuy.
&lt;/p&gt;

&lt;p&gt;
Unfortunately, since the late 90&#39;s I haven&#39;t had the luxury of a
supportive administration that shared my vision. As the school and the
system moves more towards the rankings you&#39;re going to see educational
leaders more and more marginalized and finally eliminated.
&lt;/p&gt;

&lt;p&gt;
So, is Stuy number one and is it special? As long as it&#39;s given the
same type of kids it&#39;s had for the past 100 or so years, the kids will
do fine. Is it really special? Well, unless it starts really think
about what the kids need and deserve, maybe not so much.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Other People&#39;s Code</title>
      <link>https://cestlaz.github.io/posts/2015-11-11-other-peoples-code/</link>
      <pubDate>Wed, 11 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-11-11-other-peoples-code/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;
&lt;div id=&#34;outline-container-orgheadline1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline1&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;
The coding on their project is reminiscent in many ways of an Ed
Sheerhan song. It left me in tears and very confused as to what the
author was trying to accomplish.
&lt;/p&gt;

&lt;p&gt;
&amp;#x2013; a student commenting on their most recent project.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-orgheadline2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline2&#34;&gt;
&lt;p&gt;
We had some fun last week. Well, OK, I had some fun. The SoftDev
classes had just finished a little project. Basically, a blogging
platform. Something that would tie together all the tools we&#39;ve been
using. Flask, user management, an SQL database (SQLite), and a nice
looking front end.
&lt;/p&gt;

&lt;p&gt;
It was also the first real group project so the teams have started to
learn how to work together.
&lt;/p&gt;

&lt;p&gt;
After some project demos, it was time for part two: NOSQL. We explored
MongoDB and then it was time for the project - clean up the
previous project through the use of techniques like template
inheritance and convert the database backend to MongoDB.
&lt;/p&gt;

&lt;p&gt;
The catch? Each group would take another groups project and use that
as their starter code. The rules? They could modify and refactor but
they couldn&#39;t rewrite.
&lt;/p&gt;

&lt;p&gt;
It threw the groups for a loop but I ultimately think they had
fun with this.
&lt;/p&gt;

&lt;p&gt;
Afterwards each group gave a write up to their starter group. What
made their life easier, what made it harder. We then circled up for
discussion as a class.
&lt;/p&gt;

&lt;p&gt;
It was terrific.
&lt;/p&gt;

&lt;p&gt;
First, it was great that we&#39;ve gotten to a point where everyone feels
comfortable giving each other constructive criticism. We&#39;ve gotten to
the point where the class is a team.
&lt;/p&gt;

&lt;p&gt;
Beyond that, I&#39;m hoping that everyone got a lot out of the exercise.
&lt;/p&gt;

&lt;p&gt;
As each group talked, common themes arose:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;consistent commenting is good&lt;/li&gt;
&lt;li&gt;variable names matter&lt;/li&gt;
&lt;li&gt;unused code and files can be misleading&lt;/li&gt;
&lt;li&gt;overall code structure, file names, and locations are important.&lt;/li&gt;
&lt;li&gt;and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
We&#39;re now going to start a discussion of coding style, standards, and
documentation.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve got to say that I&#39;m very happy how this little experiment worked
out.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Announcing def hacks(&#34;Winter&#34;,2015)</title>
      <link>https://cestlaz.github.io/posts/2015-11-09-def-hacks-winter-2015/</link>
      <pubDate>Mon, 09 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-11-09-def-hacks-winter-2015/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Last March, we (CSTUY) hosted our first hackathon - def hacks():
&lt;/p&gt;

&lt;p&gt;
It was a tremendous success. Fifty students of all experience levels,
a bunch of great mentors and judges - added all together and it was a
terrific day.
&lt;/p&gt;

&lt;p&gt;
I wrote about it &lt;a href=&#34;http://cestlaz.github.io/2015/03/29/defhacks.html#.VkFAN5_0-Ak&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
We&#39;re doing it again. We love last years hosts &lt;a href=&#34;http://sumall.com/&#34;&gt;SumAll&lt;/a&gt; and are grateful
that they continue to host our Saturday &lt;a href=&#34;http://cstuy.org/programs/hacking_sessions&#34;&gt;Hacking Sessions&lt;/a&gt; but we are
also grateful to Facebook NY for allowing us to use their larger space for
this edition of def hacks(). Larger space = more hackers.
&lt;/p&gt;

&lt;p&gt;
So, if you&#39;re a high school student who wants to spend a fun day
building something cool or if you know one, more information and
registration can be found here:
&lt;/p&gt;

&lt;p&gt;
&lt;a href=&#34;http://defhacks.com/&#34;&gt;http://defhacks.com/&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finding the Bell Tower</title>
      <link>https://cestlaz.github.io/posts/2015-11-06-bell-tower/</link>
      <pubDate>Fri, 06 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-11-06-bell-tower/</guid>
      <description>&lt;!DOCTYPE html&gt;



&lt;p&gt;
No Edu-Rant today nor a clever lesson plan.
&lt;/p&gt;

&lt;p&gt;
I just thought I&#39;d share an email exchange that cracked me up.
&lt;/p&gt;


&lt;p&gt;
We&#39;re out in Ann Arbor visiting our son Natan who is in his first year at Michigan.
&lt;/p&gt;

&lt;p&gt;
Devorah sent an email asking where we should meet.
&lt;/p&gt;

&lt;p&gt;
It turns out that Natan&#39;s last class of the day is Music Composition.
&lt;/p&gt;

&lt;p&gt;
Here&#39;s what followed:
&lt;/p&gt;


&lt;p&gt;
&lt;b&gt;&lt;b&gt;Natan:&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;

&lt;/p&gt;

&lt;p&gt;
Composition is in the bell tower on Central. It&#39;s hard to miss. It&#39;s a
bell tower. It&#39;s right by Hill Auditorium, and looks like a bell
tower. It also sounds like a bell tower at certain points in the day,
but I don&#39;t think I&#39;ve heard it sound like a bell tower around the end
of class, so you&#39;re probably better off looking for the thing that
looks like a bell tower rather than listening for the thing that
sounds like a bell tower. I would assume it also smells and tastes
like a bell tower, but if you&#39;re in close enough proximity to smell or
taste the bell tower, I think you&#39;ve probably found the bell tower. It
looks like a huggable building, but please, dad, do not hug the bell
tower. I have class there.
&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;
&lt;b&gt;&lt;b&gt;Devorah:&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;

&lt;/p&gt;

&lt;p&gt;
We can meet you at the bell tower as long as we can figure out what it
looks like.  Can you please give us a detailed description? Maybe
you should taste it just in case.  Does the bell tower on Central
smell like the bell tower on North?
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Natan:&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;

&lt;/p&gt;

&lt;p&gt;
The bell tower is around the size and shape of a bell tower. It&#39;s ten
stories high, with the first nine stories being a little less than
one-tenth of a bell tower tall, and the tenth being rather more than
one-tenth of a bell tower tall (the tenth story being where the bells
are). The width is about equal to that of a bell tower. It has two
doors, one on one side of the bell tower, and the other on the other
side of the bell tower. It has clock faces on top, which should, at
the point you see it, resemble a clock face indicating the time which
it is. (The appearance of the clock faces should update in near-real
time.) If you stick around long enough, it should start to sound like
a bell tower, or perhaps like a monster descending the stairs singing
Gilbert and Sullivan. I don&#39;t know what the bell tower on North smells
like because the bell tower on North is currently blocked off. But it
also resembles a bell tower, being approximately the same size and
shape of a bell tower. It is much less likely to sound like a bell
tower, though.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Interview questions and tests</title>
      <link>https://cestlaz.github.io/posts/2015-11-04-tests-and-interviews/</link>
      <pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-11-04-tests-and-interviews/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;p&gt;
The StuyCS Family mailing list was host to an interesting discussion
today. One of our younger members asked if the practice of giving
technical problems during an interview was going to follow him
throughout his career or if it goes away for more senior applicants.
&lt;/p&gt;

&lt;p&gt;
An interesting discussion followed.
&lt;/p&gt;

&lt;p&gt;
It reminded me of a time I was talking to a few senior engineers at a
large tech company. A couple of younger engineers were with us along
with a new hire. The youngsters started talking about the new hires
technical interview questions. One older engineer light heartedly
asked another &#34;I don&#39;t recall any tricky technical questions, how
about you?&#34; &#34;I don&#39;t recall any either&amp;#x2026;&#34; and on around the table.
&lt;/p&gt;

&lt;p&gt;
Of course these senior engineers had track records that stretched for
miles.
&lt;/p&gt;

&lt;p&gt;
I never liked those tech interview questions. If you just took
algorithms, you&#39;ve got an edge and it really seems to be more of a
test of &#34;have you seen this problem before&#34; rather than a true test of
ability.
&lt;/p&gt;

&lt;p&gt;
I much prefer those few companies that give &#34;take home assignments&#34; or
use other ways to determine fit.
&lt;/p&gt;

&lt;p&gt;
The tech interview reminds me of the pop quiz or a poorly designed
test. If you just ask the question that the kid doesn&#39;t get, the kid&#39;s
in trouble. A kid could know how to handle 90% of the work but if the
question is that last 10%, zero credit.
&lt;/p&gt;

&lt;p&gt;
As teachers, we end up using many forms of assessment and try to
develop an overall picture of a student.
&lt;/p&gt;

&lt;p&gt;
Companies should try to do the same.
&lt;/p&gt;

&lt;p&gt;
Why to companies still use these technical interview questions?
&lt;/p&gt;

&lt;p&gt;
Quite simply because they can.
&lt;/p&gt;

&lt;p&gt;
A company might miss out on a number of great candidates by using a
bad technical question but they will probably get at least a
reasonably strong hire that passes the test. For the company, mission
accomplished.
&lt;/p&gt;

&lt;p&gt;
As teachers, we can&#39;t do that. I&#39;m not given a class of 32 kids and
asked to pull out a couple of software engineers. As teachers, we&#39;re
supposed to pull everyone along.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers - boy do we suck!!!!</title>
      <link>https://cestlaz.github.io/posts/2015-11-03-teachers-suck/</link>
      <pubDate>Tue, 03 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-11-03-teachers-suck/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;
&lt;div id=&#34;outline-container-orgheadline1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline1&#34;&gt;
&lt;p&gt;
Today was a &#34;professional development day.&#34; That means that instead of
teaching, we were supposed to work on our craft.
&lt;/p&gt;

&lt;p&gt;
Rather than the normal nonsense - forcing CS teachers to sit through
common core math lectures or how to use the latest calculator, our
host principal, Randy Asher, of Brooklyn Tech let us do our thing.
&lt;/p&gt;

&lt;p&gt;
Basically, it was a bunch of CS teachers from two schools - Stuy and
Brooklyn Tech, talking shop for most of the day.
&lt;/p&gt;

&lt;p&gt;
Given the ridiculous &#34;professional development&#34; we&#39;re subject to weekly
at Stuy, it was a welcome change.
&lt;/p&gt;

&lt;p&gt;
We talked about a number of issues:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;How difficult concepts like iteration can be to actually teach.&lt;/li&gt;
&lt;li&gt;How retention is a real issue.&lt;/li&gt;
&lt;li&gt;How we have to deal with a range of students with a range of
interests.&lt;/li&gt;
&lt;li&gt;What happens when we have a kid who finds out they&#39;re less
interested in CS than they thought.&lt;/li&gt;
&lt;li&gt;How do we create a comfortable setting for a diverse population.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
and more.
&lt;/p&gt;

&lt;p&gt;
I mean, really - all we do is talk about how hard it is to teach CS.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline2&#34;&gt;
&lt;p&gt;
Contrast that with every after school, summer, drop in, coding school
and program. They seem to:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Teach kids to be software developers just like adults in the course
of a summer.&lt;/li&gt;
&lt;li&gt;Teach kids how to make we apps in N weeks.&lt;/li&gt;
&lt;li&gt;Leave kids more prepared for the APCS A exam than kids to take the
course.&lt;/li&gt;
&lt;li&gt;Solve the diversity problem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Seeing how much and how well all these non-educators can do with kids
vs what we were talking about I can only conclude that us teacher folk
are pretty lousy.
&lt;/p&gt;

&lt;p&gt;
On the other hand, us real teachers have to pay attention to to
little things like long term retention and success and can&#39;t just
parade out a few nice stories and outlier results.
&lt;/p&gt;

&lt;p&gt;
Give me a real teacher any day.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve written a bit on my concerns with drop in programs before &lt;a href=&#34;http://cestlaz.github.io/2015/05/07/learning-takes-time.html#.VjlSyd8Sr0o&#34;&gt;here&lt;/a&gt;, &lt;a href=&#34;http://cestlaz.github.io/2015/08/17/setting-up-to-fail-cs.html#.VjlSsd8Sr0o&#34;&gt;here&lt;/a&gt;, and
&lt;a href=&#34;http://cestlaz.github.io/2015/10/12/nycda.html#.VjlSqd8Sr0o&#34;&gt;here.&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
I remember a few years ago I was talking to someone about all the CS
Ed hype we were seeing. We both noted that many of the people doing
the best work are so busy doing that work that they can&#39;t spare the
time to generate the hype.
&lt;/p&gt;

&lt;p&gt;
I was with a bunch of those people today.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Halloween 2015 - the video</title>
      <link>https://cestlaz.github.io/posts/2015-11-01-halloween-video-2015/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-11-01-halloween-video-2015/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
As a teacher, sometimes your gut tells you to do something and it
turns out to be a really good idea.
&lt;/p&gt;

&lt;p&gt;
That&#39;s what happened in October, 1994. I decided to dress up as &lt;a href=&#34;https://en.wikipedia.org/wiki/Groo_the_Wanderer&#34;&gt;Groo
the Wanderer&lt;/a&gt; for Halloween. I never dressed in costume for school
before and back then, no many did. A few students and very few
teachers.
&lt;/p&gt;

&lt;p&gt;
Afterwards, I noticed that my younger students - the ones that didn&#39;t
know me that well yet, really loosened up and so a tradition was born.
&lt;/p&gt;

&lt;p&gt;
Over each of the next 20 Halloweens, I did something
different. Sometimes solo, sometimes as a pair and more recently as
part of a team.
&lt;/p&gt;

&lt;p&gt;
What started as a lark has now become something of an obligation but
it&#39;s still fun.
&lt;/p&gt;

&lt;p&gt;
So, with no further ado, let&#39;s go to the video tape:
&lt;/p&gt;


&lt;div class=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/81qHI-iNkXg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
And of course, the full playlist:
&lt;/p&gt;


&lt;div class=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/videoseries?list=PL9KxKa8NpFxJYgovyJhF4HZRsAqYKBLiG&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Inner voices</title>
      <link>https://cestlaz.github.io/posts/2015-10-30-halloween-2015/</link>
      <pubDate>Fri, 30 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-30-halloween-2015/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
div.half {width:50%;}
&lt;/style&gt;



&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/halloween-2015/inner-voices.jpg&#34; alt=&#34;inner-voices.jpg&#34; width=&#34;480px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
It&#39;s Halloween again. This time, &#34;Inside Out.&#34;
&lt;/p&gt;

&lt;p&gt;
No video yet, but stay tuned.
&lt;/p&gt;

&lt;p&gt;
For the time being, enjoy some of our past madness:
&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/videoseries?list=PL9KxKa8NpFxJYgovyJhF4HZRsAqYKBLiG&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Something growing in the Hudson Valley</title>
      <link>https://cestlaz.github.io/posts/2015-10-29-catskills-2015/</link>
      <pubDate>Thu, 29 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-29-catskills-2015/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Know your tools - intermediate Emacs</title>
      <link>https://cestlaz.github.io/posts/2015-10-28-emacs-intermediate/</link>
      <pubDate>Wed, 28 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-28-emacs-intermediate/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;
&lt;div id=&#34;outline-container-orgheadline1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline1&#34;&gt;
&lt;p&gt;
A good workman is known by his tools, or so the saying goes. My tools
of choice are my terminal shell and Emacs.
&lt;/p&gt;

&lt;p&gt;
I suppose if I was a full time developer working with a limited set of
tools I might like an IDE like JetBrains or Eclipse but no matter how
many alternatives I try, I always end back in Emacs.
&lt;/p&gt;

&lt;p&gt;
I recommend that my students spend time not only in Emacs but also in
tools like Vim or Sublime Text.
&lt;/p&gt;

&lt;p&gt;
I do warn them, though, that as a commercial product, Sublime might
not be around forever, I mean before Sublime was sublime, TextMate was
sublime. If you go back to the 1980s, Brief was sublime.
&lt;/p&gt;

&lt;p&gt;
Commercial tools come and go but I&#39;ve been using Emacs since the mid
eighties.
&lt;/p&gt;

&lt;p&gt;
A few students have been asking me for some pointers on going past the
basics of Emacs so here we go.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id=&#34;outline-container-orgheadline2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline2&#34;&gt;Notes&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline2&#34;&gt;
&lt;p&gt;
This post just has some getting started notes. There are mode powerful
and advanced ways of doing most things.
&lt;/p&gt;

&lt;p&gt;
I think I&#39;ll just talk about a few of the basics here and will write
about code development with Emacs in a later post.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline3&#34;&gt;Starting out&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline3&#34;&gt;
&lt;p&gt;
Once you&#39;re OK with the basics (by using the built in tutorial or
on line resources) start to fore yourself to get to know:
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;orgheadline4&#34;&gt;Buffers&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-orgheadline4&#34;&gt;
&lt;p&gt;
when you find a new file &lt;b&gt;&lt;b&gt;(C-x C-f)&lt;/b&gt;&lt;/b&gt; it opens it into a new
buffer. You can also open a new buffer using &lt;b&gt;&lt;b&gt;C-x b&lt;/b&gt;&lt;/b&gt; and rather than
selecting a buffer typing in a new buffer name.
&lt;/p&gt;

&lt;p&gt;
Each buffer can hold a file and you can switch quickly between them
using &lt;b&gt;&lt;b&gt;C-x b&lt;/b&gt;&lt;/b&gt; and hitting &lt;b&gt;&amp;lt;Enter&amp;gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
You can kill the current buffer with &lt;b&gt;&lt;b&gt;C-x k&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
Using buffers lets you edit multiple files in a project quickly and
efficiently.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;orgheadline5&#34;&gt;Windows&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-orgheadline5&#34;&gt;
&lt;p&gt;
Your Emacs frame can be split into multiple windows. &lt;b&gt;&lt;b&gt;C-x 2&lt;/b&gt;&lt;/b&gt; splits
the window top and bottom, &lt;b&gt;&lt;b&gt;C-x3&lt;/b&gt;&lt;/b&gt; left and right. You can switch
between windows using &lt;b&gt;&lt;b&gt;C-x o&lt;/b&gt;&lt;/b&gt; for other window. Switching to one
window is done with &lt;b&gt;&lt;b&gt;C-x 1&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-orgheadline6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline6&#34;&gt;Getting Help&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline6&#34;&gt;
&lt;p&gt;
Get to know the built in help. You can always use functions like
&lt;b&gt;&lt;b&gt;M-x describe-function&lt;/b&gt;&lt;/b&gt; or &lt;b&gt;&lt;b&gt;M-x describe-key&lt;/b&gt;&lt;/b&gt; and of course
you can use completion to help speed things up but the help functions
are bound to:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;C-h k  for describe key&lt;/li&gt;
&lt;li&gt;C-h f  for describe function&lt;/li&gt;
&lt;li&gt;C-h a for search for command&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
You can usually type &lt;b&gt;&lt;b&gt;q&lt;/b&gt;&lt;/b&gt; to close the help.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline7&#34;&gt;Navigation&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline7&#34;&gt;
&lt;p&gt;
Use search for navigation rather than arrow keys.
&lt;/p&gt;

&lt;p&gt;
This can change the way you edit.
&lt;/p&gt;

&lt;p&gt;
For example ,if I wanted to go up to the word Navigation, above,
rather than using traditional motion keys, I&#39;d do a reverse search
(&lt;b&gt;&lt;b&gt;C-r&lt;/b&gt;&lt;/b&gt;) and search for Nav.
&lt;/p&gt;

&lt;p&gt;
Incremental search forward (&lt;b&gt;&lt;b&gt;C-s&lt;/b&gt;&lt;/b&gt;) and back are your friends.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline8&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline8&#34;&gt;Packages&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline8&#34;&gt;
&lt;p&gt;
You can check out my emacs configuration here:
&lt;/p&gt;

&lt;p&gt;
&lt;a href=&#34;https://github.com/zamansky/dotemacs&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/dotemacs&#34;&gt;https://github.com/zamansky/dotemacs&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
You can find basic installation instructions there or you can use the
interactive package manager, invoking it with &lt;b&gt;&lt;b&gt;M-x list-packages&lt;/b&gt;&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
Some of my favorite general purpose packages are:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/abo-abo/swiper&#34;&gt;Swiper&lt;/a&gt; - for navigation and finding files&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nflath/hungry-delete&#34;&gt;Hungry Delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magnars/expand-region.el&#34;&gt;Expand Region&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/abo-abo/ace-window&#34;&gt;Ace Window&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline9&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline9&#34;&gt;Next steps&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline9&#34;&gt;
&lt;p&gt;
We haven&#39;t even talked about code development or killer packages like
org-mode but I think this will do for a start.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Self Appointed Experts</title>
      <link>https://cestlaz.github.io/posts/2015-10-26-self-appointed-experts/</link>
      <pubDate>Mon, 26 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-26-self-appointed-experts/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
While looking over my tweet stream, I noticed this:
&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;RSVP today for the K-12 CS Education Panel, presented by &lt;a href=&#34;https://twitter.com/Uber&#34;&gt;@Uber&lt;/a&gt; + &lt;a href=&#34;https://twitter.com/FlatironSchool&#34;&gt;@FlatironSchool&lt;/a&gt;: &lt;a href=&#34;https://t.co/nVBbSbRn9d&#34;&gt;https://t.co/nVBbSbRn9d&lt;/a&gt; &lt;a href=&#34;https://t.co/NAxowSIfff&#34;&gt;pic.twitter.com/NAxowSIfff&lt;/a&gt;&lt;/p&gt;&amp;mdash; Flatiron School (@FlatironSchool) &lt;a href=&#34;https://twitter.com/FlatironSchool/status/658748945481474049&#34;&gt;October 26, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;
So, on November 12, one can head over to Uber and listen to three
experts talk about K12 CS Education. To quote the landing page:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;How can we engage our students in CS, and train our teachers to teach it?&lt;/li&gt;
&lt;li&gt;What are the biggest obstacles to overcome?&lt;/li&gt;
&lt;li&gt;What is the future of K-12 CS Education?&lt;/li&gt;
&lt;li&gt;What&#39;s working?`&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Sound great.
&lt;/p&gt;

&lt;p&gt;
The problem?
&lt;/p&gt;

&lt;p&gt;
Who are these expert voices that we&#39;re supposed to be listening to.
&lt;/p&gt;

&lt;p&gt;
The panel consists of three people: &lt;a href=&#34;https://www.linkedin.com/profile/view?id=ADEAAACdvOoBuWtX0sqm4gkJmOZ0AxArrQJgvnQ&amp;amp;authType=OPENLINK&amp;amp;authToken=IPmC&amp;amp;locale=en_US&amp;amp;srchid=9425671445893373413&amp;amp;srchindex=1&amp;amp;srchtotal=1&amp;amp;trk=vsrp_people_res_name&amp;amp;trkInfo=VSRPsearchId%3A9425671445893373413%2CVSRPtargetId%3A10337514%2CVSRPcmpt%3Aprimary%2CVSRPnm%3Atrue%2CauthType%3AOPENLINK%0A&#34;&gt;Adam Enbar&lt;/a&gt; of Flatiron School,
&lt;a href=&#34;https://www.linkedin.com/profile/view?id=ADEAAARHMgcBmb0ZqmtDHzi3b46_kZiEIL56VsQ&amp;amp;authType=NAME_SEARCH&amp;amp;authToken=uR-M&amp;amp;locale=en_US&amp;amp;srchid=9425671445893351065&amp;amp;srchindex=1&amp;amp;srchtotal=63&amp;amp;trk=vsrp_people_res_name&amp;amp;trkInfo=VSRPsearchId%3A9425671445893351065%2CVSRPtargetId%3A71774727%2CVSRPcmpt%3Aprimary%2CVSRPnm%3Atrue%2CauthType%3ANAME_SEARCH%0A&#34;&gt;Rebecca Novak&lt;/a&gt; of ScriptEd, and &lt;a href=&#34;https://www.linkedin.com/profile/view?id=ADEAAAA2T2oBLc3-qal-_GfdMlMRdFEjP47jnOw&amp;amp;authType=NAME_SEARCH&amp;amp;authToken=4qXf&amp;amp;locale=en_US&amp;amp;srchid=9425671445893344587&amp;amp;srchindex=1&amp;amp;srchtotal=67&amp;amp;trk=vsrp_people_res_name&amp;amp;trkInfo=VSRPsearchId%3A9425671445893344587%2CVSRPtargetId%3A3559274%2CVSRPcmpt%3Aprimary%2CVSRPnm%3Atrue%2CauthType%3ANAME_SEARCH%0A&#34;&gt;Debbie Marcus&lt;/a&gt;, the Executive Director
of CS Education for the New York City Department of Education.
&lt;/p&gt;

&lt;p&gt;
Sounds interesting.
&lt;/p&gt;

&lt;p&gt;
As a disclaimer, I have to say that I know Adam and Rebecca and
consider them friends. I like ScriptEd and what they do in the
schools. In fact, I think that my CSTUY programs are terrific next
steps for ScriptEd kids. ScriptEd is becoming good at what they do and
I think they&#39;re also aware of their limitations as an ed program. I
also know that Flatiron has done a solid job retraining adults for the
workforce. I don&#39;t think I&#39;ve ever met Debbie Marcus. I also believe
all these people are well meaning.
&lt;/p&gt;

&lt;p&gt;
What&#39;s the lay of the land?
&lt;/p&gt;

&lt;p&gt;
Given her position, Ms. Marcus will be considered a voice of
authority and I can&#39;t seem to go to a CS Ed event without someone from
the Flatiron School or someone from ScriptEd there in a place
indicating that they should be considered an  authority on K12 CS
Education.
&lt;/p&gt;

&lt;p&gt;
As much as I like what ScriptEd does in the schools and as much as the
Flatiron School has a strong reputation as an adult coding school
/ workforce program should these voices be the ones we&#39;re listening
to?
&lt;/p&gt;

&lt;p&gt;
Let&#39;s dig deeper.
&lt;/p&gt;

&lt;p&gt;
Higher up in this post, I link to all three panelists LinkedIn
profiles. All three are conspicuously missing one thing - experience
in CS and Rebecca is the only one who&#39;s LinkedIn profile indicates any
time teaching.
&lt;/p&gt;

&lt;p&gt;
Now, let&#39;s contrast that with the CSTUY and Stuy teams. Regular
readers know what I&#39;ve done building Stuyvesant&#39;s CS program and CSTUY
over the past 25 years and if you look at my team they all have
considerably more CS experience, Ed experience, and of course CS Ed
experience.
&lt;/p&gt;

&lt;p&gt;
Who&#39;s driving the train?
&lt;/p&gt;

&lt;p&gt;
Who&#39;s being excluded?
&lt;/p&gt;

&lt;p&gt;
What&#39;s wrong with this picture.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Alan Alda on Teaching Science</title>
      <link>https://cestlaz.github.io/posts/2015-10-20-alda/</link>
      <pubDate>Tue, 20 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-20-alda/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Scale, scale, scale. Scripted lessons. Online resources, Moocs. No
excuses schools. All of these are modern trends in education. None of
these are about good education. It&#39;s really demoralizing reading
article after article devaluing true master teachers and real
education.
&lt;/p&gt;

&lt;p&gt;
So, last night was a real pleasure.
&lt;/p&gt;

&lt;p&gt;
I attended a talk, given by Alan Alda on communicating science. The
talk was sponsored by &lt;a href=&#34;http://academyforteachers.org/&#34;&gt;The Academy for Teachers&lt;/a&gt;. I grew up watching
Hawkeye on MASH and more recently Arnold Vinick on The West Wing but
Mr. Alda has really been keeping himself busy in the world of
education. Check out what he&#39;s doing at the &lt;a href=&#34;http://www.centerforcommunicatingscience.org/&#34;&gt;Alan Alda Center for
Communicating Science&lt;/a&gt; at Stony Brook University.
&lt;/p&gt;

&lt;p&gt;
At it&#39;s core, Mr. Alda&#39;s talk was about teaching. Making a connection
with your students and engaging them. The exact opposite of many of
the current ed reform trends.
&lt;/p&gt;

&lt;p&gt;
Mr. Alda talked about &lt;a href=&#34;http://www.centerforcommunicatingscience.org/the-flame-challenge-2/&#34;&gt;the Flame Challenge&lt;/a&gt; where he challenged
scientists to teach 11 year olds all about &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Chemical_History_of_a_Candle&#34;&gt;a candle&lt;/a&gt; without dumbing it
down. Communication.
&lt;/p&gt;

&lt;p&gt;
He also talked about story telling. At one point he had a volunteer
from the audience carry a glass across the stage. He then had her do
it again, but this time with a full glass telling her &#34;if you spill a
drop everyone in your village will die.&#34; The difference in audience
attention was striking.
&lt;/p&gt;

&lt;p&gt;
Mr. Alda also talked about using improvisational games to help
students open up as well as about &lt;a href=&#34;https://en.wikipedia.org/wiki/Curse_of_knowledge&#34;&gt;the curse of knowledge.&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
One of my favorite parts of the talk was when an audience member asked
for a few teaching tips. He replied that he hates tips because out of
context, without the connection to the class, they&#39;re
meaningless. Mr. Alda used as an example:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Imagine that you&#39;re about to give a piano recital at Carnegie Hall
and you asked for a few tips.
&lt;/p&gt;

&lt;p&gt;
If you&#39;ve never played before, those tips aren&#39;t going to help you.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I&#39;m asked for CS teaching tips all the time, and Mr. Alda very much
captured my feelings on the subject. My friend and Colleague Jim
Cocoros also captured the feeling when he reminded me that the only
&#34;tip&#34; he gives new teachers is &#34;be yourself.&#34; I couldn&#39;t agree more.
&lt;/p&gt;

&lt;p&gt;
It was a delightful and a refreshing evening. I very much appreciate
and admire what Mr. Alda is doing beyond his acting and while I very
much hope he&#39;s able to extend his reach to more high school teachers
as he continues to work on communicating in science.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Looking under the hood</title>
      <link>https://cestlaz.github.io/posts/2015-10-17-under-the-hood/</link>
      <pubDate>Sat, 17 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-17-under-the-hood/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Just had an interesting conversation with &lt;a href=&#34;http://chrisgrant.co/&#34;&gt;Chris&lt;/a&gt;, one of our &lt;a href=&#34;http://cstuy.org/&#34;&gt;CSTUY&lt;/a&gt;
mentors. Chris is working with one of our more advanced groups of
hackers - they&#39;ll be creating a web based app that with ultimately be
deployed as mobile using &lt;a href=&#34;http://phonegap.com/&#34;&gt;PhoneGap&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
The question he had was &#34;&lt;a href=&#34;http://angularjs.org/&#34;&gt;Angular.js&lt;/a&gt; or &lt;a href=&#34;http://backbonejs.org/&#34;&gt;Backbone.js&lt;/a&gt;.&#34;
&lt;/p&gt;

&lt;p&gt;
Chris and I have had this conversation before. I was explaining at the
time why I preferred to use Backbone.js over Angular in my SoftDev
classes. Part of the reason is that the current version of Angular is
already deprecated while the new version isn&#39;t ready for prime time
yet. This means I&#39;d be teaching to a dead end. More importantly, Angular
is a much higher level framework than Backbone. There&#39;s a lot of
&#34;magic&#34; going on. Just a few short lines of code and you&#39;re done.
&lt;/p&gt;

&lt;p&gt;
Backbone is much closer to the metal. It does less work for you so it
let&#39;s me drill down with the kids all the way to the source. This way
the kids understand what&#39;s going on under the hood. As my buddy &lt;a href=&#34;https://www.linkedin.com/in/gerryseidman&#34;&gt;Gerry&lt;/a&gt;
says, &#34;never use a tool you couldn&#39;t write yourself.&#34; I personally
like low level tools like Backbone.js. If you have to get a job
done quickly, it might not be the right tool, but for teaching,
it&#39;s terrific.
&lt;/p&gt;

&lt;p&gt;
I think Chris was surprised when I said that a higher level tool like
Angular could very well be appropriate for our Saturday Hackers and
that I&#39;d certainly support whichever direction Chris wanted to go in
with his team.
&lt;/p&gt;

&lt;p&gt;
Why  might it be right in this case?
&lt;/p&gt;

&lt;p&gt;
Mostly because the hackers only meet once a week. In our Saturday
sessions, we want our kids to learn, but we also need to create an
environment where they can continue to progress on their
projects. Some times, compromise is needed. Angular will let them get
up and running within the constraints of our program and the hackers
will still learn a lot, particularly with people like Chris mentoring them.
&lt;/p&gt;

&lt;p&gt;
That&#39;s the balance we strive to achieve - a good amount of real CS but
tempered with the realities of a once a week program.
&lt;/p&gt;

&lt;p&gt;
We could go the way of many other CS programs out there and
just use tools that do 90% of the work but we like to think we have a
higher standard and I think that&#39;s what makes our team of teachers and
mentors special.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grading Autograders</title>
      <link>https://cestlaz.github.io/posts/2015-10-16-graders/</link>
      <pubDate>Fri, 16 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-16-graders/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
The other day codehs made an announcement about their new
&lt;a href=&#34;https://medium.com/codehs-product-updates/these-are-the-autograders-you-ve-been-looking-for-bda0fa8fd8a&#34;&gt;autograder&lt;/a&gt;. Fellow CS Teaching veteran Alfred Thompson had his say up
on his &lt;a href=&#34;http://blog.acthompson.net/2015/10/autogradersfor-good-or-for-evil.html&#34;&gt;blog&lt;/a&gt; where he talked about &lt;a href=&#34;https://computinged.wordpress.com/&#34;&gt;Mark Guzdial&lt;/a&gt;&#39;s comment on
autograders leading to less creative assignments.
&lt;/p&gt;

&lt;p&gt;
I very much agree that autograders, due to their rigidness lend
themselves to less creative projects, but thought I&#39;d write up a few
of my own thoughts on autograders.
&lt;/p&gt;

&lt;p&gt;
First and foremost, &lt;b&gt;I HATE GRADING&lt;/b&gt;. It&#39;s one of the worst parts of
my job and grading projects is &lt;b&gt;really&lt;/b&gt; hard to do well.
&lt;/p&gt;

&lt;p&gt;
You&#39;d think an autograder would be a panacea.
&lt;/p&gt;

&lt;p&gt;
It&#39;s not.
&lt;/p&gt;

&lt;p&gt;
In addition to them being very nit-picky &amp;#x2013; got an extra space in your
output? &lt;b&gt;FAIL&lt;/b&gt;. Wrong number of significant digits? &lt;b&gt;FAIL&lt;/b&gt;. Didn&#39;t
handle all those &#34;trick&#34; cases? &lt;b&gt;FAIL&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
Since autograders typically check your output against a correct
solution, it&#39;s going to be limited in what it can grade right and
wrong and what&#39;s more, it&#39;s very limited in the feedback it can give.
&lt;/p&gt;

&lt;p&gt;
These are some of the limitations that lead to less creative
projects but that&#39;s not my beef with the autograders.
&lt;/p&gt;

&lt;p&gt;
Why do we give assignments? To assess students? Yes, but also to
inform our instruction. We need to grade the assignments ourselves
because those assignments tell us about our students and teach us how
best to work with them. What&#39;s more, we really don&#39;t just want to see
that finished product, but rather, we want to see the process as
well. Autograders can&#39;t help here.
&lt;/p&gt;

&lt;p&gt;
I do use autograders &amp;#x2013; &lt;a href=&#34;http://codingbat.com/&#34;&gt;codingbat.com&lt;/a&gt; and our own locally developed
&lt;a href=&#34;http://bert.stuy.edu/pbrooks/SchemingBat/scheming.py&#34;&gt;Scheming Bat.&lt;/a&gt; I use them for small homeworks and class assignments
early on. For bigger stuff, I do it myself.
&lt;/p&gt;

&lt;p&gt;
For advanced classes (AP and beyond) we&#39;re all about the GitHub. Not
only can I grab the projects at any time but I can also see how
projects were developed - logs, diffs, &lt;a href=&#34;https://github.com/vynl/vynl-v0/graphs/contributors&#34;&gt;graphs&lt;/a&gt;. All give me insight
into how the students working. Add in class lab time when I get to
interact with the kids and I&#39;ve got a good sense of my student
computer scientists.
&lt;/p&gt;

&lt;p&gt;
In our intro courses, where they&#39;re not ready for GitHub, we use
Dropbox for sharing and collecting assignments. Not quite as good but
we can still see a lot.
&lt;/p&gt;

&lt;p&gt;
At the end of the day, if a teacher doesn&#39;t look at a student&#39;s work
directly, a teacher isn&#39;t going to know everything there is to know
about a student. I can&#39;t imagine a top English teacher not reading a
student&#39;s essays. We&#39;re no different.
&lt;/p&gt;

&lt;p&gt;
It&#39;s time consuming and generally no fun but it&#39;s a big part of &lt;b&gt;real&lt;/b&gt;
education.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Free labor for the College Board and more angst for the kids</title>
      <link>https://cestlaz.github.io/posts/2015-10-13-psat/</link>
      <pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-13-psat/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;p&gt;
I won&#39;t be teaching my regular classes tomorrow. I&#39;ll be
meeting all my kids but classes will only be 12 minutes long.
&lt;/p&gt;

&lt;p&gt;
So, how will my colleagues and I spend the rest of the day?
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Proctoring the PSAT.&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
This has always been a sore point with me. Back in the day, many
schools, Stuy included, offered the PSAT on the weekend. If you wanted
to proctor, you&#39;d come in and get paid a little extra. As a kid, if
you wanted to take the exam you&#39;d come in as well.
&lt;/p&gt;

&lt;p&gt;
I don&#39;t remember when it changed but at some point it did. The DOE
decreed that if you offered the PSAT during the week on school time,
the DOE would pay for the exams. This was done under the ridiculous
idea that all kids taking a test that counts for nothing is a good
thing. You can make a claim that having taken the PSAT gives the kids
some familiarity with the SAT but the SAT&#39;s value as a predictor of
college success is questionable at best anyway.
&lt;/p&gt;

&lt;p&gt;
Of course, setting things up like this is a great deal for the College
Board. It looks like they get a $15 per kid cash cow every year from
the NYC tax payers. It&#39;s a hidden expense so no one complains but we
keep shoveling the money out the door.
&lt;/p&gt;

&lt;p&gt;
What&#39;s worse is that we also provide the College Board with free
labor - rather then spend my day teaching my kids I&#39;m working for free
for the College Board administering their test to my kids.
&lt;/p&gt;

&lt;p&gt;
Teachers do the work, kids suffer through the exam, and the College
Board laughs all the way to the bank.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coding schools - or why I chose NYCDA</title>
      <link>https://cestlaz.github.io/posts/2015-10-12-nycda/</link>
      <pubDate>Mon, 12 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-12-nycda/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;div id=&#34;outline-container-orgheadline1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline1&#34;&gt;
&lt;p&gt;
Some of you might have noticed that a few months ago, I decided to
affiliate myself with &lt;a href=&#34;http://nycda.com/&#34;&gt;The New York Code and Design Academy&lt;/a&gt; or NYCDA. I
took on the role of &#34;Academic Director, Youth Programs.&#34; It&#39;s a part
time gig, at least for now and I&#39;m helping them develop their programs
for middle and high school students.
&lt;/p&gt;

&lt;p&gt;
Why did I choose them?
&lt;/p&gt;

&lt;p&gt;
There are a number of coding schools with varying levels of hype
around them. At their core, all are workforce programs. They take
people with little or no programming background and after a few months
of intensive training, they ship them off as web devs or the like.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline2&#34;&gt;
&lt;p&gt;
I have friends at many of these coding schools and related programs so
what was different about NYCDA that made me decide to work with them?
&lt;/p&gt;

&lt;p&gt;
They know who they are, they know what they do, they know where they
want to go, and we all feel I can help them get there.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline3&#34;&gt;
&lt;p&gt;
Let me explain.
&lt;/p&gt;

&lt;p&gt;
Most coding schools follow the same mold.
&lt;/p&gt;

&lt;p&gt;
For one reason or another, a founder decides to start teaching a
class. This works pretty well so it starts to grow into a
business. For many of these coding schools, the teaching staff comes
from the program&#39;s own graduates.
&lt;/p&gt;

&lt;p&gt;
The key point here is that most coding schools have little to no
interaction with real, experienced educators.
&lt;/p&gt;

&lt;p&gt;
So, why do they work? Well, to start, there&#39;s plenty of low hanging
fruit. Right now, as these programs are in high demand,  programs can
cream top applicants.
&lt;/p&gt;

&lt;p&gt;
Many programs also have applicants complete
pre-work - that is a program of self study before starting the coding
school. This pretty much ensures that your classes are going to be
composed of hard working, intelligent self starters - that&#39;s a recipe
for a successful student body.
&lt;/p&gt;

&lt;p&gt;
Given the student population and the fact that the skill set for an
entry level programmer can be taught fairly formulaicaly, it&#39;s a recipe
for success.
&lt;/p&gt;

&lt;p&gt;
Now, I don&#39;t mean to imply that these schools are bad or doing bad
things - all of them are taking people and giving them a chance at a
new career. It&#39;s good and it&#39;s important. Even more so for
organizations that provide a step up for the have nots.
&lt;/p&gt;

&lt;p&gt;
Teaching kids is another matter.
&lt;/p&gt;

&lt;p&gt;
For adults you&#39;re teaching a specific skill set for a specific job
market. For kids, you&#39;re setting a foundation and opening doors. You
can&#39;t just take your adult model and apply it to kids. Well, you can,
and it will even look good, but it won&#39;t have real substance.
&lt;/p&gt;

&lt;p&gt;
That&#39;s what impressed me about NYCDA - when &lt;a href=&#34;https://twitter.com/jeremysnepar&#34;&gt;Jeremy&lt;/a&gt; came to me it was
clear - they knew what they did and what they did well. He also knew
that as they ramp up their youth offerings, it was important to
involve real, experienced educators - that it was about having true
expert teachers even more than it was curriculum. He understood that
while NYCDA is doing a great job, how much better could it be to
include CS educators who have been sending kids into industry
successfully for years.
&lt;/p&gt;

&lt;p&gt;
I was even more delighted when my partner in crime JonAlf
Dyrland-Weaver - one of the best teachers I know, CS or otherwise,
agreed to teach one of our NYCDA youth courses this semester.
&lt;/p&gt;

&lt;p&gt;
NYCDA is the only coding school working to bring the best teachers out
there to their youth programs.
&lt;/p&gt;

&lt;p&gt;
That&#39;s why I joined on and that&#39;s why I&#39;m really excited for the
programs we&#39;re going to roll out.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How it all began</title>
      <link>https://cestlaz.github.io/posts/2015-10-09-be-a-cs-teacher/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-09-be-a-cs-teacher/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-orgheadline1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline1&#34;&gt;
&lt;p&gt;
This past week, Garth Flint wrote a couple of posts on how he
got to be a CS teacher and on being a CS teacher. You can find them here:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://gflint.wordpress.com/2015/10/07/so-you-want-to-be-a-cs-teacher-part-1/&#34;&gt;Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gflint.wordpress.com/2015/10/08/so-you-want-to-be-a-cs-teacher-part-2/&#34;&gt;Part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
They&#39;re both well worth a read.
&lt;/p&gt;

&lt;p&gt;
It got me thinking about how I got my start.
&lt;/p&gt;

&lt;p&gt;
I never planned on being a teacher. I figured I&#39;d just work in
tech. After working my way through college, fresh CS degree in hand, I
landed at Goldman Sachs. I had other opportunities but the tech scene
was very different. You could (basically):
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Work for a financial house or insurance company&lt;/li&gt;
&lt;li&gt;Do niche consulting&lt;/li&gt;
&lt;li&gt;travel out of the city to Bellcore, AT&amp;amp;T or IBM.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Well, I didn&#39;t drive and wasn&#39;t going to do consulting so I ended up
on Wall Street. I worked there for a bit but it didn&#39;t do it for me,
then tried a consulting gig. No better. Wall street never appealed to
me and at the time, more programming type jobs involved you working
alone on a computer in an office or a cube all day.
&lt;/p&gt;

&lt;p&gt;
So, for no particular reason, I decided to give teaching a go.
&lt;/p&gt;

&lt;p&gt;
I always wonder, if I had come along a few years later if I would have
stayed in pure tech.
&lt;/p&gt;

&lt;p&gt;
I had zero teaching credentials but there was a math teacher shortage
at the time. By taking a couple of CS classes as math classes
(numerical methods, algorithms) they justified giving me temporary
license. I would have to take a handful of Ed credits within a couple
of years and later get a masters (which I knew would be in CS, no way
was I getting an Education degree).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-orgheadline2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;orgheadline2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-orgheadline2&#34;&gt;
&lt;p&gt;
So, I started at Seward Park High School as a math teacher. Best thing
that could have happened to me. I was working with an incredibly
diverse population - high achieving kids, low achieving kids,
immigrants, multi-generational Americans, delightful kids and kids on
parole. That&#39;s where I developed my chops.
&lt;/p&gt;

&lt;p&gt;
Knowing that I was a CS guy the math chairman started having me teach
the basic programming course and later APCS.
&lt;/p&gt;

&lt;p&gt;
A couple of years later, I was bumped to Stuy. Taught math and the
rest of my history can be seen &lt;a href=&#34;http://cestlaz.github.io/2014/09/17/stuycs-spectator.html#.VhfhBt8qcbw&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Garth talks about requirements and Alfred Thompson, in his &lt;a href=&#34;http://blog.acthompson.net/2015/10/an-inside-look-at-being-computer.html&#34;&gt;link to
Garth&#39;s posts&lt;/a&gt; talks about the problems of CS teacher isolation. It
took a long time and it was hard work, but I started in a school with
no CS to speak and no CS teachers and now we have a required course,
between six and 10 CS teachers depending on the year, and a thoroughly
oversubscribed program. Of course, if you&#39;re at a small school, you
can&#39;t really do that. I remember in the early years, when it came to
course signup time, I&#39;d have to visit every math class in the building
on one day to hock my courses. I&#39;m glad those days are gone.
&lt;/p&gt;

&lt;p&gt;
Garth also makes a great point about all there is to learn as a real
CS teacher. The best math teachers I know love doing math and love
solving problems but by and large, they&#39;re not learning new subfields
every year. Over my time as a teacher I&#39;ve learned, either by choice
or necessity:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;new fields such as
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;relearning AI, which is radically different then when I was in
college&lt;/li&gt;
&lt;li&gt;Data mining&lt;/li&gt;
&lt;li&gt;Stats&lt;/li&gt;
&lt;li&gt;OOP&lt;/li&gt;
&lt;li&gt;Machine Learning&lt;/li&gt;
&lt;li&gt;UX&lt;/li&gt;
&lt;li&gt;HCI&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;new languages
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;Haskell (a bit)&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Perl&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;And tons of technologies
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Unix as a toolset&lt;/li&gt;
&lt;li&gt;system administration&lt;/li&gt;
&lt;li&gt;network administration.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;
Git
&lt;/p&gt;

&lt;p&gt;
and many more.
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
On the other hand, since I do work with many other CS teachers, I
might be a little bit of an outlier. Some of my colleagues also work
to keep current and learn new things while others are content with
their knowledge base and are happy to teach what they&#39;re currently
teaching. That&#39;s not to say that they don&#39;t work on their craft, but
rather, they&#39;re in a comfort zone of knowledge.
&lt;/p&gt;

&lt;p&gt;
So what&#39;s next? As initiatives like CS4All progress, CS education will
become more formalized. You all know my fear about the current
efforts - CS Ed will go the way of Math Ed and we&#39;ll be left with Meh
CS education for all. If that&#39;s the case, and I hope I&#39;m wrong, many
of Garth&#39;s issues will disappear. CS across the nation will become
more generic but more accessible and CS teachers will hopefully know
how to teach their courses but maybe not too much more.
&lt;/p&gt;

&lt;p&gt;
Even if that is the case, there will hopefully still be places for us
old time gluttons for punishment.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>I guess some people like the blues</title>
      <link>https://cestlaz.github.io/posts/2015-10-01-fans/</link>
      <pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-10-01-fans/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;p&gt;
Funny story from yesterday.
&lt;/p&gt;

&lt;p&gt;
Devorah, my better half, is an assistant principal at another high
school. Yesterday evening, she was at work late for &#34;curriculum
night.&#34; Parents came to the school after hours to hear a variety of
presentations.
&lt;/p&gt;

&lt;p&gt;
During her presentation, Devorah mentioned her name, that she had two
former public school kids in college, and that&#39;s about it for the
personal info.
&lt;/p&gt;

&lt;p&gt;
After the session, two parents approached Devorah to say &#34;we&#39;re big
fans of your husband!&#34;
&lt;/p&gt;

&lt;p&gt;
Since when do teachers have fans?????????
&lt;/p&gt;

&lt;p&gt;
I mean, I understand &#34;my daughter/son was in your husbands class and
really enjoyed it,&#34; but &#34;I&#39;m a big fan?&#34; She wasn&#39;t sure how to take
it. Obviously we both took it as an honor and compliment but we also
both got a chuckle out of the turn of phrase.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve already said that teachers aren&#39;t &lt;a href=&#34;http://cestlaz.github.io/2014/12/14/rockstar-godfather.html#.Vg264t8Sr0o&#34;&gt;rock stars, we&#39;re blues men&lt;/a&gt; so
I guess this shows that some folks still like the blues.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacking Sessions - iterating until it&#39;s right</title>
      <link>https://cestlaz.github.io/posts/2015-09-26-hacking-sessions/</link>
      <pubDate>Sat, 26 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-09-26-hacking-sessions/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/hacking-sessions-2015/hs.jpg&#34; alt=&#34;hs.jpg&#34; width=&#34;480px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Today we kicked off Hacking Sessions 2015. Saturday morning with sixty kids in a room
brainstorming ideas.  Soon they&#39;ll settle on teams and projects and
we&#39;ll be off for a semester of exploring CS and tech.
&lt;/p&gt;

&lt;p&gt;
The next couple of weeks will be a little chaotic with groups
shifting, mentors figuring out which groups to work with and us, the
instructors launching each team on its way.
&lt;/p&gt;

&lt;p&gt;
This is our third year running Hacking Sessions. We&#39;re setting things
up to have student teams exploring a project, technology, or
tool. Each team will have more experienced students mentoring them. In
some cases the mentors will also be new to the topic. Supporting both
the hackers and mentors are our instructors.
&lt;/p&gt;

&lt;p&gt;
I&#39;m pretty happy with our model but it took us a couple of iterations
to get here.
&lt;/p&gt;

&lt;p&gt;
Our first go round was Fall 2013. We had just started CSTUY and wanted
to get something started prior to launching a summer program. &lt;i&gt;SumAll&lt;/i&gt;
provided us with space and we were able to attract a small cadre of
kids. We had a few of our older students as teaching assistants and
ran the program with a mix of instruction and projects. Over the year
we saw that a Saturday program presents a number of challenges:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Students have other obligations on Saturdays such as athletic
teams. This can lead to inconsistent attendance.
&lt;/li&gt;
&lt;li&gt;SATs also kill attendance
&lt;/li&gt;
&lt;li&gt;You can&#39;t count on the participants to work between the sessions.
&lt;/li&gt;
&lt;li&gt;Lateness can be an issue early on a Saturday morning.
&lt;/li&gt;
&lt;li&gt;Once a week makes building a community a challenge.
&lt;/li&gt;
&lt;li&gt;kids have enough classroom learning during the week. Saturday should
be a change of pace.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
We learned a lot that year and ran V2.0 the following fall. Second
time around we had the advantage of bringing in kids from our summer
program to seed the culture. We also knew we wanted to move to more of
a project / mentor based model but due to space restrictions couldn&#39;t
really get to where we wanted to be.
&lt;/p&gt;

&lt;p&gt;
That changed halfway through when SumAll moved to larger offices. By
the end of the year, I think we worked out most of the kinks. We
figured out how to get the kids into teams and pointing in the right
direction as well as  how to find the right mentors and provide them
with support. The only thing we weren&#39;t happy with was that the mentors
didn&#39;t have enough time to work on their own projects.
&lt;/p&gt;

&lt;p&gt;
Now we&#39;re in V3.0. Thanks to our &lt;a href=&#34;https://www.kickstarter.com/projects/262929085/saturday-hacking-sessions&#34;&gt;kickstarter&lt;/a&gt;, we&#39;re fully funded and
somehow word seems to have gotten out. Numbers are way up and I think
we&#39;ve finally gotten the model down.
&lt;/p&gt;

&lt;p&gt;
As with anything new, it takes time and revisions to get things right
but as long as one leaves the kids with a net positive and as long as
one can look at oneself with a critical eye, you eventually get there.
&lt;/p&gt;

&lt;p&gt;
Looking forward to a great year.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Suspension if disbelief and the Mikado</title>
      <link>https://cestlaz.github.io/posts/2015-09-21-mikado/</link>
      <pubDate>Mon, 21 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-09-21-mikado/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
I was brought up on Gilberg and Sullvan. My father, who always wanted
to be an opera singer sang with &lt;a href=&#34;https://en.wikipedia.org/wiki/Light_Opera_of_Manhattan&#34;&gt;LOOM&lt;/a&gt; back in the day and there was
always classical music playing. Either from the Hi Fi or my father
singing.
&lt;/p&gt;

&lt;p&gt;
Recently, there&#39;s been a kerfufle over what was to be &lt;a href=&#34;http://nygasp.org&#34;&gt;NYGASP&#39;s&lt;/a&gt;
production of Mikado.
&lt;/p&gt;

&lt;p&gt;
My son, Natan wrote a terrific blog post on it and the suspension of
belief in opera. It&#39;s long but well worth a read.
&lt;/p&gt;

&lt;p&gt;
If you like G&amp;amp;S or opera in general, take a look.
&lt;/p&gt;

&lt;p&gt;
It can be found &lt;a href=&#34;http://seccorecit.blogspot.com/2015/09/imagine-if-you-will.html&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Enjoy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Not in with the in crowd - concerns about NYC &amp;#35CS4All</title>
      <link>https://cestlaz.github.io/posts/2015-09-18-in-crowd/</link>
      <pubDate>Fri, 18 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-09-18-in-crowd/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;
&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Earlier this week, Mayor Bill deBlasio announced some ambitious
&lt;a href=&#34;http://avc.com/2015/09/computer-science-for-all/&#34;&gt;CS Education Plans&lt;/a&gt; for NYC. I posted a response &lt;a href=&#34;http://cestlaz.github.io/2015/09/15/failed.html#.Vfx1Rp_0-Ak&#34;&gt;here&lt;/a&gt;. Now that a few
days past, I thought I&#39;d clear a few things up.
&lt;/p&gt;

&lt;p&gt;
First and foremost, I hope my concerns are unfounded and I hope the
plan is a tremendous success.
&lt;/p&gt;

&lt;p&gt;
What&#39;s got me bummed is not that I need to see my name in lights
given that in many ways I&#39;ve been a CS Ed trailblazer (although who doesn&#39;t
like a little ego stroking), rather that in my humble opinion NY has
squandered a great opportunity and resource and as a results, kids
won&#39;t get nearly all they could.
&lt;/p&gt;

&lt;p&gt;
This STEMs from the fact that NYC has been unwilling to engage us,
StuyCS as a resource. We&#39;ve got the most experience and success in
building programs, training teachers, and teaching kids. What more
could you ask?
&lt;/p&gt;

&lt;p&gt;
I&#39;ve repeatedly reached out to and repeatedly invited in key
government and DOE players in an effort to try to get them to look at
our work and leverage it to do more good for more kids but over two
mayors and around fifteen years, the silence we get back is deafening.
&lt;/p&gt;

&lt;p&gt;
Now, this isn&#39;t to say that I don&#39;t have some friends and supporters
in the CS Ed space. I consider &lt;a href=&#34;http://avc.com/2015/09/computer-science-for-all/&#34;&gt;Fred Wilson&lt;/a&gt;, the main man driving this
from the tech sector side to be a supporter, ally and friend. His
involvement is the key reason I think this whole thing might
work. Likewise, many people in the tech industry who&#39;ve worked with my
graduates are very supportive of my efforts and my actual graduates are
a wonderfully supportive family.
&lt;/p&gt;

&lt;p&gt;
So why do the DOE and NYC people say they don&#39;t want to include us?
&lt;/p&gt;

&lt;p&gt;
Here are some of the things I get back:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;We want something that works for all students.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
This implies that our stuff is purely a result of Stuy being a school
with high achievers. My response?
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;By saying all students but excluding high achievers, you can&#39;t mean
all students.
&lt;/li&gt;
&lt;li&gt;Other high achieving schools haven&#39;t developed anything near what
we&#39;ve built.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
and it also ignores the fact that:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Our nonprofit has had kids from around 40 to 50 schools and we
get rave reviews from those kids and their parents.
&lt;/li&gt;
&lt;li&gt;Our gender numbers far outpace the national averages.
&lt;/li&gt;
&lt;li&gt;We&#39;ve had teachers move on to other schools and customize our work
their.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
and this is just the teaching part. What about our success in
designing an overall program or training teachers.
&lt;/p&gt;

&lt;p&gt;
Of course it doesn&#39;t help that Stuyvesant&#39;s own administration has
never recognized nor supported StuyCS.
&lt;/p&gt;

&lt;p&gt;
You&#39;d think that those with the keys to the castle would engage and at
least consult with the people who&#39;ve been doing this successfully for
over 20 years.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
So who are these folk with the keys?
&lt;/p&gt;

&lt;p&gt;
It&#39;s a mix of people. Some in NYC government, some in DOE, some Tech
entrepreneurs, and running program. None have our experience or track
record and a number have neither taught nor coded.
&lt;/p&gt;

&lt;p&gt;
Why won&#39;t they really engage us?
&lt;/p&gt;

&lt;p&gt;
You&#39;re guess is as good as mine but I have my suspicions.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
Why am I concerned?
&lt;/p&gt;

&lt;p&gt;
Because we have something to offer. NYC and DOE won&#39;t leverage us as a
resource. What other missteps will they make as they try to bring
CS4All.
&lt;/p&gt;

&lt;p&gt;
I have no control over all of this, all I can do is work in my little
corner of the world. If others want my help, my doors always open. If
not, I know there will always be some parents, kids, and educators who
get what we do and will benefit from it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>I should be happy but feel like I&#39;ve failed</title>
      <link>https://cestlaz.github.io/posts/2015-09-15-failed/</link>
      <pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-09-15-failed/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;p&gt;
The NY Times just posted an article - the  mayor announced a 10 year
deadline by which time all NYC public school students will be taking
CS.
&lt;/p&gt;

&lt;p&gt;
I should be happy.
&lt;/p&gt;

&lt;p&gt;
I&#39;m not.
&lt;/p&gt;

&lt;p&gt;
I feel thoroughly defeated.
&lt;/p&gt;

&lt;p&gt;
As many of you know, I&#39;ve struggled for years to try to bring CS
education to more kids and to train more teachers. You also probably
know that over the years, I&#39;ve become pretty good at this.
&lt;/p&gt;

&lt;p&gt;
Why am I feeling so down about this.
&lt;/p&gt;

&lt;p&gt;
Because despite my best efforts I&#39;m no closer to my goal than day one.
&lt;/p&gt;

&lt;p&gt;
Stuy is no closer to recognizing CS. I&#39;m still a just math teacher
and the DOE has given the job of running CS education to person after
person none whom had any real CS experience and few who have had any
real teaching experience.
&lt;/p&gt;

&lt;p&gt;
I see plans based on dropping in curricula and quick fixes.
&lt;/p&gt;

&lt;p&gt;
I see programs run by people still wet behind the ears with respect to
CS Education.
&lt;/p&gt;

&lt;p&gt;
Sometimes I feel like I&#39;m the only sane person in the room, or maybe
I&#39;m the loony. I&#39;m not sure.
&lt;/p&gt;

&lt;p&gt;
Probably because I don&#39;t play well with others.
&lt;/p&gt;

&lt;p&gt;
So I feel defeated.
&lt;/p&gt;

&lt;p&gt;
Defeated because I know I have something to offer that the kids of NYC
deserve.
&lt;/p&gt;

&lt;p&gt;
Defeated because I know they&#39;re not going to get it.
&lt;/p&gt;

&lt;p&gt;
I&#39;m already looking to leave Stuy and public education.
&lt;/p&gt;

&lt;p&gt;
Maybe this is just another sign that it&#39;s time.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why I have no faith in NYC Doing CS Ed right.</title>
      <link>https://cestlaz.github.io/posts/2015-08-22-nycdo/</link>
      <pubDate>Sat, 22 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-08-22-nycdo/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center text-align:center;
&lt;/style&gt;
&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
This post is in response to an email thread on the NYTM mailing list.
I mentioned how the NYC DOE refused to even look at our program at
Stuy let alone support us and help us get to more kids.
&lt;/p&gt;

&lt;p&gt;
Rather than pollute an email thread, I said I&#39;d write up the story
here.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve been at the CS Ed game for a long time. Twenty five years to be
exact. One of my biggest frustrations and failures is that I&#39;ve never
been able to gain the support of the NYC Department of Education in my
efforts. Likewise, the only time I&#39;ve truly had the support of my
school&#39;s administration was during a brief period in the mid to late
90&#39;s.
&lt;/p&gt;

&lt;p&gt;
My experiences have led me to believe that as CS Ed continues to gain
momentum I have no faith in NYC actually doing it right.
&lt;/p&gt;

&lt;p&gt;
Let me go through my experiences with the DOE over the years.
&lt;/p&gt;

&lt;p&gt;
I won&#39;t use real names for either those who&#39;ve supported me or those
who&#39;ve been obstructionist.
&lt;/p&gt;

&lt;p&gt;
Here goes.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-1-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-1-1&#34;&gt;Some background&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-1-1&#34;&gt;
&lt;p&gt;
I&#39;m generally considered to be pretty good at what I do. There are
those that refer to me as the &#34;Godfather of CS Education in NYC.&#34;
Others refer to my graduates as the &#34;StuyCS mafia&#34; - a reference to
the fact that my graduates can be found all over the tech industry.
&lt;/p&gt;

&lt;p&gt;
Some people dismiss the Stuy program as being a product of the school
but we can produce evidence to the contrary.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve heard from enough people in the tech industry and academia to
know that we&#39;ve built something special.
&lt;/p&gt;

&lt;p&gt;
Even though I started to try to get the DOE&#39;s support shortly after
2001 and Stuy&#39;s support for my entire career, I really didn&#39;t make
serious attempts to connect with the DOE until the mid Bloomberg years.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-1-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-1-2&#34;&gt;The later Bloomberg Administration 2005 - 2012&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-1-2&#34;&gt;
&lt;p&gt;
At this point, we had an established three year program at Stuy and we
had been around long enough to produce results.
&lt;/p&gt;

&lt;p&gt;
I started to try to connect with the DOE to get them to come down and look
at our program - vet us - and then hopefully help us get to more
schools, more teachers, and ultimately more kids. I implored my
principal to help, cold emailed the chancellor, emailed and called up
the chain of command and at one point, my graduates wrote a letter to
the DOE and Mayor&#39;s office with hundreds of signatures.
&lt;/p&gt;

&lt;p&gt;
I was able to secure a meeting or two at Tweed but nothing ever came
of it. The people I spoke to had their own agenda - they weren&#39;t tech
people and frequently not educators and were more looking to see if I
could be used to push their agenda.
&lt;/p&gt;

&lt;p&gt;
I also pitched a school but that went nowhere.
&lt;/p&gt;

&lt;p&gt;
A little later, people in the tech industry pushed the DOE to look at
what I was pitching.
&lt;/p&gt;

&lt;p&gt;
A school was ultimately created but as soon as the tech community was
on board and the announcement was made, I was frozen out of the
process. The school went in a direction very different from what I was
pushing and I was told in no uncertain terms that I was to keep quiet
about the whole thing. Some of the story was written up in the &lt;a href=&#34;http://www.nytimes.com/2013/03/31/nyregion/software-engineering-school-was-teachers-idea-but-its-been-done-citys-way.html?_r=0&#34;&gt;NY Times&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
A little later, with the help of the tech community, we pitched
setting up Stuy as an official CS program (we&#39;re officially just math
teachers) and use us to train new teachers and to roll out programs.
&lt;/p&gt;

&lt;p&gt;
When the tech people were in the room, my principal and the DOE Deputy
Chancellor were very supportive. As soon as the tech people left,
I would get bounced around. The DOE would say &#34;it&#39;s the principal&#39;s
decision&#34; and my principal would say &#34;I wish we could do something but
there&#39;s no pathway in the DOE to get there.&#34;
&lt;/p&gt;

&lt;p&gt;
In the mean time, the DOE hired someone to run CS Education (something
I was told was not going to happen). He designed New York&#39;s original
Software Engineering Pilot. Looking at the guy&#39;s linkedin showed that
he had never had a teaching job nor a programming job. It shows from
what he developed.  He parlayed this position to something at Google a
few months later.
&lt;/p&gt;

&lt;p&gt;
I reached out to him a few times - encouraged him to check us out -
nothing.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-1-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-1-3&#34;&gt;And now&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-1-3&#34;&gt;
&lt;p&gt;
Since then other people have been running CS at Tweed. I have yet to
see someone with a both a strong CS and teaching background in
charge.
&lt;/p&gt;

&lt;p&gt;
I have also repeatedly reached out to the people in charge.
&lt;/p&gt;

&lt;p&gt;
Nothing.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-1-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-1-4&#34;&gt;My thoughts&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-1-4&#34;&gt;
&lt;p&gt;
It doesn&#39;t seem to matter who&#39;s running the show. We&#39;ve got a great
program running in a public school in lower Manhattan and everyone
seems to know it and acknowledge it except the DOE.
&lt;/p&gt;

&lt;p&gt;
Instead the DOE would rather take people with little or no experience
and have them try to figure this all out on the fly.
&lt;/p&gt;

&lt;p&gt;
I just don&#39;t see it ending well for the kids.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve said it before - we will have CS in the schools but except for a
pocket here and there, it won&#39;t be good CS.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Setting kids up to fail - CS edition</title>
      <link>https://cestlaz.github.io/posts/2015-08-17-setting-up-to-fail-cs/</link>
      <pubDate>Mon, 17 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-08-17-setting-up-to-fail-cs/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;
&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
We talked about setting kids up to fail in math. What about CS?
&lt;/p&gt;

&lt;p&gt;
Well, it&#39;s a little subtler.
&lt;/p&gt;

&lt;p&gt;
I started thinking about this after a conversation with one of my
graduates about Harvard&#39;s famous CS50. Since that conversation, I&#39;ve
spoken to a number of my kids that have gone through CS50 and most
seem to say the same things:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;They don&#39;t really teach anything
&lt;/li&gt;
&lt;li&gt;The kids rely on a group member who already knows stuff or will
learn all the stuff on their own
&lt;/li&gt;
&lt;li&gt;If it weren&#39;t for my StuyCS background my group would have really
struggled.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
and things like that. I was then told that after CS50 kids go on to
Functional Programming in OCAML and they drop like flies.
&lt;/p&gt;

&lt;p&gt;
Doesn&#39;t sound like a recipe for success.
&lt;/p&gt;

&lt;p&gt;
We&#39;re seeing this at multiple levels and we&#39;re seeing it because very
few places seem to have a plan. A multi year path taking kids from
start to finish. It&#39;s something we&#39;ve done and I&#39;m proud of it.
&lt;/p&gt;

&lt;p&gt;
I think that if we look carefully, we&#39;ll start to see what my
graduates reported happening more and more. Traditional CS sequences
can be pretty unforgiving and unless colleges put in a sensible ramp
up and recognize that not all CS and related majors should go on to
grad school we&#39;re going to have a high rate of kids initially thinking
that CS is for them and then dropping. I do suspect it will get better as colleges
recognize that there&#39;s more than one type of CS major.
&lt;/p&gt;

&lt;p&gt;
It will be interesting to see what happens on the high school
level. Will we see what we&#39;ve seen in math - two years on the first
level course then dump the kids into something like APCS A or will we
see something more sensible?
&lt;/p&gt;

&lt;p&gt;
Where this really gets me is with all those after school and summer
programs. One give away is when a program claims &#34;learn to &lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;underline&#34;&gt;_&lt;/span&gt;&lt;/span&gt; in 4
weeks,&#34; &#34;our kids learn more than in an AP class&#34;, or something similar.
&lt;/p&gt;

&lt;p&gt;
My team and I have had to &#34;rescue&#34; kids from a number of
them.
&lt;/p&gt;

&lt;p&gt;
These programs take a number of forms:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Using simplified environments that export to mobile
&lt;/li&gt;
&lt;li&gt;Gluing together libraries with minimal code
&lt;/li&gt;
&lt;li&gt;Working with an extreme amount of coaching in a short period of
time.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Now, none of these things are necessarily bad but so many of these
programs are designed and run by non-educators.
&lt;/p&gt;

&lt;p&gt;
So, the kids go through the programs, think they know the real deal,
and are hammered when they enroll in a real CS class.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve seen it happen. There was even an article a couple of years ago
which then went on to blame the teacher in spite of the fact that the
program boasts that thier kids &#34;learned more than in APCS.&#34;
&lt;/p&gt;

&lt;p&gt;
Now, all these programs have to do is make sure the kids make
something exciting and that they&#39;re happy. There&#39;s no real
accountability and the guy at the next level will shoulder the blame.
&lt;/p&gt;

&lt;p&gt;
So there you have it, setting kids up to fail.
&lt;/p&gt;

&lt;p&gt;
It&#39;s something I think we&#39;ll have to be more aware of and on guard for
as CS becomes more mainstream.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Help us create a Saturday Hacking Space for kids</title>
      <link>https://cestlaz.github.io/posts/2015-08-12-kickstarter/</link>
      <pubDate>Wed, 12 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-08-12-kickstarter/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;https://cestlaz.github.io/img/kickstarter/pairing.jpg&#34; alt=&#34;pairing.jpg&#34; width=&#34;480px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
As many of you know, I&#39;m part of the team behind &lt;a href=&#34;http://cstuy.org/about&#34;&gt;CSTUY&lt;/a&gt;, a non-profit
dedicated to bringing the best CS education to kids who wouldn&#39;t
otherwise have the opportunity.
&lt;/p&gt;

&lt;p&gt;
Over the past two summers we&#39;ve hosted our highly succesful immersion
program SHIP. We were also able to run a small Saturday program thanks
to the generosity of &lt;a href=&#34;http://sumall.com&#34;&gt;SumAll&lt;/a&gt; who provided space, and other members of
the StuyCS family who provided laptops and the funds we needed.
&lt;/p&gt;

&lt;p&gt;
We&#39;re trying to do it again, this time through a kickstarter. What
would be really awesome is if we could not only fund the Saturday
program but also the summer program so we can focus on getting to the
kids and not on raising money.
&lt;/p&gt;

&lt;p&gt;
So, we need you to head over to:
&lt;/p&gt;

&lt;p&gt;
&lt;a href=&#34;https://www.kickstarter.com/projects/262929085/saturday-hacking-sessions&#34;&gt;https://www.kickstarter.com/projects/262929085/saturday-hacking-sessions&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Watch the video, read the project, and kick in for the cause.
&lt;/p&gt;

&lt;p&gt;
Just as importantly, spread the word - your friends, co-workers,
managers, funders - anyone who can help.
&lt;/p&gt;

&lt;p&gt;
Wouldn&#39;t it be asweome if we could blow the roof off this kickstarter
and be able to focus all year on teaching kids!!!!
&lt;/p&gt;

&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting kids up to fail - math class</title>
      <link>https://cestlaz.github.io/posts/2015-08-11-set-up-to-fail-math/</link>
      <pubDate>Tue, 11 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-08-11-set-up-to-fail-math/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
&#34;Four in ten NYC high schools don&#39;t offer Algebra 2 and both Physics and
Chemistry.&#34;
&lt;/p&gt;

&lt;p&gt;
At least that&#39;s what this &lt;a href=&#34;http://ny.chalkbeat.org/2015/07/23/report-many-nyc-high-schools-dont-offer-advanced-math-and-science-courses/#.Vbjz1d-c30o%0A&#34;&gt;article&lt;/a&gt; and linked report say.
&lt;/p&gt;

&lt;p&gt;
The implication is clear - many of our students don&#39;t have the
opportunity to advance in math and the sciences.
&lt;/p&gt;

&lt;p&gt;
The truth though is much more disturbing.
&lt;/p&gt;

&lt;p&gt;
The reason why these schools aren&#39;t offering Algebra 2 is very
simple - the kids aren&#39;t ready for it. Any math licensed teacher is
qualified and capable of teaching any level of regents math which
includes Algebra 2 and Trigonometry. The truth is that the students
in these schools by and large aren&#39;t getting past Geometry.
&lt;/p&gt;

&lt;p&gt;
Even in some highly touted &lt;a href=&#34;https://garyrubinstein.wordpress.com/2014/11/11/is-p-tech-a-miracle-school-or-a-failing-school/%0A&#34;&gt;&#34;miracle schools,&#34;&lt;/a&gt; looking behind the
curtain reveals kids ill prepared to get through geometry.
&lt;/p&gt;

&lt;p&gt;
The disturbing part is that these kids are set up to fail - to take a
class and exam that they&#39;re ill prepared for only to have their self
esteem crushed. Why? Because more kids taking more exams at higher
levels is perceived to look good.
&lt;/p&gt;

&lt;p&gt;
In New York, students have to take three years of math to graduate
high school. Two years can be spent on one level of math and of course
Regents exams are king.
&lt;/p&gt;

&lt;p&gt;
Then you have the classes: Algebra, Geometry, and then Algebra 2 and
Trig. Algebra is by far the easiest course. Geometry, which is really
a course in logic and deductive reasoning using Euclidean Geometry as
a platform is &lt;b&gt;&lt;b&gt;much&lt;/b&gt;&lt;/b&gt; heavier.
&lt;/p&gt;

&lt;p&gt;
Lets see how things play out.
&lt;/p&gt;

&lt;p&gt;
In &#34;high performing&#34; populations you have kids take Algebra in the 8th
grade. By and large the kids do fine in the class and on the regents
exams but, at least according to my colleagues, these kids don&#39;t
really internalize the skills, they just learn the mechanics.
&lt;/p&gt;

&lt;p&gt;
In schools with struggling populations, they don&#39;t start Algebra until
high school and then do it over two years. This leads to a reasonable
pass rate but then the kids are placed in geometry and are taking a
much more rigorous course in half the time.
&lt;/p&gt;

&lt;p&gt;
The results are predictable.
&lt;/p&gt;

&lt;p&gt;
I graded geometry regents this past June. I graded two long answer
questions with a combined value of 10 points. From unscreened
schools, including at least one highly regarded one, the median grade
was 0 and the mean not far above. Even in screened schools the results
weren&#39;t much better. There we saw a bi-modal distribution with kids
either doing very well or very poorly.
&lt;/p&gt;

&lt;p&gt;
Why do we set these kids up to fail? Because, test scores are king and
kids are required to pass regents to graduate. Schools and teachers
aren&#39;t allowed to do what&#39;s best for kids. Schools and teachers must
answer to the politicians - remember, my rating and job depends on how
kids do on standardized tests.
&lt;/p&gt;

&lt;p&gt;
You start to feel even worse when you start thinking about the value
or lack thereof in lots of what we require in high school.
&lt;/p&gt;

&lt;p&gt;
Why am I writing about math?
&lt;/p&gt;

&lt;p&gt;
Well, to find out you&#39;ll have to tune in next time when I talk about
the CS side of things.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What makes a great manager? - Open praise for my team</title>
      <link>https://cestlaz.github.io/posts/2015-07-30-ship-teachers/</link>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-07-30-ship-teachers/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Today was the last day of SHIP 2015, CSTUY&#39;s summer immersion
program. I was blown away by the projects. The shipmates and the
stewards all did tremendous work.
&lt;/p&gt;

&lt;p&gt;
All through the reception parents would come up to me and rave about
the job I did with the program. They&#39;d thank me, tell me how exited
their child was every day, how proud they were of what they were
learning and on and on.
&lt;/p&gt;

&lt;p&gt;
I of course nodded and told them that &#34;yep, I&#39;m that good.&#34;
&lt;/p&gt;

&lt;p&gt;
No. Seriously.
&lt;/p&gt;

&lt;p&gt;
First I thanked them and then told them the secret.
&lt;/p&gt;

&lt;p&gt;
I forget who said this but some coach or manager was one asked &#34;what
makes a great manager?&#34; His answer: &#34;Great players.&#34;
&lt;/p&gt;

&lt;p&gt;
I explained to the parents that I&#39;ve been fortunate enough to be
surround by amazing teachers and that&#39;s what makes our program
special. We&#39;ve got the best program because we&#39;ve got the best
teachers. The best thing I can do is point them in the direction of
the kids and get out of the way.
&lt;/p&gt;

&lt;p&gt;
So this post is an open thank you and congratulations to JonAlf, Sam,
Topher, and Yulia on yet another job well done. Four amazing CS
teachers. There&#39;s been a lot of discussion in the online CS communities
about CS teachers being isolated and not having resources but I am
fortunate in being surrounded by you four. I can&#39;t think of another
team that I&#39;d rather &#34;go to war&#34; with.
&lt;/p&gt;

&lt;p&gt;
Now, I don&#39;t want to leave out the other amazing players that made
SHIP a success. Chris, Marlena, Stanley, and Valeriy. Chris, Marlena,
and Stanley - you allowed us to give the individual attention we
needed for this program and students and parents sang your praises and
Valeriy, you were able to show the stewards stuff far beyond what I
could have.
&lt;/p&gt;

&lt;p&gt;
And to all our Stewards - your impact on the shipmates was also so
critical to the programs success and that doesn&#39;t even mention your
projects which blew me away.
&lt;/p&gt;

&lt;p&gt;
So to everyone, congratulations, job well done.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching to the test - APCS</title>
      <link>https://cestlaz.github.io/posts/2015-07-25-teaching-to-the-test/</link>
      <pubDate>Sat, 25 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-07-25-teaching-to-the-test/</guid>
      <description>&lt;!DOCTYPE html&gt;



&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http://cestlaz.github.io/img/teaching-to-the-test/ap-pic.jpg&#34; alt=&#34;ap-pic.jpg&#34; width=&#34;300px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
This image has been making its rounds.
&lt;/p&gt;

&lt;p&gt;
Largest expansion is pretty clear but are the largest gain in 3+
scores mean a higher percentage of 3+ scores or merely the result of
more test takers?
&lt;/p&gt;

&lt;p&gt;
I&#39;m curious, but that&#39;s not what I wanted to talk about.
&lt;/p&gt;

&lt;p&gt;
Looking at our AP results from this year we had:
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http://cestlaz.github.io/img/teaching-to-the-test/2015.png&#34; alt=&#34;2015.png&#34; width=&#34;250px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
For the past two years we&#39;ve been allowed to run 7 sections of AP
Computer Science with about 30 kids per class. Prior to that we were
limited to five sections. There hasn&#39;t been a change in either percent
passing and more importantly the percentage of 4 and 5 scores for
years. I suspect that if we were allowed to open more sections to meet
demands the overall percentage of 4/5 scores would remain the same.
&lt;/p&gt;

&lt;p&gt;
While we always are mostly 4s and 5s, the interesting point this year
is that we had a much higher percentage of 5s to 4s.
&lt;/p&gt;

&lt;p&gt;
Two possibilities I can think of. One is that the depending on how the test is scored
and the fact that there were so many additional test takers it changed the
curve. Since I&#39;ve never been involved in the scoring, I can&#39;t comment
on this.
&lt;/p&gt;

&lt;p&gt;
The other change is that the College Board dropped the case study - a
large sample project that students are supposed to study throughout
the class. Between 20% and 30% of the AP Exam was based on the case
study.
&lt;/p&gt;

&lt;p&gt;
I&#39;m guessing that some teachers liked the case study but it never
worked for me. What&#39;s more, all of us at Stuy pretty much agree on the
subject. It&#39;s like those CS texts that have one long continuous
project throughout &amp;#x2013; if the project, its design and implementation
make sense to you and how you teach, you can just work through the
text. If not, the text becomes next to useless.
&lt;/p&gt;

&lt;p&gt;
We all hated the case study and so we all paid it minimal lip
service. Teaching the case study would amount to teaching to the
test. We&#39;d rather teach Computer Science &lt;sup&gt;&lt;a id=&#34;fnr.1&#34; name=&#34;fnr.1&#34; class=&#34;footref&#34; href=&#34;#fn.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;

&lt;p&gt;
I&#39;m pretty certain that some of our kids were slowed down on the AP
exam due to our approach to the case study but they still did fine and
besides, for our kids, the exam generally doesn&#39;t mean a thing. In our
experience if a student goes to the CS department at their college and
shows their stuff, they&#39;ll be placed appropriately. It didn&#39;t matter
if they got a 5, a 4, a 3, or even if they didnt take the exam at all.
&lt;/p&gt;

&lt;p&gt;
Perhaps that&#39;s the reason for our uptick in 5s vs 4s. No case study
and all of a sudden our kids weren&#39;t at a disadvantage.
&lt;/p&gt;

&lt;p&gt;
I can&#39;t say for certain but it seems plausible.
&lt;/p&gt;

&lt;p&gt;
If we taught to the test, I&#39;m guessing more students would have scored
5s all along.
&lt;/p&gt;

&lt;p&gt;
The concern?
&lt;/p&gt;

&lt;p&gt;
If the College Board continues to be the driving force, either solo or
in partnership with organizations like code.org, the importance of the
AP Exam will remain. It&#39;s already considered by many the gold
standard - if your kids take and do well on AP exams, your school must
be a top school.
&lt;/p&gt;

&lt;p&gt;
Educators know better. AP Exams are not the be all and end all and in
fact, many of us would like to be rid of them altogether so that we
could just teach rigorous courses and not to the test.
&lt;/p&gt;

&lt;p&gt;
The end game is predictable. Just as we will see more and more
teaching to the test in common core and regents classes so we will see
in computer science.
&lt;/p&gt;

&lt;p&gt;
I predict that there will be a few pockets of excellence here and
there but in the end, canned AP prep will win the day. We&#39;ll have CS
in the schools but not so much good CS.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;h2 class=&#34;footnotes&#34;&gt;Footnotes: &lt;/h2&gt;
&lt;div id=&#34;text-footnotes&#34;&gt;

&lt;div class=&#34;footdef&#34;&gt;&lt;sup&gt;&lt;a id=&#34;fn.1&#34; name=&#34;fn.1&#34; class=&#34;footnum&#34; href=&#34;#fnr.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p&gt;If the case study
worked for you, then it&#39;s not teaching to the test.&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Why don&#39;t we trust teachers or Rubber Room Light?</title>
      <link>https://cestlaz.github.io/posts/2015-06-24-grading-regents/</link>
      <pubDate>Wed, 24 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-06-24-grading-regents/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
It&#39;s Wednesday morning. I&#39;m sitting in an unairconditioned room. I
really shouldn&#39;t be writing this since we were told &#34;NO ELECTRONIC
DEVICES!!!&#34;
&lt;/p&gt;

&lt;p&gt;
Where am I? Up at a school on East 96th street grading the geometry
regents.
&lt;/p&gt;

&lt;p&gt;
Back in the day schools gave exams then schools graded
exams. Typically by committee. You&#39;d get a room full of math teachers,
each teacher would take a problem or two and we&#39;d work through class
envelopes. When all was said and done each question was checked by at
least two teachers and the whole process took under a day - usually
from the morning until a little after lunch.
&lt;/p&gt;

&lt;p&gt;
How does it work now? Each school sends a bunch of teachers to an off
site school. How many? In our case we sent more teachers than we have
teaching geometry. In my case, I haven&#39;t taught math in 23 years but
I was part of the group.
&lt;/p&gt;

&lt;p&gt;
We then were assigned to rooms, then questions, and the marking
begins, oh wait, not before mind numbing hour to make sure we know how
to grade the questions. It&#39;s similar but far less efficient. When
we grade in house, you can just chug through envelopes of exams -
here, we spent almost half the time sitting around doing nothing,
waiting for exams to be sent to the room. We are, of course, forbidden
from having electronic devices so we can&#39;t be productive during this
dead time - it&#39;s a mild form of incarceration or what I&#39;d call &#34;rubber
room light.&#34; Oh, also the questions are only looked at by one grader -
no double checking like in the old days.
&lt;/p&gt;

&lt;p&gt;
All our papers were graded before we left yesterday &amp;#x2013; of course that
didn&#39;t stop the site leaders from forcing us to sit around doing
nothing for an hour before releasing us. Were we done? Could we return
to our schools to get actual end of term work done? Of course not. We
had to come back this morning to sit around doing nothing waiting for
the DOE to say we were done.
&lt;/p&gt;

&lt;p&gt;
To all you folks that complain about us lazy teachers - all we wanted
was to get back to our schools and get back to work - it&#39;s the DOE
that&#39;s saying no - you must sit around doing nothing - when you see
those news stories about rubber rooms - don&#39;t be so quick to blame the
teachers - many times it&#39;s the DOE that&#39;s to blame for keeping a good
teacher out of the classroom and wasting taxpayer money.
&lt;/p&gt;

&lt;p&gt;
Why do we mark papers this way? Simple, the government doesn&#39;t trust
the teachers. We spend all day with your kids but heaven forbid we
grade their exams. Truth be told, we don&#39;t need regents exams to
evaluate our kids &amp;#x2013; we know them - we&#39;re with them all year. That
said, if you do need a test - let&#39;s mark them in house.
&lt;/p&gt;

&lt;p&gt;
Are there grade irregularities? In spite of the periodic story, I
doubt they&#39;re widespread - and no - giving a paper a one over to make
sure a kid got all the points the deserve is not cheating.
&lt;/p&gt;

&lt;p&gt;
Of course none of this affects charter schools - they grade their
papers in house. No incentive to misbehave there. It&#39;s just those
greedy corrupt public school teachers that we have to keep an eye on.
&lt;/p&gt;

&lt;p&gt;
Don&#39;t get me started on the actual exam - one where kids are set up to
fail left and right - that&#39;s a story for another day.
&lt;/p&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;Postscript&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Now that I&#39;m home and back on line I can finish this off and post it.
We sat around today until 11:30 and then were told to go to lunch and
return at 12:30. Shortly after we got back we were finally dismissed.
&lt;/p&gt;

&lt;p&gt;
End result: I ended up spending under one quarter of a day grading
exams and two and three quarter days sitting around all because of
asinine department of education policies.
&lt;/p&gt;

&lt;p&gt;
Is there any wonder why I can&#39;t recommend kids go into teaching these
days?
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Shipping a product</title>
      <link>https://cestlaz.github.io/posts/2015-06-19-shipping-product/</link>
      <pubDate>Fri, 19 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-06-19-shipping-product/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Back in April, I was at the second annual &#34;Dream It, Code It, Win It!&#34;
awards. Some of our kids had submitted work and were selected as
awardees in the high school division.
&lt;/p&gt;

&lt;p&gt;
It was great to see &lt;a href=&#34;https://twitter.com/Cahnja&#34;&gt;Jack&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/davcahn&#34;&gt;David&lt;/a&gt; Cahn there. Jack and David were
both members of winning high school teams last year and they were back
as college winners this time around.
&lt;/p&gt;

&lt;p&gt;
It was great to see them.
&lt;/p&gt;

&lt;p&gt;
The Cahn brothers spent some time talking to the current crop. They
mentioned one thing that really confirmed that I&#39;ve been on the right
track with my SoftDev class - they said it was their most valuable
experiece at Stuy because they learned how to ship a product. To take
something, as a team, from idea to delivery with all the bumps along
the way. Now, obviously, we don&#39;t do everything - there are no
questions of funding for instance and I think we cover a lot of great
CS but giving the kids a chance to learn to take a project from idea
to delivery and all that entails was a big part of the design of the
course.
&lt;/p&gt;

&lt;p&gt;
With that in mind, I just finished evaluating projects and here&#39;s a
sampling:
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
Stuy kids live all over the city. Nadia, Aida, and Sydney solved the
problem of where to meet your friends when you live on opposite sides
of town:
&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/i_xDQg35T20&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-2-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-2-1&#34;&gt;&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-2-1&#34;&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Live demo: &lt;a href=&#34;http://meetup.jumpingcrab.com/&#34;&gt;http://meetup.jumpingcrab.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/apiccato/meetup&#34;&gt;https://github.com/apiccato/meetup&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Miranda, Leslia, and Anya built a Chrome plugin and server to
summarize articles:
&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/pvRf7fPlV6Q&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-3-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-3-1&#34;&gt;&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-3-1&#34;&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Server: &lt;a href=&#34;http://104.236.53.73/&#34;&gt;http://104.236.53.73/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chrome plugin: &lt;a href=&#34;https://chrome.google.com/webstore/detail/dmbibehpblbnkacpmiecigdkcomfkhkm/&#34;&gt;https://chrome.google.com/webstore/detail/dmbibehpblbnkacpmiecigdkcomfkhkm/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/mchaiken/summarize&#34;&gt;https://github.com/mchaiken/summarize&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
and Philipp, Richard, Steve, and Ziwei created an anonymous author
attribution system:
&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/XksrKfxEprg&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-4-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-4-1&#34;&gt;&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-4-1&#34;&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/I-A-I/authorensics&#34;&gt;https://github.com/I-A-I/authorensics&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-5&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-5&#34;&gt;
&lt;p&gt;
Not a SoftDev project, but for good measure, here&#39;s Natan and
Angelika&#39;s Ballroom Dance project - apparently they&#39;re the first two
to actually do a SONG and dance and they&#39;ve both got the pipes:
&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/_xjHFdrJ4jQ&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
There were lots of other great projects all up on github:
&lt;a href=&#34;https://github.com/stuycs-softdev/student-work-spring-2015&#34;&gt;https://github.com/stuycs-softdev/student-work-spring-2015&lt;/a&gt; albeit in a
rather disorganized form.
&lt;/p&gt;

&lt;p&gt;
So proud of the work they all did this year.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CS Semi Formal</title>
      <link>https://cestlaz.github.io/posts/2015-06-15-semi-formal/</link>
      <pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-06-15-semi-formal/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Today marked the last day of classes and time for the 8th annual Stuy
CS Semi Formal.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
What&#39;s the Stuy CS Semi Formal? It&#39;s another bad idea that we refuse
to let die. Eight years ago JonAlf joked that someone in class joked
that they should have a party and they should all get dressed up. My
thought? &#34;YEAH!!! LET&#39;S DO IT!!!!!&#34;
&lt;/p&gt;

&lt;p&gt;
Eight years later, still going strong.
&lt;/p&gt;

&lt;p&gt;
We cleaned out and decorated the room - classed things up by serving
cheese, dried fruits, nuts and the like. Drinks served in fake plastic
&#34;wine&#34; glasses and we encouraged the kids to dress up.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;Pictures from the first year -  2007&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img width=&#34;350px&#34; &#34; src=&#34;https://cestlaz.github.io/img/last-day-2015/semi-1.jpg&#34;&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img width=&#34;350px&#34; &#34; src=&#34;https://cestlaz.github.io/img/last-day-2015/semi-2.jpg&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;And from 2011&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img width=&#34;350px&#34; &#34; src=&#34;https://cestlaz.github.io/img/last-day-2015/semi-3.jpg&#34;&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img width=&#34;350px&#34; &#34; src=&#34;https://cestlaz.github.io/img/last-day-2015/semi-4.jpg&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;


&lt;p&gt;
Kids can come and go any period they don&#39;t have any other class.
&lt;/p&gt;

&lt;p&gt;
It&#39;s a signature event and a fun time. Whats more is that throughout
the day you&#39;ve got pockets of CS students all dressed to the nines in
all their other classes.
&lt;/p&gt;

&lt;p&gt;
For the first few years JonAlf and I did the heavy lifting but these
past two, it&#39;s all been the students - particularly Jenny, Miranda,
and Veronika (apologies if I&#39;m missing anyone).
&lt;/p&gt;

&lt;p&gt;
It&#39;s just another event that makes StuyCS unique.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Jazz Hands!!!!!!</title>
      <link>https://cestlaz.github.io/posts/2015-06-11-jazz-hands/</link>
      <pubDate>Thu, 11 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-06-11-jazz-hands/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/jazz-hands/jazzhands.gif&#34; alt=&#34;jazzhands.gif&#34; width=&#34;300px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
The StuyCS Semi Formal, Clyde &#34;Thluffy&#34; Sinclair, and other assorted
&lt;a href=&#34;http://cestlaz.github.io/2015/03/08/antother-day-stuycs.html#.VXmHfN_08bw&#34;&gt;silliness&lt;/a&gt; - one of the reasons StuyCS is a family is that we try to
have fun.
&lt;/p&gt;

&lt;p&gt;
Jazz Hands day was the latest.
&lt;/p&gt;

&lt;p&gt;
I got the idea at JonAlf&#39;s wedding. The wait staff were all wearing
white gloves - all of a sudden it hit me - Jazz Hands!!!! and Jazz
Hands day was born.
&lt;/p&gt;

&lt;p&gt;
The idea:
&lt;/p&gt;

&lt;p&gt;
All of our Junior and Senior CS students, around 350 or so, along with
their teachers would wear white gloves on a specified day. The rules
were throughout the day, in any class, provided there were two or more
CS Jazz Hands students in the class, whenever:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;a student gave a good thoughtful answer to a question
&lt;/li&gt;
&lt;li&gt;or the teacher made a particularly strong point
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
The kids would give a Jazz Hands salute.
&lt;/p&gt;

&lt;p&gt;
Imagine, some kid gives a great answer and 1/3 of the class all of a
sudden does Jazz Hands!!!!
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/jazz-hands/jazzhands2.gif&#34; alt=&#34;jazzhands2.gif&#34; width=&#34;300px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
Unfortunately, this was an event that I wouldn&#39;t actually be able to
see as the havoc would be wreaked in other classes.
&lt;/p&gt;

&lt;p&gt;
By the time we got to the end of the day, I knew we were on to
something.
&lt;/p&gt;

&lt;p&gt;
Word on the street was that a bunch of teachers thought it was
hilarious. Apparently one teacher pulled the math chair into her class
so she could see.
&lt;/p&gt;

&lt;p&gt;
Then we had at least a few teachers that didn&#39;t get into the spirit
and actually lodged complaints.
&lt;/p&gt;

&lt;p&gt;
Let&#39;s see, we had students, via a non-verbal form of feedback,
indicate that they were totally engaged by acknowledging what they
felt was a good point.
&lt;/p&gt;

&lt;p&gt;
Disruptive?
&lt;/p&gt;

&lt;p&gt;
Imagine that.
&lt;/p&gt;

&lt;p&gt;
I don&#39;t know what makes me want to fine tune this event more - the
positive feedback or the complaints.
&lt;/p&gt;

&lt;p&gt;
``
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Learning takes time, hype doesn&#39;t</title>
      <link>https://cestlaz.github.io/posts/2015-05-07-learning-takes-time/</link>
      <pubDate>Thu, 07 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-05-07-learning-takes-time/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-sec-1-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-1-1&#34;&gt;or: what to watch out for in after school and summer programs&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;CAVEATS:&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
In writing this post I do not mean to say that there aren&#39;t some great
programs out there - there are. I also know that most of the programs
I&#39;m aware are being developed by people who are really trying to do
some good.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Since I wrote a post on my problem with drop in curricula on March 4
(&lt;a href=&#34;http://cestlaz.github.io/2015/03/04/expedient-vs-good.html&#34;&gt;http://cestlaz.github.io/2015/03/04/expedient-vs-good.html&lt;/a&gt;)
I&#39;ve been meaning to follow up with some of my thoughts on after
school and summer programs.
&lt;/p&gt;

&lt;p&gt;
This itch was further spurred when I read this post on &lt;a href=&#34;http://avc.com&#34;&gt;avc.com&lt;/a&gt;:
&lt;a href=&#34;http://avc.com/2015/03/numbers-can-ruin-a-good-story/&#34;&gt;http://avc.com/2015/03/numbers-can-ruin-a-good-story/&lt;/a&gt;. It talks about
startups - you can have a good story and raise some funds but then
when numbers, that is, results start to come in, that story might not
look so good.
&lt;/p&gt;

&lt;p&gt;
The world of CS Education summer and after school programs are full of
&#34;good stories.&#34; My favorite is &#34;your kid will learn how to build an
iPhone app in 4 weeks!!!&#34; If it were that easy, we wouldn&#39;t have a
tech talent shortage and my grads wouldn&#39;t be in such high demand.
&lt;/p&gt;

&lt;p&gt;
The truth is, it&#39;s very easy to get by in CS Education on nothing more
than a good story. You never actually have to show real results. Most
of the programs out there follow this pattern. I don&#39;t think it&#39;s
intentional. It&#39;s just that most people running K12 CS Ed programs
aren&#39;t educators and frequently they aren&#39;t CS people. What they are
concerned is scaling so that they can get to as many kids as
possible. They aren&#39;t dealing with next steps. Besides, to them, it
appears they&#39;re doing great work - they buy into their own hype.
&lt;/p&gt;

&lt;p&gt;
What&#39;s the problem?
&lt;/p&gt;

&lt;p&gt;
Simple - learning takes time.
&lt;/p&gt;

&lt;p&gt;
How do you set up the story?
&lt;/p&gt;

&lt;p&gt;
Easy.
&lt;/p&gt;

&lt;p&gt;
Start by promising an awesome program - an awesome project after two
or four weeks. With today&#39;s tools it&#39;s easy to make a mock up. Either
you use simplified tools or you can use a lot of boilerplate code with
pre-built components. These aren&#39;t necessarily bad in and of
themselves, just don&#39;t pretend you&#39;re teaching the real deal.
&lt;/p&gt;

&lt;p&gt;
It&#39;s easy to pull this off since there&#39;s no real follow up. Kids are
then sent back to their high schools or off to college and results
aren&#39;t tracked.
&lt;/p&gt;

&lt;p&gt;
Also, make sure you recruit some high performing kids. I know a number
of programs that have taken in my Stuy kids even though they already
know more than the program has to offer. This guarantees that your
program will look good since these kids &lt;b&gt;&lt;b&gt;will&lt;/b&gt;&lt;/b&gt; produce great projects.
&lt;/p&gt;

&lt;p&gt;
I recall about a year and a half ago reading an article. It
highlighted a youngster who went through one of these summer
programs. A bright kid in a well regarded, well hyped, well funded
program. I&#39;ve don&#39;t think the article said so, but I heard many of this
programs top people repeatedly say &#34;our program better prepares our
kids for the AP Computer Science exam than the AP course itself does.&#34;
Hmmm. Well, in the article, the kid learned all these wonderful things
from the program and then went back to high school.
&lt;/p&gt;

&lt;p&gt;
A short time after, according to the piece, the kid was struggling in
AP Computer Science and the article quickly threw the teacher under
the bus. Now, I have no idea if the teacher was any good but if your
program better prepares a kid for the exam than the class, there&#39;s not
way the kid should have been struggling - unless, of course, it was
all a story.
&lt;/p&gt;

&lt;p&gt;
The truth is, that the designers and implementers of many of these programs
don&#39;t know education and often know little CS. I can&#39;t tell
you the number of kids that have come into my classes and programs
proclaiming to be master programmers as a result of these programs and
it turns out all they know is how to build a limited drag and drop
prototype or how to tweak a pre-built template.
&lt;/p&gt;

&lt;p&gt;
What&#39;s the harm? In my classes and programs, we can educate the kids
but if this is in college with less support, self doubt will creep in
and more often than not the kid will drop tech. I&#39;ve seen it happen
many a time.
&lt;/p&gt;

&lt;p&gt;
That brings me to the next story &amp;#x2013; the glue programs. I also see a
lot of this. Programs that teach the very rudiments of programming and
then use pre-built libraries and packages to make really impressive
looking results. They look great, but there&#39;s not a lot of substance
under the hood. I remember seeing a number of these &#34;finished
products&#34; and each time noting that the student contributed maybe 20 to
40 lines of code and they were mostly tweaks to the web site samples.
&lt;/p&gt;

&lt;p&gt;
The final story is less of a story and more legit in terms of teaching
but it still largely a story. That&#39;s when a program tries to teach too
much to quickly. I&#39;ve seen one and two week programs that promise the
word. The kids put together some impressive stuff but since it&#39;s so
much so fast, facilitated by lots of coaching, there&#39;s little
retention and questionable understanding.
&lt;/p&gt;

&lt;p&gt;
I was talking to a friend a few months ago. She worked with a number
of high achieving kids teaching them to code. All seemed great. They
got the kids back together months later for a follow up. I asked &#34;how
was the retention?&#34; The reply &#34;that&#39;s a real problem.&#34;
&lt;/p&gt;

&lt;p&gt;
the truth is learning takes time. There&#39;s only so much you can do in
an after-school or in a summer and it&#39;s not always flashy.
&lt;/p&gt;

&lt;p&gt;
When I designed Google CAPE NYC for the summer of 2010 I knew we
couldn&#39;t do everything in a month. What we did do is give the kids the
fundamentals and a path to follow to learn more. They did neat
projects but they weren&#39;t the over the top stuff you see other
programs produce (as an aside, one of my grads noted - &#34;If it looks
too good to be true, it probably isn&#39;t true.&#34;). While we didn&#39;t
formally track the kids, 3/4 of the kids we were still in touch with
last year were still doing computer science at a second year college
level so I know what we did worked but I haven&#39;t seen that type follow
up from any other program.
&lt;/p&gt;

&lt;p&gt;
We&#39;re in the midst of recruiting and fund-raising for my non-profit,
&lt;a href=&#34;http://cstuy.org&#34;&gt;CSTUY&lt;/a&gt;&#39;s summer program, &lt;a href=&#34;http://cstuy.org/programs/ship&#34;&gt;SHIP&lt;/a&gt;. We&#39;re not as connected as the big CS
programs and we don&#39;t have the hype. That makes our job harder.
&lt;/p&gt;

&lt;p&gt;
What I do know is that we&#39;ve got the best teachers and the best
program and that our kids might not make something quite so flashy
after three or four weeks as some of the other programs, our kids are
set up for long term success.
&lt;/p&gt;

&lt;p&gt;
So, if you&#39;re looking for a great program with great teachers and a
solid plan, check out CSTUY. If you want to create a story, just follow
these steps:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Recruit some high achieving kids so you&#39;ll have some stories
&lt;/li&gt;
&lt;li&gt;Teach a framework or simplified tool
&lt;/li&gt;
&lt;li&gt;Coaching, coaching, coaching.
&lt;/li&gt;
&lt;li&gt;Make sure they have fun so you get good reviews
&lt;/li&gt;
&lt;li&gt;Profit!!!!
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>def hack(2015)</title>
      <link>https://cestlaz.github.io/posts/2015-03-29-defhacks/</link>
      <pubDate>Sun, 29 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-03-29-defhacks/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
.center {text-align:center;}
div.center {text-align:center;}
&lt;/style&gt;


&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;

&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/dh2015/dh-logo.png&#34; alt=&#34;dh-logo.png&#34; width=&#34;300px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
This past Saturday, 50 high school students, 10 high school mentors, and 10
more post high school mentors headed down to &lt;i&gt;SumAll&lt;/i&gt; to participate in
&lt;b&gt;&lt;b&gt;def hacks(2015):&lt;/b&gt;&lt;/b&gt; &lt;i&gt;CSTUY&lt;/i&gt;&#39;s first hackathon.
&lt;/p&gt;

&lt;p&gt;
The fifty participants, came from all over the city, Long Island, and
New Jersey. They ranged from having never programmed to three or four
years experience.
&lt;/p&gt;

&lt;p&gt;
Projects ranged from web sites to full stack applications.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
After workshops run by CSTUY teachers and mentors and also by
&lt;a href=&#34;http://codesters.com&#34;&gt;Codesters.com&lt;/a&gt; the hackers spread out all over SumAll&#39;s offices, working in small
groups with the support of our amazing mentors.
&lt;/p&gt;


&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/dh2015/dh-hacking.jpg&#34;&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/dh2015/dh-hacking-2.jpg&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Four nourishment, we had sandwiches from &lt;a href=&#34;http://amishintribeca.com/&#34;&gt;Amish Market&lt;/a&gt;, pizza from
Wanted Pizza, snacks and those amazing doughnuts from &lt;a href=&#34;http://doughbrooklyn.com&#34;&gt;Dough Flatiron&lt;/a&gt;.
&lt;/p&gt;


&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/dh2015/dh-food1.jpg&#34;&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/dh2015/dh-dough.jpg&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;
&lt;p&gt;
At the end of the day, the hackers demoed and the judges judged
&lt;/p&gt;

&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/dh2015/dh-winner-demo.jpg&#34;&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/dh2015/dh-demo-1.jpg&#34;&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;


&lt;figure style=&#34;float:center;padding:20px;width:100%&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/dh2015/dh-judging.jpg&#34;&gt;
&lt;/figure&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;

&lt;p&gt;
In the end everyone made something terrific and walked away having
built new skills, met new people, and gotten a little swag.
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/dh2015/dh-certificate.jpg&#34; alt=&#34;dh-certificate.jpg&#34; width=&#34;300px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
The judges singled out two groups for special
recognition. One was a team of four experienced programmers who put
together a full stack app to help schedule parent/teacher meetings.
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/dh2015/dh-winner-group.jpg&#34; alt=&#34;dh-winner-group.jpg&#34; width=&#34;300px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
The other was a solo project from a young man who had never programmed
prior to the event.
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/dh2015/dh-winner-demo-2.jpg&#34; alt=&#34;dh-winner-demo-2.jpg&#34; width=&#34;300px&#34; align=&#34;center&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
That one really blew me away. We were able to give these groups
Raspberry Pis thanks to a last minute donation from &lt;a href=&#34;http://www.fullstackacademy.com/&#34;&gt;Fullstack Academy&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
None of this would have been possible without the help of:
&lt;/p&gt;

&lt;p&gt;
Our organizers - Caitlin and Lise
&lt;/p&gt;

&lt;p&gt;
Our Mentors - both the Stuy students and the older mentors
&lt;/p&gt;

&lt;p&gt;
Our judges:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Ben Fried (Google)
&lt;/li&gt;
&lt;li&gt;Noah Weiss (Foursqurae)
&lt;/li&gt;
&lt;li&gt;Benny Wong (TimeHop)
&lt;/li&gt;
&lt;li&gt;Gerry Seidman (Too many to list)
&lt;/li&gt;
&lt;li&gt;Davin Chew (SumAll)
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
and our Sponsors:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;&lt;a href=&#34;http://timehop.com&#34;&gt;TimeHop&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sumall.com&#34;&gt;SumAll&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://digitalocean.com&#34;&gt;DigitalOcean&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.generalcatalyst.com/&#34;&gt;General Catalyst Partners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://codesters.com&#34;&gt;Codesters.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Shell games - who confirmed attendence</title>
      <link>https://cestlaz.github.io/posts/2015-03-19-duplicate-emails/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-03-19-duplicate-emails/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Quick post on why I love the Unix command line.
&lt;/p&gt;

&lt;p&gt;
We&#39;re busy organizing &lt;a href=&#34;http://cstuy.org&#34;&gt;CSTUY&#39;s&lt;/a&gt; first &lt;a href=&#34;http://cstuy.org/programs/defhacks&#34;&gt;hackathon&lt;/a&gt;. It&#39;s going to be at
&lt;a href=&#34;http://sumall.com&#34;&gt;SumAll&lt;/a&gt;, where we hold our weekly &lt;a href=&#34;http://cstuy.org/programs/hacking_sessions&#34;&gt;hacking sessions&lt;/a&gt; but while taking
registration, we had a little program.
&lt;/p&gt;

&lt;p&gt;
The kids signed up on a Google doc but we all know the story &amp;#x2013; when
people sign up for a free event, even one with free food and t-shirts,
many don&#39;t show. I asked all of the applicants to confirm by filling
out a second Google doc.
&lt;/p&gt;

&lt;p&gt;
Then it got to reminder time - I wanted to send an email out to all
those kids who signed up on the first form, but hadn&#39;t confirmed on
the second.
&lt;/p&gt;

&lt;p&gt;
Two Google spreadsheets with an email field. I needed all the people
on sheet 1 that weren&#39;t on sheet 2. I&#39;m sure there&#39;s some
spreadsheet-fu that accomplishes this, but nothing I know. I also
could have written a little python script which isn&#39;t so bad, but this
was a perfect time to turn to the shell.
&lt;/p&gt;

&lt;p&gt;
So, here&#39;s how a command line guy would do this.
&lt;/p&gt;

&lt;p&gt;
To start, I put the emails in two files: e1 and e2. The first has
all the original applicants, the second those that confirmed.
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-org&#34;&gt;|
</description>
    </item>
    
    <item>
      <title>Just another day at StuyCS</title>
      <link>https://cestlaz.github.io/posts/2015-03-08-antother-day-stuycs/</link>
      <pubDate>Sun, 08 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-03-08-antother-day-stuycs/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;style&gt;
.photo {width:60%;}
&lt;/style&gt;
&lt;img class=&#34;photo&#34; src=&#34;https://cestlaz.github.io/img/just_another_day/pic.jpg&#34;&gt;

&lt;p&gt;
Last post was a little heavy so just a short fun one for today.
&lt;/p&gt;

&lt;p&gt;
&#34;Just another day at StuyCS.&#34; That was the subject of the email Brian
sent with the photo above. What&#39;s going on?
&lt;/p&gt;

&lt;p&gt;
We&#39;re working on advanced JavaScript while also looking at
&lt;i&gt;Backbone.js&lt;/i&gt;.
&lt;/p&gt;

&lt;p&gt;
Now, as sometimes happens, Batya, while in her CS class up at college,
decided to open up a Google chat with me. This happens now and then. We try to
have some fun with it. We actually have a plan to mess with the kids
later this term, but I&#39;ll keep that to myself.
&lt;/p&gt;

&lt;p&gt;
Now, Batya, of course, was sitting in her CS class in college. I told
her what we were doing and continued with the lesson.  She responded
that Zach, her boyfriend and my former student said not to forget to
emphasize certain things. I also asked Batya if her professor was
having a chat with his kid while he was teaching. Everyone was having a
laugh.
&lt;/p&gt;

&lt;p&gt;
Then things got sillier. Another chat popped up. It was Natan, my son,
who happens to be in that class. So, the insanity continued on when I
get a video call -  it was from Aida sitting in row 1 - that&#39;s what you
see on the screen.
&lt;/p&gt;

&lt;p&gt;
Now it was getting a little ridiculous and it all started with Batya
and Natan. So, what&#39;s a a teacher to do? I had to contact their
parent, my wife, to tell her to discipline her children. That&#39;s the
third chat.
&lt;/p&gt;

&lt;p&gt;
So, just another day at StuyCS.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s Expedient vs what&#39;s good - curriculum vs teachers</title>
      <link>https://cestlaz.github.io/posts/2015-03-04-expedient-vs-good/</link>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-03-04-expedient-vs-good/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;blockquote&gt;
&lt;p&gt;
If we don&#39;t do anything then only schools like Stuy will have CS.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
I heard that the other day. It was a comment relating to a number of
efforts, both in and out of  NY to get CS into the classroom.
&lt;/p&gt;

&lt;p&gt;
These programs abound and up front let me say that they&#39;re all well
meaning and have the best of intentions.
&lt;/p&gt;

&lt;p&gt;
In NYC, programs receiving money, publicity, and support, include:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;The Software Engineering Pilot (SEP)
&lt;/li&gt;
&lt;li&gt;Google CS First afterschool
&lt;/li&gt;
&lt;li&gt;The NSF grant bring the Beauty and Joy of Computing class to NYC (BGP)
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Terrific &amp;#x2013; we&#39;ll scale up CS ed in NY from nothing to everyone in no
time. It&#39;s fast, it scales. But is it good.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
I&#39;d argue that maybe it&#39;s not. These programs all share a few things
in common.
&lt;/p&gt;

&lt;p&gt;
First, they&#39;re all expedient. You can implement them in an election
cycle. Roll out a pre-fab curriculum with scripted lessons, give the
teachers a summer and some weekend workshops and we&#39;re good to go. No
CS knowledge needed.
&lt;/p&gt;

&lt;p&gt;
Next, as far as I can tell, none were developed by experienced high school
teachers with a deep knowledge of CS.
&lt;/p&gt;

&lt;p&gt;
The SEP was originally developed by someone, who, according to his
linked in profile never coded and never taught.
&lt;/p&gt;

&lt;p&gt;
I could be wrong about BGP. It was developed by Dan Garcia - an
educator whom I like and respect, but as far as I know, his experience
is at the college level.
&lt;/p&gt;

&lt;p&gt;
And Google&#39;s CS First? I&#39;ve been very impressed by Google&#39;s engineers,
in fact, many are my former students. It&#39;s high school education team?
Not so much.
&lt;/p&gt;

&lt;p&gt;
Finally, these efforts buy into the myth that anyone can teach and
that anyone can teach computer science. Even worse, the Google CS
First claims people running their program don&#39;t need to know a thing
about computer science.
&lt;/p&gt;

&lt;p&gt;
Anyone who knows teaching knows that you can&#39;t learn a subject well
enough to reall teach it in such a short period of time. Of course,
it does align itself with education &#34;reform&#34; where the true master
teacher is no longer desirable and we should all be drones that teach
lessons from scripts and all testing shall be standardized.
&lt;/p&gt;

&lt;p&gt;
I rememer the first time I saw a progarm like this - it was the CISCO
Networking Academy. Teachers trained for a few weeks in the summer and
the course was basically run via computer based tutorials. I can&#39;t
speak for it nationally but in my experience, what the students
learned was superficial - very test oriented and there was no value
added by the teacher - even after years of &#34;teaching&#34; the
classes. There&#39;s a reason why the few networking lessons in our System
Programming class are called &#34;CISCO in an hour.&#34; The kids learn more
in those couple of lessons than in a year of the CISCO curriculum.
&lt;/p&gt;

&lt;p&gt;
Who was to blame? Cisco? They were trying to do something good. The
teacher? Partially, after time they should have learned something of
networking but they were very much out of their element having started
the process from zero tech experience.
&lt;/p&gt;

&lt;p&gt;
The fact is, that got a &#34;Computer Networking&#34; class into the
schools. It might have been meant as a stop-gap until we could get
real Computer Networking teachers hired or trained but it ended up
being good enough. The end result &amp;#x2013; bad classes and students not
learning what they could.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
So here we are back again at the &#34;let&#39;s take non CS teachers, give
them some PD and we&#39;ll be good.&#34; Rather than take the time to solve
the CS Education problem, we&#39;re going to throw down a curriculum, do
some PD and say that it will buy us time. The truth is, however, that
we&#39;re going to say &#34;look, we have CS in the schools&#34; and it will be
good enough.
&lt;/p&gt;

&lt;p&gt;
I&#39;d argue, though that for CS, good enough is particularly
dangerous. It&#39;s very easy to work through a scripted and coached
program and end up with kids thinking they know some real CS and have
a real product yet having not really learned the subject. This won&#39;t
be exposed until later, when they&#39;re gone and in college. I predict
that unless something changes, these efforts and similar ones will
drive up the  number of people who after this exposure will say they
love CS but once they get hit over the head with &#34;funcitonal
programming in HASKELL&#34; or whatever real CS they see in college,
they&#39;ll drop like flies.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
What&#39;s the answer? We&#39;ve got to stop doing what&#39;s expedient and do
what&#39;s good and what&#39;s right.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id=&#34;outline-container-sec-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-5&#34;&gt;Part 2&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-5&#34;&gt;
&lt;p&gt;
A couple of other blog itches I want to scratch are the many after
school, summer, and drop in programs to go with the there I mentioned
above. Hopefully I&#39;ll get to rant about them soon.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Believing in what you&#39;re doing</title>
      <link>https://cestlaz.github.io/posts/2015-02-25-good-idea-avc/</link>
      <pubDate>Wed, 25 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-02-25-good-idea-avc/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
The other day, &lt;a href=&#34;https://twitter.com/fredwilson&#34;&gt;Fred Wilson&lt;/a&gt; sent out a short tweet storm turned &lt;a href=&#34;http://avc.com/2015/02/is-this-a-good-startup-idea/&#34;&gt;post&lt;/a&gt; on
determining if an entrepreneur&#39;s startup idea is a good one. It&#39;s
short. Take a minute to read it over.
&lt;/p&gt;

&lt;p&gt;
At its core, the post and the comments talk about belief in an idea
and it got me thinking about some things as an educator.
&lt;/p&gt;

&lt;p&gt;
Tweet 7:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
and you have to believe in yourself and your idea or nobody else ever will
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
resonated with me, not just in terms of a startup idea, but with
respect to one&#39;s passion.
&lt;/p&gt;

&lt;p&gt;
As a CS teacher we get to shepherd kids through projects big and
small. The best work invariably comes from when the kids take an idea
they&#39;re passionate about and run with it. Sometimes I can guide the
kids to an idea and it works out well but when the kids end up working
on the stock project the results are less spectacular.
&lt;/p&gt;

&lt;p&gt;
Once the kids buy into a great idea, the educator has to create a
framework for success - give the kids the tools and set up the safety
nets when things don&#39;t go as planned.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve never liked all those student entrepreneurs programs &amp;#x2013; make a
business for the sake of making a business - much better to help guide
the kids towards something they&#39;re passionate about and help them run
with it. That&#39;s when great things happen.
&lt;/p&gt;

&lt;p&gt;
The neat thing is that it&#39;s not limited to classes. CSTUY is having
its first hackathon in a few weeks; &lt;a href=&#34;http://cstuy.org/programs/defhacks&#34;&gt;def hacks():&lt;/a&gt;. One of my juniors
came to me with the idea - she got a couple more kids on board and
we&#39;re off to the races. I&#39;ve done some things behind the scenes to
make sure we don&#39;t have any real problems but the awesome thing is
that the event is all on the kids.
&lt;/p&gt;

&lt;p&gt;
In a way, I&#39;d imagine that Fred, as a VC, once he invests, his role is to
help create the framework for success. I&#39;d also imagine that the
best way to do that is similar to what a great teacher does - bring
out the best in the student, make them aware of pitfalls and be a
supportive mentor.
&lt;/p&gt;

&lt;p&gt;
On a deeper level, as teachers, we get to work with young people as
they&#39;re developing their own passions. This was something else that I
started thinking about after reading Fred&#39;s tweet storm, in particular
tweet 9:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
because I never want someone telling me they wasted five years of
their life on something because I told them it was a good idea
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Teachers are role models and the best teachers are passionate about
their subject and their craft. One of the things I&#39;m most proud of is
the number of friends, former students, who have told me that I gave
them a career, I introduced them to their passion. Sometimes, though,
we miss. I&#39;ve seen some kids come through my program and leave loving
CS but it was, at least in part, an illusion. I work with a great team
and sometimes loving classes can stand in for loving a subject.
&lt;/p&gt;

&lt;p&gt;
I was talking to my daughter when she was a senior at Stuy and she
commented that she was missing all the subjects she loved one day when
she had to leave early. She included math. I said &#34;since when do you
love math?&#34; She respond &#34;I meant I love math class.&#34; That makes sense
she had an amazing teacher.
&lt;/p&gt;

&lt;p&gt;
So, at times, kids leave us for college and then they might discover
that they don&#39;t love CS as much as they thought they did.
&lt;/p&gt;

&lt;p&gt;
Now, I&#39;m not overly concerned with our misses here since I think we do
better than most in showing CS and Tech for what it is and we always
leave the kids with a great set of mental and practical tools but
every now and then I see a kid who is doing well in the tech industry
and in my gut I feel that the world missed out on a great author,
chemist, or doctor.
&lt;/p&gt;

&lt;p&gt;
So, I&#39;ve rambled on this long enough - just some food for thought from
a teacher.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A chocolate treasure in a city losing its soul</title>
      <link>https://cestlaz.github.io/posts/2015-02-13-myzels/</link>
      <pubDate>Fri, 13 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-02-13-myzels/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;https:/img/myzels/myzels.jpg&#34; alt=&#34;myzels.jpg&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
I&#39;m a born and bred New Yorker and more and more I&#39;m lamenting what
the city&#39;s becoming.
&lt;/p&gt;

&lt;p&gt;
New York used to be a collection of neighborhoods. Yes, we were the
city that never slept, but there were scores of mom and pop stores,
sole proprieterships. You could become a &#34;regular.&#34; I&#39;m reminded of
Tom Shachman&#39;s book &lt;a href=&#34;https://www.amazon.com/Around-The-Block-Business-Neighborhood/dp/0151000778&#34;&gt;Around the Block&lt;/a&gt; which looks at the businesses
around a single NYC block, mostly all gone now. If you can get your
hands on the book. It&#39;s worth a read.
&lt;/p&gt;

&lt;p&gt;
In any event, here&#39;s a story:
&lt;/p&gt;

&lt;p&gt;
Yesterday. JonAlf and I were at the Apple store on Fifth avenue talking about
&lt;a href=&#34;http://cstuy.org/&#34;&gt;CSTUY&lt;/a&gt;. We had four of our talented students presenting their work.
&lt;/p&gt;

&lt;p&gt;
After the event, JonAlf had gone and one of our student presenters had
left with his parents. I was left with our other three presenters.
&lt;/p&gt;

&lt;p&gt;
I told them that I&#39;d love to take them by this amazing chocolate shop
a few blocks away and I had to explain why:
&lt;/p&gt;

&lt;p&gt;
&lt;img src=&#34;https:/img/myzels/candy.jpg&#34; alt=&#34;candy.jpg&#34; /&gt;]]
&lt;/p&gt;

&lt;p&gt;
A number of years ago, after a morning in Central Park, Batya, Natan,
and I were winding our way home. We ended up passing &lt;a href=&#34;http://www.myzels.com/&#34;&gt;Myzel&#39;s
Chocolates&lt;/a&gt; on the south side of 55th street between fifth and sixth
avenue. That&#39;s when we met Kamila, the shop owner. We chatted for a
while got some chocolate and went on our way. Kamila was amazingly
warm and sincere and the chocolates really really good. I noted that
we would have to return.
&lt;/p&gt;

&lt;p&gt;
&lt;img src=&#34;https:/img/myzels/kamila.jpg&#34; alt=&#34;kamila.jpg&#34; /&gt;]]
&lt;/p&gt;


&lt;p&gt;
That didn&#39;t happen until months later but when it did, I was shocked
that Kamila remembered us, what we were doing that day and we just
picked up the conversation where we left off.
&lt;/p&gt;

&lt;p&gt;
This pattern repeated over the years. We didn&#39;t get to that
neighborhood and thus Myzel&#39;s often, but whenever we did, we had to
stop by. Great candies from a truly special person.
&lt;/p&gt;

&lt;p&gt;
Alas, my schedule has been such that I hadn&#39;t been back to Myzel&#39;s in
years. I think three or four.
&lt;/p&gt;

&lt;p&gt;
Now, I was with Nadia, Miranda, and Leslie - three of my incredibly
talented students. They just did an awesome job presenting their work
and I figured I could give them some thank you chocolate as well as
visit one of my  favorite places in the city.
&lt;/p&gt;

&lt;p&gt;
I told them that Kamila probably wouldn&#39;t remember me but I recounted
my story of Myzel&#39;s and how amazing Kamila and the store were. I got
the feeling that they didn&#39;t believe me when I told them about Kamila
and the store.
&lt;/p&gt;

&lt;p&gt;
We got to Myzel&#39;s went in and started to place our order. When Kamila
came out, her first word to me was &#34;professor&amp;#x2026;&#34; and we picked up
where we left off. As usual, she was charming and sincere. We
reminisced and chatted and then we were off.
&lt;/p&gt;

&lt;p&gt;
In a city that&#39;s fast becoming cookie cutter we need more places like
&lt;a href=&#34;http://www.myzels.com/&#34;&gt;Myzel&#39;s&lt;/a&gt; and more people like Kamila.
&lt;/p&gt;

&lt;p&gt;
Unfortunately rents are rapidly dispatching shops like &lt;a href=&#34;http://www.myzels.com/&#34;&gt;Myzel&#39;s&lt;/a&gt; and
people like Kamila are few and far between.
&lt;/p&gt;

&lt;p&gt;
So, when you&#39;re around City Center or midtown in general, please treat
yourself. You won&#39;t be disappointed.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Taking stock and tracking progress</title>
      <link>https://cestlaz.github.io/posts/2015-02-11-taking-stock-self-assess/</link>
      <pubDate>Wed, 11 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-02-11-taking-stock-self-assess/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
When starting the spring semester, students are frequently a little
rusty. They just had a high intensity month of study, tests, and
projects. That was followed by a week of nothing.
&lt;/p&gt;

&lt;p&gt;
I like to start with something lightweight that gets them coding again
and ramps them up to speed.
&lt;/p&gt;

&lt;p&gt;
In SoftDev I started with a brief overview of the HTML5 canvas and
then gave them a small homework assignment to do something fun.
&lt;/p&gt;

&lt;p&gt;
I also remind the kids to self assess where they are and how they&#39;ve
developed as a programmer.
&lt;/p&gt;

&lt;p&gt;
I get a little tired of education &#34;experts&#34; espousing nonsense like you
have to have each talk each day or that you need to assess each kid
multiple times a period. That&#39;s nonsense. With 34 kids in a 40 minute
class and 150 kids a day, that doesn&#39;t fly. Besides, so many concepts
take time to develop, learn, and absorb.
&lt;/p&gt;

&lt;p&gt;
Yes, you can get some instant and short term feedback but a lot more
is revealed over time.
&lt;/p&gt;

&lt;p&gt;
I&#39;m attaching a small sampling of their homework assignments. It was
basically a one day assignment to do something fun with the HTML5
canvas and indeed, it looks like they had fun.
&lt;/p&gt;

&lt;p&gt;
I asked the kids to reflect on what they did now and what they could
do a semester, two, and three semesters ago.
&lt;/p&gt;

&lt;p&gt;
In the beginning they would have had no idea how to approach any of
these. A year ago, they would be a major project. Now, they can knock
these out as a homework assignment.
&lt;/p&gt;

&lt;p&gt;
Once you take a step back to look at how much a student can grow in a
year or so you have to marvel at the results.
&lt;/p&gt;

&lt;p&gt;
At a place like Stuy, the kids frequently and unfairly judge themselves against
super prodigies.
&lt;/p&gt;

&lt;p&gt;
I&#39;m hoping by looking back at what they could do then vs now they&#39;ll
appreciate how awesome they are.
&lt;/p&gt;

&lt;p&gt;
All sources at &lt;a href=&#34;https://github.com/stuycs-softdev/submissions&#34;&gt;https://github.com/stuycs-softdev/submissions&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Enjoy&amp;#x2026;
&lt;/p&gt;

&lt;div id=&#34;outline-container-unnumbered-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-1&#34;&gt;Chain reaction&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-1&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-unnumbered-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;unnumbered-2&#34;&gt;click to start the reaction&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-unnumbered-2&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-unnumbered-3&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;unnumbered-3&#34;&gt;by Nadia and Sophie&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-unnumbered-3&#34;&gt;
&lt;iframe height=600 width=&#34;80%&#34;
src=&#34;https://cdn.rawgit.com/stuycs-softdev/submissions/master/6/canvas/sophie-nadia/canvas.html&#34;
&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-4&#34;&gt;MakeOver Party&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-4&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-unnumbered-5&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;unnumbered-5&#34;&gt;Take a picture and apply virtual makeup&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-unnumbered-5&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-unnumbered-6&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;unnumbered-6&#34;&gt;by Veronika and Miranda&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-unnumbered-6&#34;&gt;
&lt;iframe height=800 width=&#34;80%&#34;
src=&#34;https://cdn.rawgit.com/stuycs-softdev/submissions/master/7/canvas/miranda-veronika/canvas.html&#34;
&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-unnumbered-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-7&#34;&gt;3D Depth Perception Pong&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-7&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-unnumbered-8&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;unnumbered-8&#34;&gt;Follow the ball and keep it in the well&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-unnumbered-8&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-unnumbered-9&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;unnumbered-9&#34;&gt;by Natan&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-unnumbered-9&#34;&gt;
&lt;iframe height=800 width=&#34;80%&#34;
src=&#34;https://cdn.rawgit.com/stuycs-softdev/submissions/master/6/canvas/NZamansky/index.html&#34;
&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-10&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-10&#34;&gt;Can&#39;t really describe this but I love it&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-10&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-unnumbered-11&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;unnumbered-11&#34;&gt;Use WASD to move DW around&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-unnumbered-12&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;unnumbered-12&#34;&gt;by Fish&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-unnumbered-12&#34;&gt;
&lt;iframe height=800 width=&#34;80%&#34;
src=&#34;https://cdn.rawgit.com/stuycs-softdev/submissions/master/6/canvas/fishy/dyrlandland.html&#34;
&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Kids these days -- they don&#39;t know nuttin</title>
      <link>https://cestlaz.github.io/posts/2015-01-15-kids-know-nuttin/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-01-15-kids-know-nuttin/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Yesterday, I took part in a round table discussion on Ed Tech and Tech
Ed, the latter being more, as they say, my wheelhouse. Afterwards a
few of us were chatting and a friend observed that when she first
started to talk to high school kids she was shocked that they really
didn&#39;t know the local tech players - neither names nor companies.
&lt;/p&gt;

&lt;p&gt;
A couple of years ago, another friend was helping me organize an event for
high schoolers. He started to go down a list of well known tech names
and was surprised when I told him that the kids wouldn&#39;t know them.
&lt;/p&gt;

&lt;p&gt;
The first time I experienced this, it was just as big a surprised to
me. I was setting up a big high school event at Foursquare (&lt;a href=&#34;http://cestlaz.github.io/2012/03/31/checking-in-with-family.html#.VLfzl9-c1CU&#34;&gt;post here&lt;/a&gt;)
and was shocked to learn that practically non of the attendees had
heard of the company.
&lt;/p&gt;

&lt;p&gt;
This would never have been the case in the 90s or even the early
2000s. What happened?
&lt;/p&gt;

&lt;p&gt;
I have a theory.
&lt;/p&gt;

&lt;p&gt;
I don&#39;t think it&#39;s just due to the fact that CS is a hot subject
now. It was hot during the 90&#39;s bubble. I&#39;m sure the fact that a wider
range of kids are being exposed to CS is part of this phenomenon but
I don&#39;t think it&#39;s the biggest reason.
&lt;/p&gt;

&lt;p&gt;
I think CS kids back then knew more &amp;#x2013; more of the players, more of the
tools, more about the systems because they had to. In some ways, and I
know I&#39;m vastly overstating things, it&#39;s &#34;too easy&#34; now.
&lt;/p&gt;

&lt;p&gt;
Back in the day, if you wanted to put your thoughts on line you had
to:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;learn html
&lt;/li&gt;
&lt;li&gt;maybe some PHP, Perl, or Python
&lt;/li&gt;
&lt;li&gt;You probably had to learn a bit about hosting a server
&lt;/li&gt;
&lt;li&gt;you had to deal with registering a domain name
&lt;/li&gt;
&lt;li&gt;and more
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Now, you just go to blogger or tumblr.
&lt;/p&gt;

&lt;p&gt;
Back then, if you wanted to communicate, you had to learn how to learn
the dark art of &lt;a href=&#34;http://en.wikipedia.org/wiki/Internet_Relay_Chat&#34;&gt;irc&lt;/a&gt;, now you have Google chat.
&lt;/p&gt;

&lt;p&gt;
Back then, you want to share photos, you had to learn how to make a
gallery. Now, Facebook.
&lt;/p&gt;

&lt;p&gt;
And of course the list goes on.
&lt;/p&gt;

&lt;p&gt;
Even programming required that you know something about the filesystem
and the basics of working in an operating system. Now between IDEs
both local and cloud based, you can learn all about programming and
never actually create a stand alone program that operates outside of
the IDE sandbox.
&lt;/p&gt;

&lt;p&gt;
Back in the day, if a kid was into CS they had to learn more than
just the in class toolset and this in turn forced them to be in touch
with the tech community both products and players.
&lt;/p&gt;

&lt;p&gt;
I&#39;m not saying the &#34;good old days&#34; were in fact that good and I love
most of the progress we&#39;ve made. Just noting the cultural difference.
&lt;/p&gt;

&lt;p&gt;
It means we should pay more attention to educating our classes on tech
culture, the good, the bad, and the ugly.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Ed Predictions 2015</title>
      <link>https://cestlaz.github.io/posts/2015-01-04-predictions-2015/</link>
      <pubDate>Sun, 04 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-01-04-predictions-2015/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
I just read &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&#39;s&lt;/a&gt; predictions for next year. I was going
to leave a comment but since it would have gotten somewhat long
winded, I thought I&#39;d comment in a post of my own.
&lt;/p&gt;

&lt;p&gt;
If you haven&#39;t read Alfred&#39;s post yet, check it out:
&lt;a href=&#34;http://blog.acthompson.net/2015/01/computer-science-education-predictions.html&#34;&gt;http://blog.acthompson.net/2015/01/computer-science-education-predictions.html&lt;/a&gt;
&lt;/p&gt;

&lt;div id=&#34;outline-container-unnumbered-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-1&#34;&gt;On more states allowing CS to count for a graduation requirement:&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-1&#34;&gt;
&lt;p&gt;
Alfred&#39;s probably right but I&#39;m leery. Sure, it could end up terrific
but I could see a number of ways this could play out badly.
&lt;/p&gt;

&lt;p&gt;
We could end up with non-cs classes to count as CS or we could see
schools allowing real CS to count but there would be no incentive for
a school to actually create any meaningful CS classes
much less for kids to take them.
&lt;/p&gt;

&lt;p&gt;
I guess the root of my concern probably relates two of my concerns
about education in general:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Real, experienced teachers aren&#39;t driving policy in education in
general and CS is and will  be no different. We&#39;re going to be left
with something forced down from above and I fear it will be bad.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
and
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;I&#39;m not a big fan of education education. As schools of education
get involved they will have more of a voice. I think one of the
worst things to happen to math education over the course of my
career has been &#34;Math Ed.&#34; I fear CS Ed will have the same effect
on K12 CS education.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Maybe I&#39;m a pessimist or maybe I&#39;ve just been burned one to many times
or maybe it&#39;s that as a public school teacher I see the negative
effect of politics and money on public education but at least in NYC I
see where the decision making is coming from and I&#39;m not encouraged.
&lt;/p&gt;

&lt;p&gt;
On the other hand, even if I&#39;m right and the powers that be really
screw things up,there should always be at least a few people who see
through they hype and that&#39;s where I can continue to do positive work.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-2&#34;&gt;On Python continuing to grow&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-2&#34;&gt;
&lt;p&gt;
It&#39;s been one of my go to languages for a while now. I&#39;ve been using
it in and out of classes since some time in the mid 90s.
&lt;/p&gt;

&lt;p&gt;
I don&#39;t see it replacing Java in AP CS and it looks like Scratch has
the inside track CS Principles but it&#39;s good for so many things and
has such a low cost of entry, I again feel that Alfred&#39;s right.
&lt;/p&gt;

&lt;p&gt;
The fact that it&#39;s easy for a non-cs teacher to pick up, at least to a
limited degree, will certainly help the charge. I&#39;m not sure if long
term, this is a good thing, but it will help to push python&#39;s growth in education.
&lt;/p&gt;

&lt;p&gt;
As a side note on Java &amp;#x2013; I&#39;m not personally a fan, but there good things in there that would be lost
with a total shift to languages like Python.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-3&#34;&gt;On CS Principles&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-3&#34;&gt;
&lt;p&gt;
I do see a time where the course is forced on Stuy but I&#39;m
not worrying about it for the moment. I think we already teach a
stronger course and by the time CS Principles becomes an issue at
Stuy, I&#39;ll probably be gone.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-unnumbered-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-4&#34;&gt;Chromebooks&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-4&#34;&gt;
&lt;p&gt;
I could see chromebooks working out for CS but only if schools don&#39;t
lock them down. Out of the box, you can only use cloud based
development environments. This is surely limiting but if you have the bandwidth, between
&lt;a href=&#34;http://codesters.com/&#34;&gt;codesters.com&lt;/a&gt;, &lt;a href=&#34;http://koding.com/&#34;&gt;koding.com&lt;/a&gt;, cloud9, Dr.Racket and assorted other tools
you can certainly do some good CS.
&lt;/p&gt;

&lt;p&gt;
The upside comes when you can drop into the Linux shell. I&#39;ve been
playing with a C720 Intel chromebook recently. It&#39;s small and
lightweight and once I set it up, it was running Dr. Racket, NetLogo,
Python, Java, Processing (all with a fairly hefty Emacs install).
&lt;/p&gt;

&lt;p&gt;
Will it run everything? I don&#39;t know, but if I can get a new lab of
computers and have the freedom to custom install the machines, I&#39;m
seriously considering chromebooks.
&lt;/p&gt;

&lt;p&gt;
I&#39;m also recommending them to my kids looking for a cheap portable
development environment.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-unnumbered-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-5&#34;&gt;Closing thoughts&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-5&#34;&gt;
&lt;p&gt;
I&#39;ve never been one for my own predictions - maybe because I&#39;m more of
a continuous journey rather than destination type of guy so I&#39;ll hold
off on my own predictions for now, but I&#39;ll close with a direct
shoutout &amp;#x2013; Hey Alfred - thanks for posting your predictions - good food for thought
as is your blog in general.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Boys, Girls, Arts, Tech, and Vacation</title>
      <link>https://cestlaz.github.io/posts/2015-01-03-vacation/</link>
      <pubDate>Sat, 03 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-01-03-vacation/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Spent most of vacation relaxing. Finished off the remaining college
recs, tried to catch up on sleep, and worked on a few project.
&lt;/p&gt;

&lt;p&gt;
We&#39;ve had an interesting December break dynamic in our household for
the past few years. My son, Natan is very much into his music, both as
a performer and a composer. A few years ago we discovered &lt;a href=&#34;http://www.livingtraditions.org/docs/index_kk.htm&#34;&gt;KlezKamp&lt;/a&gt;. It
spoke to both Natan and Devorah. Batya, coming back from college
wasn&#39;t so into it and I was somewhat indifferent.
&lt;/p&gt;

&lt;p&gt;
The end result is that for most of the first half of the break, Batya
and I were left on our own in the city while Natan and Devorah were up
in the Catskills.
&lt;/p&gt;

&lt;p&gt;
So, what did we do? In addition to playing tourist, we rebuilt the
CSTUY web site (with a little help from her boyfriend Zach) - check it
out: &lt;a href=&#34;http://cstuy.org/&#34;&gt;cstuy.org&lt;/a&gt;. I&#39;m really happy with the result and now have a code
base that I&#39;m happy with and can maintain.
&lt;/p&gt;

&lt;p&gt;
I can&#39;t describe how awesome it is to be able to collaborate on
something real with ones daughter and I hope we can work on more
projects in the future.
&lt;/p&gt;

&lt;p&gt;
Of course, I had my Natan time when he and Devorah got home. We spent
new years eve at the &lt;a href=&#34;http://nygasp.org/&#34;&gt;NYGASP&lt;/a&gt; production of HMS Pinafore. Natan loves
opera and is something of a Savoyard and he&#39;s also a terrific
singer. Something he must have inherited from my father, although he
never met him.
&lt;/p&gt;

&lt;p&gt;
So, we had our own project:
&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;450&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34;
src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/184357024&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;
His is the good voice singing Dick Deadeye and I&#39;m the not so good one
doing Captain Corcoran. We recorded it A Capella and he added the midi
after the fact. I think he had to change the key and I&#39;m sure he had
to mess with the tempo.
&lt;/p&gt;

&lt;p&gt;
Some of you might have noticed that I worked on the tech project with
Batya and the artsy one with Natan but don&#39;t worry - Natan&#39;s planning
on majoring in &lt;a href=&#34;https://github.com/NZamansky&#34;&gt;Computer Science&lt;/a&gt; and Batya&#39;s the musical director and
an alto in &lt;a href=&#34;http://www.thechainotes.com/&#34;&gt;The
Chai Notes&lt;/a&gt; up at Cornell.
&lt;/p&gt;

&lt;p&gt;
So that was my break. Back to work in a couple of days.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers, Rockstars, and the Godfather</title>
      <link>https://cestlaz.github.io/posts/2014-12-14-rockstar-godfather/</link>
      <pubDate>Sun, 14 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-12-14-rockstar-godfather/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;p&gt;
In a &lt;a href=&#34;http://blog.acthompson.net/2014/12/tech-companies-and-computer-science.html&#34;&gt;recent post&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/alfredtwo&#34;&gt;Alfred Thompson&lt;/a&gt; referred to an &lt;a href=&#34;http://blog.acthompson.net/2012/12/advice-to-microsoft-education.html&#34;&gt;earlier post&lt;/a&gt; where he
mentioned rock star CS teachers. That&#39;s a term I&#39;ve heard thrown
around a lot in the past few years. I&#39;ve heard some of my graduates
referred to as rock stars - top tech people, and in fact I&#39;ve seen
some of them courted for positions in a manner that a rock star might
be accustomed to. I&#39;ve periodically referred to some of my colleagues
as rock stars, but I don&#39;t know if the term really fits.
&lt;/p&gt;

&lt;p&gt;
So, how else are us teacher folk referred to? More than once I&#39;ve been
called &lt;a href=&#34;http://avc.com/2014/04/ship-st-josephs-a-summer-coding-program-in-nyc/&#34;&gt;the godfather of K-12 CS education in NYC&lt;/a&gt;. Maybe because I&#39;ve
been in the game so long or maybe because a friend once coined the
phrase &#34;StuyCS Mafia&#34; to refer to my graduates. It&#39;s flattering, but
like rock star, it doesn&#39;t quite fit the bill. Don Corleone rose to
power through both fear and respect. I certainly hope I&#39;m not feared
and while I do believe that the people whose opinion I care about
respect me, it&#39;s far from universal.
&lt;/p&gt;

&lt;p&gt;
So, where does that leave teachers like me, or more so, teachers I
aspire to be like?
&lt;/p&gt;

&lt;p&gt;
Not the godfather and not rockstars.
&lt;/p&gt;

&lt;p&gt;
We&#39;re bluesmen.
&lt;/p&gt;

&lt;p&gt;
Huh?
&lt;/p&gt;

&lt;p&gt;
Well, the bluesman&#39;s got the chops that the rock star may or may not
have. In fact, the rock star always talks about how the bluesman was
his greatest influence and inspiration.
&lt;/p&gt;

&lt;p&gt;
But, the rock star gets the accolades and the attention while the
bluesman toils in relative obscurity tending to his craft and if
acknowledged it&#39;s well after his career has ended.
&lt;/p&gt;

&lt;p&gt;
So, there you have it. The best teachers I know are not rock stars,
they&#39;re bluesmen all about honing their craft and inspiring their
students.
&lt;/p&gt;

&lt;p&gt;
One of the things Alfred talked about in his post is the top down
influence on CS education. On the one hand, it&#39;s brought attention to
bear but on the other hand it&#39;s being driven by people who don&#39;t
really get education.
&lt;/p&gt;

&lt;p&gt;
The same can be said for the overall recent big money influences on
education.
&lt;/p&gt;

&lt;p&gt;
We&#39;d be much better off if those in power stopped playing rock star
and started listening to the bluesmen.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts on diversity</title>
      <link>https://cestlaz.github.io/posts/2014-12-07-thoughts-on-diversity/</link>
      <pubDate>Sun, 07 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-12-07-thoughts-on-diversity/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Yesterday, my buddy &lt;a href=&#34;https://twitter.com/snikolov&#34;&gt;Stan&lt;/a&gt; pointed me to this article:
&lt;a href=&#34;http://arstechnica.com/business/2014/12/to-address-techs-diversity-woes-start-with-the-vanishing-comp-sci-classroom/&#34;&gt;&#34;To address tech’s diversity woes, start with the vanishing Comp Sci classroom&#34;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
It gives a reasonable overview of the gender issues in computer
science education. The article talks about the drop in popularity of
the old Advanced Placement AB course and its eventually being dropped
as well as thoughts on how the current A course is pretty dry.
&lt;/p&gt;

&lt;p&gt;
It made me think about the old vs new exams. The current APCS A exam
is roughly analogous to a typical college 101 course: programming in
one language and one paradigm. The old AB class represented a 101 and
a 102 with the 102 being data structures and algorithms. Much more
interesting for both guys and girls. Over the years, the AP A exam has
become more and more vocational, at least in my opinion, and that
makes matters worse. Its more and more about using the language and
built in collections and less about thinking and problem
solving. What&#39;s fun about that?
&lt;/p&gt;

&lt;p&gt;
Of course, we teach our version, a super-set, of the AB curriculum over
the course of a school year.
&lt;/p&gt;

&lt;p&gt;
Interesting that even though we teach that old school hardcore CS, we
far exceed the national numbers in terms of gender balance, but more
on that later.
&lt;/p&gt;

&lt;p&gt;
One of the big things going on right now is the AP CS Principles
course. There&#39;s some good stuff in there but I&#39;ve got a lot of
questions.
&lt;/p&gt;

&lt;p&gt;
To start, I&#39;m tired of hearing that it&#39;s a college level course. If
a course is designed so that a 10th grader can be successful, it&#39;s not
college level. I do understand that it&#39;s being taught in places like
Berekely (and as an aside I both like and greatly respect Dan Garcia,
who&#39;s the architect of one version of CS principles - the Beauty and
Joy of Computing, and his work). If my kids were doing in college what
they could have been doing in 10th grade, something&#39;s wrong. That&#39;s
not to say that you can&#39;t have a similar course at both levels, just
that there&#39;s a &lt;b&gt;&lt;b&gt;huge&lt;/b&gt;&lt;/b&gt; difference between a 10th grader and a college
freshman.
&lt;/p&gt;

&lt;p&gt;
I also take issue with the drag and drop languages in high school and
beyond. True, there&#39;s a low cost of entry, but then it&#39;s limiting in
oh so many ways. Much slower than a keyboard interface, limited screen
real estate, and no clear exit to traditional textual
programming. Scratch and the like are probably good for younger kids,
but I&#39;ve had to rescue many a kid from the damage done by drag and
drop. I&#39;m not advocating starting a high schooler in Haskell with Vim
but there are plenty of tools that are both accessible, easy entry,
fun, but at the same time real.
&lt;/p&gt;

&lt;p&gt;
We also see the proliferation of all girl after school programs. I
don&#39;t have any problem with this per se. I think we need some all
girls and some co-ed. In fact, one of the young ladies in our summer
program commented on how much she liked the fact that we weren&#39;t all
girls but we created a wonderful environment where everyone felt
comfortable and supported.
&lt;/p&gt;

&lt;p&gt;
Some of those programs do great things in terms of exposing girls to
role models and to what&#39;s possible. My issue is with the actual
education, notably because these programs invariably don&#39;t have real
educator/computer scientists running the show. They teach a watered
down CS or conversely too much too quickly and then the girls are
clobbered at the next level, they start doubting themselves and they
change majors.
&lt;/p&gt;

&lt;p&gt;
The problems with these after school programs as well as with CS
Principles are the same. A few of my students who studied CS at
Harvard framed it nicely when talking about Harvard&#39;s highly
publicized CS50 course (I&#39;m paraphrasing and combining thoughts here):
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
They don&#39;t really teach anything, you&#39;ve got to do it mostly on your
own. In the end you don&#39;t really learn anything.
&lt;/p&gt;

&lt;p&gt;
Then, they go on to Harvard&#39;s next real CS class - functional
programming with no real preparation and they drop like flies.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
So, what do you do?
&lt;/p&gt;

&lt;p&gt;
You do what we did.
&lt;/p&gt;

&lt;p&gt;
I developed an intro course over 10 years ago. The new AP Principles
course has some overlap in terms of concepts but one big difference is
that we dive into programming using two real languages. &lt;a href=&#34;http://racket-lang.org/&#34;&gt;Scheme&lt;/a&gt;, which
is mathy functional and &lt;a href=&#34;https://ccl.northwestern.edu/netlogo/index.shtml&#34;&gt;NetLogo&lt;/a&gt; which is visual and interactive but
still text based. We then move on to a number of really neat concepts
in Python.
&lt;/p&gt;

&lt;p&gt;
People say, &#34;Oh, you do the NetLogo because it&#39;s visual and appeals to
girls.&#34; No - we do NetLogo because it&#39;s cool and it appeals to
kids. Same with Scheme. Show me a girl that loves the visual stuff,
I&#39;ll show you a girl that loves Scheme&#39;s functional goodness. I might
only be a dopey old school teacher, but I really believe &#34;kids are
kids.&#34;
&lt;/p&gt;

&lt;p&gt;
On top of this, you get great teachers that really know their stuff
(and we&#39;ve built plenty of them over the years) and create a culture
with everyone&#39;s accepted and good things happen.
&lt;/p&gt;

&lt;p&gt;
By the time our kids leave us, they&#39;ve got enough under their belts so
they not only know their stuff but they have the confidence that they
know their stuff.
&lt;/p&gt;

&lt;p&gt;
How does it work for us? Nationally, about 19% of APCS test takers are
women. At Stuy, we hover around 30%. My Software Development, Post AP
classes are also around 30% so we keep them. Oh, and Stuy is only 40%
female and we do much worse than the national averages in other
traditionally male dominated fields such as physics.
&lt;/p&gt;

&lt;p&gt;
Yesterday, I was talking to one of our CSTUY hackers as we ended the
day. We were talking about possible directions to go in after the new
year. We could stay graphical, go to text processing, look at some
hardcore algorithms and more. I asked Aruna what she thought. Her
answer: &#34;It&#39;s all fun.&#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reunions part 2 - My Stuy, Your Stuy</title>
      <link>https://cestlaz.github.io/posts/2014-11-30-reunions-2/</link>
      <pubDate>Sun, 30 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-11-30-reunions-2/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
About a month ago, I was at my 30 year high school reunion. Yesterday
I was at the class of 2009&#39;s 5 year one. Stuy 2004 also had their 10
year reunion last night.
&lt;/p&gt;

&lt;p&gt;
It&#39;s always nice to be invited to reunions - I know it&#39;s largely
dependent on who&#39;s on the organizing committee but it&#39;s nice to be
remembered.
&lt;/p&gt;

&lt;p&gt;
&lt;a href=&#34;http://cestlaz.github.io/2014/10/25/reunions.html#.VHuvPJ-c30o&#34;&gt;Last time&lt;/a&gt; I wrote about Stuy reunions I noted how similar they all
are. It&#39;s something I&#39;ve noticed over the years. The kids are all
unique but the vibe is the same. I tell people that the biggest
difference between my class reunion and the ones I attend as a teacher
is that I know more people when I&#39;m there as a teacher. That&#39;s
probably more of a statement about me than the reunions or classes though.
&lt;/p&gt;

&lt;p&gt;
Interesting to me was that I didn&#39;t really feel like I was at a Stuy
event. The people I chatted with were by and large part of our CS
family. We&#39;ve got our own mailing list, have our own meetups and are
already a community that spans the years. It was nice to actually see
people, particularly the out of towners in person and it was nice to
speak to some of the people who are more comfortable lurking on our
list but it&#39;s not like we&#39;ve been out of touch for the past five years.
&lt;/p&gt;

&lt;p&gt;
It really cemented my feelings that my Stuy really doesn&#39;t have much
to do with the actual school any more. It&#39;s the kids and teachers I
work with right now and the many graduates that I now consider
friends. It&#39;s also the CSTUY kids from the summer and the kids that I
hope to work with in the future. There are more than a few non-Stuy
people that are part of the community as well.
&lt;/p&gt;

&lt;p&gt;
That&#39;s my Stuy. On the one hand, it&#39;s pretty cool. We&#39;ve got a
community that&#39;s around 700 people and spans almost four decades and
StuyCS is a known quantity in the tech world.
&lt;/p&gt;

&lt;p&gt;
On the other hand it&#39;s kind of sad that I no longer feel passionate
about the institution that I attended as a kid and have worked at for
over 20 years.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Little details we take for granted</title>
      <link>https://cestlaz.github.io/posts/2014-11-21-little-details/</link>
      <pubDate>Fri, 21 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-11-21-little-details/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div id=&#34;outline-container-unnumbered-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-1&#34;&gt;
&lt;p&gt;
I&#39;m getting ready for my AP classes this morning. We&#39;re building a
&lt;a href=&#34;http://cestlaz.github.io/2011/12/03/wheres-waldo-text-style.html#.VG8qtt-c2Ak&#34;&gt;word search generator&lt;/a&gt; and we&#39;re at the point where we need to read a
list of words from a file
&lt;/p&gt;

&lt;p&gt;
First, I&#39;d better make sure I can do it. We&#39;re using the java
&lt;b&gt;&lt;b&gt;scanner&lt;/b&gt;&lt;/b&gt;, mostly because it&#39;s easy.
&lt;/p&gt;

&lt;p&gt;
First cut:
&lt;/p&gt;
&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;wl&lt;/span&gt; {
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-weight: bold;&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color: #00ff00;&#34;&gt;String&lt;/span&gt;[] &lt;span style=&#34;color: #ffff00;&#34;&gt;args&lt;/span&gt;) {
&lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;sc&lt;/span&gt; = &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt;(&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;File&lt;/span&gt;(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;words&#34;&lt;/span&gt;));
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;while&lt;/span&gt; (sc.hasNext()){
&lt;span style=&#34;color: #00ff00;&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;s&lt;/span&gt; = sc.next();
System.out.println(s);
}
}
}
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;
Oh yes, I forgot the
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
import java.io.*;
import java.util.*;
&lt;/pre&gt;


&lt;p&gt;
Oh, and also the fact that I&#39;ve got deal with exceptions when working
with files:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;try&lt;/span&gt; {
&lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;sc&lt;/span&gt; = &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt;(&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;File&lt;/span&gt;(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;words&#34;&lt;/span&gt;));
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;while&lt;/span&gt; (sc.hasNext()){
&lt;span style=&#34;color: #00ff00;&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;s&lt;/span&gt; = sc.next();
System.out.println(s);
}
} &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;catch&lt;/span&gt; (&lt;span style=&#34;color: #00ff00;&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;e&lt;/span&gt;){
System.out.println(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;Can&#39;t open file.&#34;&lt;/span&gt;);
System.exit(0);
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
But we don&#39;t want to wrap our entire program in an exception:
&lt;/p&gt;
&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;try&lt;/span&gt; {
&lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;sc&lt;/span&gt; = &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt;(&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;File&lt;/span&gt;(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;words&#34;&lt;/span&gt;));
} &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;catch&lt;/span&gt; (&lt;span style=&#34;color: #00ff00;&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;e&lt;/span&gt;){
System.out.println(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;Can&#39;t open file.&#34;&lt;/span&gt;);
System.exit(0);
}

&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;while&lt;/span&gt; (sc.hasNext()){
&lt;span style=&#34;color: #00ff00;&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;s&lt;/span&gt; = sc.next();
System.out.println(s);

}
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;
Now it doesn&#39;t work because the &lt;b&gt;&lt;b&gt;Scanner sc&lt;/b&gt;&lt;/b&gt; might not exist after the
try catch block (if an exception occurred), so we need:
&lt;/p&gt;
&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;sc&lt;/span&gt;
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;try&lt;/span&gt; {
sc = &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt;(&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;File&lt;/span&gt;(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;words&#34;&lt;/span&gt;));
} &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;catch&lt;/span&gt; (&lt;span style=&#34;color: #00ff00;&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;e&lt;/span&gt;){
System.out.println(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;Can&#39;t open file.&#34;&lt;/span&gt;);
System.exit(0);
}

&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;while&lt;/span&gt; (sc.hasNext()){
&lt;span style=&#34;color: #00ff00;&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;s&lt;/span&gt; = sc.next();
System.out.println(s);

}
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;
And now this doesn&#39;t work because &lt;b&gt;&lt;b&gt;sc&lt;/b&gt;&lt;/b&gt; might not have a value so we
finally get to the working version:
&lt;/p&gt;


&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #ff00ff;&#34;&gt;java&lt;/span&gt;.&lt;span style=&#34;color: #ff00ff;&#34;&gt;io&lt;/span&gt;.*;
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #ff00ff;&#34;&gt;java&lt;/span&gt;.&lt;span style=&#34;color: #ff00ff;&#34;&gt;util&lt;/span&gt;.*;
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;publ&lt;/span&gt;&lt;span style=&#34;color: #00ff00;&#34;&gt;ic c&lt;/span&gt;&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;lass&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;wl&lt;/span&gt; {
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000ff; font-weight: bold;&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color: #00ff00;&#34;&gt;String&lt;/span&gt;[] &lt;span style=&#34;color: #ffff00;&#34;&gt;args&lt;/span&gt;) {
&lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;sc&lt;/span&gt; = &lt;span style=&#34;color: #ff00ff;&#34;&gt;null&lt;/span&gt;;
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;try&lt;/span&gt; {
sc = &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;Scanner&lt;/span&gt;(&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #00ff00;&#34;&gt;File&lt;/span&gt;(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;words&#34;&lt;/span&gt;));
} &lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;catch&lt;/span&gt; (&lt;span style=&#34;color: #00ff00;&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;e&lt;/span&gt;){
System.out.println(&lt;span style=&#34;color: #00ff00;&#34;&gt;&#34;Can&#39;t open file.&#34;&lt;/span&gt;);
System.exit(0);
}
&lt;span style=&#34;color: #00ffff; font-weight: bold;&#34;&gt;while&lt;/span&gt; (sc.hasNext()){
&lt;span style=&#34;color: #00ff00;&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #ffff00;&#34;&gt;s&lt;/span&gt; = sc.next();
System.out.println(&lt;span style=&#34;color: #00ff00;&#34;&gt;s&lt;/span&gt;);

}
}
}
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;
Really simple program but that&#39;s a long list of things that can go
wrong along the way. Nothing big, but each a stumbling block for a
beginning student that doesn&#39;t have the wealth of experience that
someone like me has.
&lt;/p&gt;

&lt;p&gt;
I had an interesting discussion with one of my seniors the other day
on this subject - all the base knowledge that experienced programmers
have that students don&#39;t and how we have to approach teaching so that
students are supported and not frustrated by these little but
important speed-bumps that they&#39;ll hit along the way.
&lt;/p&gt;

&lt;p&gt;
I hope to write more about this soon, but for now I&#39;ll leave you to
ponder the issue.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hidden Complexity</title>
      <link>https://cestlaz.github.io/posts/2014-11-17-hidden-complexity/</link>
      <pubDate>Mon, 17 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-11-17-hidden-complexity/</guid>
      <description>

&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
I&#39;ve said it many times:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Never use a tool you couldn&#39;t write yourself.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
That is - make sure you understand what&#39;s going on under the hood.
&lt;/p&gt;

&lt;p&gt;
In AP we&#39;ve been playing with ArrayLists. The problem for today?
Create an ArrayList with consecutive integers and then write a routine
that will randomize the ArrayList.
&lt;/p&gt;

&lt;p&gt;
For example, you might start with this ArrayList:
&lt;/p&gt;

&lt;pre class=&#34;example&#34;&gt;
0,1,2,3,4,5
&lt;/pre&gt;

&lt;p&gt;
and end up with
&lt;/p&gt;

&lt;pre class=&#34;example&#34;&gt;
3,5,1,4,2,0
&lt;/pre&gt;

&lt;p&gt;
First cut, the students grabbed a random element from the ArrayList,
removed it, and added it to the end of a new list. Then repeat until
the original list is empty and the new one is randomized. Then return
the list.
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;shuffle1&lt;/span&gt;(&lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;l&lt;/span&gt;){
&lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;result&lt;/span&gt; = &lt;span style=&#34;color: #a020f0;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt;();
&lt;span style=&#34;color: #a020f0;&#34;&gt;while&lt;/span&gt; (l.size()&amp;gt;0){
&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;i&lt;/span&gt; = rnd.nextInt(l.size());
&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;v&lt;/span&gt; = l.remove(i);
result.add(v);
}
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; result;
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Looks good.
&lt;/p&gt;

&lt;p&gt;
Version two was much the same but after it removed a random value, it
added it to the end of the same ArrayList:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;shuffle2&lt;/span&gt;(&lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;l&lt;/span&gt;){
&lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;result&lt;/span&gt; = &lt;span style=&#34;color: #a020f0;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt;();
&lt;span style=&#34;color: #a020f0;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;s&lt;/span&gt;=l.size();s&amp;gt;0;s--) {
&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;i&lt;/span&gt; = rnd.nextInt(s);
&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;v&lt;/span&gt; = l.remove(i);
l.add(v);
}
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; l;
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Then it was time to time. Both seemed pretty quick but as our data set
grew things seemed strange:
&lt;/p&gt;
&lt;div class=&#34;row&#34;&gt;
&lt;div class=&#34;c4&#34;&gt;
&lt;table border=&#34;2&#34; cellspacing=&#34;0&#34; cellpadding=&#34;6&#34; rules=&#34;groups&#34; frame=&#34;hsides&#34;&gt;


&lt;colgroup&gt;
&lt;col  class=&#34;left&#34; /&gt;

&lt;col  class=&#34;left&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&#34;col&#34; class=&#34;left&#34;&gt;Size&lt;/th&gt;
&lt;th scope=&#34;col&#34; class=&#34;left&#34;&gt;Time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;100,000&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;2 seconds&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;200,000&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;7 seconds&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;400,000&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;26 seonds&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
We&#39;re just looping through an ArrayList, what&#39;s going on? When we
double the size of the list, it should just take double the time.
&lt;/p&gt;

&lt;p&gt;
Since the class already wrote their own ArrayList implementation, they
were quick to realize that every time we removed an item from the
original Array, we were doing a linear or O(n) operation. That means
our algorithms, which look linear, are in fact O(N&lt;sup&gt;2&lt;/sup&gt;).
&lt;/p&gt;

&lt;p&gt;
Can we do better? You bet. They just changed the remove and add to
using get and set. Instead off removing an item and re-inserting it,
just swap the randomly selected item with the last element:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;shuffle3&lt;/span&gt;(&lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;l&lt;/span&gt;){
&lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;result&lt;/span&gt; = &lt;span style=&#34;color: #a020f0;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #228b22;&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span style=&#34;color: #228b22;&#34;&gt;Integer&lt;/span&gt;&amp;gt;();
&lt;span style=&#34;color: #a020f0;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;s&lt;/span&gt;=l.size();s&amp;gt;0;s--) {
&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;i&lt;/span&gt; = rnd.nextInt(s);

&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;tmp&lt;/span&gt; = l.get(i);
l.set(i, l.get(s-1));
l.set(s-1,tmp);
}
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; l;
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
No removes so no hidden linear component.
&lt;/p&gt;

&lt;p&gt;
The run time?
&lt;/p&gt;
&lt;div class=&#34;row&#34;&gt;
&lt;div class=&#34;c4&#34;&gt;
&lt;table border=&#34;2&#34; cellspacing=&#34;0&#34; cellpadding=&#34;6&#34; rules=&#34;groups&#34; frame=&#34;hsides&#34;&gt;


&lt;colgroup&gt;
&lt;col  class=&#34;left&#34; /&gt;

&lt;col  class=&#34;left&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope=&#34;col&#34; class=&#34;left&#34;&gt;Size&lt;/th&gt;
&lt;th scope=&#34;col&#34; class=&#34;left&#34;&gt;Time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;100,000&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;.15 seconds&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;200,000&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;.16 seconds&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;400,000&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;.17 seonds&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;
In fact, it took data sets in the size of millions before we even
broke more than a couple of seconds.
&lt;/p&gt;

&lt;p&gt;
The algorithm looks the same but understanding what goes on under the
hood can make a big difference.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hi, I&#39;m Mike, I went to high school with....</title>
      <link>https://cestlaz.github.io/posts/2014-11-16-weddings/</link>
      <pubDate>Sun, 16 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-11-16-weddings/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
That&#39;s how I introduce myself whenever I attend a former student&#39;s
wedding. It leads to all sorts of confusion.
&lt;/p&gt;

&lt;p&gt;
Even better was the time I was at the wedding of two former
students. I had just dropped around 65 pounds and was wearing my hair
differently. I sat at a table filled with former students that didn&#39;t
recognize me &amp;#x2013; they had no reason to expect me, out of context and
all. I joined the conversation - able to go toe to toe on stories of
&#34;the old days at Stuy.&#34; It really confused them. We all had a good
laugh when I outed myself.
&lt;/p&gt;

&lt;p&gt;
Over the years, a many of my graduates have moved from student to
friend and I&#39;ve shared life events with a number of them. Rule one is
that I don&#39;t reach out to them after graduation - that would just be
creepy. If, however, they reach out to me, then we stay in touch. As
an educator, even if it&#39;s a periodic note or update, it&#39;s something
that really touches me - it reminds me that even with all the teacher
bashing going on in this country, the kids, at least some of the time,
appreciate us.
&lt;/p&gt;

&lt;p&gt;
This weekend was particularly memorable for me. I was at JonAlf and Jamie&#39;s
wedding. JonAlf falls in a special category.
&lt;/p&gt;

&lt;p&gt;
He was a former student and also on my fencing teams. I don&#39;t remember
how much we stayed in touch, but it must have been enough for me to
know that he minored in CS and was teaching high school at Brandeis.
&lt;/p&gt;

&lt;p&gt;
When I heard Brandeis was being phased out and I saw we had a couple
of math openings, I tried to find him to bring him over to Stuy. You
try finding JonAlf Dyrland-Weaver in &#34;the system.&#34; Is it Jon Dyrland?
Alf Weaver?  JonAlf Dyrland? Nothing worked. In any event I did
eventually find him. Unfortunately, I wasn&#39;t allowed to bring him on
in spite of his being a Stuy graduate with a CS background and a
successful teaching record. Nonetheless I kept trying and a couple of
years later I got him.
&lt;/p&gt;

&lt;p&gt;
Since then, JonAlf has been my partner in crime. A kindred spirit whom
I describe him as a younger hipper version of me although the hip bar
was set pretty low to begin with.
&lt;/p&gt;

&lt;p&gt;
In addition to the lunacy - The Blues Brothers, Austin Powers and
Dr. Evil, Clyde &#34;Thluffy&#34; Sinclair, the CS Semi Formal and all, he&#39;s
one of the best teachers I know.  A former student that I&#39;m now proud
to call friend and colleague.
&lt;/p&gt;

&lt;p&gt;
I was touched to be included in the festivities this weekend. I&#39;m
incredibly proud of JonAlf as a teacher, a person, and a friend. He
and Jamie looked so happy together and I just know that their union
will be as amazing as Devorah and mine has been.
&lt;/p&gt;

&lt;p&gt;
So this post is my way of raising a glass to JonAlf and Jamie.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Forty minutes to the punch line or &#34;we&#39;ll never look at functions the same way again&#34;</title>
      <link>https://cestlaz.github.io/posts/2014-11-12-decorators/</link>
      <pubDate>Wed, 12 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-11-12-decorators/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-unnumbered-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-1&#34;&gt;
&lt;p&gt;
How many times do we teach something and leave the kids thinking:
&lt;/p&gt;

&lt;p&gt;
&#34;what&#39;s the point of this?&#34; &#34;When will I use this?&#34; or even just the
plain old fashioned &#34;that&#39;s weird.&#34;
&lt;/p&gt;

&lt;p&gt;
It&#39;s pretty cool when a lesson starts out that way but you get to the
payoff by the end of the class.
&lt;/p&gt;

&lt;p&gt;
Today we started exploring some advanced python.
&lt;/p&gt;

&lt;p&gt;
We started by showing that you can assign functions to variables or
pass them as parameters:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;inc&lt;/span&gt;(x):
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; x+1
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;dec&lt;/span&gt;(x):
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; x-1

&lt;span style=&#34;color: #a0522d;&#34;&gt;f&lt;/span&gt; = inc
&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; f(5)

&lt;span style=&#34;color: #a0522d;&#34;&gt;flist&lt;/span&gt; = [inc,dec]

&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; flist[1](5)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
We then looked at closures in python:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;makeAdder&lt;/span&gt;(n):
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;inner&lt;/span&gt;(x):
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; x+n
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; inner

&lt;span style=&#34;color: #a0522d;&#34;&gt;add3&lt;/span&gt; = makeAdder(3)
&lt;span style=&#34;color: #a0522d;&#34;&gt;add5&lt;/span&gt; = makeAdder(5)

&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; add3(10)
&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; add5(10)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
The idea that we can make a function that builds and returns a
function. When we call &lt;b&gt;&lt;b&gt;makeAdder(3)&lt;/b&gt;&lt;/b&gt;, the 3 is passed as parameter
n so the inner function reduces to &lt;b&gt;&lt;b&gt;return x+3&lt;/b&gt;&lt;/b&gt; and then we return
that inner function. When we later run it: add3(10) it adds
10+3. makeAdder(5) works similarly but passing a 5 in for n instead
of a 3.
&lt;/p&gt;

&lt;p&gt;
Even a somewhat clunky way of doing class type abstractions:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;make_counter&lt;/span&gt;():
&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;private &#34;instance&#34; data&lt;/span&gt;
&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;has to be a list due to weird python scoping rules&lt;/span&gt;
&lt;span style=&#34;color: #a0522d;&#34;&gt;count&lt;/span&gt; = [0]

&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;public methods&lt;/span&gt;
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;inc&lt;/span&gt;():
&lt;span style=&#34;color: #a0522d;&#34;&gt;count&lt;/span&gt;[0]=count[0]+1
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;dec&lt;/span&gt;():
&lt;span style=&#34;color: #a0522d;&#34;&gt;count&lt;/span&gt;[0]=count[0]-1
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;reset&lt;/span&gt;():
&lt;span style=&#34;color: #a0522d;&#34;&gt;count&lt;/span&gt;[0]=0
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;get&lt;/span&gt;():
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; count[0]

&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;send back a dictionary so we have access to all the methods&lt;/span&gt;
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; {&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;inc&#39;&lt;/span&gt;: inc, &lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;dec&#39;&lt;/span&gt;: dec, &lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;reset&#39;&lt;/span&gt;: reset, &lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;get&#39;&lt;/span&gt;: get}

&lt;span style=&#34;color: #a0522d;&#34;&gt;c1&lt;/span&gt; = make_counter()
&lt;span style=&#34;color: #a0522d;&#34;&gt;c2&lt;/span&gt; = make_counter()

&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;we&#39;ve got to use the clunky list notation &lt;/span&gt;
c1[&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;inc&#39;&lt;/span&gt;]()
c1[&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;inc&#39;&lt;/span&gt;]()
c1[&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;inc&#39;&lt;/span&gt;]()
&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; c1[&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;get&#39;&lt;/span&gt;]()
c2[&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;inc&#39;&lt;/span&gt;]()
&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; c2[&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;get&#39;&lt;/span&gt;]()
c1[&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;reset&#39;&lt;/span&gt;]()
&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; c1[&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;get&#39;&lt;/span&gt;]()
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Up to now the students are able to see how this works but the why is
unclear.
&lt;/p&gt;

&lt;p&gt;
So now we&#39;ll look at where this is useful.
&lt;/p&gt;

&lt;p&gt;
Let&#39;s suppose we have routines like the following. It returns a
string:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;import&lt;/span&gt; random
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;get_name&lt;/span&gt;():
&lt;span style=&#34;color: #a0522d;&#34;&gt;names&lt;/span&gt; = [&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;tom&#39;&lt;/span&gt;,&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;sue&#39;&lt;/span&gt;,&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;harry&#39;&lt;/span&gt;,&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;lisa&#39;&lt;/span&gt;,&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;sarah&#39;&lt;/span&gt;,&lt;span style=&#34;color: #8b2252;&#34;&gt;&#39;horatio&#39;&lt;/span&gt;]
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; random.choice(names)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
get&lt;sub&gt;name&lt;/sub&gt; and routines like it might be scattered throughout our
code. Let&#39;s suppose, for some strange reason, we want to double the
name every time we use it. A &#34;traditional&#34; way of doing this might be:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;dble&lt;/span&gt;(f):
&lt;span style=&#34;color: #a0522d;&#34;&gt;name&lt;/span&gt; = f()
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; name+name

&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; dble(get_name) &lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;returns something like tomtom&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Here, we pass a function which returns a string and then dble returns
that string repeated twice. The problem here is that if we&#39;ve got
get&lt;sub&gt;name&lt;/sub&gt; all over our code base, we have to find it and change each
instance to &lt;b&gt;&lt;b&gt;dble(get&lt;sub&gt;name&lt;/sub&gt;)&lt;/b&gt;&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
What if we write it as a function that returns a function:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;doubler&lt;/span&gt;(f):
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;inner&lt;/span&gt;():
&lt;span style=&#34;color: #a0522d;&#34;&gt;name&lt;/span&gt;=f()
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; name+name
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; inner
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Now, in this case, we can do something like:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;make a new function that wraps get_name in &#34;inner&#34;&lt;/span&gt;
&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;when we call inner, it returns the string twice&lt;/span&gt;
&lt;span style=&#34;color: #a0522d;&#34;&gt;f&lt;/span&gt; = doubler(get_name)
&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;and then later&lt;/span&gt;
&lt;span style=&#34;color: #a020f0;&#34;&gt;print&lt;/span&gt; f() &lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;will print something like tomtom&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
The cool part is that we can also do this:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #a0522d;&#34;&gt;get_name&lt;/span&gt; = double(get_name)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
And then whenever we call our new &lt;b&gt;&lt;b&gt;get&lt;sub&gt;name&lt;/sub&gt;&lt;/b&gt;&lt;/b&gt; we end up calling the
wrapped function.
&lt;/p&gt;

&lt;p&gt;
This was the first A-ha. We don&#39;t have to change get&lt;sub&gt;name&lt;/sub&gt; all over our
code base - we only have to change it once.
&lt;/p&gt;

&lt;p&gt;
Once we write a function like doubler, instead of re-assigning
get&lt;sub&gt;name&lt;/sub&gt; as we did above, we can do the following:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #228b22;&#34;&gt;@doubler&lt;/span&gt;
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;get_name&lt;/span&gt;():
&lt;span style=&#34;color: #b22222;&#34;&gt;# &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;rest of code as defined above&lt;/span&gt;

&lt;span style=&#34;color: #228b22;&#34;&gt;@doubler&lt;/span&gt;():
&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;demo&lt;/span&gt;():
&lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #8b2252;&#34;&gt;&#34;hello&#34;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
The second example will have demo return &#34;hellohello&#34; whenever we
invoke it.
&lt;/p&gt;

&lt;p&gt;
A Python decorator is merely shorthand for calling a wrapper type
function like doubler.
&lt;/p&gt;

&lt;p&gt;
This was the second A-ha moment &amp;#x2013; we can write functions that
transform functions.
&lt;/p&gt;

&lt;p&gt;
We&#39;ll cover more decorator and closure plumbing tomorrow and then
start doing some fun stuff with these concepts.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rich and Rich - two legends on opposite sides of the hall</title>
      <link>https://cestlaz.github.io/posts/2014-11-07-rich-rich/</link>
      <pubDate>Fri, 07 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-11-07-rich-rich/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
.leftborder {border-left:1px; border-style:solid;}
&lt;/style&gt;

&lt;p&gt;
We&#39;ll get back to CS content soon, but for now:
&lt;/p&gt;

&lt;p&gt;
Last Tuesday was Election day - no students in the school - a day
devoted to professional development. Traditionally, math team coaches
from around the city descend on Stuy for a day full of lectures,
discussion, and general catching up. I&#39;ve never actually attended
these meetings. In the past, they were for math team coaches only and this
year, I was actually allowed to do something with the CS teachers.
&lt;/p&gt;

&lt;p&gt;
These meetings used to be organized by my late friend and colleague,
Rich Geller so it made sense that we took time at end of the day to
honor his memory and unveil a memorial dedicated to Rich and his
work. Rich was a legendary Stuy teacher, but more on that shortly.
&lt;/p&gt;

&lt;p&gt;
As I looked at Rich&#39;s memorial, I couldn&#39;t help and turn my head
around to gaze at another memorial - &#34;Celebration&#34; - created to honor
the memory of another legendary teacher that died before his time -
Richard Rothenberg.
&lt;/p&gt;

&lt;p&gt;
Both of these men were friends and mentors. I thought I&#39;d dedicate
this post to some of the things I learned from both of them.
&lt;/p&gt;


&lt;div class=&#34;row&#34;&gt;

&lt;div class=&#34;c6&#34;&gt;
&lt;h2&gt;Rich (Doc)&lt;/h2&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;figure&gt;
&lt;img height=&#34;250px&#34; src=&#34;https://cestlaz.github.io/img/rich-rich/doc.jpg&#34;&gt;
&lt;figcaption&gt;Celebration - the Rothenberg Memorial&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;


&lt;p&gt;
Richard Rothenberg, known to me as Richie or Doc was the math chair
when I was a senior. He taught AP Computer Science that year and he
hired me back a few years later.
&lt;/p&gt;

&lt;p&gt;
He didn&#39;t give me my first teaching gig. He knew that I had to go
somewhere else to develop my chops. We did stay in touch, though, and
he hired me two and a half years later.
&lt;/p&gt;

&lt;p&gt;
Doc was an amazing teacher but he was also someone who worked
tirelessly behind the scenes for the good of his students.
&lt;/p&gt;

&lt;p&gt;
I remember one year he heard that one our recent graduates got into
some trouble at college. Doc got wind of this and went out of his way
to contact the college on the student&#39;s behalf. The student never
knew. That was Doc.
&lt;/p&gt;

&lt;p&gt;
He also understood the &#34;big picture.&#34;
&lt;/p&gt;

&lt;p&gt;
I was at a parents association meeting early in my Stuy career. All of
the assistant principals were taking turns talking to an audience of
Freshman parents.
&lt;/p&gt;

&lt;p&gt;
Each got up  and started to brag about their program:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;We had n intel semi finalists last year
&lt;/li&gt;
&lt;li&gt;Our kids won whatever essay writing contest
&lt;/li&gt;
&lt;li&gt;Six kids won gold medals in&amp;#x2026;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Each AP was bragging about how awesome their department was but in
truth they were talking about a handful of excellent kids who would
have excelled no matter where they went. I&#39;d guess Stuy or at least
Stuy&#39;s educational programs probably had very little to do with these
top kid&#39;s development and in any event, this wasn&#39;t really relevant to
parents of incoming students.
&lt;/p&gt;

&lt;p&gt;
Then it was Richie&#39;s turn.
&lt;/p&gt;

&lt;p&gt;
Richie got up and said the following:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Go home, hug your children, ask them how their days were.
Encourage them and support them.
Everything else will work itself out.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
That really stayed with me. So few teachers look beyond their field. I
remember talking to one of the best chemistry teachers I know - I
asked &#34;what do you do knowing that most of your kids won&#39;t be and in
fact shouldn&#39;t be chemists?&#34; The reply was that he looked at all his
students as though they all wanted to be and were going to be
chemists. Doc looked at his students as whole people first -
mathematicians second. That&#39;s one of the many lessons I learned from Doc.
&lt;/p&gt;

&lt;/div&gt;

&lt;div class=&#34;c6 leftborder&#34;&gt;
&lt;h2&gt;Rich (Richard)&lt;/h2&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;figure&gt;
&lt;img height=&#34;250px&#34; src=&#34;https://cestlaz.github.io/img/rich-rich/geller.jpg&#34;&gt;
&lt;figcaption&gt;The Rich Geller Memorial Display&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;
Richard Geller was never my teacher. He was my colleague and friend.
&lt;/p&gt;

&lt;p&gt;
He introduced me to fine dining and wine. We talked food, biking, and
teaching.
&lt;/p&gt;

&lt;p&gt;
Rich had a reputation for being unyielding and strict. Many students
went into his class in fear but just as many came back after
graduating to thank him.
&lt;/p&gt;

&lt;p&gt;
I remember one of our mutual students saying:
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
I need to be in Mr. Geller&#39;s once every three terms to keep me in good
habits. Then I need a couple of pushover teachers in between to pump
up my GPA.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
He was a top math teacher but his students learned much
more. Responsibility, respect, having care and pride in one&#39;s work,
and more.
&lt;/p&gt;

&lt;p&gt;
Rich was a demanding teacher and one who really cared about his
students. When grads came back from college and Rich would great them
with a smile. The scary teacher was gone. He asked how and what the
graduates were doing and he honestly cared. Gone was the in class
persona. That was business.
&lt;/p&gt;

&lt;p&gt;
In some ways Rich was much like an earlier Stuyvesant math
legend. Phil Fisher, who terrorized us poor calc students in the
&#39;80s. I got to know Phil when I came back as a teacher and once he
explained why he was so rigid and strict in class. Phil explained that
here he was, charged with teaching these amazing talented Stuy
students while at the same time, he felt he wasn&#39;t nearly as smart as
them. Phil needed 100% focus during every minute of every class to
give the kids what they deserved.
&lt;/p&gt;

&lt;p&gt;
I think Rich was something like that. Not exactly the same, he also
wanted the kids to learn to be responsible and respectful but I think
the core idea was the same.
&lt;/p&gt;

&lt;p&gt;
As a colleague and friend, Rich was the first guy to show appreciation
and the guy with enough character to tell you not what you wanted to
hear but what you needed to hear. I also learned to always be open and
honest with my team. Make sure everyone had all the information.
&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
I learned a lot from both of these men. Stuyvesant misses them and I
miss them, but the there influence lives on through me, their
students, colleagues and friends.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VamVoom - Turning teachers into rubble</title>
      <link>https://cestlaz.github.io/posts/2014-11-02-vamvoom/</link>
      <pubDate>Sun, 02 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-11-02-vamvoom/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Earlier today I saw a friend&#39;s Facebook post questioning the sanity of
common core math. He had an issue with the way his daughter was being
forced to work out problems. A few of us chimed in with our low
op pinion on Common Core, others said they thought it was a good
idea. I think the fact that my buddy was questioning it is a major
strike against CC. This guy isn&#39;t just a friend, he&#39;s a math
teacher. Maybe the best one I know. In fact, he&#39;s the teacher I aspire
to be. If he&#39;s got a problem with how math is taught, he&#39;s probably right.
&lt;/p&gt;

&lt;p&gt;
I made a comment also referring to VAM - the idea that teachers should
be evaluated by &#34;Value added Measures&#34; - that is, student test
scores. Another friend asked about it. I thought I&#39;d write my response
up here.
&lt;/p&gt;

&lt;p&gt;
This is just my opinion - I&#39;ve read a number of pieces over the past
couple of years and the facts to back up any assertions I&#39;m making
should be pretty easy to find by searching the web.
&lt;/p&gt;


&lt;div id=&#34;outline-container-unnumbered-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-1&#34;&gt;The idea&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-1&#34;&gt;
&lt;p&gt;
VAM is all about evaluating teachers based on standardized tests. In
our case, we&#39;re talking NY State common core and regents exams. The
idea is to tie teacher ratings, and in some cases licensing to these
tests.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-2&#34;&gt;The exams&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-2&#34;&gt;
&lt;p&gt;
Let&#39;s start with the problems with the exams. There&#39;s been a fair
amount of discussion over the past couple of years with regards to age
appropriateness and over testing. I&#39;m not going to talk about
them. Let&#39;s just look at two things.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-3&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;unnumbered-3&#34;&gt;The gag order&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-unnumbered-3&#34;&gt;
&lt;p&gt;
Teachers aren&#39;t allowed to talk about common core tests. The
questions, scoring, grading - everything is a secret.  Methinks
Pearson and NY State has something to hide. The party line is that
then questions can be reused - I&#39;m calling BS on this.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve been teaching 25 years. I give about 12 exams a year per class
plus quizzes, homework, and other assessments. None of them are secret
and somehow I manage as does every other teacher.
&lt;/p&gt;

&lt;p&gt;
By keeping everything a secret there&#39;s no accountability. Politicians
love to talk about accountability and transparency as long as it&#39;s for
others.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-4&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;unnumbered-4&#34;&gt;The scoring&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-unnumbered-4&#34;&gt;
&lt;p&gt;
Back in the day, regents exams were given and scored. Old exams were
public as was the scoring. If you got over a 65 you passed.
&lt;/p&gt;

&lt;p&gt;
Now, your exam is graded and then only after the fact, when the
numbers are in, does the state decide how to map raw scores to final
grades. Basically, the state can decide how many kids pass and by how
much and they do this after the fact.
&lt;/p&gt;

&lt;p&gt;
Sound fishy and susceptible to political influence?
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-5&#34;&gt;The evaluations&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-5&#34;&gt;
&lt;p&gt;
So, the exams that VAM&#39;s based on are already suspect. Let&#39;s dig
further. At Stuy, 40% of teacher evaluations are from standardized
tests. If you teach one of the magic subjects - English, Math, maybe
History - 20% of your results are based on your students results and
20% on the school or departmental results.
&lt;/p&gt;

&lt;p&gt;
On the other hand, if you&#39;re like me and don&#39;t teach regents classes,
40% of my rating is based on exams in subjects I don&#39;t even teach.
&lt;/p&gt;

&lt;p&gt;
Even if you could evaluate a teacher based on student exams, surely
you can&#39;t judge a computer science teacher based on another teacher&#39;s
students English exam scores.
&lt;/p&gt;

&lt;p&gt;
On top of this, the formula is another one of those state
secrets. It&#39;s not public and it&#39;s worked out after the fact. The state
can basically look at all the numbers and then decide where to put the
cutoffs.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-6&#34;&gt;More problems&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-6&#34;&gt;
&lt;p&gt;
They abound. Here are a few:
&lt;/p&gt;

&lt;p&gt;
Just about all of my kids do very well on the AP Computer Science
exam. Am I a good teacher because they all do well or a bad one since
they don&#39;t improve.
&lt;/p&gt;

&lt;p&gt;
What about the kid that doesn&#39;t do particularly well but ends up
ultimately becoming a computer professional. I&#39;ve had a number of
graduates that fit this bill that have credited me with setting the
spark. According to the system those students are failures as am I.
&lt;/p&gt;

&lt;p&gt;
What about kids that don&#39;t have the same teacher all year? Those that
already know the subject? Family factors?
&lt;/p&gt;

&lt;p&gt;
On top of this, people, like my friend and colleague Gary
Rubinstein have shown that VAM scores vary wildly and there have been
numerous reports showing that evaluating teacher based on student test
scores doesn&#39;t work and is just a bad idea.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-unnumbered-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-7&#34;&gt;The bottom line&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-7&#34;&gt;
&lt;p&gt;
VAM is just another reason I can&#39;t recommend teaching to pretty much
anyone.
&lt;/p&gt;

&lt;p&gt;
Teacher&#39;s aren&#39;t against being evaluated, we just want a fair and
meaningful evaluation and more importantly a structure that can help
us do better.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-unnumbered-8&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;unnumbered-8&#34;&gt;The title&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-unnumbered-8&#34;&gt;
&lt;p&gt;
So, for the title, I keep seeing Vavoom - a character from &#34;Felix the
Cat&#34; that could level mountains with a single VAVOOM
&lt;/p&gt;

&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/gtZ_0gANyaY&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Evil</title>
      <link>https://cestlaz.github.io/posts/2014-10-31-halloween/</link>
      <pubDate>Fri, 31 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-10-31-halloween/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
October 31, 2014. Twenty years after my first Stuy Halloween.
&lt;/p&gt;

&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/groo.jpg&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;30%&#34; src=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/groo.jpg&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;
Little did I know that a goof of an idea would turn into a twenty year tradition.
This year, I had a chance to team up with Natan in his senior
year. Last time we had a Zamansky family duo for Halloween it was
Batya cameoing in our Austin Powers - Dr. Evil sketch. This time it
was me and Natan center stage. We&#39;ve been wanting to do &#34;The Pit of
Ultimate Darkness&#34; for some time now. We knew it wouldn&#39;t have the
room rolling on the floor with Laughter but we had a lot of fun and I think the classes enjoyed it.
&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/LjoUUvEUFbY&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
And in case anyone&#39;s looking for what we&#39;ve done during Halloweens at Stuy in past years, here&#39;s a Youtube playlist:
&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/videoseries?list=PL9KxKa8NpFxJYgovyJhF4HZRsAqYKBLiG&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
Enjoy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reunions, StuyCS and community</title>
      <link>https://cestlaz.github.io/posts/2014-10-25-reunions/</link>
      <pubDate>Sat, 25 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-10-25-reunions/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
In a few hours Devorah and I will be off to our thirty year high
school reunion. It&#39;s going to be a boat ride - reminiscent of those
excursion day trips to Bear Mountain that Stuy had back in the day.
&lt;/p&gt;

&lt;p&gt;
Having taught CS at Stuy for the last twenty plus years, I&#39;ve also
been invited to my share of reunions as a teacher. Sometimes the
current crop ask me about the reunions and how they compare to mine. I
usually say that the reunion that I just went to was pretty much the
same as my high school reunions just that I knew more people at the
reunion that wasn&#39;t my class.
&lt;/p&gt;

&lt;p&gt;
I guess that makes sense &amp;#x2013; as a teacher I work with and get to know a
large swath of students over their careers - when I was a student I
was pretty quiet and fairly asocial. I had friends, but not a huge
amount. Since 1984 I&#39;ve only kept in touch with a few. Ben, Bill,
John, more recently, Eliza and Steve. There are others would have like
to have stayed in touch with but life happens.
&lt;/p&gt;

&lt;p&gt;
As it turns out, while each year is different, all the reunions I&#39;ve
been to have had a similar vibe. Similar clicks, similar groups, and similar
conversations. I guess that&#39;s what happens when you put a bunch of
smart people interested in a range of things in a room together.
&lt;/p&gt;

&lt;p&gt;
Funny thing is, I don&#39;t think the Stuy Vibe is unique to Stuy. I&#39;d bet
that, if you permit me to posit, that Bronx Science reunions are
largely similar and if we put some Science alums in a Stuy reunion and
the conversation was not Stuy specific, we probably wouldn&#39;t spot the
interlopers.
&lt;/p&gt;

&lt;p&gt;
I also had another reunion of sorts earlier in the week. As many of
you know, I maintain our StuyCS Alumni group or family, sometimes
called the StuyCS mafia. We had our latest meetup this past Wednesday
Around 60 Stuy alums, most of whom are my former students but some
from &#39;84 and even before gathering together sharing food, drink,
stories, and fun. At the end of the evening I was chatting with Peter
and Ilya. We spanned 25 years of Stuy but we&#39;re all part of the same
family. Incidentally, if anyone reading this is in Tech and a Stuy
grad, head over to &lt;a href=&#34;http://family.stuycs.org&#34;&gt;family.stuycs.org&lt;/a&gt; fill out the form and join
the family.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve been thinking about my Stuy class and the StuyCS family a lot
recently. Probably because I see that the end of the Stuy portion of my
career is close at hand. The thing I&#39;ve realized is that my Stuy isn&#39;t
the building on Chambers street nor is it the one on 15th. It&#39;s my
graduates, who have become my friends and my classmates that started
that way. It&#39;s like minded interesting people who do interesting
things and it&#39;s about the type of kid that grows into that type of
person.
&lt;/p&gt;

&lt;p&gt;
Looking forward to reconnecting with some of those people in a few
hours and meeting some that I never knew before.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Wait, I know that!!!!</title>
      <link>https://cestlaz.github.io/posts/2014-09-23-i-know-that/</link>
      <pubDate>Tue, 23 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-09-23-i-know-that/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
If I&#39;m doing my job right, by the time my kids graduate they can learn
on their own.
&lt;/p&gt;

&lt;p&gt;
It&#39;s like when two years ago, before starting her summer internship,
Batya listed all the tools and technologies she had to work with. When
I pointed out that she hadn&#39;t ever used any of them before and asked
how she was going to deal with it, she replied &#34;I&#39;ll figure it out.&#34;
And she did.
&lt;/p&gt;

&lt;p&gt;
At the end of the summer, Dina told a similar story about her
internship and how she knew she&#39;d figure everything out because of the
solid background she got by going through StuyCS.
&lt;/p&gt;

&lt;p&gt;
I loved both these stories.
&lt;/p&gt;

&lt;p&gt;
But getting the kids there takes time.
&lt;/p&gt;

&lt;p&gt;
Yesterday, in my AP classes, I assigned three &lt;i&gt;codingbat&lt;/i&gt; problems. I
decided to go objects first this time round so we haven&#39;t done any
language constructs. The problems were simple String manipulations but
I added one that needed conditionals.
&lt;/p&gt;

&lt;p&gt;
Today we went over them. Most of the class solved the assignment and
most had either no trouble or had to do just a little work.
&lt;/p&gt;

&lt;p&gt;
I asked what about that last problem might have caused some
difficulty.
&lt;/p&gt;

&lt;p&gt;
They couldn&#39;t figure it out, it seemed pretty straighforward. After a
number of guesses, one student  said:
&lt;/p&gt;

&lt;p&gt;
&#34;Wait, we don&#39;t know ifs&#34;
&lt;/p&gt;

&lt;p&gt;
That was it. They didn&#39;t realize that they had taught themselves
something new.
&lt;/p&gt;

&lt;p&gt;
This, of course, doesn&#39;t just happen.
&lt;/p&gt;

&lt;p&gt;
They&#39;ve seen conditionals in all sorts of guises.
&lt;/p&gt;

&lt;p&gt;
Scheme:
&lt;/p&gt;
&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-scheme&#34;&gt;(&lt;span style=&#34;color: #a020f0;&#34;&gt;if&lt;/span&gt; boolean_expression
True_part
False_part)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
NetLogo:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
if boolean [True part]

and

ifelse boolean [True part][ False part]
&lt;/pre&gt;

&lt;p&gt;
and Python:
&lt;/p&gt;
&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #483d8b;&#34;&gt;bool&lt;/span&gt;:
s1
&lt;span style=&#34;color: #a020f0;&#34;&gt;elif&lt;/span&gt; bool2:
s2
&lt;span style=&#34;color: #a020f0;&#34;&gt;else&lt;/span&gt;:
s3
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
and so on.
&lt;/p&gt;

&lt;p&gt;
So they new the concept, from there it was just details.
&lt;/p&gt;

&lt;p&gt;
Some said they just wrote it and it worked. Some said they looked up
sample code. Most didn&#39;t think they were doing anything new.
&lt;/p&gt;

&lt;p&gt;
It was pretty awesome.
&lt;/p&gt;

&lt;p&gt;
It&#39;s still a long road before they graduate, but we&#39;re getting there.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A birds eye view of my career</title>
      <link>https://cestlaz.github.io/posts/2014-09-17-stuycs-spectator/</link>
      <pubDate>Wed, 17 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-09-17-stuycs-spectator/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
It&#39;s hard to believe that this is my 25th year teaching and that my
first StuyCS class graduated in June 1995. It&#39;s really hard to believe
that I&#39;m now looking at the end of a significant part of my life and
career.
&lt;/p&gt;

&lt;p&gt;
Over the summer, Mariya, Kachun, and Stella, all writers for Stuy&#39;s
Spectator worte an article that chronicled StuyCS. It&#39;s a really nice
piece. It skirted the battles I&#39;ve had and the fact that we get no
love or support from Stuy or the DOE, but still, as I said, it&#39;s a
really nice piece.
&lt;/p&gt;

&lt;p&gt;
the original can be found &lt;a href=&#34;http://www.stuyspec.com/features/how-to-hack-yourself-a-class&#34;&gt;here&lt;/a&gt; but I&#39;ve copied the article (with
permission) below.
&lt;/p&gt;

&lt;p&gt;
Two decades in about two pages.
&lt;/p&gt;

&lt;p&gt;
Enjoy.
&lt;/p&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;How to Hack Yourself a Class&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
By Mariya Gedrich, Kachun Leung, and Stella Ma
&lt;/p&gt;

&lt;p&gt;
Imagine Stuyvesant without a computer science program. Aspire to pursue a career in software development? Nope, but perhaps you could go into the ever-lucrative handmade telescope business after taking a telescope assembly class. Want to explore all the features of your laptop? Well, that’s probably not happening at school. Want to take Advanced Placement (AP) Computer Science? Good luck getting into that one class taught by that one teacher. If this seems like a hassle to you, it was definitely a problem 20 years ago when this was the reality.
&lt;/p&gt;

&lt;p&gt;
Today, every Stuyvesant student is expected to graduate with at least one semester of Introductory Computer Science, and for those who are interested in continuing with the course, there are plenty of classes offered. In fact, AP Computer Science is one of the most sought after classes every year. Last year, around 400 students applied to take the class, and an extra section had to be added to accommodate the disappointed students who did not get in. In 1994, however, Stuyvesant had only a few classes dedicated to the use and study of computers. There was no official computer science program other than one AP Computer Science class taught by a math teacher who was much more passionate about teaching math than about teaching computers.
&lt;/p&gt;


&lt;p&gt;
A new math teacher at the time, Michael Zamansky, was teaching geometry. Zamansky, felt out of place teaching a math class. “I’m not a mathematician, I’m a computer scientist,” Zamansky explained. Before long, it was clear that the switch was inevitable. Zamansky enthusiastically recalls the day he was taken out of a class to talk to math chairman Richard Rothenberg: The previous teacher said, “‘Richie, I don’t want to teach computer science—Mike does.’”
&lt;/p&gt;

&lt;p&gt;
And that was when the ball started rolling.
&lt;/p&gt;

&lt;p&gt;
In the fall of 1994, Zamansky started teaching the AP Computer Science class. In turn, enrollment skyrocketed as there was now an enthusiastic and passionate teacher. Juniors and seniors filled four sections of the class, more than ever before.
&lt;/p&gt;

&lt;p&gt;
The classes fostered a new interest in computer science among students. Feeling that there was much more to be done with this new enthusiasm, Zamansky asked his class if they’d like to have a spring class in Systems Programming, a class in which students would learn about memory organization, interrupts, and computer representation of numbers. Although both his students and the administration approved of this idea, Zamansky was unable to fit the class into the students’ 8-period schedules, especially since they had other commitments like math team in the morning. The solution came when students volunteered to stay an extra period after school, making Systems Programming a ninth period class. Students readily signed up; Zamansky was now staying after school every day with a group of students eager to learn. Noticing how popular the Systems Programming class was, Zamansky decided to create a fall semester supplementary course in Advanced Computer Graphics, in which he taught students how to use C and Pascal. Because of the popularity of these classes, the electives were incorporated into the schedule and staying after school was no longer necessary by the fall of 1995.
&lt;/p&gt;

&lt;p&gt;
The classes proved to be a massive success. Computer science students were getting involved in international competitions, claiming top spots wherever they went. The result of the newly formed computer science classes was a very close-knit subculture. All of his students shared a common interest and now had a venue for developing it. “That cohort from Mike’s first class really bonded as a group,” recalled alumnus Yu Ping Hu (’95) in an e-mail interview. “I remember cutting all my classes for days on end to spend time in the lab with other kids in the class to work on our projects and hang out (and Mike kicking us out when he found out about it, not that it stopped us from doing it again when he wasn’t in the room).” In addition, “Hackers,” a film about a young boy who was arrested for writing a computer virus, was filmed at Stuyvesant, and a real life hacking incident took place. These events helped create traditions and lore for that community, according to Hu.
&lt;/p&gt;

&lt;p&gt;
Zamansky also helped foster a community by teaching with a fun, playful attitude. According to former computer science teacher and alumnus Boris Granovskiy, students and teachers constantly played pranks on each other. “I definitely remember one day when there were several bake sales at Stuy, and so Mr. Zamansky and some of my friends bought up a bunch of pies and ambushed me when I got to the classroom, leading to a chase around the classroom and a lot of flying pastry,” he recalled.The annual Halloween tradition of all the computer science teachers dressing up and performing skits for their classes has its roots in Zamansky’s enthusiasm for dressing up in an elaborate costume. “The first year I taught, Mr. Zamansky and I dressed up as Hans and Franz from Saturday Night Live and walked around trying to teach in character the entire day,” Granovskiy recalls. The following year they both dressed up as the Hulk and had to somehow teach by only using grunting noises.
&lt;/p&gt;

&lt;p&gt;
Even though a vibrant culture had formed around the classes, only a small portion of the student body was a part of it. “A lot of kids won’t even think about computer science,” Zamansky explained. The ones who did, however, often fell in love with it. Alumnus and computer software developer Anita Verma remembers how she originally took Zamansky’s Introduction to Computer Science (Intro) class when it was an elective during her sophomore year. “I had heard great things about Mr. Zamansky, and I always loved computers, so I was very excited to take his class,” she said in an email interview. Although computer science was new to her, she quickly became fond of the class. “Classes never felt like a grind, like most of my other classes did. Looking back at these classes now, I understand that this is what learning is supposed to feel like, when you find something that you are passionate about,” she said. “I retained everything I learned in those classes, and used that as the foundation of the computer science education I would receive at college and in the workplace.”
&lt;/p&gt;

&lt;p&gt;
Verma is just one of many of Zamansky’s students who have gone on to have jobs in the tech industry, with some working at Google and others at the National Security Agency. “When one of my students got his doctorate, he gave me a copy of [it], and he’s a good friend of mine now…when another student wrote a book, I’m in the acknowledgments,” he said. “So I know these guys appreciate me but I’m like, ‘can’t I do more?’”
&lt;/p&gt;

&lt;p&gt;
That was when Zamansky decided to pursue a required Intro class for all students by what he considered “hacking” the school’s system. He started working on his idea for this program in 1997, but did not get the chance to make it a reality until 2002, when drafting teacher Timothy Pon left Stuyvesant. Since Pon left behind a drafting class, Zamansky was able to swoop in and substitute one of his Intro classes for the drafting class as a graduation requirement, a move that pleased a large portion of the student body. “Students began to say, ‘Hey, this is ridiculous. Computer science is so much more valuable,’ since the whole idea was that we want to give you the basic tools to inspire you and get you to think like a computer scientist,” Zamansky said.
&lt;/p&gt;

&lt;p&gt;
The additional Intro class added yet another teacher to the computer science faculty,  Boris Granovskiy. It was the students in Granovskiy’s class who were allowed get a graduation credit for their Intro class to replace the drafting requirement. Students, however, began to complain that it was unfair for only one Intro class to satisfy the graduation requirement. “If you were in my class you didn’t get credit because it was only for this one substitute,” Zamansky explained. After the complaints increased, the administration caved in and allowed all Intro classes to get credit.
&lt;/p&gt;

&lt;p&gt;
Once a single semester of Introduction to Computer Science (MKS21) was officially a graduation requirement, Zamansky began to work on creating a second semester class for his intro program, MKS22. “The whole idea behind Intro to Computer Science is that during MKS21, the first half, you learn to think like a computer scientist. But in MKS22, you’re gonna use real stuff. We do data analysis…and this is something that no matter what field you’re going to go into, they’re gonna help you,” he explained. Finally with the success of creating a whole year of Intro, Zamansky was able to achieve his goal of teaching computer science to the whole student body.
&lt;/p&gt;

&lt;p&gt;
Although the wide array of computer science classes has grown into one of the most popular programs in Stuyvesant, it still faces several obstacles. The most prominent of these problems is that this program is not classified as a separate department because there is not a separate licensing for computer science teachers. Since the computer science programs are classified as math, it leads to several conflicts of interest, namely the daily functions of the program. This includes hiring and evaluating teachers and transferring students between classes. Furthermore, some of the computer science teachers are also math teachers, which causes problems when creating schedules each year. Assistant Principal of Mathematics Maryann Ferrara in particular has to deal with these problems; while hiring teachers, she has to find a fair way to allocate money for teachers between both the math department and the computer science program, according to Zamansky.
&lt;/p&gt;

&lt;p&gt;
Even though Zamansky and his program have faced problems to this day, he continues to take pride in what he has done with it. During his interview, he joyfully recounted memories of his students and their achievements of working for companies like Electronic Arts, Google, and Facebook. Besides the individual student accomplishments, the program has grown beyond the walls of Stuyvesant to include an organization called Computer Science and Technology for Urban Youth, a computer science program at St. Joseph’s College that pioneered this summer. Taught by several of Stuyvesant’s computer science teachers including JonAlf Dyrland-Weaver and Samuel Konstatinovich, the goal of the program is the same as it was in the beginning: to expose more students to computer science and to give them a venue to develop their skills.
&lt;/p&gt;

&lt;p&gt;
And so, from a single section of AP Computer Science taught by a single teacher in 1994, Stuyvesant’s computer science program has grown into a sophisticated program that is one of a kind. “We had investors who wanted to invest in our student projects before they graduated. That doesn’t happen anywhere. We’ve got this very special thing that is nowhere else in the country,” Zamansky said. “There’s really nothing comparable to it.”
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a High School Summer CS Program - SHIP</title>
      <link>https://cestlaz.github.io/posts/2014-09-05-ship-index/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-09-05-ship-index/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
I wanted to do a couple more posts on the &lt;a href=&#34;http://cstuy.org&#34;&gt;CSTUY&lt;/a&gt; summer program SHIP,
particularly about getting funding and reflections but I think I&#39;ll
just wrap things up with the school year starting.
&lt;/p&gt;

&lt;p&gt;
Overall it was an amazing success and I&#39;m amazingly proud of the
entire team (in no particular order):
&lt;/p&gt;

&lt;p&gt;
Devorah, JonAlf, Sam, Yulia, Topher, Ethan,
Leslie, Brian, Andreas, Natan, Miranda, Nadia, Fawn, Lise, Jessica,
Angela, Benedict, Elise, Fish, and Derek.
&lt;/p&gt;

&lt;p&gt;
and also proud of all the shipmates. Looking at where they started and
where they ended up &amp;#x2013; they were really terrific.
&lt;/p&gt;

&lt;p&gt;
The only downside is knowing what we can accomplish when we have the
freedom, it reminds me about how badly we&#39;re
handcuffed by our school and the department of education.
&lt;/p&gt;

&lt;p&gt;
Here are links to all the posts in case anyone&#39;s interested:
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/07/03/launching-ship.html#.VAuVjB_GyzU&#34;&gt;Preparing to launch&lt;/a&gt; - Some overall stats that we started with.
&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/07/10/ship-tas.html#.VAsC7h_fTZ8&#34;&gt;The Stewards&lt;/a&gt; - How older students mentored younger ones.
&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/07/17/ship-guests.html#.VAsC7R_fTZ8&#34;&gt;The Guests Stars&lt;/a&gt; - Guest speakers to inspire the kids.
&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/07/20/ship-outreach.html#.VAsC6x_fTZ8&#34;&gt;Outreach&lt;/a&gt; - Some of the challenges in finding the kids.
&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/07/28/ship-toolset.html#.VAsC6h_fTZ8&#34;&gt;Toolset&lt;/a&gt; - What language should we use?
&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/07/30/ship-demo-day-tomorrow.html#.VAsC6B_fTZ8&#34;&gt;Demo Day&lt;/a&gt; - What the TA&#39;s built.
&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/08/05/ship-outcomes.html#.VAsC5h_fTZ8&#34;&gt;Outcomes&lt;/a&gt; - And the overall results.
&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/08/08/ship-partners.html#.VAsC5B_fTZ8&#34;&gt;Partners&lt;/a&gt; - We couldn&#39;t have done this without St. Josephs
&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;http://cestlaz.github.io/2014/08/16/ship-crew.html#.VAsC4x_fTZ8&#34;&gt;The Crew&lt;/a&gt; - And the best teaching crew in the business.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Teacher Ratings</title>
      <link>https://cestlaz.github.io/posts/2014-09-02-mosl/</link>
      <pubDate>Tue, 02 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-09-02-mosl/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
A while back I posted about the new teacher evaluation system in New York.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
I originally wrote about the system &lt;a href=&#34;http://cestlaz.github.io/2013/09/06/why_i_might_no_longer_be_an_effective_teacher.html#.VAZVNR_GyzU&#34;&gt;here&lt;/a&gt; and a little more &lt;a href=&#34;http://cestlaz.github.io/2013/10/25/effective-teacher-2.html#.VAZVMx_GyzU&#34;&gt;here.&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Well, the results are in and I got my evaluation. What type of teacher
am I? According to New York City I&#39;m &#34;Effective,&#34; which is basically
run of the mill.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
Let&#39;s look a little deeper. At the end of the day, each teachers
receive a numeric score from 0 to 100. The score maps to a grade as
follows:
&lt;/p&gt;

&lt;table border=&#34;2&#34; cellspacing=&#34;0&#34; cellpadding=&#34;6&#34; rules=&#34;groups&#34; frame=&#34;hsides&#34;&gt;


&lt;colgroup&gt;
&lt;col  class=&#34;left&#34; /&gt;

&lt;col  class=&#34;left&#34; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;0 - 64&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;Ineffective&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;65 - 74&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;Developing&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;75 - 90&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;Effective&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class=&#34;left&#34;&gt;91 - 100&lt;/td&gt;
&lt;td class=&#34;left&#34;&gt;Highly Effective&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
With &#34;Effective&#34; being pretty much the old &#34;Satisfactory.&#34;
&lt;/p&gt;

&lt;p&gt;
My overall score was 88.
&lt;/p&gt;

&lt;p&gt;
How did they arrive at that?
&lt;/p&gt;

&lt;p&gt;
Over the course of the school year
teachers are evaluated by their supervisors. Using the &lt;a href=&#34;http://danielsongroup.org/framework/&#34;&gt;Danielson
Framework&lt;/a&gt; for teaching. I consider the Danielson stuff bunk and have
yet to be observed by someone who knows my subject area (Computer Science)
but I do have a fair supervisor who is supportive of her teachers.
&lt;/p&gt;

&lt;p&gt;
I scored 58 out of 60.
&lt;/p&gt;

&lt;p&gt;
The rest of the rating comes from standardized tests. Let me once
again go on record to state that basing teacher ratings on student
scores is asinine but it&#39;s actually worse. For teachers like myself
who don&#39;t teach regents courses, our scores come from school composite
grades. The city/state have super secret formulas that, incidentally
are figured out after the results are in to map my schools regents
results onto my evaluation grade. Yep, 40% of my rating is based on
students I haven&#39;t taught taking exams in subjects I don&#39;t teach.
&lt;/p&gt;

&lt;p&gt;
The end result? We were awarded 30 out of 40 points.
&lt;/p&gt;

&lt;p&gt;
The end result 58+30=88.
&lt;/p&gt;

&lt;p&gt;
So, since my kids didn&#39;t show growth on history and English regents,
I&#39;m a run of the mill teacher.
&lt;/p&gt;

&lt;p&gt;
I think it&#39;s time to find another profession.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>State test scores - don&#39;t fall into the trap</title>
      <link>https://cestlaz.github.io/posts/2014-08-25-state-tests/</link>
      <pubDate>Mon, 25 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-08-25-state-tests/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-sec-0-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-0-1&#34;&gt;Test results are in:&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-0-1&#34;&gt;
&lt;p&gt;
The other week, the NY State &lt;a href=&#34;http://www.nysed.gov/news/2014/state-education-department-releases-grades-3-8-assessment-results&#34;&gt;third through eight grade high stakes
test results&lt;/a&gt; were released. This was immediately followed by the usual spin an posturing.
The &lt;del&gt;reformers&lt;/del&gt; privatizers
would claim things like &#34;These charter schools did better than those
public schools&#34; while people like me would say &#34;Those charter schools
have different populations&#34; and so on.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
As you know, I&#39;ve never bought into the &#34;miracle school&#34; rot and my
friend and colleague &lt;a href=&#34;https://twitter.com/garyrubinstein&#34;&gt;Gary Rubinstein&lt;/a&gt; has done a great job at debunking
many of these schools with the so called &#34;secret sauce.&#34;
&lt;/p&gt;

&lt;p&gt;
When the results came out, I got caught in the trap. I started to cite
the reasons why the charter schools with phenomenal results are not
really so wonderful. One can look at:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Attrition rates
&lt;/li&gt;
&lt;li&gt;Test prep
&lt;/li&gt;
&lt;li&gt;Lack of back fill
&lt;/li&gt;
&lt;li&gt;and more.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-1-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-1-1&#34;&gt;The Trap&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-1-1&#34;&gt;
&lt;p&gt;
So, what&#39;s the trap? We shouldn&#39;t even be acknowledging the validity
of these exams.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
These are the 3-8th grade exams so I don&#39;t know that much about them,
but I do know that:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;They&#39;re not made by teachers.
&lt;/li&gt;
&lt;li&gt;&#34;Cut scores&#34; are made after the fact - that is, the powers that be
can &lt;b&gt;&lt;b&gt;arbitrarily&lt;/b&gt;&lt;/b&gt; decide what passing is.
&lt;/li&gt;
&lt;li&gt;The exams &lt;b&gt;&lt;b&gt;can&#39;t&lt;/b&gt;&lt;/b&gt; be used to drive instruction.
&lt;/li&gt;
&lt;li&gt;Exam questions are a tightly held secret.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
There are probably more, but I can&#39;t think of them now.
&lt;/p&gt;

&lt;p&gt;
So exactly what is the value to the students and how do we know what
these tests are testing?
&lt;/p&gt;

&lt;p&gt;
What it really comes down to is that we don&#39;t trust our teachers. If
we did, we wouldn&#39;t be giving statewide tests.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-2-1&#34;&gt;Closer to home&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-2-1&#34;&gt;
&lt;p&gt;
What I do know more about are regents exams and they&#39;re just as
ridiculous.
&lt;/p&gt;

&lt;p&gt;
Public schools ship out their tests for grading while charters grade
their own. Any wonder why some charters report better results?
&lt;/p&gt;

&lt;p&gt;
The exams also range from being reasonable assessments to
ridiculous. I remember one year there was a proof on the regents where
the question gave the statements and reasons and the student had to
put them in order. Another year, they had to match the reasons to the
statements. Both ridiculous. Other years, the proof questions are in
my opinion reasonable.
&lt;/p&gt;

&lt;p&gt;
Just as with the 3-8 grade tests, teachers can&#39;t use these exams to drive
instruction because they&#39;re given at the end of the year but at least
the questions aren&#39;t sealed so the following year teacher has some
clue. On the other hand, the &#34;cut score&#34; is again made after the
fact. Ever wonder why test scores are usually up during election years?
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
And of course, in some cases, the tests just miss the point. At Stuy,
most of our ninth graders take a class that is usually called Geometry
and the state regents exam is called the geometry regents and is all
about Euclidean Geometry. The problem is, the course is really all
about logic and deductive reasoning using Euclidean Geometry as the
platform. This is of course missed on a standardized exam.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-3-1&#34;&gt;The point:&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-3-1&#34;&gt;
&lt;p&gt;
The big point here is that as a nation we don&#39;t trust teachers. By the
time we get to the end of the semester, I know what my kids know and
generally how they will do on exams, projects, papers and the like. I
have a good idea as to if they&#39;ve mastered what I&#39;ve been trying to
teach.
&lt;/p&gt;

&lt;p&gt;
Instead, large amounts of taxpayer dollars are going to private
companies, placing kids under great stress while narrowing their
curricular possibilities and using junk science to remove good teachers.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a SHIP - The Crew</title>
      <link>https://cestlaz.github.io/posts/2014-08-16-ship-crew/</link>
      <pubDate>Sat, 16 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-08-16-ship-crew/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;
&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;div class=&#34;center&#34;&gt;
&lt;figure&gt;
&lt;img height=&#34;300px&#34; src=&#34;https://cestlaz.github.io/img/ship-crew/crew.jpg&#34;&gt;
&lt;figcaption&gt;The Crew&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
One of the most important, possibly the most important part of SHIP&#39;s
success was the crew and that&#39;s what sets us apart.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve seen CS Ed organizations run by business people, lawyers,
investors and more.The people developing curriculum are EdTech people,
entrepreneurs and anything but seasoned educators. I&#39;ve seen programs
developed, curriculum created and then the search for teachers
commence. Ofttimes real educators aren&#39;t involved at all.
&lt;/p&gt;

&lt;p&gt;
We&#39;re teachers all the way down.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve said it before and I&#39;ll say it again - it&#39;s not about the
curriculum, it&#39;s about the teachers. Take, for example, math. Math curricula
have been well defined for years but we still have major problems with
math education. The bottom line is that it&#39;s the teacher in the room
that can bring a topic to life or kill it. A great teacher can make
a lousy curriculum decent. A great curriculum won&#39;t do anything for a
lousy teacher.
&lt;/p&gt;

&lt;p&gt;
That&#39;s where we will succeed - we&#39;ve got the best teachers and
that&#39;s our crew.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Now, onto the crew.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
I&#39;m fortunate enough to have worked with some terrific teachers. If
they&#39;d allow it, I&#39;d like to think of three of them as my
proteges. Sam and JonAlf were actually students of mine when they were
at Stuy but I include Topher in the mix. Our fourth teacher, Yulia,
was JonAlf&#39;s student teacher this past year.
&lt;/p&gt;

&lt;p&gt;
Coaching trees have become popular in recent history. It&#39;s kind of cool
that we have one for CS teachers.
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;figure&gt;
&lt;img height=&#34;400px&#34; width=&#34;600px&#34; src=&#34;https://cestlaz.github.io/img/ship-crew/tree1.png&#34;&gt;
&lt;figcaption&gt;Coaching tree&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;
Of course, it extends up as well, although my mentors, excepting Robert, didn&#39;t teach
CS.
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;figure&gt;
&lt;img height=&#34;400px&#34; width=&#34;600px&#34; src=&#34;https://cestlaz.github.io/img/ship-crew/tree2.png&#34;&gt;
&lt;figcaption&gt;Extended coaching tree&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;
And of course the rest of the team have other influences as well.
&lt;/p&gt;

&lt;p&gt;
So let&#39;s talk about the crew.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4-0-1&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;sec-4-0-1&#34;&gt;JonAlf Dyrland-Weaver&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-4-0-1&#34;&gt;
&lt;p&gt;
I like to describe JonAlf as a younger, hipper version of me. Of
course, I set the hip bar pretty low. I tell my kids that I used to be
the young teacher but I was never the hip teacher.
&lt;/p&gt;

&lt;p&gt;
JonAlf and I are probably the most similar in style. Of course, this
means that if you put us in a room together, all productivity
ceases. We&#39;ve come up with such great ideas as our mascot, Clyde
&#34;Thluffy&#34; Sinclair,&#34; the Stuy CS semi-formal and more (or is that
less).
&lt;/p&gt;

&lt;p&gt;
He&#39;s been my partner in crime since he came on board. Back in the day
I was the only teacher of our post AP classes and I was delighted to
offload some of that burden to JonAlf.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4-0-2&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;sec-4-0-2&#34;&gt;Topher Brown&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-4-0-2&#34;&gt;
&lt;p&gt;
JonAlf was the hip one (with the bar, admittedly set pretty low) until
Topher came aboard. Topher didn&#39;t go to Stuy so he can never be a made
man, but he&#39;s pretty awesome, nonetheless. He came in as a math
teacher who just coincidentally had a bit of a CS background. He fit
into our insanity from day one.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4-0-3&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;sec-4-0-3&#34;&gt;Sam Konstantinovich&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-4-0-3&#34;&gt;
&lt;p&gt;
Sam was also my student. He&#39;s the mature one (again, the bar was set
pretty low). I joke that he has the reputation for being the mean one
because his first day at Stuy he said something that scared some of
his students. Definitely more together and organized than the rest of
us I tried to convince him to join our team for three or four years
before he finally came over.
&lt;/p&gt;

&lt;p&gt;
Just to be sure no one misreads my comments on Sam. I&#39;ve trusted him
with my son&#39;s CS education. I think that should tell you how much I
think of him.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4-0-4&#34; class=&#34;outline-4&#34;&gt;
&lt;h4 id=&#34;sec-4-0-4&#34;&gt;Yulia Genkina&lt;/h4&gt;
&lt;div class=&#34;outline-text-4&#34; id=&#34;text-4-0-4&#34;&gt;
&lt;p&gt;
Yulia&#39;s the new kid on the block. We all went in feeling very positive
about having her on the team. At least until she tried to off all of
us on Pirate Day.
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img height=&#34;150px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-crew/dw.jpg&#34;&gt;
&lt;figcaption&gt;Yulia trying to off JonAlf&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img height=&#34;150px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-crew/sam.jpg&#34;&gt;
&lt;figcaption&gt;Sam&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;
&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img height=&#34;150px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-crew/topher.jpg&#34;&gt;
&lt;figcaption&gt;Topher&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img height=&#34;150px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-crew/z.jpg&#34;&gt;
&lt;figcaption&gt;and me&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Seriously though, she fits right in and is also a real talent.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-5&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-5&#34;&gt;
&lt;p&gt;
That&#39;s the crew. I&#39;m amazingly proud of all of them and one of the
things I was most happy about my role in SHIP was that I was able to
empower them to be themselves and just do their thing. When you have
a great crew that&#39;s how you do it.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a SHIP - Our partner - St. Joseph&#39;s College</title>
      <link>https://cestlaz.github.io/posts/2014-08-08-ship-partners/</link>
      <pubDate>Fri, 08 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-08-08-ship-partners/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
From the day we filed the paperwork to create CSTUY, we knew we wanted
to run a summer program. In fact, we started looking for a space
during the 2012/2013 school year. We were hoping to run SHIP for the
first time in the summer of 2013 but we all knew it wasn&#39;t really a
realistic goal.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
Our original plans required at least one classroom sized space, and up
to three for full days for a month. We figured this would be a hard
sell for a tech company, after all, what company is going to take a
room, let alone three, off line for half the summer.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
So, we turned to institutions of higher learning. I started talking to friends at a CS
program in one of our city&#39;s colleges. They loved the idea of hosting
a CSTUY program. Problem was that once the plans went up through the
college channels, the administrative side wasn&#39;t as hot to host
us. While the CS people really wanted us, the administrative side was
perfectly willing to give us space as long as we paid an amount that
really was much more than we could afford. To be honest, this really
irritated me. Here we have a supposedly non-profit college that&#39;s
supposed to support the community and the public good nickle and
diming another non profit that really is trying to do some good.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
We ended up speaking to a number of educational institutions across
the city and the situation was the same. Sure you can have space. Here
are our rates&amp;#x2026;..
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-5&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-5&#34;&gt;
&lt;p&gt;
Now, you might wonder, why not just use high school space? Because it
was important to be hosted at what should be the &#34;next level&#34; for the
participants.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-6&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-6&#34;&gt;
&lt;p&gt;
In the mean time, I met &lt;a href=&#34;http://www.sjcny.edu/FacultyExperts/124&#34;&gt;Bill McAllister&lt;/a&gt;, CS Professor at St. Joseph&#39;s
College on Long Island. He hosts a terrific annual high school
&lt;a href=&#34;http://faculty.sjcny.edu/~ProgrammingCompetition/&#34;&gt;programming competition&lt;/a&gt;. Bill referred me to David Seppala-Holtzman
the Math and CS Chair at the Brooklyn Campus.
&lt;/p&gt;

&lt;p&gt;
David and I clicked and one thing led to another and in the end,
having overlapping visions and goals, St. Joseph&#39;s College in Brooklyn
decided to host us.
&lt;/p&gt;

&lt;p&gt;
I couldn&#39;t ask for a better partner. They provided us with all the
facilities we needed from rooms for the classes, to lounge space, to
access to the cafeteria (and got us a great rate on food to boot).
&lt;/p&gt;

&lt;p&gt;
The whole St. Joseph&#39;s family made everything so easy for us. At one
point one of our instructors commented &#34;wow, this is such a friendly
campus.&#34;
&lt;/p&gt;

&lt;p&gt;
Without the help and support of St. Joseph&#39;s college, SHIP doesn&#39;t
happen. It was a great partnership and we&#39;re looking forward to
working together on SHIP 2.0 next year.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a SHIP - Outcomes</title>
      <link>https://cestlaz.github.io/posts/2014-08-05-ship-outcomes/</link>
      <pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-08-05-ship-outcomes/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
SHIP ended last week. So, how did we do? Time to look at outcomes.
&lt;/p&gt;

&lt;p&gt;
Outcomes can be tricky. There are lots of programs out there and they
all claim amazing results. Unfortunately, it seems to me, that
everyone&#39;s so concerned with good PR that, well, you know, lies,
damned lies, statistics.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
First you&#39;ve got claims like &#34;learn how to make a mobile app in under
n weeks.&#34; I always chuckle at this. If it was that easy, why do we
have a tech talent shortage? I&#39;m immediately skeptical of any program
that claims that kids go from nothing to making full featured web
apps or some amazing professional quality game in just a few
weeks. Learning takes time. The only way you get these miracle results
is by using frameworks, simplified tools, or scaffolding of some
kind. True learning, retention, and the ability to transfer knowledge
is minimal.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Then we have assorted stats. Here&#39;s one of my favorites.
&lt;/p&gt;

&lt;p&gt;
Our students outperform other students who take APCS. We see this from
screened programs. Now, I have no problem with screening &amp;#x2013; we do this
at CSTUY, just don&#39;t imply that you&#39;re just taking everyone who
applies. If you have an application or an interview, you&#39;re screening
and starting ahead of the game. Since kids have to elect to come to
our programs they certainly have a good deal of interest. So, what
this claim is really saying is that a kid who likes CS enough to spend
their summers and or after school time doing it is likely to do better
than a kid who isn&#39;t going to spend this time doing CS. Big surprise.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
So, how do we measure our outcomes.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-5&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-5&#34;&gt;
&lt;p&gt;
We can start with the work the
shipmates did. We use processing and the shipmates learned from the
ground up. That is, they wrote everything from scratch. Some of the
groups taught themselves how to use processing libraries if they
needed facilities like a web API or accessing a camera, but since they
built everything up from simple statements, if they successfully
completed good projects, we could be pretty sure they&#39;ve moved from
neophytes to programmers.
&lt;/p&gt;

&lt;p&gt;
The projects were terrific
&lt;/p&gt;

&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-outcomes/pacinvaders.png&#34;&gt;
&lt;figcaption&gt;PacInvaders by Sam, Margaret, and Ryan&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-outcomes/iphone.png&#34;&gt;
&lt;figcaption&gt;IPhone simulator by Aminata, Sabrina, and Soraya&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;

&lt;p&gt;
The screen shots are just two samples but all the shipmates put
together great projects and since we used real tools, the shipmates
are well prepared for their next courses be they with us, in school,
or elsewhere.
&lt;/p&gt;

&lt;p&gt;
The Stewards also completed projects. I talked a bit about them in my
&lt;a href=&#34;http://cestlaz.github.io/2014/07/30/ship-demo-day-tomorrow.html#.U-Frpx_GyzU&#34;&gt;previous post&lt;/a&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-sec-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-6&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-6&#34;&gt;
&lt;p&gt;
We also looked at surveys. We did ask some of the soft questions that
I alluded to above. Are you more likely to explore CS after SHIP?
How has SHIP influenced your opinion of CS and Tech? The answer to
the first was an overwhelming yes and the second was also
overwhelmingly positive.
&lt;/p&gt;

&lt;p&gt;
The money questions though, were did they want to come back for a
Saturday program and one next summer. Other than the shipmates that
lived too far away, again, the vast majority want to return.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-7&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-7&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-7&#34;&gt;
&lt;p&gt;
Combine the programs they made and the fact that they want to come
back with great unsolicited feedback from parents and the shipmates
themselves and I think we can say that SHIP was a tremendous success.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-8&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-8&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-8&#34;&gt;
&lt;p&gt;
Now we have to figure out how to raise the funds for the Saturday
program and next summer.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Can&#39;t wait for CSTUY SHIP Demo day tomorrow</title>
      <link>https://cestlaz.github.io/posts/2014-07-30-ship-demo-day-tomorrow/</link>
      <pubDate>Wed, 30 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-07-30-ship-demo-day-tomorrow/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;figure&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-demo-day-tomorrow/mirandia.jpg&#34;&gt;
&lt;figcaption&gt;Miranda and Nadia showing off their project&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Tomorrow is the last day of SHIP and we&#39;ll be capping the whole thing
off with a day of demos, science fair style.
&lt;/p&gt;

&lt;p&gt;
Both the shipmates and the stewards will be showing off their work and
I can&#39;t wait. I&#39;ve intentionally stayed away from the shipmates
because I want to be surprised but I&#39;ve seen what the stewards have
been doing and I can&#39;t tell you how proud I am of their work. I was
going to say amazed, but actually, I&#39;m not amazed at all &amp;#x2013; I know
they&#39;re all awesome.
&lt;/p&gt;

&lt;p&gt;
I&#39;ll put up pictures, descriptions and hopefully video after the event
but here&#39;s a quick summary of what they&#39;ve done:
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;3d network augmented reality pong&lt;/b&gt;&lt;/b&gt; -
A 3d depth perception networked pong that you play using your hand as
*the paddle. The program uses the camera and blob recognition to
control the game.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Augmented Reality Board Game&lt;/b&gt;&lt;/b&gt; -
It started with the stewards taking a picture of a maze and then
having their program solve it but it evolved into a game. The computer
continually takes a picture of the board and plays against a human
opponent who makes moves on the physical board.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Painting identifier&lt;/b&gt;&lt;/b&gt; (pictured above) -
Take a picture of a painting and the program will try to identify it.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Seam Carving Image editor&lt;/b&gt;&lt;/b&gt; -
Look it up on youtube - it&#39;s really neat.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;Photo Booth&lt;/b&gt;&lt;/b&gt; -
A little more cut and dry than the above but one of the instructors
has a wedding coming up and so we needed to build the photo booth.
&lt;/p&gt;

&lt;p&gt;
All these projects are awesome and what&#39;s more they&#39;re all done from
scratch. Early on Gerry was visiting and commented on an early version
of the pong game. He said &#34;they&#39;re writing their own blob detection,
right?&#34; Of course. They can use libraries later. Now it&#39;s about
learning neat things.
&lt;/p&gt;

&lt;p&gt;
I can&#39;t wait to see the stewards show these off tomorrow and also to
see the shipmates projects.
&lt;/p&gt;

&lt;p&gt;
On a side note, I&#39;ve started to go through the comments the shipmates
have been writing down about the program - they just confirm what I
already knew - I&#39;m lucky to be working with the best group of
educators out there.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a SHIP - Toolset</title>
      <link>https://cestlaz.github.io/posts/2014-07-28-ship-toolset/</link>
      <pubDate>Mon, 28 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-07-28-ship-toolset/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
We&#39;re almost at the end of CSTUY SHIP&#39;s first journey. The Shipmates
and stewards will be showing off their work in another day or so and
I&#39;m excited to see their finished projects.
&lt;/p&gt;

&lt;p&gt;
But what toolset are they using.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
With knew we would be working with two rooms of relative beginners. We
needed something that allowed us to develop the shipmates CS skills
while also having a low cost of entry. At the same time, we had to
use an environment that our Stewards would be comfortable with as they
would be both supporting the shipmates and developing their own projects.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Those of you that know me know that I&#39;m &lt;b&gt;&lt;b&gt;not&lt;/b&gt;&lt;/b&gt; a fan of drag and drop
languages. I&#39;ve looked at them time and again. I even made a concerted
effort while exploring a version of the new proposed AP course earlier
this year &lt;sup&gt;&lt;a id=&#34;fnr.1&#34; name=&#34;fnr.1&#34; class=&#34;footref&#34; href=&#34;#fn.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Languages such as scratch require almost no ramp up
but for kids that are old enough for a traditional text based language
I&#39;ve found the following:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;After a short time, my students find DnD languages restrictive and
slow. They can get more done more quickly by typing.
&lt;/li&gt;
&lt;li&gt;Many kids work on laptops with small screens. Small screens and DnD
languages are not a good match.
&lt;/li&gt;
&lt;li&gt;It&#39;s much easier to look things up in a text based language.
&lt;/li&gt;
&lt;li&gt;I&#39;m not convinced that starting with a DnD is in any way better
prepares a student for a text based language.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Bottom line, I&#39;ve had to rescue a number of kids who were turned off
by the &#34;toy&#34; factor of languages like scratch and appinventor.
&lt;/p&gt;

&lt;p&gt;
DnD languages are probably fine for younger kids who are experimenting
and playing around but for my kids, I want something more real.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;The contenders:&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;/div&gt;&lt;div id=&#34;outline-container-sec-4-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-4-1&#34;&gt;&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-4-1&#34;&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;Python&lt;/b&gt;&lt;/b&gt; - I&#39;m a big python fan. It&#39;s one of my go to languages. Low
cost of entry and very flexible.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-4-2&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-4-2&#34;&gt;&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-4-2&#34;&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;Scheme&lt;/b&gt;&lt;/b&gt; - I love functional. It&#39;s simple, but it&#39;s a harder sell
for parents and while in school, it&#39;s ok to take a few days to ramp
up to get to the fun stuff, in a summer program, a delay in fun can
be deadly.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-4-3&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-4-3&#34;&gt;&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-4-3&#34;&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;Javascript / web based&lt;/b&gt;&lt;/b&gt; - I also really like Javascript but the
development environments are pretty lousy and it&#39;s almost &#34;C like&#34; in
the number of hidden problems for newbies.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-4-4&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-4-4&#34;&gt;&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-4-4&#34;&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;Java&lt;/b&gt;&lt;/b&gt; - I&#39;m not really a fan of the language but it is pretty
straightforward and it is the language of the AP exam. I&#39;m not a fan
of AP but as we&#39;re trying to build a program from the ground up, it
doesn&#39;t hurt to be able to say &#34;this will prepare you for APCS.&#34;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-5&#34;&gt;The winner:&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-5&#34;&gt;
&lt;p&gt;
So what did we use? &lt;a href=&#34;http://processing.org&#34;&gt;Processing&lt;/a&gt;. Processing is a wrapper and IDE around
Java. It&#39;s really simple to get started with and it makes all sorts of
graphics work very easy. Here&#39;s a simple processing program that
creates a circle wherever you click the mouse:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #228b22;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;setup&lt;/span&gt;() {
size(400,400);
}

&lt;span style=&#34;color: #228b22;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;mouseClicked&lt;/span&gt;() {
fill(color(random(255),random(255),random(255)));
ellipse(mouseX,mouseY,20,20);
}

&lt;span style=&#34;color: #228b22;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;draw&lt;/span&gt;() {

}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
That&#39;s it. No &lt;b&gt;&lt;b&gt;public static void main&amp;#x2026;&lt;/b&gt;&lt;/b&gt; or anything like that, but
it&#39;s legit Java, has types and classes plus:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;great online documentation.
&lt;/li&gt;
&lt;li&gt;it&#39;s used to interface with arduino.
&lt;/li&gt;
&lt;li&gt;it has libraries for web cams, music, internet APIs, and more.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
By using something like processing, the shipmates learn a real
language with sufficient depth to do something real and there&#39;s also
enough of an online community so that they can continue to work on
their own if they can&#39;t avail themselves of our future programs.
&lt;/p&gt;

&lt;p&gt;
While we were convinced that processing was the right choice for the
shipmates. I wasn&#39;t 100% sold on it as the best choice for the
stewards. Python would probably have been better for them but most of
them will be doing advanced Python (as well as Javascript) in their
classes in the fall and I didn&#39;t want to teach them something now and
reteach it to them in another month. On the other hand, they all
already knew Java and there was still plenty of neat things for them
to explore with processing. In the end, I think we made the right choice.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;h2 class=&#34;footnotes&#34;&gt;Footnotes: &lt;/h2&gt;
&lt;div id=&#34;text-footnotes&#34;&gt;

&lt;div class=&#34;footdef&#34;&gt;&lt;sup&gt;&lt;a id=&#34;fn.1&#34; name=&#34;fn.1&#34; class=&#34;footnum&#34; href=&#34;#fnr.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class=&#34;footpara&#34;&gt;
After going through the curriculum and scratch in depth, I
concluded that the intro course I designed and my team has evolved
over the past ten years is a stronger and more appropriate course for
our students.
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a SHIP - Outreach</title>
      <link>https://cestlaz.github.io/posts/2014-07-20-ship-outreach/</link>
      <pubDate>Sun, 20 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-07-20-ship-outreach/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;



&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
We&#39;ve got a few more topics to cover in the &lt;b&gt;&lt;b&gt;Building a SHIP&lt;/b&gt;&lt;/b&gt;
series. We still have to cover:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;The Crew
&lt;/li&gt;
&lt;li&gt;Curricular Choices
&lt;/li&gt;
&lt;li&gt;The long term plan
&lt;/li&gt;
&lt;li&gt;Site and funding
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
But for today, we&#39;ll talk outreach.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
Outreach proved to be particular challenge for SHIP. Our entire crew
is made up of teachers. That meant that we couldn&#39;t communicate with
schools during business hours. That made things particularly tough.  I
could send emails after hours or set up emails to be sent at specific
times during the day, but we couldn&#39;t call while at our day jobs. As a
result, this led to a vary long communication loop and we could never
be sure that information about SHIP was getting to the right people.
&lt;/p&gt;

&lt;p&gt;
We did have a small number of non-teacher volunteers and they were
invaluable but they had limited knowledge from the teaching side.
&lt;/p&gt;

&lt;p&gt;
So, we had the volunteers try to call schools during the day and we
followed up by emailing a flyer and link to a web site. We tried to
emphasize that we needed help from the schools in finding the right
students &amp;#x2013; that is students who might not have even considered
something like SHIP but where we could potentially turn them on to
something new.
&lt;/p&gt;

&lt;p&gt;
In spite of this, we did get over 200 applicants for our 48 slots. I
have no idea how this compares to similar programs.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-4&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-4&#34;&gt;
&lt;p&gt;
There were many terrific applications, but there were some head
scratching situations. There were some incomplete applications which I
attribute to students who weren&#39;t really interested in the program,
but I was surprised by two things on the student side.
&lt;/p&gt;

&lt;p&gt;
First, sme times we needed a little more information from a student so we
sent an email to the addresses (primary and backup) that they listed
in the application. Some times students got right back to us. Other
times it took days or even weeks. In one case, we weren&#39;t able to
accept the student because he didn&#39;t get back to us until after the
selection process was over. I know that not everyone reads or responds
to emails promptly but I was surprised since these were cases of
students who wanted to partake in our program.
&lt;/p&gt;

&lt;p&gt;
Another thing that surprised me is that we almost lost a couple of
students because they thought the program would cost too much. We
tried to make it as clear as possible that we offered financial
assistance and in many cases could cover all fees but apparently we
weren&#39;t as clear as I had hoped.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-container-sec-5&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-5&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-5&#34;&gt;
&lt;p&gt;
The one &lt;b&gt;&lt;b&gt;really big&lt;/b&gt;&lt;/b&gt; shock to me involved
recommendations. We required our applicants provide one email
address for someone that agreed to write a recommendation letter and
allowed for a second, optional one. We then contacted these
recomenders. If we didn&#39;t hear back, we sent reminder emails and asked
the applicants to prod the recommenders as well.
&lt;/p&gt;

&lt;p&gt;
We had a return rate of about 10%. This cut across type of school
(public, private, parochial, and charter) and grade (rising 9 through
12). As a teacher myself, I know of some colleagues who don&#39;t actually
write recs they agree to write but I was shocked that we only heard
back from 10%. The end result was that we could use a recommendation
to help an applicant but we didn&#39;t feel that it was fair to penalize a
student just because a teacher didn&#39;t send in a rec.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-6&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-6&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-6&#34;&gt;
&lt;p&gt;
As a final though on outreach, it should get easier for us over
time. SHIP is going great and next year, we&#39;ll be a known quantity to
schools. We should also have our cadre of shipmates helping spread the
word and of course, we want them back for another summer of more
advanced work.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a SHIP - Guest Stars</title>
      <link>https://cestlaz.github.io/posts/2014-07-17-ship-guests/</link>
      <pubDate>Thu, 17 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-07-17-ship-guests/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;figure&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship_guests/cynthia.jpg&#34;&gt;
&lt;figcaption&gt;Cynthia Koo talking about UX&lt;/figcaption&gt;
&lt;/figure&gt;


&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Much like the Love Boat had every week, at CSTUY SHIP, we too have our
guest stars.
&lt;/p&gt;

&lt;p&gt;
On the one hand, it&#39;s important to have a focused program that leaves
the shipmates empowered to continue their CS studies on their
own. That means the shipmates have to explore something with
sufficient depth so that the learning sticks. It also means there has
to be sufficient depth for the shipmates to continue their voyages
after our month together has ended.
&lt;/p&gt;

&lt;p&gt;
On the other hand, we want to present the big picture as well. There
are a lot of interesting things in computer science and technology
that we really can&#39;t get to in just a few weeks. Certainly not if we
want to do justice to those topics.
&lt;/p&gt;

&lt;p&gt;
Having one off lectures helps. This way, our shipmates are exposed to
a wide array of voices and ideas.
&lt;/p&gt;

&lt;p&gt;
Of course, scheduling the right speakers at the right time can be a challenge.
Too technical too early can be a turn off. So can too simple.
&lt;/p&gt;

&lt;p&gt;
We&#39;re lucky enough to have some amazing guest stars on our ship. We
started with a great talk on UX by &lt;a href=&#34;http://www.cynthiakoo.com/blog/&#34;&gt;Cynthia Koo&lt;/a&gt;. UX is something I wish
kids were more exposed to and I think it was great that Cynthia was
able to talk to the shipmates about it before they embark on their own
projects. If we set the seeds early and have user experience in the
back of the shipmates heads before they start building things, I
suspect that the end results will show it.
&lt;/p&gt;

&lt;p&gt;
Cynthia talked about user needs and business needs and used looked at
Instagram and Snapchat as case studies.
&lt;/p&gt;

&lt;p&gt;
The talk got the shipmates thinking about apps in a way they had never
considered before.
&lt;/p&gt;

&lt;figure&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship_guests/edgar.jpg&#34;&gt;
&lt;figcaption&gt;Edgar talking about all sorts of opportunities in tech&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;
Today we had our second guest star. Edgar Troudt. Edgar talked about
innovation, disruption, crowd consumption and more.
&lt;/p&gt;

&lt;p&gt;
Later on, we&#39;ll drill down with more technical talks.
&lt;/p&gt;

&lt;p&gt;
For now, though, these talks were meant to give a broader view and to
inspire. I think they did.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Building a SHIP - the Stewards</title>
      <link>https://cestlaz.github.io/posts/2014-07-10-ship-tas/</link>
      <pubDate>Thu, 10 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-07-10-ship-tas/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
div.left {text-align:left; padding:20px;}
div.right {text-align:right;padding:20px;}
&lt;/style&gt;

&lt;p&gt;
The Stewards:
&lt;/p&gt;

&lt;p style=&#34;float:left&#34;&gt;
&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-tas/bb.jpg&#34;&gt;
&lt;figcaption&gt;In size order.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure style=&#34;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-tas/fawn.jpg&#34;&gt;
&lt;figcaption&gt;And from the other side&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;

&lt;figure style=&#34;float:left;padding:20px;width:100%&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-tas/stewards.jpg&#34;&gt;
&lt;figcaption&gt;Ok, seriously - here they are.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
I thought I&#39;d share some thoughts on how we designed SHIP. I&#39;ll try to
talk about curriculum choices, tools and more in the coming week but
first, let&#39;s talk about our stewards.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;p&gt;
When we first designed SHIP, we knew we wanted to run two rooms each
with around 24 shipmates and two teachers. We also figured that we&#39;d want a
few of student teaching assistants, which I decided to name
Stewards - Natan wanted to call them Tars in tribute to the British
Navy, but he was outvoted.
&lt;/p&gt;

&lt;p&gt;
We had some questions:
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;what do we do with them when they&#39;re not working with the shipmates
&lt;/li&gt;
&lt;li&gt;how old should they be
&lt;/li&gt;
&lt;li&gt;what should they know
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-3&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-3&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-3&#34;&gt;
&lt;p&gt;
We knew that we&#39;d be using &lt;a href=&#34;http://processing.org&#34;&gt;Processing&lt;/a&gt; as our development environment
for the shipmates &lt;sup&gt;&lt;a id=&#34;fnr.1&#34; name=&#34;fnr.1&#34; class=&#34;footref&#34; href=&#34;#fn.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; so we wanted the Stewards to know Java. We
also knew that when the shipmates worked on their group projects we&#39;d
want to have one Steward mentor each group. That meant at least 12
Stewards. We went with 14. We also decided that we&#39;d take kids that just
finished our AP CS classes at Stuyvesant since they were already well
versed in our lunacy and would help seed the culture we&#39;re looking to
grow.
&lt;/p&gt;

&lt;p&gt;
What to do with them when they weren&#39;t working with the shipmates?
&lt;/p&gt;

&lt;p&gt;
Most of the stewards will be in my SoftDev class come the fall so I
didn&#39;t want to just teach them that material
&lt;/p&gt;

&lt;p&gt;
How about shepherding them through some advanced projects using the
tools that the shipmates would be using.
&lt;/p&gt;

&lt;p&gt;
So, we had a plan. We&#39;d have the stewards work in small groups on
interesting projects when they  weren&#39;t working with the shipmates.
&lt;/p&gt;

&lt;p&gt;
How has it gone so far? Pretty well I think.
&lt;/p&gt;

&lt;p&gt;
I first asked them to figure out how to work with the webcam and
images in processing &amp;#x2013; at this point they can figure things out like
that on their own.
&lt;/p&gt;

&lt;p&gt;
We then talked about edge detection and they coded it up. This also
proved to be a nice demo for the shipmates.
&lt;/p&gt;


&lt;figure style=&#34;float:left;padding:20px&#34;&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/ship-tas/leslie.jpg&#34;&gt;
&lt;figcaption&gt;Leslie demoing for the shipmates&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p style=&#34;clear:both&#34;&gt;&lt;/p&gt;

&lt;p&gt;
After that I asked them to come up with their own algorithms for blob
detection. They came up with some interesting solutions after which I
let them look up techniques on line.
&lt;/p&gt;

&lt;p&gt;
Why the image processing work? Many of the projects they want to work on are going to need to do image processing.
&lt;/p&gt;

&lt;p&gt;
Now they&#39;re hammering out project proposals and getting to work. So
far I&#39;m happy with what they&#39;re doing and delighted with the support
their giving the shipmates.
&lt;/p&gt;

&lt;p&gt;
I don&#39;t know if other programs have teaching assistants and how they
use them but I&#39;m pretty happy with our arrangement.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;h2 class=&#34;footnotes&#34;&gt;Footnotes: &lt;/h2&gt;
&lt;div id=&#34;text-footnotes&#34;&gt;

&lt;div class=&#34;footdef&#34;&gt;&lt;sup&gt;&lt;a id=&#34;fn.1&#34; name=&#34;fn.1&#34; class=&#34;footnum&#34; href=&#34;#fnr.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class=&#34;footpara&#34;&gt;
Subject of a later post.
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Spreadsheet? I&#39;d rather use the command line.</title>
      <link>https://cestlaz.github.io/posts/2014-07-06-spreadsheet-vs-cli/</link>
      <pubDate>Sun, 06 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-07-06-spreadsheet-vs-cli/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Spreadsheets are terrific - we&#39;ve all used them. I particularly like
Google spreadsheets - I use them all the time to collect data, usually
from students.
&lt;/p&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;Go to Google Drive
&lt;/li&gt;
&lt;li&gt;Make a form
&lt;/li&gt;
&lt;li&gt;Send the form out to the students
&lt;/li&gt;
&lt;li&gt;Wait
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
All the data gets dumped into a Google spreadsheet. The trouble is,
what to do with it once it&#39;s in the spreadsheet.
&lt;/p&gt;

&lt;p&gt;
The other day, I wrote on a few basic stats for our upcoming SHIP
program. The data I reported on was all collected in a spreadsheet. I
also collected participant and parent emails in the spreadsheet.
&lt;/p&gt;

&lt;p&gt;
So, here&#39;s the task, compute some simple numbers form the spreadsheet
and also extract and use the email addresses.
&lt;/p&gt;

&lt;p&gt;
I&#39;m sure one could use some fancy spreadsheet magic to get the job
done, but I&#39;m a command line wonk &amp;#x2013; here&#39;s how I take care of tasks
like these.
&lt;/p&gt;

&lt;p&gt;
First, I downloaded the spreadsheet as a csv (comma separated value)
file. Each line looked something like this:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-csv&#34;&gt;last,first,email,address,gender,grade,school,...
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
First question, how many applicants did we have:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-sh&#34;&gt;cat cstuy.csv | wc -l
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Which gave:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
47
&lt;/pre&gt;



&lt;p&gt;
The |, or pipe means take the output of the first command and send it
to the  next one. &lt;b&gt;Cat&lt;/b&gt; just outputs the original file and &lt;b&gt;wc -l&lt;/b&gt; counts all
the lines in the file.
&lt;/p&gt;

&lt;p&gt;
Next, how many young ladies:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-sh&#34;&gt;cat cstuy.csv | grep female | wc -l
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
The results:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
17
&lt;/pre&gt;

&lt;p&gt;
How many schools? Well, that&#39;s a little trickier. Here, I use a few
extra commands:
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-2&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-2&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-2&#34;&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;cut - this will cut out one column from the csv file - in this case
the school column (the -d, says use a comma as delimiter and -f7 for
field 7).
&lt;/li&gt;
&lt;li&gt;sort - takes the lines and sorts them.
&lt;/li&gt;
&lt;li&gt;uniq - eliminates duplicate lines in a sorted file
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Putting it all together:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-sh&#34;&gt;cat cstuy.csv | cut -d, -f7 | sort | uniq | wc -l
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Results:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
30
&lt;/pre&gt;


&lt;p&gt;
Thirty different schools.
&lt;/p&gt;

&lt;p&gt;
Finally I needed the emails - here I wanted to be able to paste them
into Gmail&#39;s bcc field. I could have just used &lt;b&gt;cat&lt;/b&gt; and &lt;b&gt;cut&lt;/b&gt; and
then used the mouse, but instead:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-sh&#34;&gt;cat cstuy.csv | cut -d, -f3 | xclip -sel clip
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Then I can just do a Ctrl-v in Gmail and I&#39;m good to go.
&lt;/p&gt;

&lt;p&gt;
The cool thing is that the tools here - cut, sort, uniq, grep  - are
all general purpose tools that do simple text manipulations. Once you
know them and a few others, you can really quickly and efficiently do
all sorts of data processing without even thinking about it. I still
go to the spreadsheet for data collection ad also for when I need more
hardcore formulas but for day to day manipulations, I&#39;ll take the
command line.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Preparing to launch SHIP</title>
      <link>https://cestlaz.github.io/posts/2014-07-03-launching-ship/</link>
      <pubDate>Thu, 03 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-07-03-launching-ship/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;figure&gt;
&lt;img height=&#34;300px&#34; &#34; src=&#34;https://cestlaz.github.io/img/launch_ship/tas.jpg&#34;&gt;

&lt;figcaption&gt;Some of our Ship Stewards (TAs) planning day one. &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;
What&#39;s been happening since the close of the school year? We&#39;ve been
getting ready to start &lt;a href=&#34;http://cestlaz.github.io/2014/04/07/ship-announce.html&#34;&gt;SHIP&lt;/a&gt; - CSTUY&#39;s first summer program.
&lt;/p&gt;

&lt;p&gt;
SHIP will be running starting this Monday through the end of July and
should be a great adventure.
&lt;/p&gt;

&lt;div id=&#34;outline-container-sec-0-1&#34; class=&#34;outline-3&#34;&gt;
&lt;h3 id=&#34;sec-0-1&#34;&gt;Fast facts:&lt;/h3&gt;
&lt;div class=&#34;outline-text-3&#34; id=&#34;text-0-1&#34;&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;We have 47 students and 14 student teaching assistants (stewards)
&lt;/li&gt;
&lt;li&gt;We have 4 amazing teachers, 1 mentor for the TAs, me, and one official
program mom.
&lt;/li&gt;
&lt;li&gt;Most of the shipmates claim little or no programming experience.
&lt;/li&gt;
&lt;li&gt;Our students come from 30 different schools. Mostly NYC but a few from beyond.
&lt;/li&gt;
&lt;li&gt;36% of our shipmates are girls
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Yesterday the team spent the morning at St. Joseph&#39;s College setting
up the rooms.
&lt;/p&gt;

&lt;p&gt;
Now all we have to do is wait for Monday morning to roll around.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>An old tradition reborn</title>
      <link>https://cestlaz.github.io/posts/2014-06-25-joesshanghai/</link>
      <pubDate>Wed, 25 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-06-25-joesshanghai/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Yesterday, some of the seniors from the 301 crowd along with a few
teachers had an end of year dinner at Joe&#39;s Shanghai.
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/joesshanghai/restaurant.jpg&#34; alt=&#34;restaurant.jpg&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
While it&#39;s Famous for its soup dumplings:
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/joesshanghai/dumplings.jpg&#34; alt=&#34;dumplings.jpg&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
I&#39;m partial to the braised pork shoulder:
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/joesshanghai/pork.jpg&#34; alt=&#34;pork.jpg&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
We haven&#39;t had a 301 dinner in a long time, but I remember the crew,
first unnamed, then using the moniker &#34;the Z-team&#34; used to go their all
them time.
&lt;/p&gt;

&lt;p&gt;
It was always Joe&#39;s Shanghai, followed by a trip to the Chinatown Ice
Cream Factory:
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/joesshanghai/icecream.jpg&#34; alt=&#34;icecream.jpg&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
and then the obligatory photo in front of the Mei Dick Barbershop at
37 Mott St (now gone):
&lt;/p&gt;


&lt;div class=&#34;figure&#34;&gt;
&lt;p&gt;&lt;img src=&#34;http:/img/joesshanghai/meidick.jpg&#34; alt=&#34;meidick.jpg&#34; /&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
The 301 crew, or Z-team as it&#39;s some times been called are the
students that spend their time in the CS room at Stuy. It&#39;s one of the
few rooms where students and teachers co-exist in harmony. Some times
we have to kick the kids out when we&#39;re doing things like working on
exams, but basically, it&#39;s a shared space. They work with us on
projects and we help them with theirs. It&#39;s a unique community - at
least within Stuyvesant.
&lt;/p&gt;

&lt;p&gt;
Back in 1995 it was Yu Ping, Josh, Bruce, Winnie, Amit and others. Later it
was Paul, Emily, Orian, and Sam to name a few. Sam of course now, is
back teaching with us. We didn&#39;t go with the seniors for the last few
years. I&#39;m not sure why. It was a great way to end the school year.
&lt;/p&gt;

&lt;p&gt;
I remember one time getting an earful from a colleague the day after
such a dinner because I decided that I would rather spend the evening
with my students than take extra pay to grade regents. I didn&#39;t really care.
&lt;/p&gt;


&lt;p&gt;
We&#39;ve had a few reunion dinners there over the years as well, but
always pretty small scale.
&lt;/p&gt;

&lt;p&gt;
Maybe we should try to get a whole bunch of alums together and take
over the whole place for an evening &lt;sup&gt;&lt;a id=&#34;fnr.1&#34; name=&#34;fnr.1&#34; class=&#34;footref&#34; href=&#34;#fn.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;/p&gt;
&lt;div id=&#34;footnotes&#34;&gt;
&lt;h2 class=&#34;footnotes&#34;&gt;Footnotes: &lt;/h2&gt;
&lt;div id=&#34;text-footnotes&#34;&gt;

&lt;div class=&#34;footdef&#34;&gt;&lt;sup&gt;&lt;a id=&#34;fn.1&#34; name=&#34;fn.1&#34; class=&#34;footnum&#34; href=&#34;#fnr.1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;p class=&#34;footpara&#34;&gt;
In case you&#39;re wondering why none of the pictures are of the
301 crew, it&#39;s because I never had this group sign photo releases.
&lt;/p&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Student Projects 2014 - Let&#39;s go to the video tape</title>
      <link>https://cestlaz.github.io/posts/2014-06-23-softdev-videos-2014/</link>
      <pubDate>Mon, 23 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-06-23-softdev-videos-2014/</guid>
      <description>&lt;!DOCTYPE html&gt;



&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Just completed the second time through for my Software Development
course. Last year we had a great time at our Demo Night hosted at
Google.
&lt;/p&gt;

&lt;p&gt;
This year, unfortunately, due to a variety of reasons, we couldn&#39;t get
the event together. Still, the kids did great work so I thought I&#39;d
share.
&lt;/p&gt;

&lt;p&gt;
This year, I asked each group to make a short video.
&lt;/p&gt;

&lt;p&gt;
First up, we&#39;ve got bit&amp;lt;&amp;lt;shift - a search engine for code. Nice idea
and a really slick interface.
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;iframe src=&#34;//player.vimeo.com/video/98697078&#34; width=&#34;500&#34; height=&#34;281&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href=&#34;http://vimeo.com/98697078&#34;&gt;bitshift: a source code search engine&lt;/a&gt; from &lt;a href=&#34;http://vimeo.com/ear&#34;&gt;Ben Kurtovic&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;
Next up, we&#39;ve got Socialpedia - our answer to Klout -
&lt;/p&gt;


&lt;div class=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/uhLZBsZWQGk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
And then Twitch Rock-em-Sock-em Robots -
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;//www.youtube.com/embed/Am3PTB_FvNs&#34; frameborder=&#34;0&#34;
allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;
There were a bunch of other neat projects including a site that
crowd-sources 311 trash related problems and a version of the game
&#34;Frozen Synapse&#34; where you can program your forces using an embedded
Lisp interpreter.
&lt;/p&gt;

&lt;p&gt;
Very cool stuff.
&lt;/p&gt;

&lt;p&gt;
Good job guys!!!!!
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What I love about StuyCS</title>
      <link>https://cestlaz.github.io/posts/2014-05-20-wolfram/</link>
      <pubDate>Tue, 20 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-05-20-wolfram/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
.pic {height:500px;width:500px;}
&lt;/style&gt;


&lt;p&gt;
One of the things I love about StuyCS is that we&#39;ve built a true Geek culture.
&lt;/p&gt;

&lt;p&gt;
Last week, we had a last minute visitor - &lt;a href=&#34;http://stephenwolfram.com&#34;&gt;Stephen Wolfram&lt;/a&gt;. Well known
for Mathematica and more importantly, Wolfram Alpha, without which
our students wouldn&#39;t be able to complete all their homework.
&lt;/p&gt;

&lt;p&gt;
The only problem was that we had about 24 hours from when the visit
was confirmed til the talk was to take place.
&lt;/p&gt;

&lt;p&gt;
It was a little rough, but we pulled it together - convinced the the
administration to let us use the auditorium, sent a letter out to the
teachers and in general get things ready.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve heard our auditorium holds anywhere between 400 and 800 students &amp;#x2013; the kids filled the place!!!
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt;
&lt;figure&gt;
&lt;img class=&#34;pic&#34; src=&#34;https://cestlaz.github.io/img/wolfram/wolfram.jpg&#34;&gt;
&lt;figcaption&gt;Image blurred intentionally&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;
Only at a place like Stuy.
&lt;/p&gt;

&lt;p&gt;
The talk was great talk and the kids followed up with terrific
questions. Dr. Wolfram spoke for about 40 minutes and then stayed to
answer questions for another 40. Had the auditorium not been booked
after school, I think he would have gone on for another hour.
&lt;/p&gt;

&lt;p&gt;
What I loved is here we have a Math/Science/CS guy, but to the  StuyCS students, he&#39;s a rock star.
&lt;/p&gt;

&lt;p&gt;
The next day I got comments like:
&lt;/p&gt;

&lt;p&gt;
&#34;That was amazing,&#34; &#34;I&#39;ve heard talks by brilliant people before, but
never a visionary,&#34; &#34;He&#39;s actually building the future,&#34; and &#34;that was
the best hour of my four years at Stuyvesant.&#34;
&lt;/p&gt;

&lt;p&gt;
All in all, it was well worth the craziness of putting it together at the last minute.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dream It, Code It, Win It</title>
      <link>https://cestlaz.github.io/posts/2014-05-01-dream-it/</link>
      <pubDate>Thu, 01 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-05-01-dream-it/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Last night, I attended the Dream It, Code It, Win It awards.
&lt;/p&gt;

&lt;p&gt;
I&#39;d actually write up the event but Fred Wilson&#39;s already done a
better job at that than I could:
&lt;a href=&#34;http://avc.com/2014/05/dream-it-and-code-it/&#34;&gt;http://avc.com/2014/05/dream-it-and-code-it/&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
As Fred stated on his blog, it&#39;s a real shame that the high schooler&#39;s
didn&#39;t get to show off their work but it was great to see that there
were entries from a variety of schools including The Academy for
Software Engineering and The Young Women&#39;s Leadership Academy.
&lt;/p&gt;

&lt;p&gt;
As part of the application process, the teams made short videos. Here
are three of the Stuy entries. I&#39;ll add the fourth once I get it.
&lt;/p&gt;

&lt;p&gt;
The first two were written by teams in our senior SoftDev class the
third by juniors currently in APCS using mostly what they learned in
the second half of our intro class.
&lt;/p&gt;

&lt;p&gt;
Enjoy.
&lt;/p&gt;


&lt;p&gt;
Cartwheels:
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/gJRik3aBxrI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;


&lt;p&gt;
Tour de City:
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/ztRGdRlzNYU&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
Fun Time Projects:
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/r4itvjf7UHY&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe
</description>
    </item>
    
    <item>
      <title>Twitch Coding</title>
      <link>https://cestlaz.github.io/posts/2014-04-10-twitch-coding/</link>
      <pubDate>Thu, 10 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-04-10-twitch-coding/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
We have the kids write programs in all sorts of ways
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;on paper
&lt;/li&gt;
&lt;li&gt;solo
&lt;/li&gt;
&lt;li&gt;informally in pairs
&lt;/li&gt;
&lt;li&gt;&#34;pair programming&#34;
&lt;/li&gt;
&lt;li&gt;We have them trade code, pick up each others projects, and more.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
We do lots of different things to engage the kids in a lot of
different ways and I love it when someone comes up with a new
technique.
&lt;/p&gt;


&lt;p&gt;
My friend, colleague, and incidentally, former student, Sam had such
an idea the other day. Sam started his teaching career at Francis
Lewis High School and it took us a while to convince him to join the
team, but he&#39;s been with us for about three years now and he&#39;s terrific.
&lt;/p&gt;

&lt;p&gt;
Sam&#39;s also our resident gamer so I guess I shouldn&#39;t have been
surprised when Sam said he was going to do &lt;a href=&#34;http://www.reddit.com/r/twitchplayspokemon/comments/1y94r8/the_history_of_twitch_plays_pokemon/&#34;&gt;Twitch Pokemon&lt;/a&gt; coding with
his classes. It sounded great.
&lt;/p&gt;

&lt;p&gt;
In Twitch Pokemen, users type moves into a chat window and a bot reads
the commands to control a Pokemon. Sam&#39;s idea was to apply it to a CS class.
&lt;/p&gt;

&lt;p&gt;
I loved the idea so I tried it in my classes.
&lt;/p&gt;

&lt;p&gt;
First cut, I did it with stacks. We had a basic design in mind and then we started the &#34;Twitch Coding.&#34;
&lt;/p&gt;

&lt;p&gt;
We went up and down the rows. When it was a students turn, they could
either add a word, line, or concept, delete one, or change one.
&lt;/p&gt;

&lt;p&gt;
So, for example, if the state of the code was:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;Node&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;top&lt;/span&gt;;

&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #93E0E3;&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color: #7CB8BB;&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;s&lt;/span&gt;) {
&lt;span style=&#34;color: #7CB8BB;&#34;&gt;Node&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;n&lt;/span&gt; = &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;Node&lt;/span&gt;(s);
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
a student could:
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;add n.setNext(top) to the push routine
&lt;/li&gt;
&lt;li&gt;change public to private in the declaration of top
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Or the somewhat lame
&lt;/p&gt;

&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;add a // above the push declaration line
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
or something else.
&lt;/p&gt;

&lt;p&gt;
If a student gets stuck, it&#39;s up to the class to &#34;go Price is Right&#34;
on them and give suggestions.
&lt;/p&gt;

&lt;p&gt;
It worked great in one class, forced in another, and somewhere in the
middle in the third. Overall, I was happy with the results.
&lt;/p&gt;


&lt;p&gt;
We tried it again today as we implemented a queue.
&lt;/p&gt;

&lt;p&gt;
This time, we prepped a little better and the results were better.
&lt;/p&gt;

&lt;p&gt;
The idea needs some fine tuning, but I think it&#39;s a fun and different
way to engage the class and I think we&#39;ll be playing with twitch
coding some more in the coming months.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Announcing SHIP</title>
      <link>https://cestlaz.github.io/posts/2014-04-07-ship-announce/</link>
      <pubDate>Mon, 07 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-04-07-ship-announce/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;p&gt;
It&#39;s been a while since my last post.
&lt;/p&gt;

&lt;p&gt;
That&#39;s mostly since I&#39;ve getting things ready for this announcement.
&lt;/p&gt;

&lt;p&gt;
I&#39;ve talked about our non-profit &lt;a href=&#34;http://cstuy.org&#34;&gt;CSTUY&lt;/a&gt; before. Well, we&#39;ve been hard
at work getting things together for our first summer program:
&lt;/p&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;SHIP - Summer Hackers Immersion Program&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
We&#39;re really excited about this - taking our years of experience
teaching kids at our schools and taking it to a wider audience.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;&lt;b&gt;SHIP&lt;/b&gt;&lt;/b&gt; is being hosted at St. Joseph&#39;s College in Brooklyn and runs from July 7th through July 31.
&lt;/p&gt;

&lt;p&gt;
So, if you know a rising 9th through 12th grader in or around New York City let them know about this great opportuity.
&lt;/p&gt;


&lt;p&gt;
Information can be found at &lt;a href=&#34;http://programs.cstuy.org/ship&#34;&gt;http://programs.cstuy.org/ship&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
And the application is here: &lt;a href=&#34;http://programs.cstuy.org/ship-apply&#34;&gt;http://programs.cstuy.org/ship-apply&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Information on our overall plan is here: &lt;a href=&#34;http://programs.cstuy.org/ship-outreach&#34;&gt;http://programs.cstuy.org/ship-outreach&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
We&#39;re also still raising funds for the program, so if you or someone you know can help, they can contact me or donate directly &lt;a href=&#34;http://cstuy.org/webform/donate&#34;&gt;here.&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Sorting - Subtle Errors</title>
      <link>https://cestlaz.github.io/posts/2014-03-17-subtle-errors-sorting/</link>
      <pubDate>Mon, 17 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-03-17-subtle-errors-sorting/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
Time to wrap up sorting for a while. We just finished quicksort
having gone through a series of lessons
&lt;/p&gt;
&lt;ul class=&#34;org-ul&#34;&gt;
&lt;li&gt;We started with &lt;a href=&#34;http://cestlaz.github.io/2014/03/12/select-to-sort.html#.UyJRTh_G8RM&#34;&gt;Quickselect&lt;/a&gt;.
&lt;/li&gt;
&lt;li&gt;Then we did a quicksort, copying to new arrays during the partition
&lt;/li&gt;
&lt;li&gt;Then finally to an in place quicksort.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
For the final quicksort we used a partition algorithm pretty much the
same as the one described &lt;a href=&#34;http://en.wikipedia.org/wiki/Quicksort&#34;&gt;here.&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
We started testing using by building a randomly filled array like this:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #7CB8BB;&#34;&gt;Random&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;rnd&lt;/span&gt; = &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;Random&lt;/span&gt;();
&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;a&lt;/span&gt;[] = &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt;[n];
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;i&lt;/span&gt;=0;i&amp;lt;&lt;span style=&#34;color: #7CB8BB;&#34;&gt;n&lt;/span&gt;;i++) {
a[i] = rnd.nextInt(100);
}
qsort(a);
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
And everything seemed terrific.
&lt;/p&gt;

&lt;p&gt;
Just like when we did the mergesort, we started to increase n. First
20, then 100, then 1000 and so on.
&lt;/p&gt;

&lt;p&gt;
All of a sudden, we started getting a stack overflow. We only made it
to about 450,000. Mergesort got to arrays of about 40,000,000 items
before we started to have memory problems.
&lt;/p&gt;

&lt;p&gt;
Our algorithm was sound. It worked on everything up to about
450,000. Since Mergesort worked well into the tens of millions, quicksort
should have as well.
&lt;/p&gt;

&lt;p&gt;
What was wrong?
&lt;/p&gt;

&lt;p&gt;
We changed the code a bit:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #7CB8BB;&#34;&gt;Random&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;rnd&lt;/span&gt; = &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;Random&lt;/span&gt;();
&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;a&lt;/span&gt;[] = &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt;[n];
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;i&lt;/span&gt;=0;i&amp;lt;&lt;span style=&#34;color: #7CB8BB;&#34;&gt;n&lt;/span&gt;;i++) {
a[i] = rnd.nextInt(10000);
}
qsort(a);
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Instead of an array of 450,000 values between 0 and 100, our elements
now went fro 0 to 10,000.
&lt;/p&gt;

&lt;p&gt;
All of a sudden things were good.
&lt;/p&gt;

&lt;p&gt;
Why? It wasn&#39;t long before the student saw that 500,000 elements with
values between 0 and 100 meant lots of duplicates. Our partition
didn&#39;t account for that. If we had duplicate pivots, only one is moved
into place, the rest are left unsorted taking us closer to worst case
performance and blowing our stack.
&lt;/p&gt;

&lt;p&gt;
Fortunately there was an easy fix:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93E0E3;&#34;&gt;partition&lt;/span&gt;(&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt;[] &lt;span style=&#34;color: #DFAF8F;&#34;&gt;a&lt;/span&gt;, &lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;l&lt;/span&gt;, &lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;r&lt;/span&gt;) {
&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;tmp&lt;/span&gt;;
&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;pivotIndex&lt;/span&gt; = l+rnd.nextInt(r-l);
&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;pivot&lt;/span&gt; = a[pivotIndex];
tmp = a[r];
a[r] = a[pivotIndex];
a[pivotIndex]=tmp;

&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;wall&lt;/span&gt;=l;
&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;pcount&lt;/span&gt;=1;
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;i&lt;/span&gt;=l;i&amp;lt;&lt;span style=&#34;color: #7CB8BB;&#34;&gt;r&lt;/span&gt;;i++) {
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;if&lt;/span&gt; (a[i]&amp;lt;pivot) {
tmp = a[i];
a[i]=a[wall];
a[wall]=tmp;
wall++;
}
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;if&lt;/span&gt; (a[i]==pivot)
pcount++;
}
&lt;span style=&#34;color: #5F7F5F;&#34;&gt;// &lt;/span&gt;&lt;span style=&#34;color: #7F9F7F;&#34;&gt;now copy over all the pivots&lt;/span&gt;
&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;rwall&lt;/span&gt;=wall;
tmp = a[rwall];
a[wall]=a[r];
a[r]=tmp;
rwall++;
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;i&lt;/span&gt;=rwall+1;i&amp;lt;=r;i++) {
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;if&lt;/span&gt; (a[i]==pivot) {
tmp = a[rwall];
a[rwall]=a[i];
a[i]=tmp;
rwall++;
}
}
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;return&lt;/span&gt; (wall+rwall)/2;
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
When we partition the array, move all the elements equal to the
partition to the middle of the array.
&lt;/p&gt;


&lt;p&gt;
That did the trick.
&lt;/p&gt;

&lt;p&gt;
All of a sudden we were blazing through data sets upwards of
100,000,000 elements.
&lt;/p&gt;


&lt;p&gt;
We&#39;re done for sorting for a while, at least until the heapsort but
it&#39;s been a fun couple of weeks
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>From selection to sorting</title>
      <link>https://cestlaz.github.io/posts/2014-03-12-select-to-sort/</link>
      <pubDate>Wed, 12 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-03-12-select-to-sort/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;script type=&#34;text/javascript&#34; src=&#34;http://orgmode.org/mathjax/MathJax.js&#34;&gt;&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;assets/static/mj.js&#34;&gt;&lt;/script&gt;

&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;p&gt;
When I first saw the &lt;a href=&#34;http://en.wikipedia.org/wiki/Quicksort&#34;&gt;quicksort&lt;/a&gt; it was in an algorithms class back in
the day. We first learned the quicksort, then choosing a good pivot
element and then as an afterthought we did &lt;a href=&#34;http://en.wikipedia.org/wiki/Quickselect&#34;&gt;quickselect&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Fast forward to teaching. I was never really happy teaching
quicksort. Mergesort is easy to motivate and it&#39;s pretty easy to
write. Quicksort always felt a little forced.
&lt;/p&gt;

&lt;p&gt;
I thought I&#39;d try switching things up this time and doing quickselect
first.
&lt;/p&gt;

&lt;p&gt;
The motivating problem: find the K&lt;sup&gt;th&lt;/sup&gt; smallest item in a list - in our
case the list is an array of ints.
&lt;/p&gt;

&lt;p&gt;
I want to start with the least efficient algorithm so I stack the
deck. I remind them that we&#39;ve been finding the smallest item in a
list for two years now.
&lt;/p&gt;

&lt;p&gt;
They don&#39;t disappoint and suggest something like this:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #DFAF8F;&#34;&gt;L&lt;/span&gt; = [10,3,28,82,14,42,66,74,81]

&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #93E0E3;&#34;&gt;findKth&lt;/span&gt;(L,k):
&lt;span style=&#34;color: #DFAF8F;&#34;&gt;omits&lt;/span&gt;=[]
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #DCDCCC; font-weight: bold;&#34;&gt;range&lt;/span&gt;(k):
&lt;span style=&#34;color: #DFAF8F;&#34;&gt;ans&lt;/span&gt;=&lt;span style=&#34;color: #DCDCCC; font-weight: bold;&#34;&gt;max&lt;/span&gt;(L)
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;in&lt;/span&gt; L:
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;if&lt;/span&gt; item &amp;lt; ans &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;and&lt;/span&gt; item &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;in&lt;/span&gt; omits:
&lt;span style=&#34;color: #DFAF8F;&#34;&gt;ans&lt;/span&gt;=item
omits.append(ans)
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;return&lt;/span&gt; ans

&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;print&lt;/span&gt; findKth(L,3)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Clearly an \(O(n^2)\) algorithm.
&lt;/p&gt;


&lt;p&gt;
Can we do better?
&lt;/p&gt;

&lt;p&gt;
Certainly.
&lt;/p&gt;

&lt;p&gt;
The students then suggest sorting the data set first. If we use
mergesort, we can sort in \(O(nLg (n))\) time. This lead to a great
conversation about sorting being so fast it&#39;s practically free and
that you don&#39;t have to hard code everything from scratch. Not only is
sorting the data set then plucking the k&lt;sup&gt;th&lt;/sup&gt; item out much faster, if
you already have a sort written or if you use your language&#39;s
library&#39;s sort, it&#39;s much easier as well:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-python&#34;&gt;&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #93E0E3;&#34;&gt;findKth&lt;/span&gt;(L,k):
&lt;span style=&#34;color: #DFAF8F;&#34;&gt;tmp&lt;/span&gt; = &lt;span style=&#34;color: #DCDCCC; font-weight: bold;&#34;&gt;sorted&lt;/span&gt;(L)
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;return&lt;/span&gt; tmp[k]
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;
But we can do even better. So now we talk about &lt;b&gt;quickselect&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
We pick a random pivot, partition the list a la quicksort (reorder the
list such that all items less than the pivot are to its left, and all
items greater than the pivot are to its right).
&lt;/p&gt;

&lt;p&gt;
We now know that after partitioning. the pivot is in it&#39;s exact
location. If its index is &lt;b&gt;k&lt;/b&gt; then we&#39;re done. If not, we can
recursively &lt;b&gt;quickselect&lt;/b&gt; on either the left or right side.
&lt;/p&gt;

&lt;p&gt;
Pretty cool, but is it faster?
&lt;/p&gt;

&lt;p&gt;
It&#39;s easy to see that if we keep choosing a bad pivot (the smallest or
largest in the list), each iteration takes \(n\) time to partition and
each iteration takes one item out of contention. This takes us back to
\(O(n^2)\).
&lt;/p&gt;

&lt;p&gt;
However&amp;#x2026;
&lt;/p&gt;

&lt;p&gt;
If we choose a good partition &amp;#x2013; at the middle of the list, each
partition takes less and less time. We get a run time of:
&lt;/p&gt;

&lt;p&gt;
\(n+\frac{n}{2} +\frac{n}{4}+\frac{n}{8}+\dots\) and since \(\frac{n}{2}
+\frac{n}{4}+\frac{n}{8}\dots=n\) this becomes an \(O(2n)\), or \(O(n)\) algorithm.
&lt;/p&gt;


&lt;p&gt;
That&#39;s really cool.
&lt;/p&gt;

&lt;p&gt;
Homework was the actual implementation.
&lt;/p&gt;

&lt;p&gt;
I think this might be a better way to approach quicksort. It seems
less forced, plus the class gets to go through the exercise of taking
an algorithm form \(O(n^2)\) to \(O(nlg(n))\) to \(O(n)\).
&lt;/p&gt;


&lt;p&gt;
Next, moving to the quicksort and also showing that we can indeed
avoid those really bad pivots.
&lt;/p&gt;


&lt;h4&gt;Addendum&lt;/h4&gt;

We moved to quicksort today and overall I&#39;m happy with this
approach. The only thing I think needs tweaking is going from the idea
of partitioning to Java code. Java makes it somewhat of a bear.
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>The new SAT - the more things stay the same</title>
      <link>https://cestlaz.github.io/posts/2014-03-11-sat-the-same/</link>
      <pubDate>Tue, 11 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-03-11-sat-the-same/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;style&gt;
div.center {text-align:center;}
.large {font-size:200%}
&lt;/style&gt;

&lt;div class=&#34;large&#34;&gt;
&lt;b&gt;Plus ça change, plus c&#39;est la même chose&lt;/b&gt;
&lt;/div&gt;

&lt;p&gt;
The more things change, the more they stay the same.
&lt;/p&gt;

&lt;p&gt;
Last week we heard all about the new SAT. Going back to 1600 points,
writing optional, and reworking the verbal section.
&lt;/p&gt;

&lt;p&gt;
Immediate responses ranged from the usual fact that SAT doesn&#39;t correlate
with college success to the idea that the motive was not to improve
the test but rather to recapture market share from the ACT.
&lt;/p&gt;

&lt;p&gt;
Personally, I&#39;m not a fan of the test but I do see the desire to have
some consistent measure across students and schools. While an &#34;A&#34;
might say something about perseverance and hard work, the value of
one school&#39;s &#34;A&#34; is not necessarily the same as the value from
another.
&lt;/p&gt;

&lt;p&gt;
But that&#39;s not what I wanted to write about.
&lt;/p&gt;

&lt;p&gt;
A big criticism of the SAT is the fact that it can be prepped for and
thus gives a huge advantage to students and families of means. The
test can be gamed, one can take prep courses, hire private tutors,
etc.
&lt;/p&gt;

&lt;p&gt;
As I said at the top&amp;#x2026;
&lt;/p&gt;

&lt;p&gt;
Hot on the heels of the new SAT came the announcement that Khan
Academy will be offering &lt;a href=&#34;https://www.khanacademy.org/sat&#34;&gt;free prep for the new SAT&lt;/a&gt;. That sounds
terrific.
&lt;/p&gt;

&lt;p&gt;
I read it differently. I&#39;m all for free educational materials being
universally available, but if Khan Academy can indeed offer test prep
for the new SAT then so can everyone else and people of means can
and will avail themselves of the Khan Academy material plus a wealth of other
resources.
&lt;/p&gt;


&lt;p&gt;
So, new SAT but nothings changed.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Be the ball</title>
      <link>https://cestlaz.github.io/posts/2014-03-09-be-the-ball/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-03-09-be-the-ball/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;


&lt;div class=&#34;center&#34;&gt; &lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;//www.youtube.com/embed/sWH811TcckU&#34; frameborder=&#34;0&#34;
allowfullscreen&gt;&lt;/iframe&gt; &lt;/div&gt;



&lt;p&gt;
Crystal Furman wrote a nice post titled &lt;a href=&#34;http://teachingcomputerscience.weebly.com/1/post/2014/03/coding-comprehension.html&#34;&gt;Coding Comprehension&lt;/a&gt; about a
week ago. There was a little buzz about it in the APCS Facebook group
and shortly after, Alfred Thompson added his &lt;a href=&#34;http://blog.acthompson.net/2014/03/when-knowing-syntax-is-not-enough.html&#34;&gt;two cents.&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
I thought I&#39;d add mine, at least a couple of thoughts.
&lt;/p&gt;

&lt;p&gt;
There are a lot of issues - long term retention, transfer of knowledge
from the basics to more advanced tools, pattern recognition, and more.
&lt;/p&gt;

&lt;p&gt;
It reminded me of Benjamin Zander&#39;s talk &#34;Playing on one Buttock&#34;:
&lt;/p&gt;

&lt;div class=&#34;center&#34;&gt; &lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;//www.youtube.com/embed/r9LCwI5iErE&#34; frameborder=&#34;0&#34;
allowfullscreen&gt;&lt;/iframe&gt; &lt;/div&gt;

&lt;p&gt;
Check out the first five minutes.
&lt;/p&gt;

&lt;p&gt;
Code reading is important, pair programming, where students are
constantly explaining to each other helps, and there are other
techniques.
&lt;/p&gt;

&lt;p&gt;
We can also model thinking like a computer from day one.
&lt;/p&gt;

&lt;p&gt;
Many of us start day one with exercises where students are the
computer. Perhaps using a simplified made up language or maybe by just
throwing some task at the kids and having them write instruction lists
for each other. That&#39;s a great start, but we can continue drawing the
relationship between the way we think and the way a computer works.
&lt;/p&gt;

&lt;p&gt;
Take a simple intro problem &amp;#x2013; finding the largest value in a list of
numbers.
&lt;/p&gt;

&lt;p&gt;
The ultimate solution in Java might be:
&lt;/p&gt;

&lt;div class=&#34;org-src-container&#34;&gt;

&lt;pre class=&#34;src src-java&#34;&gt;&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93E0E3;&#34;&gt;findMax&lt;/span&gt;(&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt;[] &lt;span style=&#34;color: #DFAF8F;&#34;&gt;L&lt;/span&gt;){
maxIndex = 0;
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color: #7CB8BB;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #DFAF8F;&#34;&gt;i&lt;/span&gt;=0;i&amp;lt;L.&lt;span style=&#34;color: #7CB8BB;&#34;&gt;length&lt;/span&gt;;i++){
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;if&lt;/span&gt; (a[i]&amp;lt;a[maxIndex]){
maxIndex = i;
}
}
&lt;span style=&#34;color: #F0DFAF; font-weight: bold;&#34;&gt;return&lt;/span&gt; maxIndex;
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Somewhere along the development process, I ask my students how they
would find the largest value in list. If the list was short, they
might just scan it. If the list was very long, they do the same thing
as our Java snippet does - remember the largest so far as we scan down
the list one by one. At first, we just think we&#39;re scanning the list,
but if we slow things down, we see that we&#39;re following pretty much
the same algorithm as what we&#39;d write in code.
&lt;/p&gt;

&lt;p&gt;
I use this technique throughout all my classes - slow ourselves down
and really analyze the steps towards solving the problem. No single
technique is going to teach our kids how to think about and comprehend
code, but it&#39;s another tool in our bag of tricks.
&lt;/p&gt;

&lt;h4&gt;Side note&lt;/h4&gt;

&lt;p&gt;
This is my first post written using &lt;a href=&#34;http://www.emacswiki.org/emacs/&#34;&gt;Emacs&lt;/a&gt; &lt;a href=&#34;http://orgmode.org/&#34;&gt;Org mode&lt;/a&gt;. I&#39;ve been using it
for years but only now discovering how amazing a tool it is.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I guess I&#39;m a dumbass</title>
      <link>https://cestlaz.github.io/posts/2014-02-27-dumbass/</link>
      <pubDate>Thu, 27 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-27-dumbass/</guid>
      <description>&lt;p&gt;I like a fairly informal atmosphere in my classes. Students have to
know that there&amp;rsquo;s a line between teacher and student but I also want
them to feel like we&amp;rsquo;re all part of the Stuy CS family.&lt;/p&gt;
&lt;p&gt;Whenever we start a new term, it takes a while to break down the
walls. The students don&amp;rsquo;t know what to expect of me, can they trust
me? Am I a bozo? Who knows.&lt;/p&gt;
&lt;p&gt;It helps when some of the class had me as a teacher before, but it still takes time.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m glad that this term, things are coming along nicely.&lt;/p&gt;
&lt;p&gt;Let me share what happened in class today.&lt;/p&gt;
&lt;p&gt;I was introducing merge sort - their first nlgn sorting
algorithm. Before class, one of the students slipped off his seat and landed on the floor with a thud. He
was fine although the brief butt, if you would, of jokes.&lt;/p&gt;
&lt;p&gt;I relayed a story - many years ago, Ilya, one of the gang, was accused
of being a dumbass. He responded &amp;ldquo;hey, it&amp;rsquo;s never missed the seat.&amp;rdquo; The
class had a good laugh over it.&lt;/p&gt;
&lt;p&gt;Fast forward a bit.&lt;/p&gt;
&lt;p&gt;I had a deck of cards I wanted sorted. As a Stuy grad, I&amp;rsquo;m as lazy as
the next guy so I didn&amp;rsquo;t want to sort them, but I also didn&amp;rsquo;t want to
violate one of our two class tenets &amp;ldquo;Don&amp;rsquo;t be a jerk&amp;rdquo; so rather than
giving the cards to a student to sort, I split the deck in half and
gave each half to a student.&lt;/p&gt;
&lt;p&gt;They quickly caught on and subdivided the deck and gave away their
halves. We did this until all the students had, at some point had one
or more cards.&lt;/p&gt;
&lt;p&gt;Then we got to the merge part. Each student sorted his or her pile and
passed it back to the student who they got the cards from. This
student then merged the two piles and passed the cards back.&lt;/p&gt;
&lt;p&gt;As the cards made their way back to me a student noted &amp;ldquo;hey, one of my
piles isn&amp;rsquo;t in order.&amp;rdquo; I commented that &amp;ldquo;the algorithm might fail if
at some points you give your cards to a dumbass.&amp;rdquo; This got a good
laugh.&lt;/p&gt;
&lt;p&gt;Finally, two pile of cards made their way to me and I started to merge
then. At which point, I promptly dropped the cards all over the floor.&lt;/p&gt;
&lt;p&gt;One of my students exclaimed: &amp;ldquo;That&amp;rsquo;s what happens when you give you
cards to a dumbass!!!!!&amp;rdquo;&lt;/p&gt;
&lt;p&gt;It was awesome. We all cracked up.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t think I&amp;rsquo;ve been &amp;ldquo;insulted&amp;rdquo; quite so perfectly since my daughter
called me an idiot in class last year (I fed her the straight line and
she didn&amp;rsquo;t disappoint).&lt;/p&gt;
&lt;p&gt;I love it that my kids feel comfortable enough to joke but also know
where the line is.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Change the data</title>
      <link>https://cestlaz.github.io/posts/2014-02-26-change-the-data/</link>
      <pubDate>Wed, 26 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-26-change-the-data/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Patient: &amp;ldquo;Doctor, it hurts when I do this.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Doctor: &amp;ldquo;So, don&amp;rsquo;t do that.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We&amp;rsquo;ve been spending time on
&lt;a href=&#34;http://en.wikipedia.org/wiki/State_space_search&#34;&gt;State Space Search&lt;/a&gt;. It&amp;rsquo;s
a great topic. We deal with or at least introduce:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Recursion&lt;/li&gt;
&lt;li&gt;Blind search&lt;/li&gt;
&lt;li&gt;Heuristic search&lt;/li&gt;
&lt;li&gt;foreshadowing things like A* and Dijkstra&amp;rsquo;s algorithm.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and more. Today, however. I want to talk about something else.&lt;/p&gt;
&lt;p&gt;We started by developing a maze solver. It reads a text file
representing the maze and then proceeds to find an exit. One version
of the source code can be found
&lt;a href=&#34;https://github.com/stuycs-apcs-z/classcode/tree/master/3/maze&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s really cool to see how such a short program, about 10 lines of
work code, can solve such an open sounding problem. From there we talk
about state spaces, graphs, etc. We then moved on to the
&lt;a href=&#34;https://github.com/stuycs-apcs-z/classcode/tree/master/3/maze&#34;&gt;Knight&amp;rsquo;s tour&lt;/a&gt;. By
viewing it as a state space problem we can look at it just like the
maze.&lt;/p&gt;
&lt;p&gt;We represented a state as a board with the knight&amp;rsquo;s current position and where it&amp;rsquo;s been. An easy way to do this is to use an array of ints. So we have an empty 5x5 board:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;0 0 0 0 0&lt;/p&gt;
&lt;p&gt;0 0 0 0 0&lt;/p&gt;
&lt;p&gt;0 0 0 0 0&lt;/p&gt;
&lt;p&gt;0 0 0 0 0
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Or a board after a few moves:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;4 0 2 0 0&lt;/p&gt;
&lt;p&gt;0 0 5 0 0&lt;/p&gt;
&lt;p&gt;0 3 0 0 6&lt;/p&gt;
&lt;p&gt;0 0 0 0 0
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;The kids saw three base cases:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When our count got up to n^2 (and in fact, we&amp;rsquo;re done)&lt;/li&gt;
&lt;li&gt;When we land on a non-zero space (when we just return or backtrack)&lt;/li&gt;
&lt;li&gt;When we try to move off the board, for an index out of bounds error.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I wanted to look at that third one. We talked for a bit about using an
if or a try/catch but I pointed out that I didn&amp;rsquo;t like either. Looking
at our maze code, we never checked bounds there. Why not. Well it
turns out that our maze had wall all around. It was stored in a 2D
array but the entire outer edge was wall. Why not do the same for the chess board:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;-1 -1 -1 -1 -1 -1 -1 -1 -1&lt;/p&gt;
&lt;p&gt;-1 -1  0  0  0  0  0 -1 -1&lt;/p&gt;
&lt;p&gt;-1 -1  0  0  0  0  0 -1 -1&lt;/p&gt;
&lt;p&gt;-1 -1  0  0  0  0  0 -1 -1&lt;/p&gt;
&lt;p&gt;-1 -1  0  0  0  0  0 -1 -1&lt;/p&gt;
&lt;p&gt;-1 -1  0  0  0  0  0 -1 -1&lt;/p&gt;
&lt;p&gt;-1 -1 -1 -1 -1 -1 -1 -1 -1&lt;/p&gt;
&lt;p&gt;-1 -1 -1 -1 -1 -1 -1 -1 -1
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Now, as long as we start on the board, if the Knight jumps off the
edge, it will end on a -1 square and backtrack. By modifying our data
structure and data to contain a border, we&amp;rsquo;ve eliminated the special
case of index out of bounds.&lt;/p&gt;
&lt;p&gt;I always like doing that.&lt;/p&gt;
&lt;p&gt;####Some Links&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/stuycs-apcs-z/classcode/tree/master/3/knights&#34;&gt;Source code for Knight&amp;rsquo;s tour&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fibonacci by the tail</title>
      <link>https://cestlaz.github.io/posts/2014-02-13-fibonacci/</link>
      <pubDate>Thu, 13 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-13-fibonacci/</guid>
      <description>&lt;p&gt;We&amp;rsquo;re ramping up for recursion in my junior classes - state space
search, nlg(n) sorts, etc. As a refresher, we took a quick look at the
Fibonacci numbers.&lt;/p&gt;
&lt;p&gt;Now, some people seem to think that it&amp;rsquo;s a tired problem. It&amp;rsquo;s mathy,
it&amp;rsquo;s played out, it&amp;rsquo;s boring etc.. They just might be missing the
point.&lt;/p&gt;
&lt;p&gt;The beauty isn&amp;rsquo;t in the problem itself, but rather, that it&amp;rsquo;s a
platform on which you can look at many problem solving techniques.&lt;/p&gt;
&lt;p&gt;We can look at the basic, straightforward , imperative solution:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fib1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;++){&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;rsquo;s straightforward and fast - no recursion needed.&lt;/p&gt;
&lt;p&gt;Next, we can look at the basic recursive version:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fib2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fib2&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)+&lt;/span&gt;fib2&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The advantages (of recursive solutions in general):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s a direct translation from the recursive mathematical formula.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s elegant, clean, and concise.&lt;/li&gt;
&lt;li&gt;It can make hard problems much easier (see: &lt;a href=&#34;http://cestlaz.github.io/2010/01/10/towers-of-hanoi.html#.Uv1m4N_EvZ8&#34;&gt;Towers, Hanoi&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;We can use same thought process that led to this solution to solve
problems like finding our way out of a maze.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The downside:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It can be VERY slow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, how do we address this?&lt;/p&gt;
&lt;p&gt;One way is via &lt;strong&gt;memoization&lt;/strong&gt; - when we find a value, store it in a
table, then we can use the look up table instead of recalculating over
and over:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;public int[] fibnums = new int[100000];
public int fib3(int n) {
if (n&amp;lt;=1)
return 1;
else if (fibnums[n] != 0)
return fibnums[n];
else {
fibnums[n] fib3(n-1)+fib3(n-2);
return fibnums[n];
}
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
This is a terrific thing to show a class since it&#39;s easy for students
to wrap their heads around, it really speeds things up, and it&#39;s a
precursor to lots of neat algorithms.

Finally, we can look at re-writing Fibonacci using tail
recursion. This one can be a little hard for students to grasp. I like
building it up from the iterative solution. In that solution, we use
**a**, and **b** to &amp;quot;walk down&amp;quot; the list of Fibonacci numbers. At any point in time, **a** and **b** represent where we are in the sequence. We also use **c** but that&#39;s really just a temporary place to add a and b together.

The problem with doing this in a recursive solution is that we can&#39;t
have **a** and **b** as local variables as each recursive call will
have new **a** and **b**s and no information will be transferred.

Since we&#39;re working in Java, it doesn&#39;t take long for some students to come up with the idea of using instance variables to store a and b and just use the recursion for the &amp;quot;loop.&amp;quot;:

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fib4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
a&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
b&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fib4&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


Great, but using instance variables in this way is very inelegant and messy. Better, use extra parameters to store the values from call to call:

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fib5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fib4&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

Looking at Fib5(5) we get for n, a, and b:

* 5,1,1
* 4 1,2
* 3,2,3
* 2,3,5
* 1,5,8

At which point we just return the 8

Clean, elegant, fast, and easy to understand.

Each of these four techniques are important and will be used time and time again and here we have one simple problem that allows us to explore them all.

#### Some Links

[Project Euler: Problem #2 - Even Fibonacci numbers](http://maikolsolis.wordpress.com/2014/01/18/project-euler-problem-2-even-fibonacci-numbers/)

[Memoized Fibonacci Numbers with Java 8](http://java.dzone.com/articles/memoized-fibonacci-numbers)

[The quadratic formula and Fibonacci numbers](http://mikesmathpage.wordpress.com/2014/02/07/the-quadratic-formula-and-fibonacci-numbers/)

[Monte Carlo Simulations, Fibonacci Numbers, and Other Number Tests: Why Developers Still Need The Basics](http://blog.smartbear.com/programming/why-developers-
still-need-the-basics/)

[TED: Arthur Benjamin: The magic of Fibonacci numbers - Arthur Benjamin (2013)](http://www.ted.com/talks/arthur_benjamin_the_magic_of_fibonacci_numbers.html)

[Fibonacci Numbers in the Real World](http://lee-phillips.org/lispmath/)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>StuyCS  family from coast to coast</title>
      <link>https://cestlaz.github.io/posts/2014-02-11-tapia-2/</link>
      <pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-11-tapia-2/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;I think my one regret over the years is that I haven&amp;rsquo;t done much
travel. So, when I had the opportunity to go to the 2014 Tapia
conference, I jumped at the chance. I didn&amp;rsquo;t get to see too much of
Seattle, but that&amp;rsquo;s OK. Now I&amp;rsquo;ve more incentive to go back.&lt;/p&gt;
&lt;p&gt;In addition to seeing new sites, it also gave me an opportunity to see
friends that I don&amp;rsquo;t get to see too often.&lt;/p&gt;
&lt;p&gt;I frequently talk about the StuyCS family. That it&amp;rsquo;s all about people
and all about community. I&amp;rsquo;m proud that I started this family and I&amp;rsquo;m
always blown away by the guys. It&amp;rsquo;s one thing for alums to swing by
the school a couple of years after they graduate but it&amp;rsquo;s another when
they want to see me as much as I them even after ten or twenty years.&lt;/p&gt;
&lt;p&gt;It was a little tricky to coordinate between conference commitments
and their schedules but we ended up having two dinners.&lt;/p&gt;
&lt;p&gt;First I got together with Mike (StuyCS &amp;lsquo;97), his wife Linsday, and
&lt;a href=&#34;http://homes.cs.washington.edu/~ln/&#34;&gt;Helene&lt;/a&gt;. I&amp;rsquo;ll always remember
Mike for being the police officer when he, William, Emil (I think) and Paul
were the Village People for Halloween. It was amazing to see him, meet
his wife talk about old times and see what he&amp;rsquo;s doing today.&lt;/p&gt;
&lt;p&gt;Helene isn&amp;rsquo;t StuyCS, but she is an educator of a kindred spirit, over
the years, I&amp;rsquo;ve met many CS educators. Some &amp;ldquo;get it&amp;rdquo; many
don&amp;rsquo;t. Helene clearly does. We clicked right off the bat. As with my
alums outside of the city, I regret that we only get to see each other
once every few years.&lt;/p&gt;
&lt;p&gt;Two nights later, I got together with Sam (StuyCS &amp;lsquo;96), Daemon (StuyCS
&amp;lsquo;06) and Matt (StuyCS &amp;lsquo;07) along with Boback, Alan, and Ephraim, three
other high school teachers who attended the conference.&lt;/p&gt;
&lt;p&gt;I hope we didn&amp;rsquo;t bore the teachers with our high school stories, but I
really had a blast. We talked about old times, we talked of current
issues, good food and good friends. We spanned 27 years of Stuy but
that didn&amp;rsquo;t matter. Get a bunch of bright interesting like minded
people together and good things happen.&lt;/p&gt;
&lt;p&gt;I feel amazingly blessed that I can travel across the country and
students from 10 and 20 years ago want to get together to catch up. I
guess I should really say friends, not students.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been thinking a lot about my career as I close in on 25 years of
teaching. What impact I&amp;rsquo;ve had, what I could have done better, what I
did right.&lt;/p&gt;
&lt;p&gt;I think I can live with the StuyCS family as my legacy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tapia 2014</title>
      <link>https://cestlaz.github.io/posts/2014-02-09-tapia/</link>
      <pubDate>Sun, 09 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-09-tapia/</guid>
      <description>&lt;p&gt;Spent the past few days at the &lt;a href=&#34;http://tapiaconference.org&#34;&gt;Tapia Conference&lt;/a&gt; in Seattle.&lt;/p&gt;
&lt;p&gt;The Tapia conference is billed as a &amp;ldquo;Celebration of Diversity in
Computing.&amp;rdquo; The bulk of the attendees seemed to be
students. Undergrads and grads. The undergrads were mostly juniors and
seniors, but a bunch of freshmen and sophomores were there as well. Of
course there were faculty members to join them as well as people from
industry.&lt;/p&gt;
&lt;p&gt;What was I doing there? Well, 20 high school teachers were given
scholarships to attend a workshop run by
&lt;a href=&#34;http://www.eecs.berkeley.edu/Faculty/Homepages/garcia.html&#34;&gt;Dan Garcia&lt;/a&gt;. Dan
is the driving force behind one of the implementations of CS
Principals course - a new course being rolled out by the College
Board. As you&amp;rsquo;re all well aware, I&amp;rsquo;m not a fan of the College Board
but I&amp;rsquo;m interested in Dan&amp;rsquo;s work as common friends speak well of
him.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll talk about his course next time, after I&amp;rsquo;ve gone through his
workshop. For now, let&amp;rsquo;s talk about the conference.&lt;/p&gt;
&lt;p&gt;I wasn&amp;rsquo;t sure what to expect but let me tell you, I was blown
away. Many of the break out sessions didn&amp;rsquo;t &amp;ldquo;speak&amp;rdquo; to me as a high
school teacher, but that&amp;rsquo;s fine - the conference was for the
youngsters. I can&amp;rsquo;t say for sure, but it seemed to me that they really
hit the breakout sessions on the head.&lt;/p&gt;
&lt;p&gt;Then there were the plenaries. Great speakers and a great range of topics.&lt;/p&gt;
&lt;p&gt;They had:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cieko Asakawa talking about assistive technologies&lt;/li&gt;
&lt;li&gt;Dan Garcia on CS Education&lt;/li&gt;
&lt;li&gt;Latanya Sweeney - transparency and privacy&lt;/li&gt;
&lt;li&gt;James McLurkin - robotics (and some computational geometry)&lt;/li&gt;
&lt;li&gt;Kathryn McKinley - Systems&lt;/li&gt;
&lt;li&gt;Marcus Mitchel - A general talk on hard problems, winding paths, and more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An incredible rage of topics. All the speakers were terrific - they
all talked about their life and career paths and were all
inspirational&lt;/p&gt;
&lt;p&gt;They also presented a smorgasbord of computer science possibilities
for the students.&lt;/p&gt;
&lt;p&gt;Wow.&lt;/p&gt;
&lt;p&gt;I wish this could be bottled up and given to all aspiring technologists.&lt;/p&gt;
&lt;p&gt;I only got to attend because I was on scholarship as a high school CS
teacher. It was an amazing few days and I can&amp;rsquo;t recommend the Tapia
conference highly enough for young computer scientists out there.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shell Games - an introduction</title>
      <link>https://cestlaz.github.io/posts/2014-02-04-shellgames-1-intro/</link>
      <pubDate>Tue, 04 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-04-shellgames-1-intro/</guid>
      <description>&lt;p&gt;A few weeks ago, I noticed this Twitter conversation between &lt;!-- raw HTML omitted --&gt;Alfred Thompson&lt;!-- raw HTML omitted --&gt;  and &lt;!-- raw HTML omitted --&gt;Steve Keinath&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I briefly considered proposing a session for the conference but it was just a day or two before the deadline, I don&amp;rsquo;t know if I&amp;rsquo;m going to be able to attend the conference, and besides, who said anything I proposed would be accepted.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Still, I liked the idea - I&amp;rsquo;ve been an educator for 23 years, a Linux user for most of that time and an  Unix user for longer. I&amp;rsquo;m a firm believer in operating system as toolkit and so I think I&amp;rsquo;ll take Steve and Alfred&amp;rsquo;s suggestion and try to put together a series of posts on using Linux from a CS educators point of view.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;So, before we begin - a little background.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I can proudly say that I&amp;rsquo;ve been Windows free since about 2000. That&amp;rsquo;s when I decided to wipe the lat traces of Microsoft from my hard drives. Prior to that I just booted up MS-DOS or Windows to play games or to use a Excel or Word.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Since the early days of Linux - back before Slackware, I dual booted. Before Linux, I dialed into public Unix systems such as &lt;!-- raw HTML omitted --&gt;Panix&lt;!-- raw HTML omitted --&gt; or &lt;!-- raw HTML omitted --&gt;The Big Electric Cat&lt;!-- raw HTML omitted --&gt;. At home, I tried to make MS-DOS as Unix like as I could. I ran the &lt;!-- raw HTML omitted --&gt;MKS Toolkti&lt;!-- raw HTML omitted --&gt;, and used my own shell (a project every young programmer should attempt).&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Why am I posting this now? It&amp;rsquo;s a new semester and I find myself, as usual, leveraging the Linux shell. It was time to set up a mailing list for the class.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I&amp;rsquo;m able to go to our school&amp;rsquo;s data system and grab a tab delimited file that looks something like this:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It&amp;rsquo;s tab delimited but I scrambled the letters so as to not reveal any student info.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Oh, how did I do that scrambling? Easy. First, I combined some basic utilities to make a random permutation of the upper and lower case letters and stored them in a shell variable. Don&amp;rsquo;t worry, I&amp;rsquo;ll explain these commands in upcoming posts:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Then I used tr (translate) to exchange the real letters for the matching letter in the random permutation:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;So back to the real work. I needed to isolate the students email addresses. The process:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;So, I typed:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;grep filters out lines that have MKS22X in them and sed replaces the tabs (\t) with commas and cut pulls out the email addresses. It&amp;rsquo;s all stored in a file named emails.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Now, I just have to import these into my maillist software (mailman).&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;So, that&amp;rsquo;s it, easy peasy.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I&amp;rsquo;ll be away for most of this week at the Tapia conference and then I&amp;rsquo;ll be playing catch up, but I&amp;rsquo;m hoping to do a series of posts talking about my Linux toolset and how I use it.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I hope you all find it interesting and maybe even useful.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Summing up at SumAll</title>
      <link>https://cestlaz.github.io/posts/2014-02-01-sumall/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-02-01-sumall/</guid>
      <description>&lt;p&gt;Our hackers have been coming down to &lt;a href=&#34;http://sumall.com&#34;&gt;SumAll&lt;/a&gt; every
Saturday for a while now. It&amp;rsquo;s a great space and we&amp;rsquo;ve been given run
of the office. That said, the hackers really had no idea what SumAll
is all about.&lt;/p&gt;
&lt;p&gt;Today, we had our first guest speaker. Davin Chew, founder and CTO of
SumAll. Davin&amp;rsquo;s also a member of the StuyCS family, he was my student back in the nineties. When Davin heard
we needed space for our Saturday program, he and the SumAll team
graciously offered to host.&lt;/p&gt;
&lt;p&gt;Davin spoke to the hackers about what SumAll does, how it&amp;rsquo;s trying to, in Davin&amp;rsquo;s words &amp;ldquo;Democratize data.&amp;rdquo; How they&amp;rsquo;re building a platform that lets a small business or even an individual really study their data. They&amp;rsquo;ve got some great visualizations and tools and you all should &lt;a href=&#34;http://sumall.com&#34;&gt;check them out&lt;/a&gt; (and yes, according to their web site, there is and always will be a free tier).&lt;/p&gt;
&lt;p&gt;Davin talked a little about how he and his co-founder sat in the room
we were all in and how they came up with SumAll. He talked about
passions, starting out a new compnay and a variety of other topics.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s always great to connect young hackers with people doing great
work in the real world so they can get a glimpse of the awesome things
they will be able to accomplish in the coming years.&lt;/p&gt;
&lt;h3 id=&#34;some-links&#34;&gt;Some Links:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://smallbiztrends.com/2014/01/dane-atkinson-big-data-strategy.html&#34;&gt;Dane Atkinson of SumAll: A Big Data Strategy That Goes Beyond Cutting and Pasting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.meangeme.com/1/post/2014/01/my-top-5-social-media-analytics-platforms.html&#34;&gt;My Top 5 Social Media Analytics Platforms&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What I learned from Pete Seeger</title>
      <link>https://cestlaz.github.io/posts/2014-01-30-pete-seeger/</link>
      <pubDate>Thu, 30 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-30-pete-seeger/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;This past Monday I, like may woke to hear about the passing of
&lt;a href=&#34;http://en.wikipedia.org/wiki/Pete_Seeger&#34;&gt;Pete Seeger&lt;/a&gt;. Ten days
earlier we were up at Symphony Space for the &amp;ldquo;Woody&amp;rsquo;s Children&amp;rdquo; 45th
Anniversary Concert. Pete was supposed to perform but was ill. At 94
years of age, I wondered if the end was near. I was at the concert
with my family as well as with my buddy Ben. Fitting since Ben and I
grew up on Pete&amp;rsquo;s music while many of our peers did not.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re not familiar with Pete Seeger, his life and his work, I
really encourage you to check out the 2007 documentary &lt;a href=&#34;http://video.pbs.org/video/2365166823/&#34;&gt;The Power of
Song&lt;/a&gt;. He was truly a
remarkable man. One of the most influential singer, songwriter,
activists of our times yet remarkably humble and approachable.&lt;/p&gt;
&lt;p&gt;I remember seeing Pete when I was a schoolboy. He would have been in
his fifties at the time. Thirty years later, he was singing for my
son&amp;rsquo;s second grade class in the same public school in New York City.&lt;/p&gt;
&lt;p&gt;Pete&amp;rsquo;s been eulogized by far better writers than I so let me just
share some of Pete&amp;rsquo;s influences on me.&lt;/p&gt;
&lt;p&gt;Something that Pete said, highlighted in the PBS documentary - &amp;ldquo;Think
global, act local.&amp;rdquo; Peter attributed it to Rene Dubos. As a teacher
and someone trying to make a difference through education, I think
about this a lot.&lt;/p&gt;
&lt;p&gt;As teachers, we have to act locally. We work with our kids every day
and can make a difference in individual lives. While we&amp;rsquo;re doing this,
the global picture is a mess. Teachers are vilified, schools are
closed, and policy is set by people who have never been in the
classroom.&lt;/p&gt;
&lt;p&gt;There is hope, however. Just like Pete and the &lt;a href=&#34;http://en.wikipedia.org/wiki/Hudson_River_Sloop_Clearwater&#34;&gt;Clearwater
movement&lt;/a&gt;
local action, spearheaded by the likes of Diane Ravitch seems to be
taking hold. We&amp;rsquo;re starting to see common core exposed and the types
of evaluation systems pushed by the Gates foundation debunked. Think
global, act local.&lt;/p&gt;
&lt;p&gt;Now, as you know, I&amp;rsquo;m a computer science educator and there are many
similarities between CS education and general education. Most of the
noise you hear is from non educators, or at least non K-12
educators with actual real experience and a real track record.&lt;/p&gt;
&lt;p&gt;These voices range from well informed, to well meaning, to
misdirected.&lt;/p&gt;
&lt;p&gt;Last year the CSTA held a twitter conversation with K12
CS Education thought leaders and there wasn&amp;rsquo;t a k-12 teacher amongst
the listed participants.&lt;/p&gt;
&lt;p&gt;Code.org, a well meaning organization that has done a great job
exciting people abotu CS Ed has a quotes page. The closest thing to a
teacher there is Randi Weingarten and she was just in the classroom
for a cup of coffee. The only other person on the list with &amp;ldquo;teach&amp;rdquo; in
their title is Wendy Kopp who believes that poorly trained temps make
better teachers than experienced pros.&lt;/p&gt;
&lt;p&gt;So, how will the conversation turn? Will groups and individuals with
influence engage those of us on the ground with actual results, or
will will receive dictates from on high? Time will tell.&lt;/p&gt;
&lt;p&gt;Meanwhile, all I can do is continue to act local. I can&amp;rsquo;t say what
will happen in the greater CS education landscape but I know that
every day I will see 150 kids and 20 more every Saturday. My kids, who
will be part of the Stuy CS and now CSTUY family. They might not know
now what they&amp;rsquo;re getting, but I do and I know I&amp;rsquo;ve made a difference.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Show me the data</title>
      <link>https://cestlaz.github.io/posts/2014-01-26-show-me-the-data/</link>
      <pubDate>Sun, 26 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-26-show-me-the-data/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://cestlaz.github.io/img/show-me-the-data/showme.png&#34; alt=&#34;Show me the data&#34;&gt;&lt;/p&gt;
&lt;p&gt;Last time, I shared my thoughts on the recent coverage of AP CS statistics. Compiled and presented by &lt;a href=&#34;http://home.cc.gatech.edu/ice-gt/556&#34;&gt;Barbara Ericson&lt;/a&gt;
and later reported on all over the place.&lt;/p&gt;
&lt;p&gt;To summarize my point of view - yes there is a problem but some of the
highlighted data points can easily be shown to be irrelevant and
therefore can hurt the greater goal of access to great CS education for
all.&lt;/p&gt;
&lt;p&gt;This felt like the launching pad for a great class discussion.&lt;/p&gt;
&lt;p&gt;I presented this to my classes last week:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;and asked &amp;ldquo;what do you make of this?&amp;rdquo; I was curious what the classes
would say - they know I&amp;rsquo;m concerned with gender equity and know that
at Stuy we&amp;rsquo;ve done better than most.&lt;/p&gt;
&lt;p&gt;I can say that I was very happy with their answers.&lt;/p&gt;
&lt;p&gt;We got things like:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How many took the test?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;What states? How many African-Americans in &amp;hellip;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;can we see the numbers?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, we started talking about the actual numbers. It&amp;rsquo;s amazing when you
actually look at the facts, truths come out.&lt;/p&gt;
&lt;p&gt;I was extremely pleased that my students saw right past the spin and
searched for the actual numbers.&lt;/p&gt;
&lt;p&gt;In my last post I explained why the stated claims - no girls in three
states, no blacks / Hispanics on 11 were horrible examples. Why focus
on these when it&amp;rsquo;s so easy to find better examples:&lt;/p&gt;
&lt;p&gt;The overall 20% female test takers is an easy stat to point to, but
why point out Alaska&amp;rsquo;s lack of African-American test takers when it&amp;rsquo;s
statistically irrelevant. Why not point out that in NY, only 68
African-American test takers and 150 Hispanic (out of 1858 test).
Given that NY is about 16% black ad 17% Hispanic, we would have
expected around 300 from each group.&lt;/p&gt;
&lt;p&gt;In any event, I&amp;rsquo;m delighted that my students are perceptive enough to
see past headlines, dig down to data, and make their own conclusions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>At Last - CS Gender Equity in Multiple States!!!!!</title>
      <link>https://cestlaz.github.io/posts/2014-01-11-badstats/</link>
      <pubDate>Sat, 11 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-11-badstats/</guid>
      <description>&lt;p&gt;Some buzz seems to have circulated on the
&lt;a href=&#34;http://home.cc.gatech.edu/ice-gt/556&#34;&gt;data&lt;/a&gt; compiled by Barbara
Ericson on AP Computer Science test takers in 2013. In addition to going to the &lt;a href=&#34;http://home.cc.gatech.edu/ice-gt/556&#34;&gt;source&lt;/a&gt; there was a piece in  &lt;a href=&#34;http://www.theatlantic.com/education/archive/2014/01/techs-gender-and-race-gap-starts-in-high-school/282966/&#34;&gt;The Atlantic&lt;/a&gt; and in &lt;a href=&#34;http://blogs.edweek.org/edweek/curriculum/2014/01/girls_african_americans_and_hi.html&#34;&gt;Education Week&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Some exciting results:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In two states just as many girls passed the AP CS exam as guys!!!!!&lt;/li&gt;
&lt;li&gt;In two other states, just 6 more guys passed than girls!!!!!&lt;/li&gt;
&lt;li&gt;In yet another state, 100% of the girls passed, doing far better than the approximately 75% of the boys that passed!!!!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Wow, we&amp;rsquo;re doing terrific.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ok, maybe not so much.&lt;/p&gt;
&lt;p&gt;But then, I&amp;rsquo;m not saying anything false, just misleading.&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s the problem with the articles I&amp;rsquo;ve been reading on Barbara&amp;rsquo;s report. Take a look and you&amp;rsquo;ll see. The Education Week headline is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No Girls, Blacks, or Hispanics Take AP Computer Science Exam in Some States&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Both articles talk about how no girls took APCS in three states. Later
in the article, it clarifies the situation - Wyoming had no test
takers male or female, Mississippi had only 1, which wasn&amp;rsquo;t a passing
grade, and Montanna only 11 test takers total.&lt;/p&gt;
&lt;p&gt;I find the headline disingenuous.&lt;/p&gt;
&lt;p&gt;There are other tidbits like the fact that there were no hispanic test
takers from Alaska. No mention of the fact there were only 21 test
takers overall and that Alaska only has 6% of it&amp;rsquo;s population
identifying itself as hispanic (compared to a national number of 16%).&lt;/p&gt;
&lt;p&gt;Clearly we have problems &amp;ndash; not enough students are exposed to good
computer science teaching and there certainly are under-represented
groups, but I feel that this type of reporting detracts from the
cause. All you have to do is look at the data and the credibility of
the reporter is shot.&lt;/p&gt;
&lt;p&gt;I see the same type of misleading remarks made by drop in programs
that claim to solve the problem &amp;ndash; &amp;ldquo;your kid will learn to make an app
in N weeks,&amp;rdquo; or &amp;ldquo;our kids are better prepared for the AP exam than
kids who take the AP class.&amp;rdquo; That&amp;rsquo;s also all nonsense but these folks
are selling a product so at least it&amp;rsquo;s a little more understandable.&lt;/p&gt;
&lt;p&gt;Then there&amp;rsquo;s the question of using the AP exam as a measure in the
first place - I for one don&amp;rsquo;t feel that AP CS is a particularly good
course and I&amp;rsquo;m not sold on CS Principles as the answer either.&lt;/p&gt;
&lt;p&gt;In any event, there are a lot of important inferences we can
make from the report and I encourage you to download the spreadsheet
and take a look.&lt;/p&gt;
&lt;p&gt;Not enough students are being exposed to computer science and
not all groups are getting the same exposure, but when we spin the
data rather than illuminate it, we don&amp;rsquo;t really help our cause.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rot13 - Gateway &lt;s&gt;Drugs&lt;/s&gt; Techniques</title>
      <link>https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/</link>
      <pubDate>Tue, 07 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve written before about &lt;a href=&#34;http://cestlaz.github.io/2013/08/07/That_One_Inspirational_Curriculum.html#.UsyYlN_EvZ8&#34;&gt;That One Inspirational Curriculum&lt;/a&gt; -
the idea that it&amp;rsquo;s not the topic in the syllabus but rather what the
teacher does with it.&lt;/p&gt;
&lt;p&gt;Some times a simple problem can lead to some really neat concepts.&lt;/p&gt;
&lt;p&gt;Take what we did in my AP classes over the past couple of days.&lt;/p&gt;
&lt;p&gt;I wanted a nice little warm up after the break so we wrote a simple
&lt;a href=&#34;http://www.rot-n.com/&#34;&gt;rotation cipher&lt;/a&gt;. We started with a little
encode routine - take a string and rotate the letters by some
offset. For example if we use an offset of 3, &amp;lsquo;hello&amp;rsquo; becomes
&amp;lsquo;khoor&amp;rsquo; - each letter being shifted over thee places.&lt;/p&gt;
&lt;p&gt;Pretty easy for the class but even a simple problem like this lets us
talk about a few things, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we can exploit the ASCII ordering but have to remember to deal with
the offsets. That is in ASCII, an  &amp;lsquo;a&amp;rsquo; is 97, we can&amp;rsquo;t just calculate c =
(c+offset)%26. We have to first shift the letter down to 0, add and
mod, and then shift back c = ((c-&amp;lsquo;a&amp;rsquo;) +offset)%26 + &amp;lsquo;a&amp;rsquo;&lt;/li&gt;
&lt;li&gt;We can talk about neat Internet history such as how
(rot13)[http://en.wikipedia.org/wiki/ROT13] was used to hide
spoilers and offensive material on the internet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I then ran a program that broke the encryption. I also showed the
students how it didn&amp;rsquo;t work on single words but did on full sentences.&lt;/p&gt;
&lt;p&gt;By hand, decodingn even a simple cipher is a pain.&lt;/p&gt;
&lt;p&gt;With computer assist, it&amp;rsquo;s easy - just print out all 26 possible rotations and pull out the right one.&lt;/p&gt;
&lt;p&gt;Our question was how do we have the computer do it all on its own?&lt;/p&gt;
&lt;p&gt;I asked them to think about how they might write a program to
accomplish this &amp;ndash; and that&amp;rsquo;s when the magic starts.&lt;/p&gt;
&lt;p&gt;They came up with a few interesting ideas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;For each of the 26 rotations, choose the one with the most vowels.&lt;/li&gt;
&lt;li&gt;For each word in each rotation, give a point for each word with a vowel and choose the rotation with the highest score.&lt;/li&gt;
&lt;li&gt;Look for common short words in each rotation and then check other words against a dictionary.&lt;/li&gt;
&lt;li&gt;Do the letters appear with the same frequencies as in the English language&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We noticed that all of these suggestions are based on our knowledge of
English. What if the message was in a different language or even a
different alphabet?&lt;/p&gt;
&lt;p&gt;We decided to use choice 4 - the letter frequencies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Magic part 1 - using known data to figure out a pattern for unknown data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Even if we don&amp;rsquo;t know the frequencies, if we can get a sample document in our language, we can figure them out. We downloaded a text from Project Gutenberg and used it to build
an array of 26 elements called &lt;em&gt;CorpusFreqs&lt;/em&gt;. CorpusFreqs[0] would hold the
frequency of the letter &amp;lsquo;a&amp;rsquo; in our sample document (that is, how many
times &amp;lsquo;a&amp;rsquo; appears over the total number of letters in our document),
CorpusFreqs[1] the frequency of &amp;lsquo;b&amp;rsquo; etc.&lt;/p&gt;
&lt;p&gt;Now we have a model that we can use to compare our rotations to.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Magic part 2 - wow, that 9th grade math is actually useful&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;At this point, it usually isn&amp;rsquo;t clear how to compare our rotations to
the model frequencies we calculated. Time to simplify,&lt;/p&gt;
&lt;p&gt;We can look at another problem: Selecting a house.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt;  if we can only have one criteria, what would it be?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Class:&lt;/strong&gt; Neighborhood&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; Ok, let&amp;rsquo;s rate each neighborhood between 0 and 100&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; We can draw two houses on a line, which is better?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Class:&lt;/strong&gt; The one with the larger value!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; What if we add a third house? Which is it more similar to?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Class:&lt;/strong&gt; The one it&amp;rsquo;s closer to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Next:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; Well, what if we add another feature? Cost - let&amp;rsquo;s map low cost to 100 and high cost to 0 and all the other costs in between.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; If we want to visualize a house, how can we do it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Class:&lt;/strong&gt; We can use a graph - like x,y points use location,cost points.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So we do it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; This is the least desirable house (0,0) and this is the best one (1,1).
I plot two houses and ask&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; Which is more desirable?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Class:&lt;/strong&gt; That one (they indicate the one closer to 1,1).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; How can you tell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Class:&lt;/strong&gt; It&amp;rsquo;s closer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me:&lt;/strong&gt; How do we figure it out?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Class:&lt;/strong&gt; The Distance Formula!!!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So now we add a third feature - size. It&amp;rsquo;s pretty easy to show that
the distance formula extends to three-space and in fact to even higher
dimensions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Magic part 3 - from 3 dimensions to 26&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So now, we bring it back to our cipher. For the house example, we used
points in 1,2, and 3 dimensions (and we actually talked about it in
4D) so we used 1 through 4-space vectors to represent the points and
used Euclidean distance formula to see what houses were similar to
each other, or what points where near to each other&lt;/p&gt;
&lt;p&gt;From there, it&amp;rsquo;s easy to see that the frequency array we built from ou sample text is a
26-space vector and that we can build a similar vector for each
rotation.&lt;/p&gt;
&lt;p&gt;From there we can use the distance formula to see how close each
rotation is to the sample document vector. The rotation with the
closest vector is pobably our solution.&lt;/p&gt;
&lt;p&gt;So from a simple warm up problem we&amp;rsquo;re at the gateway to some serious techniques that will come back time and time again as the students move through their CS education and careers.&lt;/p&gt;
&lt;p&gt;Fun!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacking Sessions Resume</title>
      <link>https://cestlaz.github.io/posts/2014-01-05-hacking-sessions-7/</link>
      <pubDate>Sun, 05 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-05-hacking-sessions-7/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Back to school last Thursday after almost two week off. Twenty four
hours later - Snow Day. I know this sounds a bit hokey, but I really
would have rather had school. I love a good snow day as much as the
next guy, but after a big vacation, I was really ready to get back to
work with the kids.&lt;/p&gt;
&lt;p&gt;Saturday, hacking sessions were set to resume. Being in Manhattan,
getting around was pretty easy but we&amp;rsquo;ve got hackers from all over the
city from Staten Island to the Bronx. Needless to say, some boroughs
were easier to get around in than others.&lt;/p&gt;
&lt;p&gt;So, we were a small group - we were down two instructors and a TA but
Batya and Zach were in from college and helping out so instructors
actually outnumbered students!!&lt;/p&gt;
&lt;p&gt;What did we do? Since the hackers are just starting on their projects,
this was a great opportunity to work one on one with them. Two of us
went over Javascript and SVG as an alternative to the HTML Canvas,
Zach worked with a couple of people on a Markov chain text generator
and so on. Even though the turn out was low, I&amp;rsquo;m really glad we got
back to business. Weather permitting, we should be back at full
capacity this coming Saturday.&lt;/p&gt;
&lt;p&gt;I think it&amp;rsquo;s finally time to start talking to them about git.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plans for the New Year</title>
      <link>https://cestlaz.github.io/posts/2014-01-01-new-year/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2014-01-01-new-year/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve never been one for New Year&amp;rsquo;s resolutions.&lt;/p&gt;
&lt;p&gt;If I&amp;rsquo;m working on something specific, I might set a goal to finish it,
but the idea of goals for a year never struck a chord with me.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s one of the things that I find absurd about the current teacher
rating system - I have to decided on my three goals for the year. I
always have one goal with respect to my profession - to be better at
it.&lt;/p&gt;
&lt;p&gt;In any event, even though I don&amp;rsquo;t have specific overall goals for me,
there are some projects that I plan on pouring myself into this year.&lt;/p&gt;
&lt;p&gt;The year closed with a lot of national hype over CS Ed. What remains
to be seen is where we go with it.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll continue to try to work within the system - try to convince the
new administration that supporting and replicating Stuy CS is something worth
doing but I&amp;rsquo;ve been burnt enough to know not to
put all my eggs in that basket.&lt;/p&gt;
&lt;p&gt;Consequently, I&amp;rsquo;m hoping to put a lot of time into
&lt;a href=&#34;http//cstuy.org&#34;&gt;CSTUY&lt;/a&gt;. We&amp;rsquo;re just about a year old and it&amp;rsquo;s been a
slow road but we&amp;rsquo;re making some real progress - and this is just as a
grass roots organization - it&amp;rsquo;s just us and the StuyCS Alumni family.&lt;/p&gt;
&lt;p&gt;So, what are the plans?&lt;/p&gt;
&lt;p&gt;#####More Hacking Sessions&lt;/p&gt;
&lt;p&gt;We started Hacking Sessions in October. Twenty New York City public
high school students getting together to geek out and do CS every
Saturday. We&amp;rsquo;re off to a great start but there&amp;rsquo;s a lot of work to be
done. We&amp;rsquo;d love to get more students involved in the coming semester.&lt;/p&gt;
&lt;p&gt;#####Start Summer Hackers&lt;/p&gt;
&lt;p&gt;This is the big effort. A summer program. Since we designed and
implemented Google CAPE NYC back in 2010, I&amp;rsquo;ve known the effect you
can have with a strong summer program taught by master teachers.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve got the teachers and the program, but it&amp;rsquo;s still going to take a
lot of work.We have yet to finalize on a location (we have a tentative
offer for space but I&amp;rsquo;m hesitant to say anything until it&amp;rsquo;s more
concrete) and we have to do it early enough so that we can get to the
students.&lt;/p&gt;
&lt;p&gt;If we can get CSTUY&amp;rsquo;s Summmer Hackers off the ground I&amp;rsquo;m pretty sure
we can use that to launch a community of both hackers and teachers
just as we&amp;rsquo;ve done at Stuy.&lt;/p&gt;
&lt;p&gt;#####Get more people involved&lt;/p&gt;
&lt;p&gt;I said that so far CSTUY has been grass roots only. In order for us to
succeed, we&amp;rsquo;ll need to grow our community. The hope and plan is to get
the NY Tech community behind our efforts. I&amp;rsquo;m hoping that when they see
us taking our proven programs out from Stuy to the greater public
they&amp;rsquo;ll come out in droves.&lt;/p&gt;
&lt;p&gt;At least that&amp;rsquo;s the hope.&lt;/p&gt;
&lt;p&gt;So, those are my goals for the year.&lt;/p&gt;
&lt;p&gt;Should be exiting.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A New Year and a New look</title>
      <link>https://cestlaz.github.io/posts/2013-12-30-new-year-new-look/</link>
      <pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-12-30-new-year-new-look/</guid>
      <description>&lt;p&gt;We&amp;rsquo;re practically at the close of 2013 and it&amp;rsquo;s high time I wished
everyone wonderful things for the year to come.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also time for a new look to this blog.&lt;/p&gt;
&lt;p&gt;Why the rewrite? Partly because I was tired of the look, but mostly
because, when I put it together, it was the first time I used that
toolset and was just figuring things out.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m still no expert, but I thought it was time to clean things up.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s still a &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;jekyll&lt;/a&gt; generated blog hosted on
&lt;a href=&#34;http://pages.github.com/&#34;&gt;GitHub pages&lt;/a&gt; but instead of using
&lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Twitter Bootstrap&lt;/a&gt; I decided to use
&lt;a href=&#34;http://weice.in/ivory/&#34;&gt;Ivory&lt;/a&gt;. It&amp;rsquo;s much smaller and only does the
basics. Even the menu I&amp;rsquo;m using was the result of some online
searching for CSS stuff. I figure that this way, I&amp;rsquo;ll actually learn
more about styling.&lt;/p&gt;
&lt;p&gt;This should be an interesting year. I&amp;rsquo;ve got a number of projects that
I&amp;rsquo;m working on. Some within Stuyvesant, some revolving around &lt;a href=&#34;https://cstuy.org&#34;&gt;CSTUY&lt;/a&gt;, and some I can&amp;rsquo;t talk about right now. Hopefully I&amp;rsquo;ll
be able to write about some of them in the coming weeks.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m also hoping to write more this year. I only posted 30 times this
past year. On the other hand, that&amp;rsquo;s up from 18 times in 2012 and only
4 posts in 2011.&lt;/p&gt;
&lt;p&gt;In addition to updates on CSTUY, pedagogical posts and the occasional
rant, I&amp;rsquo;d like to do a series on how I use tools like the Linux shell
and Emacs.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll see how things go.&lt;/p&gt;
&lt;p&gt;For now, I wish you all a happy and healthy new year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bucket Sorting</title>
      <link>https://cestlaz.github.io/posts/2013-11-27-bucket-sorts/</link>
      <pubDate>Wed, 27 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-27-bucket-sorts/</guid>
      <description>&lt;p&gt;In spite of the Java based annoyances I mentioned last time, I decided
to go ahead and do Radix sort with my AP students. I usually don&amp;rsquo;t
cover it in AP Computer Science, but I like getting the kids to think
about using arrays as buckets as it&amp;rsquo;s a new way of thinking for them and it does give a non-trivial application that combines ararys and ArrayLists.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a nice little algorithm. You start with an Array of integers:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Then, place them in buckets based on the least significant digit:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;We then copy the numbers from the buckets back into the original array, keeping the order of the buckets (0-&amp;gt;9).&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;We then repeat this process on the 2nd least significant digit:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;And so on until we&amp;rsquo;re done:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It&amp;rsquo;s a nice algorithm to teach on a number of fronts.&lt;/p&gt;
&lt;p&gt;First, we get to combine Arrays and ArrayLists. Since we&amp;rsquo;ll always
have 10 digits, the &amp;ldquo;bucket list&amp;rdquo; is of fixed size, while the
individual bucket lengths vary. This leads to the Array of ArrayLists
and we&amp;rsquo;ve got a single platform to compare and contrast the two. Which
is better when and why?&lt;/p&gt;
&lt;p&gt;The algorithm itself is also worth talking about.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&amp;rsquo;s relatively simple - we did it by hand before implementing it.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s got some history worth discussing.&lt;/li&gt;
&lt;li&gt;There are a number of other questions we can approach&lt;/li&gt;
&lt;li&gt;How can we deal with negatives?&lt;/li&gt;
&lt;li&gt;What about strings?&lt;/li&gt;
&lt;li&gt;Will it always work (what about floating point numbers).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, we can talk about speed &amp;ndash; they&amp;rsquo;re testing that now and we&amp;rsquo;ll discuss our Radix sort vs the built in Arrays.sort() on Monday.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll do the n^2 and nLog(n) sorts a little later, but I think this
was a detour well worth taking.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching Languages</title>
      <link>https://cestlaz.github.io/posts/2013-11-23-teaching-languages/</link>
      <pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-23-teaching-languages/</guid>
      <description>&lt;p&gt;Java&amp;rsquo;s never been my favorite language either for using or for
teaching.&lt;/p&gt;
&lt;p&gt;As a programmer, after starting with languages like Fortran
and Pascal, I really cut my teeth with C. More recently, Python has
been my go to language to get real work done.&lt;/p&gt;
&lt;p&gt;From a teaching point of view most languages have good points
and bad ones. When the AP class went from Pascal to C++ I lamented
losing the simplicity and the low cost of entry. On the other hand,
C++ gave us objects (not that I&amp;rsquo;m a big OOP guy), separate files, the
ability to use tons of real world libraries and more.&lt;/p&gt;
&lt;p&gt;Moving to Java simplified things in a number of ways but removed
memory management. If we didn&amp;rsquo;t teach that along with the stack frame
in our Systems class, I think our kids would be missing something very
important.&lt;/p&gt;
&lt;p&gt;I was reminded of some of Java&amp;rsquo;s limitations as a teaching language over the past couple of days.&lt;/p&gt;
&lt;p&gt;As posted earlier, I had my AP students create their own class to
mimic the Java ArrayList. Before introducing the ArrayList in Java, I
wanted to introduce generics:&lt;/p&gt;
&lt;p&gt;public class myList&lt;!-- raw HTML omitted --&gt; {
T[] data;
public myList() {
data = new T[10];
}
// much more not shown
}&lt;/p&gt;
&lt;p&gt;Turns out, you can no longer do this.&lt;/p&gt;
&lt;p&gt;After doing some searching, there does appear to be a way to get this
effect but it was certainly not something I wanted to do with my
classes. I was looking for something more pedagogically sound - an
easy way to show the concept and a way to springboard to an ArrayList.&lt;/p&gt;
&lt;p&gt;Oh well&amp;hellip;&lt;/p&gt;
&lt;p&gt;So, we finished ArrayLists and I was mapping out a plan for Monday. I
thought Radix sort would be cool &amp;ndash; we already introduced using an
array to tally votes when we did the mode. This seemed to be a natural
extension. It would combine Arrays and ArrayLists and illustrate when each is appropriate.&lt;/p&gt;
&lt;p&gt;First the kids would set up an array of 10 buckets, each being an ArrayList:&lt;/p&gt;
&lt;p&gt;public class Buckets {
ArrayList&lt;!-- raw HTML omitted --&gt;[] buckets;
public Buckets() {
buckets = new ArrayList&lt;!-- raw HTML omitted --&gt;[10];
for (int i=0;i&amp;lt;10;i++)
buckets[i] = new ArrayList&lt;!-- raw HTML omitted --&gt;();
}
// much more not shown
}&lt;/p&gt;
&lt;p&gt;Unfortunately, Java type safety once again reared its ugly head. OK,
maybe not ugly to a programmer, but ugly to a teacher. You can&amp;rsquo;t do
it. You can do it with an old school ArrayList without the generic:
&lt;code&gt;ArrayList[] buckets = new Arraylist[10];&lt;/code&gt; but of course, this
leaves you open to type mismatch problems.&lt;/p&gt;
&lt;p&gt;Once again, Java provides a convoluted workaround that might be fine
for a professional programmer, but for a student, it would be nuts.&lt;/p&gt;
&lt;p&gt;I might go ahead with the Radix sort lesson anyway, we&amp;rsquo;ll see, but it
would be nice if I could teach this level of course without having to
fight the implementation language.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Build it first</title>
      <link>https://cestlaz.github.io/posts/2013-11-19-build_it/</link>
      <pubDate>Tue, 19 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-19-build_it/</guid>
      <description>&lt;p&gt;The subtitle of this post is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;and why my students are going to hate me tomorrow.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When my good friend Gerry Seidman talks to my classes, he frequently
says &amp;ldquo;never use a data structure or algorithm you couldn&amp;rsquo;t build yourself.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This doesn&amp;rsquo;t mean that you have to write everything from scratch, just
that you should have some knowledge as to what&amp;rsquo;s going on under the
hood. I find that all too often young programmers just rely on APIs
and libraries and really don&amp;rsquo;t know how their computers and programs are working.&lt;/p&gt;
&lt;p&gt;And it&amp;rsquo;s never too early to start.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve been spending time talking about arrays recently. Now, most of
my students have some exposure to Python and so we started talking
about the flexibility and power of the Python list vs the limited
facilities of the Java array.&lt;/p&gt;
&lt;p&gt;How to solve the problem and make Java easier to work with? Let&amp;rsquo;s
write our own list class. We started simple:&lt;/p&gt;
&lt;p&gt;public class myList {
private int[] data;
private int numItems;&lt;/p&gt;
&lt;p&gt;public myList() {
data = new int[5];
numItems = 0;
}&lt;/p&gt;
&lt;p&gt;// append to the end of the list
public add(int d) {
if (numItems &amp;gt;= data.length) {
tmp = new int[data.length+data.length/2];
for (int i=0;i&amp;lt;numItems;i++)
tmp[i]=data[i];
data = tmp;
}&lt;/p&gt;
&lt;p&gt;data[numItems]=d;
numItems = numItems + 1;
}
}&lt;/p&gt;
&lt;p&gt;from there we added functionality such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inserting in arbitrary locations&lt;/li&gt;
&lt;li&gt;Removing items from the list&lt;/li&gt;
&lt;li&gt;Searching for an item&lt;/li&gt;
&lt;li&gt;Setting the item at a location to a value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And of course we were also able to talk about things like refactoring
out growing the array into a private method.&lt;/p&gt;
&lt;p&gt;And tonight the classes are changing the internal array from int[] to String[].&lt;/p&gt;
&lt;p&gt;Of course, what we&amp;rsquo;re building is an ArrayList. Tomorrow we&amp;rsquo;ll reveal
that little fact and of course the classes will all hate me, but then,
they&amp;rsquo;ll really understand what&amp;rsquo;s going on under the hood.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacking Sessions - putting it all together</title>
      <link>https://cestlaz.github.io/posts/2013-11-16-hacking-sessions-5/</link>
      <pubDate>Sat, 16 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-16-hacking-sessions-5/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Week 5.&lt;/p&gt;
&lt;p&gt;Last week, I lamented over the difficulties with only meeting once a
week. We went over a log of new material last week and I was happy
when today rolled around and the hackers would be able to start
putting things together.&lt;/p&gt;
&lt;p&gt;When writing a web app, you&amp;rsquo;ve got to know about all sorts of things -
for us it&amp;rsquo;s HTML, CSS, Python, and the microframework,
&lt;a href=&#34;http://flask.pocoo.org&#34;&gt;flask&lt;/a&gt;. That&amp;rsquo;s quite a bit, particularly when
working with a group with a wide range of experience coming in.&lt;/p&gt;
&lt;p&gt;So, what did we do? We put together two partial web sites.&lt;/p&gt;
&lt;p&gt;One had all the Python code, but was missing the HTML and CSS.&lt;/p&gt;
&lt;p&gt;The other had the HTML and CSS, but the Python logic was all missing.&lt;/p&gt;
&lt;p&gt;It was our hacker&amp;rsquo;s mission to fill in the missing pieces.&lt;/p&gt;
&lt;p&gt;We liked the setup for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each Hacker came in with different strengths and weaknesses. With this project, they could start with something they knew (picking the part with the &amp;ldquo;hard part&amp;rdquo; filled in) and then moving to a more challenging piece.&lt;/li&gt;
&lt;li&gt;By looking at the other half of the project, they could find sample code for the pieces they were working on.&lt;/li&gt;
&lt;li&gt;The hackers also had last weeks code as a reference.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also introduced the hackers to pair programming - something I love
from a pedagogical point of view - but more on that in another post.&lt;/p&gt;
&lt;p&gt;Overall I think the day went very well.&lt;/p&gt;
&lt;p&gt;We also gave out our first assignment &amp;ndash; over the weeks, the hackers
will finish up their projects - next week we&amp;rsquo;ll demo and give prizes
for the best.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacking Sessions Week 4 - The challenges of once a week</title>
      <link>https://cestlaz.github.io/posts/2013-11-11-hacking-sessions-4/</link>
      <pubDate>Mon, 11 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-11-11-hacking-sessions-4/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;We just finished week 4 of CSTUY&amp;rsquo;s Hacking Sessions.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m really happy with how our hackers are doing - they&amp;rsquo;re a great
bunch and even if they don&amp;rsquo;t realize it yet, are making great progress.&lt;/p&gt;
&lt;p&gt;Meanwhile, as an instructor and program designer I&amp;rsquo;m noticing the
differences between a once a week program and having a class every day
(note - I&amp;rsquo;m not the sole designer or instructor. I have a great team -
JonAlf, Sam, and Topher are three of the best teachers I&amp;rsquo;ve had the
privilege of working with - this post, however, is based on my
observations).&lt;/p&gt;
&lt;p&gt;####Once a week vs every day&lt;/p&gt;
&lt;p&gt;This is a big adjustment. In class, we only have 40 minutes but we get
it 5 days a week. Here we have 3 hours, but only on a single
morning. This means we can spend time on a large activity but once
noon rolls around, it&amp;rsquo;s over.&lt;/p&gt;
&lt;p&gt;If a student is confused, that confusion can fester for a week and by
the time we get to the next session we might not remember to clear
things up until the problem arises again.&lt;/p&gt;
&lt;p&gt;####They can run away&lt;/p&gt;
&lt;p&gt;In class, I know I have my students for a full term. We can bore them
or even annoy them a bit as long as we win them back.&lt;/p&gt;
&lt;p&gt;Some of what we teach is boring. Other things are difficult and can be frustrating for students until we dedicate enough time for things to click.&lt;/p&gt;
&lt;p&gt;When you know you have the kids all term, you don&amp;rsquo;t have to worry
about a bad day on your part or on the students. They&amp;rsquo;ll be back
tomorrow. Meeting with people every day makes it much easier to
develop connections.&lt;/p&gt;
&lt;p&gt;In a once a week voluntary program you have to be more careful.&lt;/p&gt;
&lt;p&gt;####We can&amp;rsquo;t count on work over the week&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m hoping that once we get a little further along the hackers will
want to work on projects over the week. That said, we know that
Hacking Sessions is extra curricular so when the hackers have big
assignments, SAT exams and the like, we have to take a back seat.&lt;/p&gt;
&lt;p&gt;So, the default for a Saturday program is that it&amp;rsquo;s a partial restart
every week. That&amp;rsquo;s a challenge.&lt;/p&gt;
&lt;p&gt;####Communication is tough&lt;/p&gt;
&lt;p&gt;This is the one that&amp;rsquo;s vexed me most.&lt;/p&gt;
&lt;p&gt;Since we&amp;rsquo;re only meeting once a week, it would be really great if we
can generate some online dialog in between. So far, it&amp;rsquo;s been tough.&lt;/p&gt;
&lt;p&gt;Even in class, over the years, I&amp;rsquo;ve had mixed levels of success with
online communication. Some classes, some years, I&amp;rsquo;ve gotten great buy
in to an online class community. The dialog is consistent, varied, and
great. Other times, it&amp;rsquo;s just the bare minimum.&lt;/p&gt;
&lt;p&gt;In my classes I usually use a Google group but I&amp;rsquo;m becoming less and
less happy with that as a solution. For Hacking Sessions we&amp;rsquo;ve been
using &lt;a href=&#34;http://www.piazza.com&#34;&gt;Piazza&lt;/a&gt; so far but in spite of its
popularity at colleges, I&amp;rsquo;m not feeling it. I find it both cluttered
and limiting. I think we&amp;rsquo;re going to try Vanilla forums next. It&amp;rsquo;s
pretty easy to host and fairly flexible.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m hoping that in a few weeks we&amp;rsquo;ll get past the basic tools and onto
some neat project and it&amp;rsquo;ll be easier to encourage talk throughout the
week.&lt;/p&gt;
&lt;p&gt;####Overall&lt;/p&gt;
&lt;p&gt;So, this is a new challenge but a fun one - designing and implementing
a once a week program. Bottom lining it - I think the hackers are
doing great and we&amp;rsquo;re off to a really strong start. We&amp;rsquo;ll make some
mistakes along the way but as long as we keep looking at what we&amp;rsquo;re
doing we can adjust as we move along we&amp;rsquo;ll continue to build a great program.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Four to beam up</title>
      <link>https://cestlaz.github.io/posts/2013-10-31-halloween/</link>
      <pubDate>Thu, 31 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-31-halloween/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/crew.jpg&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/crew.jpg&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;

Today was Halloween. This year we were the crew of the Enterprise. The original series, that is.

&lt;div align=&#34;Center&#34;&gt;
&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/9SQwjfzlpso&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

Overall, the school had a much more subdued spirit than past years but
it was fun. Certainly more fun for me than the past couple of years.
&lt;p&gt;
For those of you that don&#39;t know - I have a long history of going all
out for Halloween. Starting in October 1994 as Groo the Wanderer:

&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/groo.jpg&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;30%&#34; src=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/groo.jpg&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;

To Bob Ross:

&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/bob_ross.jpg&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;30%&#34; src=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/bob_ross.jpg&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;

&lt;a href=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/painting.jpg&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;30%&#34; src=&#34;https://cestlaz.github.io/img/2013-10-31-halloween/painting.jpg&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;

To many more. I&#39;ve been Little Ceaser, Hulk Hogan, Duffman, The Hulk,
Fred Flintstone, The Jolly Green Giant, Homer Simpson and more.

Some of my favorites were caught on video. Here&#39;s a playlist with a bunch of them:
&lt;p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/videoseries?list=PL9KxKa8NpFxJYgovyJhF4HZRsAqYKBLiG&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
I really enjoy costumes like this one because it&#39;s all about schtick
-- interaction with others in the school.

When it first started, I wasn&#39;t sure how the whole costume thing would
go over. Now, 20 years later, it&#39;s expected. Every year I&#39;ve got to do
something good and something different. That&#39;s OK though, because it
has a great affect on the classes. True, most students know me before they enter my class due to reputation, good or bad, but after Halloween there&#39;s a noticable change in the class. All of a sudden I&#39;m just a little less scary.

Looking forward to next year.
</description>
    </item>
    
    <item>
      <title>Floating Points</title>
      <link>https://cestlaz.github.io/posts/2013-10-30-huffpost-floatingpoints/</link>
      <pubDate>Wed, 30 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-30-huffpost-floatingpoints/</guid>
      <description>&lt;!DOCTYPE html&gt;


The other week I was invited by &lt;a href=&#34;https://twitter.com/brandondiamond&#34;&gt;Brandon Diamond&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/IlanaSufrin&#34;&gt;Ilana Sufrin&lt;/a&gt;  to participate in &lt;a href=&#34;https://twitter.com/HuffPostLabs&#34;&gt;HuffPost Labs&lt;/a&gt; podcast - Floating Points.
&lt;p&gt;
I&#39;ve known Brandon for a while and he&#39;s a really awesome guy. He&#39;s a
techie for sure but he also understands the importance of community
building. Brandon and Ilana (also awesome but I haven&#39;t known her as
long) are at HuffPost labs and also are working on important
initiatives like &lt;a href=&#34;https://twitter.com/HackerUnion&#34;&gt;Hacker Union&lt;/a&gt;.
&lt;p&gt;
When they asked me to take part, I jumped. Here&#39;s the podcast:
&lt;p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/117454244&amp;amp;color=ff6600&amp;amp;auto_play=false&amp;amp;show_artwork=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;
Chatting with HuffPost labs team before recording, we were talking
about the Stuy CS family. &#34;Hey - I bet you know our guest from two
podcasts ago.&#34; Sure enough, &lt;a href=&#34;https://twitter.com/amyquispe&#34;&gt;Amy&lt;/a&gt; was
on Floating Points just a couple of weeks before. Here&#39;s her episode:
&lt;p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/115558553&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;
Enjoy.

</description>
    </item>
    
    <item>
      <title>Hacking Sessions - Week 2</title>
      <link>https://cestlaz.github.io/posts/2013-10-28-hacking-sessions-2/</link>
      <pubDate>Mon, 28 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-28-hacking-sessions-2/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Saturday was the second day of CSTUY&amp;rsquo;s Hacking Sessions. We started out
wit a minor panic - none of the laptops could connect to the
wireless!!! After a brief scramble, we finally gave up and gave our
host a call (sorry Davin) and the problem was swiftly addressed. From
there it was off to the races.&lt;/p&gt;
&lt;p&gt;Last week we spent most of the session with mixers and setting up the
laptops. Not today. Sam started us off with a brief survey of Python -
some of the Hackers had never seen it before.&lt;/p&gt;
&lt;p&gt;From there we divided up the hackers - making sure to spread out the
Pythonistas and they were off on a project. We did a little pig-latin
converter. It&amp;rsquo;s a fun project to start a class with since it can be
attacked in a few different ways and you can illustrate a lot of
interesting coding techniques. For instance, checking for vowels or
consenants can be done with conditionals but testing set membership: **if letter in &amp;ldquo;aeiou&amp;rdquo;: ** is a touch more elegant.&lt;/p&gt;
&lt;p&gt;It was really nice to watch things develop. At first groups were four
individual hackers working on four laptops. Soon, with the
encouragement of our awesome TAs, it was two groups of two talking to
each other and then finally, groups of four all working together.&lt;/p&gt;
&lt;p&gt;22 students from 9 schools all hacking together - that&amp;rsquo;s what we&amp;rsquo;re
trying to build. I think we&amp;rsquo;re off to a great start.&lt;/p&gt;
&lt;p&gt;We finished the day sharing the projects and learning a little bit
about the Flask microframework for Python.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stuyablo II</title>
      <link>https://cestlaz.github.io/posts/2013-10-27-stuyabloii/</link>
      <pubDate>Sun, 27 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-27-stuyabloii/</guid>
      <description>&lt;p&gt;Last week in my AP classes, we were working on inheritance.&lt;/p&gt;
&lt;p&gt;So, what to do?&lt;/p&gt;
&lt;p&gt;Last time around I had my classes work on a &amp;ldquo;speed dating&amp;rdquo; program -
StuyDater. Back then JonAlf had his classes work on Stuyablo, that
classic dungeon crawl.&lt;/p&gt;
&lt;p&gt;I still plan on reworking the StuyDater project, but first I decided
to do my take on Stuyablo. Of course, we&amp;rsquo;ve improved on it. This time
it&amp;rsquo;s &lt;strong&gt;Stuyablo II&lt;/strong&gt;. The next guy will have to do &lt;strong&gt;Stuyablo III - in
3D&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We used the concept of a base class &lt;strong&gt;Character&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;public class Character {
private int health;
private String name;&lt;/p&gt;
&lt;p&gt;public String toString() {
return Name;
}&lt;/p&gt;
&lt;p&gt;// etc
}
And then some derived classes such as:&lt;/p&gt;
&lt;p&gt;public class Wizard extends Character {
private int mana;
// etc
}&lt;/p&gt;
&lt;p&gt;We spend time dealing with public vs private vs protected, issues with
constructors, super and the like but then the weekend was upon us.&lt;/p&gt;
&lt;p&gt;So, what was the assignment - we broke up into groups. Each group had
to design one aspect of the project. Some groups had to decide on what
would make up a player character. Perhaps a fighter or a wizard. What
base level attributes are needed? What methods? What do they need as
parameters and what do they return? What will the combat system look
like?&lt;/p&gt;
&lt;p&gt;Another groups had to work on non player characters. Yet others
designed the game driver.&lt;/p&gt;
&lt;p&gt;None of them were supposed to actually write finished code.&lt;/p&gt;
&lt;p&gt;I asked them to bounce around ideas on our mailing list over the
weekend.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s been amazing to watch the discussion. It&amp;rsquo;s now Saturday evening
and throughout the day there&amp;rsquo;s been a constant flow of ideas and
discussion. I love it when the classes are into the projects.&lt;/p&gt;
&lt;p&gt;Monday we&amp;rsquo;re going to sync up, finalize the design, and then start
writing this thing.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s going to be fun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why I&#39;m no longer an effective teacher - part 2</title>
      <link>https://cestlaz.github.io/posts/2013-10-25-effective-teacher-2/</link>
      <pubDate>Fri, 25 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-25-effective-teacher-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://cestlaz.github.io/2013/09/06/why_i_might_no_longer_be_an_effective_teacher.html#.UmhWzN__umg&#34;&gt;Earlier&lt;/a&gt;
I wrote about the new teacher evaluation system and why a teacher such
as myself might now be considered ineffective and two ineffectives in
a row can cost you your job.&lt;/p&gt;
&lt;p&gt;Well, the New York City and New York State Departments of Education
are the departments that just keep on giving. Here&amp;rsquo;s the latest.&lt;/p&gt;
&lt;p&gt;This coming Wednesday, I won&amp;rsquo;t be teaching during my usual 8:00 to
10:15 block of three AP classes. Instead I&amp;rsquo;ll likely be
proctoring. Classes will be shorter and start at around 9:35.&lt;/p&gt;
&lt;p&gt;What will we be proctoring? A preliminary assessment. I, and in
fact all Stuy teachers, will be judged by how our students perform on
English and Math Regents exams vs how the DOE thinks they should
do. So, the DOE needs to issue a preliminary assessment.&lt;/p&gt;
&lt;p&gt;So, this Wednesday, instead of having their normal allocation of class
time, they will start a day taking an exam whose only purpose is to
evaluate (and some of us believe fire) teachers. So, since I don&amp;rsquo;t
teach English or Math, the closest I come to having some impact on the kids whos grades will determine my effectiveness will
be proctoring this exam. Well, that&amp;rsquo;s a fair measure of my value as a teacher.&lt;/p&gt;
&lt;p&gt;So, that&amp;rsquo;s 40% of my evaluation, 60% comes from observation but
there&amp;rsquo;s a loophole. If the school doesn&amp;rsquo;t perform at a satisfactory
level, even if I ace the 60%, I will be deemed ineffective. Now, I
know I don&amp;rsquo;t have a large readership, but I&amp;rsquo;m guessing there are
enough of my former students out there that can vouch for the fact
that I do a pretty decent job.&lt;/p&gt;
&lt;p&gt;Now, as to that 60%, that doesn&amp;rsquo;t seem much better. I&amp;rsquo;m reluctant to
say anything specific since I don&amp;rsquo;t know whose reading this, but let&amp;rsquo;s
just say, word on the street says that it&amp;rsquo;s more about filling out
lines on forms than actual education and teacher improvement.&lt;/p&gt;
&lt;p&gt;Unless things change soon, I expect good, experienced teachers to
start leaving in droves.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The College Board Smorgasbord -Don&#39;t Overfill Your Plate</title>
      <link>https://cestlaz.github.io/posts/2013-10-23-spectator-ap/</link>
      <pubDate>Wed, 23 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-23-spectator-ap/</guid>
      <description>&lt;p&gt;Each month, The Stuyvesant school paper - the Spectator invites a teacher to write a piece on, well, basically, whatever they want to. I did it this past month.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a reposting of the piece. The original can be found on the &lt;a href=&#34;http://stuyspectator.org&#34;&gt;Spectator&lt;/a&gt; site.&lt;/p&gt;
&lt;p&gt;Enjoy&lt;/p&gt;
&lt;p&gt;&amp;ldquo;I&amp;rsquo;ve got 10 periods of class and no lunch.&amp;rdquo; &amp;ldquo;I&amp;rsquo;ve got four APs.&amp;rdquo; &amp;ldquo;Can I also take Great Books, Multivariate, Physics C, and Software Development?&amp;rdquo; The goal of a Stuyvesant student: take as many electives and AP classes as possible. Is that good? Is that smart? Probably not. I&amp;rsquo;m just a teacher, yes, but I&amp;rsquo;m also a Stuyvesant graduate and parent, so I&amp;rsquo;ve wrestled with this issue from all sides. Let&amp;rsquo;s talk about AP classes, student schedules, and the big picture.&lt;/p&gt;
&lt;p&gt;When I was a Stuyvesant student in the mid-&amp;rsquo;80s, we had AP classes, but they weren&amp;rsquo;t really a big deal. I took two, Calculus and Computer Science. My wife, then a classmate, didn&amp;rsquo;t take any. Some kids took a third, and four was a rarity. You took AP English if you were really into English, AP Chemistry if that was your thing. The school day consisted of eight periods, starting at 9:00 and ending at 3:00.&lt;/p&gt;
&lt;p&gt;Fast-forward to the early to mid &amp;rsquo;90s, when I was a young teacher. The Stuyvesant day was still eight periods. Students wanted more AP classes, but it wasn&amp;rsquo;t out of control. Soon after, we adopted what is known as a split schedule. Students were either in classes from periods one to eight, or from two through nine, but that didn&amp;rsquo;t last. Like empty space in a closet, students looked at that additional period as an extra slot to fill, and we were more than happy to oblige. This ultimately led to today. To get into a top college, students feel the need to take a full schedule with as many AP classes as possible.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s important to recognize the hypocrisy that we&amp;rsquo;re getting from colleges: &amp;ldquo;Take more AP classes, though we&amp;rsquo;re giving you less credit for them.&amp;rdquo; The more &amp;ldquo;selective&amp;rdquo; schools want a transcript filled with APs, but good luck getting college credit from them. You&amp;rsquo;ll be lucky to get placement.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also important to recognize the lack of value offered by AP classes. We teach AP Computer Science at Stuyvesant, and I can tell you that the AP syllabus, as defined by the College Board, is weak at best. What&amp;rsquo;s more, the College Board is starting a new AP Computer Science class that I wouldn&amp;rsquo;t even consider college-level. Now, we teach rigorous, college-level computer science, a superset of the AP class, but we end up fighting to get around the limitations of the AP curriculum.&lt;/p&gt;
&lt;p&gt;Fifteen years ago, when graphing calculators first became commonplace, I decided to work my way through a released AP Calculus A exam. The rules were that I could only use common sense, the calculator, and precalculus techniques, that is, I had to pretend I knew no calculus. When all was said and done, this technique earned a 3, a passing grade. How strong is the College Board standard when one can &amp;ldquo;pass&amp;rdquo; with no knowledge of the subject? We can also look at our English classes at Stuyvesant. It&amp;rsquo;s also well known that classes such as Great Books and Creative Nonfiction are as rigorous as or more rigorous than classes following the College Board AP syllabus.&lt;/p&gt;
&lt;p&gt;So, Advanced Placement isn&amp;rsquo;t all it&amp;rsquo;s cracked up to be; it&amp;rsquo;s a brand name, and we buy into it. But we shouldn&amp;rsquo;t. Buying into the hype has led countless students to sign up for a course &amp;ldquo;to get another AP.&amp;rdquo; That&amp;rsquo;s the worst reason to take a course. Take AP Computer Science if you are interested in the subject or if you think it will give you a skill set for the future. Same with the others. Don&amp;rsquo;t take advanced courses to fill a schedule. You won&amp;rsquo;t enjoy it, you won&amp;rsquo;t be happy, and you won&amp;rsquo;t get a lot out of it. Part of the beauty of the high school experience is that you get a taste of each subject before you have to select AP classes. By the time you get there, you should have some idea of your interests. Don&amp;rsquo;t take APs for the sake of taking APs. If you have room and aren&amp;rsquo;t passionate about the available AP choices, take another elective and try something new.&lt;/p&gt;
&lt;p&gt;The 10-period day is another part of the AP madness. Now, a 10-period day isn&amp;rsquo;t necessarily bad. My daughter Batya did it and my son is doing it now. A key point, though, is that two of their classes were and are chorus and band, respecitvely, classes with little out-of-class workload, which, in fact, provide a break of sorts during the day. While our music classes require focus and effort, it&amp;rsquo;s not the same as, say, a math class. Think of it as cross-training. Their only elective on top of these was AP Computer Science. but since they both enjoy the subject, it wasn&amp;rsquo;t work for them.&lt;/p&gt;
&lt;p&gt;For my kids, the electives that made a 10-period day are what made the day fun and worthwhile. Now, that&amp;rsquo;s a little bit of an overstatement, as both Batya and Natan really enjoyed some of their required classes, but I think you all know what I mean. The problem comes when you add classes because you feel you need an additional workload. We take more classes but end up learning less. Even with an eight-period day: take out one for lunch and one for gym, that&amp;rsquo;s six. If each teacher gives forty minutes of homework a day, that&amp;rsquo;s four hours. Add two classes and you&amp;rsquo;re over five, and we know that many teachers give more than forty minutes a night. I believe that if Stuyvesant students take less classes, they&amp;rsquo;d actually learn more, because they wouldn&amp;rsquo;t be cramming day after day, trying to meet unrealistic deadlines. Rather, they could really explore fewer subjects in a more meaningful way.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t take a course just to take a course, but what about the AP designation? To start, I see two types of AP courses. Those that are a drop-in replacement for a regular course, such as the history and English courses, and those that are extras, such as AP Computer Science, Physics, etc.&lt;/p&gt;
&lt;p&gt;I can&amp;rsquo;t really speak to the drop-in classes, but I can for the extras: I&amp;rsquo;d just love to teach &amp;ldquo;rigorous, college-level&amp;rdquo; classes. Let&amp;rsquo;s drop the AP designation. For computer science, we could create study guides for those who want to take the test, but we could dump the nonsense from our curriculum and make it even stronger. I know this flies in the face of our test-taking mentality, but we&amp;rsquo;re Stuyvesant. Colleges know our courses and our teachers. If anyone can do it, we can. Let&amp;rsquo;s be leaders and not buy into the nonsense that the College Board is selling us. The Ethical Culture Fieldston School did this a few years ago, and it doesn&amp;rsquo;t seem to have hurt them.&lt;/p&gt;
&lt;p&gt;The AP class-crunch culture didn&amp;rsquo;t happen over night. It developed like a prisoner&amp;rsquo;s dilemma out of control: &amp;ldquo;They&amp;rsquo;re taking more AP classes, so I have to.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s re-examine not only AP classes, but all our classes. What does it mean to be a Stuyvesant student? Should we have a semester of this and a year of that or three years of something else? Am I right that less is more, or is the current system working? Let&amp;rsquo;s get some people together to look at this question. Let&amp;rsquo;s evaluate all our requirements and how we do things. Let&amp;rsquo;s talk to students, teachers, parents, and, maybe most importantly, alums who have the perspective of time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacking Sessions Begin</title>
      <link>https://cestlaz.github.io/posts/2013-10-20-hacking-sessions-begin/</link>
      <pubDate>Sun, 20 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-20-hacking-sessions-begin/</guid>
      <description>&lt;p&gt;Yesterday was my 46th birthday. How did I spend it?  Well, 20
&amp;ldquo;Hackers&amp;rdquo; from 9 schools, 4 student TAs and a few of us teachers
gathered at &lt;a href=&#34;http://sumall.com&#34;&gt;SumAll&lt;/a&gt; to kick off CSTUY&amp;rsquo;s first
weekly program - Hacking Sessions (sometimes called Hackers Sessions).&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It was the first week so it was mostly mixers, setting up machines
(installing Linux on 24 laptops takes time) and going over how we&amp;rsquo;ll
be communicating but I&amp;rsquo;m really excited about the weeks to come. We
all expect to hit the ground running this coming Saturday.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s easy for a Stuyvesant student to become part of the Stuy CS
family. Most students at other schools aren&amp;rsquo;t lucky enough to have
that type of critical mass. Typically they&amp;rsquo;re one of a few techie
students and if they&amp;rsquo;re lucky there will be maybe one teacher who&amp;rsquo;s
really knowledgeable and passionate about CS and tech in general.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re hoping that this is going to change that. These 20 hackers
represent the start of a community for student hackers &amp;ndash; taking what
we&amp;rsquo;ve developed at Stuy outside the confines of the school.&lt;/p&gt;
&lt;p&gt;Special thanks to Davin and everyone at &lt;a href=&#34;http://sumall.com&#34;&gt;SumAll&lt;/a&gt;
for providing not only space but an amazingly welcoming and friendly
environment and also Fanming for coming up with the laptops.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Databases - the next day</title>
      <link>https://cestlaz.github.io/posts/2013-10-09-database-followup/</link>
      <pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-09-database-followup/</guid>
      <description>&lt;p&gt;Two days ago I asked the students, in small groups, to come up with a design to store a school (or school district) database.&lt;/p&gt;
&lt;p&gt;Yesterday we discussed the designs.&lt;/p&gt;
&lt;p&gt;All the students took our brand of AP Computer Science last year - a
superset of the old AB curriculum and in that class they implemented a
number of data structures such as binary search trees and hash tables,
but they really didn&amp;rsquo;t have an opportunity to design something more
comprehensive.&lt;/p&gt;
&lt;p&gt;At the start, suggestions were based around simple monolithic
designs. A class to represent a student, an array or hash table of
these classes and in each object, an array of grades or something like
that.&lt;/p&gt;
&lt;p&gt;Soon the discussion turned to optimizing search based on different
&amp;ldquo;keys.&amp;rdquo; Searching by student id or searching by name. This led to the
idea of indices. For example, if our main data set is sorted by name, we can make auxiliary lists sorted by id or grades and use those to point into our main data set.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;This was followed by less monolithic ideas &amp;ndash; essentially ideas behind
linking different tables using key fields. For example, a student
table with student id and a transcript table where each line has a
student id, a class, grade, teacher, and date.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Pretty sophisticated ideas.&lt;/p&gt;
&lt;p&gt;From there we talked about assorted data structures that we could use with these ideas.&lt;/p&gt;
&lt;p&gt;I think it was a productive day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Databases - putting it all together</title>
      <link>https://cestlaz.github.io/posts/2013-10-07-databases/</link>
      <pubDate>Mon, 07 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-10-07-databases/</guid>
      <description>&lt;p&gt;So, we&amp;rsquo;re into the second year of my Software Development class. It&amp;rsquo;s a
little different since last time, I taught many of the kids in
AP. This time, they&amp;rsquo;re mostly new to me.&lt;/p&gt;
&lt;p&gt;In AP, everything is low level. The students build linked lists,
binary search trees, heaps, hash tables, graphs and the like. It&amp;rsquo;s all
about building the data structure. The Node, if you would.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re about to start talking about databases. We&amp;rsquo;ll probably spend a
couple of days on relational databases and SQL and then some time with
MongoDB.&lt;/p&gt;
&lt;p&gt;There can be a big gap between a single lower level data structure and
something as complex as a database.&lt;/p&gt;
&lt;p&gt;I wanted to learn more about the kids and also
see how they would go from last years material to solving a larger
problem.&lt;/p&gt;
&lt;p&gt;So today we talked about designing a database. Actually, we haven&amp;rsquo;t
even gotten there yet. We actually talked about what data we&amp;rsquo;d want to
store if we were building a database for a school. Sounds like a
typical class assignment.&lt;/p&gt;
&lt;p&gt;Turns out, there&amp;rsquo;s lots of data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Personal info like name, id number, address&lt;/li&gt;
&lt;li&gt;Transcript based data including:&lt;/li&gt;
&lt;li&gt;grade&lt;/li&gt;
&lt;li&gt;class code&lt;/li&gt;
&lt;li&gt;class section&lt;/li&gt;
&lt;li&gt;time stamp&lt;/li&gt;
&lt;li&gt;teacher&lt;/li&gt;
&lt;li&gt;Teacher information&lt;/li&gt;
&lt;li&gt;Attendance Information&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And more.&lt;/p&gt;
&lt;p&gt;The kids were then broken into groups.&lt;/p&gt;
&lt;p&gt;The assignment:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Assume you&amp;rsquo;re working in Java. You can use all the tools covered last years. Both built in like HashMaps and TreeMaps and those that you built like search trees or heaps.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/blockquote&gt;
&lt;p&gt;It was great hearing the discussions. Some groups based things on Java
Classes, some on hash tables, some trees. Some groups started with
efficiency concerns and wondered what types of queries they would
need. I was really pleased with the level of activity and the types of
concerns the students had.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m really looking forward to tomorrow when we discuss the designs and move on from there.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why I might no longer be an effective teacher</title>
      <link>https://cestlaz.github.io/posts/2013-09-06-why_i_might_no_longer_be_an_effective_teacher/</link>
      <pubDate>Fri, 06 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-09-06-why_i_might_no_longer_be_an_effective_teacher/</guid>
      <description>&lt;p&gt;So here we are starting the new year and NY City is rolling out its new teacher evaluation system.&lt;/p&gt;
&lt;p&gt;It was all over the news last year.&lt;/p&gt;
&lt;p&gt;Ultimately, the state imposed the plan.&lt;/p&gt;
&lt;p&gt;The city hailed the new plan as a way to fire under-performing teachers.&lt;/p&gt;
&lt;p&gt;The UFT president hailed the plan as something that &amp;ldquo;is designed to help teachers improve their skills&amp;hellip;.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;My take? All three parties have thrown the students and teachers under the bus.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d like to think of myself as a pretty effective teacher. Let&amp;rsquo;s see how this plan works with me in mind.&lt;/p&gt;
&lt;p&gt;40% of a teacher&amp;rsquo;s evaluation is based on standardized tests, 60% from a supervisors evaluation.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s look at the 40% first. It&amp;rsquo;s broken down into 20% state test
results and 20% local results.  Suppose I taught regents math. 20% of
my evaluation would be the city&amp;rsquo;s assessment of how my students
performed on the math regents. Since we don&amp;rsquo;t have any local measures,
the other 20% would be based on the lowest performing third of my
students regents results and how they performed vs what the city
expected of them.&lt;/p&gt;
&lt;p&gt;So, what does this mean and what are the problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many sources indicate that these standardized tests aren&amp;rsquo;t even good measures of student achievement and they should &lt;strong&gt;NEVER&lt;/strong&gt; be used as a means of teacher assessment.&lt;/li&gt;
&lt;li&gt;In a way they&amp;rsquo;re using the same data twice.&lt;/li&gt;
&lt;li&gt;By focusing 20% of the lowest performing segment, they&amp;rsquo;re telling teachers to teach to the bottom of the class pushing NY Ed to the lowest common denominator.&lt;/li&gt;
&lt;li&gt;This will  &lt;strong&gt;CLEARLY&lt;/strong&gt; encourage teaching to the test.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The biggest problem here is that while the city and state claim they
want accountability and transparency, they only want to extend that to
teachers (that is, publishing teacher scores). The methods they use to
convert a teachers actual scores to their 40% score is hidden. They
can work the same &amp;ldquo;magic&amp;rdquo; they work on standard tests. Look at the raw
scores, decide what they want the results to be and then create or
adjust the mapping.&lt;/p&gt;
&lt;p&gt;Now, this is already a ridiculous system, &lt;strong&gt;but it gets worse&lt;/strong&gt;. I
don&amp;rsquo;t teach regents classes. I teach computer science. So, my 40% will
be based on the school&amp;rsquo;s regents results. That is, they will look at
the results of all the students taking regents exams at Stuyvesant.&lt;/p&gt;
&lt;p&gt;So &lt;strong&gt;I&amp;rsquo;m being evaluated based on students who I probably never taught&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;What about the other 60%?&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s basically classroom observation. I&amp;rsquo;ve been fortunate enough to
always have fair supervisors, but in this system, a vindictive
supervisor could easily railroad a teacher. Even with a fair supervisor, there are problems.&lt;/p&gt;
&lt;p&gt;New York is using the Danielson Framework for observations. Each
teacher will be awarded a score between 1 and 4 in each of 22 areas or
competencies. A great teacher that doesn&amp;rsquo;t cover all of the Danielson
bases could easily be rated lower than a run of the mill one that
does. Some of the best teachers I know could rate either reasonably
highly or at the low end of the scale depending on how their
supervisor interprets the competencies.&lt;/p&gt;
&lt;p&gt;The other day, we all watched a video of a demo lesson of a math
class. The evaluators in the video and then Danielson gushed over the
lesson. Everyone in the room felt that the lesson was OK, but had real
problems. Our issue was over the rigor of the lesson &amp;ndash; it was a math
lesson. Both the evaluator and Danielson felt it was rigorous and
appropriate based on the fact that the students were saying things
that the evaluator didn&amp;rsquo;t understand. As a computer science teacher in
a math department, my supervisors have never had a background in my
field. This is also true in small schools where there aren&amp;rsquo;t
departmental supervisors. In any event, if you have a fair supervisor,
great - if not - look out.&lt;/p&gt;
&lt;p&gt;So where does that leave us? Teachers of my generation see the writing
on the wall. For the first time, I&amp;rsquo;m seriously considering other
career paths.&lt;/p&gt;
&lt;p&gt;My first supervisor told me a long time ago that when he went into
class to observe a teacher, he asked himself one question: &amp;ldquo;is
learning going on?&amp;rdquo; He knew that teaching could take on numerous forms
but by working from that base question, he could evaluate and work with any teacher.&lt;/p&gt;
&lt;p&gt;It should really be that simple.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bikeshares - Bixi vs Citibike</title>
      <link>https://cestlaz.github.io/posts/2013-08-15-bikeshares-citibike-vs-bixi/</link>
      <pubDate>Thu, 15 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-08-15-bikeshares-citibike-vs-bixi/</guid>
      <description>&lt;p&gt;We just got back from a few days in Montreal.&lt;/p&gt;
&lt;p&gt;Love the city - it&amp;rsquo;s walkable, lots of good food, love the waterfront,
history, and lots to do.&lt;/p&gt;
&lt;p&gt;I also love seeing a city using a bike/walking combo. In a car, you
speed by things too fast and parking&amp;rsquo;s always a problem. Foot alone
doesn&amp;rsquo;t let you cover enough ground. By bike, you&amp;rsquo;re slow enough to
see things but fast enough to get from place to place.&lt;/p&gt;
&lt;p&gt;Last time, we brought our own bikes for the trip. These time, we used
the Bixi bike share. Here are some thoughts comparing their system
with our Citibike system. It&amp;rsquo;s not really a fair comparison. In NY I
use it alone for shopping and meetings and in Montreal, it was a
family of 4 tourists. Still, I found some things interesting.&lt;/p&gt;
&lt;h3 id=&#34;our-trips&#34;&gt;Our trips&lt;/h3&gt;
&lt;p&gt;On our first day, we rode from our place to the &lt;a href=&#34;http://espacepourlavie.ca/en/botanical-garden&#34;&gt;Botanical
Gardens&lt;/a&gt;. Between 7 and
8 kilometers. They had a pretty amazing exhibition going on:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Last time, we brought our own bikes. The biggest
difference - we didn&amp;rsquo;t have to schlep locks. Maybe not a big deal if
you&amp;rsquo;re taking little piddly locks, but when you&amp;rsquo;re taking
&lt;a href=&#34;http://www.abus.com/eng/Mobile-Security/Bike-safety-and-security/Locks/Lock-chain-combination/CityChain-1010&#34;&gt;these&lt;/a&gt;
and
&lt;a href=&#34;http://www.kryptonitelock.com/Pages/ProductInformation.aspx?PNumber=999492&#34;&gt;these&lt;/a&gt;
it&amp;rsquo;s a big deal. It&amp;rsquo;s really nice to be able take a bike and not have
to carry anything else, even though we did bring our own helmets.&lt;/p&gt;
&lt;p&gt;On the other hand, between the time it took to check out all four
bikes, a leisurely pace, and the timing of traffic lights, the ride
took about 50 minutes. That meant that we had to swap out bikes once
in the middle and wait two minutes between. Not a huge deal, but a
little annoying. The 45 minutes that subscribers of both systems get
seems to be a much sweeter spot. I know, 50 minutes is still more than
45, but at 30, by the time we check out four bikes and are ready to
go, the first bike already has almost 5 minutes on it.&lt;/p&gt;
&lt;p&gt;During the second day, we took the bikes down to the waterfront and
spent most of the day there. It was about a 17 minute ride. At the end
of the day, we decided to wend our way back to the apartment on foot
to see more of the neighborhoods - something we couldn&amp;rsquo;t do if we
brought our own bikes.&lt;/p&gt;
&lt;h3 id=&#34;issues-and-annoyances&#34;&gt;Issues and annoyances&lt;/h3&gt;
&lt;p&gt;One problem we had, was lack of internet. Without internet, you can&amp;rsquo;t
use the mobile app to find bike and docks. This turned out not to be
too much of a problem as Montreal seems to be saturated with Bixi
stations but it was a concern if we wanted to venture to more fringe
areas.&lt;/p&gt;
&lt;p&gt;Another problem was that there seemed to be a number of broken
docks. They were full, but the kiosk was non-responsive. This led to a
dual problem &amp;ndash; finding a place to dock your bike and taking another
bike out. This hit us twice, but fortunately, nearby docks were
working with bikes and docks.&lt;/p&gt;
&lt;p&gt;A third problem, and this one I never would have thought about before,
is that the Montreal bikes have shorter seat posts than the NY
bikes. This is actually a big deal. I&amp;rsquo;m about 5&#39;10&amp;rdquo; with short limbs
and at maximum height, the bikes were too short. My son&amp;rsquo;s legs are
longer. Neither of us are giants. This made for a less comfortable and
slower ride. I guess people might not notice &amp;ndash; even in NY I always
see people on rentals and Citibikes with their seats too low.&lt;/p&gt;
&lt;h3 id=&#34;overall&#34;&gt;Overall&lt;/h3&gt;
&lt;p&gt;I still love my Bike Friday.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;But I&amp;rsquo;m also liking this bike share touring thing as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>That One Inspirational Curriculum</title>
      <link>https://cestlaz.github.io/posts/2013-08-07-that_one_inspirational_curriculum/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-08-07-that_one_inspirational_curriculum/</guid>
      <description>&lt;p&gt;Over the last few years, I&amp;rsquo;ve heard a lot of people talk about curriculum.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;We need a curriculum that works for everyone.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;If we had a good curriculum, we could get CS in the schools.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Can&amp;rsquo;t you just take someone else&amp;rsquo;s curriculum and scale things out?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;People miss the point. In my twenty some odd years as an educator and
my forty five  as a human (including 18 as a parent), I&amp;rsquo;ve &lt;em&gt;never&lt;/em&gt;
heard someone talk about &lt;em&gt;that one inspirational curriculum&lt;/em&gt; that made
all the difference in their lives.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not about the curriculum, it&amp;rsquo;s about the teacher.&lt;/p&gt;
&lt;p&gt;The collegeboard web site provides some sample AP Computer Science A
syllabi. In them, you&amp;rsquo;ll find things like:&lt;/p&gt;
&lt;p&gt;mergesort&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;Students will gain additional practice with arrays as they explore the
nontrivial task of merging two sorted lists. In addition, students
will once again see a comparison between a recursive and
nonrecursive solution to an algorithm&amp;hellip;.&lt;/p&gt;
&lt;p&gt;Technically, this covers what has to be taught and what will be on the
AP exam but it really misses the point.&lt;/p&gt;
&lt;p&gt;I blogged about a few lessons I taught last year. One here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cestlaz.github.io/2013/03/23/Who_won_the_election-Quadratic_to_Linear_Time.html#.UgLhfN__umg&#34;&gt;http://cestlaz.github.io/2013/03/23/Who_won_the_election-Quadratic_to_Linear_Time.html#.UgLhfN__umg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;and here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://cestlaz.github.io/2012/12/17/layers-of-a-lesson.html#.UgLhi9__umg&#34;&gt;http://cestlaz.github.io/2012/12/17/layers-of-a-lesson.html#.UgLhi9__umg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first topic might have a line in the syllabus saying: Finding the mode
of a data set and have a description talking about using lists. None of
the beauty of the topic is captured in the syllabus. That&amp;rsquo;s all the
teacher.&lt;/p&gt;
&lt;p&gt;Similar things can be said about the second lesson.&lt;/p&gt;
&lt;p&gt;The NY State Common Core Math Curriculum does a little better (not
that I&amp;rsquo;m sold on it) - for example, it doesn&amp;rsquo;t just say &amp;ldquo;Quadratic
Formula&amp;rdquo; but at least says that it should be derived. It&amp;rsquo;s better, but
not by much.&lt;/p&gt;
&lt;p&gt;In my experience, Curricula are least common denominator documents and
centering education around them rather than teachers is a huge
mistake.&lt;/p&gt;
&lt;p&gt;A great teacher can inspire and mask a bad curriculum. The reverse isn&amp;rsquo;t true.&lt;/p&gt;
&lt;p&gt;Likewise, a bad curriculum can do more to constrain a good teacher than
a good curriculum can help a bad teacher to inspire.&lt;/p&gt;
&lt;p&gt;Over the past few years, I&amp;rsquo;ve met a few CS teachers that really
impressed me as teachers but not course designers. I found there
courses and curricula sorely lacking, but the fact that they had the
gift allowed them to truly inspire their students.&lt;/p&gt;
&lt;p&gt;Of course, this is not to say that good class design and curriculum
aren&amp;rsquo;t important &amp;ndash; those same teachers would be even better with a
better course framework but it has to start with the teaching talent.&lt;/p&gt;
&lt;p&gt;Why am I writing about this? Because more and more we see the
marginalization of teachers. We see the TFA 5 week training model or
summer workshops to create or train new teachers. The theory seems to
be, it we script the teaching, this will be sufficient. It might be,
if the goal is to get by standardized tests, but it won&amp;rsquo;t be if the
goal is to have an inspirational knowledgeable teacher in front of our
kids.&lt;/p&gt;
&lt;p&gt;For that we have to start with the talent and develop the curriculum
around it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summer Project 1 - Citibike Data</title>
      <link>https://cestlaz.github.io/posts/2013-07-14-summer_projects/</link>
      <pubDate>Sun, 14 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-07-14-summer_projects/</guid>
      <description>&lt;p&gt;So, the Citibike program has been running for a bit. I like the idea,
but I have some reservations &amp;ndash; it&amp;rsquo;s great for getting around in the
zone - I&amp;rsquo;ve been using it for short shopping trips - run cross town to
&lt;a href=&#34;http://www.fairwaymarket.com/&#34;&gt;Fairway&lt;/a&gt; or take a quick trip from
work to &lt;a href=&#34;http://www.portorico.com/store/&#34;&gt;Porto Rico Importers&lt;/a&gt; or
&lt;a href=&#34;http://pasticceriarocco.com/&#34;&gt;Rocco&amp;rsquo;s Pastries&lt;/a&gt;. On the other hand,
the zone doesn&amp;rsquo;t get to the residential neighborhoods of upper
Manhattan or the boroughs and the price per day is way too expensive
for regular working class joes, particularly on top of a subway trip.&lt;/p&gt;
&lt;p&gt;In any event, I was curious about station use patterns. Cool thing is
that you can get live data from
&lt;a href=&#34;http://citibikenyc.com/stations/json&#34;&gt;here&lt;/a&gt;. This was a great
opportunity to play with some tools to see if I want to use them in
class next year. In particular, &lt;a href=&#34;http://backbonejs.org&#34;&gt;backbone.js&lt;/a&gt;
and &lt;a href=&#34;d3js.org&#34;&gt;d3.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, I&amp;rsquo;m grabbing the station data every 5 minutes, storing it in a
Mongo database, and threw together a little map and graph app:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;You can check it out &lt;a href=&#34;http://cb.zamansky.net&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The code is up on GitHub:
&lt;a href=&#34;http://github.com/zamansky/citibike-1&#34;&gt;citibike-1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I might play around and add more graphs as I collect more data or
maybe I&amp;rsquo;ll just move on to the next project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NYTM &#43; StuyCS</title>
      <link>https://cestlaz.github.io/posts/2013-07-11-nytm/</link>
      <pubDate>Thu, 11 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-07-11-nytm/</guid>
      <description>&lt;p&gt;For those of that don&amp;rsquo;t know, the
&lt;a href=&#34;http://nytm.org&#34;&gt;New York Tech Meetup&lt;/a&gt; it&amp;rsquo;s one of the things that
help make the New York Tech Scene so awesome.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a group of some 30k+ members and once a month, at Skriball Center
at NYU they hold a meetup. It&amp;rsquo;s really quite an event. Members of the
tech community demo their projects, there&amp;rsquo;s question and answer time,
and afterwards theres a gathering for schmoozing amongst the crowd and
the presenters.&lt;/p&gt;
&lt;p&gt;During the QA period, there&amp;rsquo;s one rule &amp;ndash; You can&amp;rsquo;t ask &amp;ldquo;What&amp;rsquo;s your
business model.&amp;rdquo; I think we all love that it&amp;rsquo;s about the tech not
about the buck.&lt;/p&gt;
&lt;p&gt;Stuy CS family members such as
&lt;a href=&#34;http://digitalocean.com&#34;&gt;Digital Ocean&lt;/a&gt;,
&lt;a href=&#34;http://www.tactonic.com&#34;&gt;Tactonic Technologies&lt;/a&gt;, and
&lt;a href=&#34;http://www.vantageousvideo.com/pages/about&#34;&gt;Vantageous&lt;/a&gt; have all
presented. I&amp;rsquo;m not able to go to the meetup regularly - It&amp;rsquo;s usually
on a school night and tickets are hard to come by, but I love the fact
that whenever I&amp;rsquo;m there, I reconnect with old Stuy CS family members
and meet new ones. Yesterday, at the meetup I met Ron Williams, of
&lt;a href=&#34;http://knod.es&#34;&gt;Knodes&lt;/a&gt;. He&amp;rsquo;s Stuy &amp;lsquo;94 - one year before my first CS
grads.&lt;/p&gt;
&lt;p&gt;So, why am I writing about NYTM? As a result of our
&lt;a href=&#34;http://cestlaz.github.io/2013/06/27/Demo_Night.html#.Ud6jHKBtw7w&#34;&gt;Demo Night&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/brandondiamond&#34;&gt;Brandon Diamond&lt;/a&gt; invited a couple
of the groups to present as part of the &lt;strong&gt;Hack of the Month&lt;/strong&gt; segment.&lt;/p&gt;
&lt;p&gt;Brian, Eli, Jules, and Shan got up on stage and presented their work
to a live audience of about 1000 technologiest plus those viewing the
simulcast.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Afterwards the we mixed with the crowd. A great experience for the guys.&lt;/p&gt;
&lt;p&gt;As Brandon said afterwards - &amp;ldquo;That&amp;rsquo;s another 1000 people that know what you guys are doing.&amp;rdquo; Given the difficulties in getting our program recognized and to more students, this exposure is so important.&lt;/p&gt;
&lt;p&gt;So, thanks Brandon, Jessica, and everone else involved in giving the kids this opportunity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; If you want to actually see the kids, check out the vide here: &lt;a href=&#34;http://mlb.mlb.com/shared/flash/mediaplayer/v4.4/R7/MP4.jsp?calendar_event_id=14-376935-2013-07-10&amp;amp;source=NYTM&amp;amp;media_type=video&#34;&gt;NYTM Video&lt;/a&gt;. Just go to the 4th yellow dot (about 52 minutes in).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gender stats</title>
      <link>https://cestlaz.github.io/posts/2013-07-05-gender-stats/</link>
      <pubDate>Fri, 05 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-07-05-gender-stats/</guid>
      <description>&lt;p&gt;People keep asking me about how we&amp;rsquo;re doing with respect to gender
balance and CS education at Stuy.&lt;/p&gt;
&lt;p&gt;Rather than writing the same email again and again, I figured I&amp;rsquo;d summarize things here.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve done rather well at Stuy. I might write more in depth at some
point in the future but we don&amp;rsquo;t dumb anything down and we aren&amp;rsquo;t
patronizing. I think much of the success can be attributed to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Awesome teachers that really know their CS and are great teachers.&lt;/li&gt;
&lt;li&gt;Teachers that buy into the same insanity.&lt;/li&gt;
&lt;li&gt;Well designed courses in a well designed sequence.&lt;/li&gt;
&lt;li&gt;A well designed &lt;strong&gt;required&lt;/strong&gt; intro course where young ladies can see that this stuff is cool and women are just as good at it as men.&lt;/li&gt;
&lt;li&gt;Did I mention awesome teachers.&lt;/li&gt;
&lt;li&gt;An atmosphere where everyone feels accepted.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An important fact to consider here is that Stuyvesant is only &lt;strong&gt;40%
female&lt;/strong&gt; so our numbers are actually even better than they
appear. Also, we&amp;rsquo;ve typically offered AP CS to 150 students and our
senior classes to between 60 and 120 students. Even with these
numbers, we&amp;rsquo;re always over subscribed (it&amp;rsquo;s not uncommon to have 300 - 400 students out of a class of about 800 students request AP Computer Science).&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;You might wonder why I included the C Physics numbers. Of all the
other STEM AP classes, C Physics is probably the most analagous to AP
Comp Sci.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Both are electives that are traditionally male dominated.&lt;/li&gt;
&lt;li&gt;Both follow a required class in an earlier grade.&lt;/li&gt;
&lt;li&gt;Neither is a graduation requirement,&lt;/li&gt;
&lt;li&gt;but C Physics can fulfill one of Stuyvesant&amp;rsquo;s senior science elective requirements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I didn&amp;rsquo;t look at Calculus because at
Stuy, Calc is just &amp;ldquo;the next math course&amp;rdquo; so just students take it
regardless of gender.&lt;/p&gt;
&lt;p&gt;Another difference is that AP CS is offered mostly to juniors and that
the students have additional classes they can take in their senior
year.&lt;/p&gt;
&lt;p&gt;Notice that Stuy CS outperforms the national gender breakdown while
Stuy C Physics doesn&amp;rsquo;t. The point is that it&amp;rsquo;s not a Stuy thing, it&amp;rsquo;s
something we&amp;rsquo;re doing in our little CS corner of the world.&lt;/p&gt;
&lt;p&gt;Another interesting morsel is that we recently had our &lt;a href=&#34;http://cestlaz.github.io/2013/06/27/Demo_Night.html#.UdXzVaBtw7w&#34;&gt;demo night&lt;/a&gt;. There
were 13 combined students on the four winning teams. 6 were young
ladies so women were in no way dominated in our most advanced class.&lt;/p&gt;
&lt;p&gt;So, there you have it. What&amp;rsquo;s going on with gender and CS at Stuy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Graduation</title>
      <link>https://cestlaz.github.io/posts/2013-07-02-graduation/</link>
      <pubDate>Tue, 02 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-07-02-graduation/</guid>
      <description>&lt;!DOCTYPE html&gt;


One week ago today was Stuyvesant&#39;s graduation.
&lt;p&gt;&lt;p&gt;
I usually know a number of seniors pretty well but, since I like to
cycle through classes, every couple of years I have a group that I&#39;ve
been with from 10th grade to 12th.
&lt;p&gt;
This was one of those years
&lt;p&gt;
It was extra special because it was also my daughter Batya&#39;s graduating class.
&lt;p&gt;
It&#39;s been an amazing gift to be able to work at her school for the past four years and she&#39;s been amazingly tolerant. Particularly with both her and her boyfriend in my class this year.
&lt;p&gt;

Actually, they&#39;re both terrific and I think I only embarrassed her a
couple of times.
&lt;p&gt;&lt;p&gt;

Every few years, my seniors ask me if I want them to nominate me as
faculty speaker at graduation. Usually I say no - stage fright. This
year, Batya asked. I thought it would be really cool. I said yes and
the troops came through and voted me in. I wasn&#39;t sure I would be the
winner, but as Peter commented &#34;but you lead the most popular cult at
Stuy!&#34;

It would have been enough of an honor to speak to the graduating
class, including many students that I feel connected to and it would
have been a great honor to speak at Batya&#39;s graduation. To add to it
all, the guest keynote speaker was my dear childhood friend Ben Fried.
&lt;P&gt;
Truly a career highlight.
&lt;P&gt;
Ben was terrific. I was watching the audience as he spoke - he
delivered a great message and really kept the classes attention. No video as of yet, but Ben published the text on Google+.

&lt;P&gt;
You can find it
&lt;a href=&#34;https://plus.google.com/108690239590381459413/posts/addaYWp36R2&#34;&gt;here&lt;/a&gt;

&lt;p&gt;&lt;p&gt;

Here&#39;s a video of my speech. Jennifer said some very nice things to
introduce me. I was tempted to go off script right at the beginning
and point out that many of the nice things she said were really about
our CS team and not just me:
&lt;p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/beFQc2U9Kls&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;p&gt;
I really didn&#39;t read the speech, just used the printed text as notes,
but here&#39;s what I worked from:

&lt;a href=&#34;https://cestlaz.github.io/img/07-02-2013-graduation/gradspeech.pdf&#34;&gt;gradspeech.pdf&lt;/a&gt;
&lt;p&gt;&lt;p&gt; The graduating class seemed to enjoy it, at least as much as
one can enjoy any graduation speech, but, for me, as I said, a
career highlight.




</description>
    </item>
    
    <item>
      <title>Demo Night</title>
      <link>https://cestlaz.github.io/posts/2013-06-27-demo_night/</link>
      <pubDate>Thu, 27 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-06-27-demo_night/</guid>
      <description>&lt;p&gt;This past year, I was able to convince my administration to allow me
to create a new course - Software Development. I really felt there was
something missing in our kids CS preparation - missing both from
Stuy&amp;rsquo;s program and from many youngsters college experiences.&lt;/p&gt;
&lt;p&gt;I plan to do a few posts on the course, it&amp;rsquo;s design, implementation,
and lessons learned, but for today, let&amp;rsquo;s look at the years
culminating event:&lt;/p&gt;
&lt;p&gt;The class had students working in teams taking projects from idea to
completion. Last week, we had a demo night, hosted by
&lt;a href=&#34;http://cstuy.org&#34;&gt;CSTUY&lt;/a&gt; and Google. Neal Zupancic, part of our Stuy
CS family attended the event and put together a wonderful write up on
the &lt;a href=&#34;http://cstuy.org/blog/stuy-cs-software-development-demo-night-neal-zupancic&#34;&gt;CSTUY
Blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before getting into details, thanks goes out to Ben Fried, Mike Mu,
and the rest of the Stuy CS Googlers who helped out. Ben for securing
the space, Mike for coordinating everything, and the rest for manning
the event.&lt;/p&gt;
&lt;p&gt;The students, parents, friends, alums, and guests from the NY Tech scene gathered at Google at 6:00 last Thursday. Judging the event, we had
&lt;a href=&#34;https://twitter.com/brandondiamond&#34;&gt;Brandon Diamond&lt;/a&gt; of HuffPost labs, founder of the &lt;a href=&#34;http://www.hackerunion.org/&#34;&gt;Hacker Union&lt;/a&gt; and &lt;a href=&#34;http://nytm.org&#34;&gt;NYTM&lt;/a&gt; board member, &lt;a href=&#34;https://twitter.com/evankorth&#34;&gt;Evan Korth&lt;/a&gt;, founder of &lt;a href=&#34;http://hackny.org&#34;&gt;hackNY&lt;/a&gt;, &lt;a href=&#34;http://nytm.org&#34;&gt;NYTM&lt;/a&gt; board member and NYU Professor and Lee Fischman, &lt;a href=&#34;http://family.stuycs.org&#34;&gt;StuyCS family&lt;/a&gt; member, currently at Galorath, and as dinosaurs like me remember, one of the creators of &lt;a href=&#34;http://en.wikipedia.org/wiki/The_Big_Electric_Cat&#34;&gt;The Big Electric Cat&lt;/a&gt;. Awesome folk all.&lt;/p&gt;
&lt;p&gt;The students presented a set of amazing projects. They can all be
found on the class &lt;a href=&#34;http://github.com/stuycs-softdev&#34;&gt;github page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The evening was like a NYTM for a group of amazing high school youngsters.&lt;/p&gt;
&lt;p&gt;Here are some of the highlights:&lt;/p&gt;
&lt;h4 id=&#34;scavenger-tours&#34;&gt;Scavenger Tours&lt;/h4&gt;
&lt;h5 id=&#34;tied-for-winning-project&#34;&gt;Tied for winning project&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Team: Denis, Claire, Sofia, and Sarah&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/stuycs-softdev/ScavengerTours&#34;&gt;https://github.com/stuycs-softdev/ScavengerTours&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Live: &lt;a href=&#34;http://ml7.stuycs.org:1995/&#34;&gt;http://ml7.stuycs.org:1995/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create tours that people can take using their mobile devices.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;stuy-wiggles&#34;&gt;Stuy Wiggles&lt;/h4&gt;
&lt;h5 id=&#34;winner---scratch-your-own-itch&#34;&gt;Winner - &amp;ldquo;Scratch your own itch&amp;rdquo;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Team: Georgianna, Mengdi, Victoria&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/stuycs-softdev/StuyWiggles&#34;&gt;https://github.com/stuycs-softdev/StuyWiggles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Live: &lt;a href=&#34;http://ml7.stuycs.org:7007/about&#34;&gt;http://ml7.stuycs.org:7007/about&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An attempt at fixing all the problems students have registering for classes at Stuyvesant. This is probably the most polished project of all the demos.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;stall-wall&#34;&gt;Stall Wall&lt;/h4&gt;
&lt;h5 id=&#34;winner----most-amusing-project&#34;&gt;Winner &amp;ndash; most amusing project&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Team: Ivan Smirnoff Jules Skrill&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/stuycs-softdev/StallWall&#34;&gt;https://github.com/stuycs-softdev/StallWall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Live: &lt;a href=&#34;http://ml7.stuycs.org:45454/&#34;&gt;http://ml7.stuycs.org:45454/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Collaborative network writing on the bathroom wall!!!!&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;web-explorer&#34;&gt;Web Explorer&lt;/h4&gt;
&lt;h5 id=&#34;tied-for-winning-project-1&#34;&gt;Tied for winning project&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Team: Eli Nass, Shan Shi, Brian Yan, Brain Zhang&lt;/li&gt;
&lt;li&gt;Github &lt;a href=&#34;https://github.com/stuycs-softdev/NSYZ&#34;&gt;https://github.com/stuycs-softdev/NSYZ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Live &lt;a href=&#34;http://ml7.stuycs.org:1999/&#34;&gt;http://ml7.stuycs.org:1999/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Turn any web page into a game.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The students had a great time and got lots of feedback from the
audience, particularly during pizza time after the demos.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll post more about the course in the coming weeks but demo night was
a terrific conclusion to a terrific first year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Real Data - Part II</title>
      <link>https://cestlaz.github.io/posts/2013-05-20-real_data_part_ii/</link>
      <pubDate>Mon, 20 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-05-20-real_data_part_ii/</guid>
      <description>&lt;p&gt;About a month ago, I talked about using &lt;a href=&#34;http://cestlaz.github.io/2013/04/14/Real_Data.html#.UZjTjqDctKk&#34;&gt;real
data&lt;/a&gt;
with our intro classes. After looking at the correlation between
school&amp;rsquo;s SAT scores and free and reduced lunch rates, it was time to
turn the students loose.&lt;/p&gt;
&lt;p&gt;The assignment: Find some interesting data out and do something with
it. Make a web page that shows what you did and what you
discoverde. We had already looked at the NYC Data Mine as well as a
few other sources but students were encouraged to find new data sourcess.&lt;/p&gt;
&lt;p&gt;The results were terrific. On top of the requirements, some students
figured out how to incorporate Google Maps, graphs, and other niceties
well beyond what we&amp;rsquo;ve covered in class.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Explorations included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://149.89.150.100/~veronika.azzara/compsci_project/maps.py&#34;&gt;311 Calls in NYC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://149.89.150.100/~vanessa.miraj/untitled%20text%203.html&#34;&gt;Movie earnings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://149.89.150.100/~lily.chen/fooddata.html&#34;&gt;Food pricing over time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://149.89.150.100/~ivette.chen/healthiest-state-rankings.py&#34;&gt;Red Meat and Health&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://149.89.150.100/~hilary.tung/data/pie%20vs%20cake.py&#34;&gt;Cake comparisons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and even&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://149.89.150.100/~kyle.oleksiuk/Kyle&amp;amp;AnishProject2.html&#34;&gt;Pokemon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s just a sampling.&lt;/p&gt;
&lt;p&gt;Well done guys.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Evaluating Teachers - Evaluating schools</title>
      <link>https://cestlaz.github.io/posts/2013-05-09-evaluating_teachers/</link>
      <pubDate>Thu, 09 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-05-09-evaluating_teachers/</guid>
      <description>&lt;h1 id=&#34;the-problem&#34;&gt;The Problem:&lt;/h1&gt;
&lt;p&gt;The buzz word is &amp;ldquo;accountability.&amp;rdquo; Why are teachers special? Why don&amp;rsquo;t
they feel they need to be evaluated like other professionals? Why do
they feel they need a &amp;ldquo;job for life?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Of course, the job for life line is nonsense &amp;ndash; teachers have tenure,
but that&amp;rsquo;s just due process - not a guarantee of a job.&lt;/p&gt;
&lt;p&gt;Friends in the private sector ask &amp;ldquo;if a teacher is doing a good job,
why do they need tenure? In the private sector as long as you&amp;rsquo;re
producing, you&amp;rsquo;ve got nothing to worry about.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Well, first I dispute that last sentence. second, K-12 education isn&amp;rsquo;t
the real world. It&amp;rsquo;s rife with stories of administrators that go after
teachers for no apparent reason. Why? Because accountability doesn&amp;rsquo;t
mean accountability - it means we can fire teachers at will. No one
wants accountability to apply to anyone except the ground troops. I
don&amp;rsquo;t have an exact attribution, but Mayor Bloomberg is frequently
quoted as stating &amp;ldquo;If parent&amp;rsquo;s don&amp;rsquo;t like the way I run the schools,
they can boo me at parades.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Beyond that, the powers that be state that teacher accountability
revolves around flawed &amp;ldquo;value added&amp;rdquo; metrics but other bloggers such as Gary
Rubintein have already done a great job debunking that.&lt;/p&gt;
&lt;h1 id=&#34;the-solution&#34;&gt;The Solution:&lt;/h1&gt;
&lt;p&gt;The solution is to simplify. There&amp;rsquo;s a better way. Let&amp;rsquo;s start by
making the principals accountable. Bottom line is that they&amp;rsquo;re
responsible for a school&amp;rsquo;s success. If the school doesn&amp;rsquo;t cut the
mustard, then they&amp;rsquo;re out. But, how do we measure this?&lt;/p&gt;
&lt;p&gt;High Schools&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Madlib Madness</title>
      <link>https://cestlaz.github.io/posts/2013-04-30-madlib_madness/</link>
      <pubDate>Tue, 30 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-04-30-madlib_madness/</guid>
      <description>&lt;p&gt;Earlier in the term, our intro classes spent a little time learning
some basic HTML. We don&amp;rsquo;t spend a lot of time on it, just enough so
that the students can present their work in a static web site. The end
goal, though, was to programatically generate the web sites - there&amp;rsquo;s
nothing quite as empowering to a student as when they can present their
work to the world.&lt;/p&gt;
&lt;p&gt;Finally, it&amp;rsquo;s all coming together.&lt;/p&gt;
&lt;p&gt;Now that the classes are comfortable with Python, we can have some
fun. We all remember Mad Libs - that wacky word game where you select
unknowingly select words to substitute into a basic story and
hilarity ensues.&lt;/p&gt;
&lt;p&gt;We did our own versions using Python files, lists and
dictionaries.&lt;/p&gt;
&lt;p&gt;Here are some of the results:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;http://homer.stuy.edu/~richard.zhan/19-Madlibs.py&#34;&gt;http://homer.stuy.edu/~richard.zhan/19-Madlibs.py&lt;/a&gt;
&lt;!-- raw HTML omitted --&gt;
2. &lt;!-- raw HTML omitted --&gt;
&lt;a href=&#34;http://homer.stuy.edu/~veronika.azzara/madlibifystory.py&#34;&gt;http://homer.stuy.edu/~veronika.azzara/madlibifystory.py&lt;/a&gt;
&lt;!-- raw HTML omitted --&gt;
3. &lt;!-- raw HTML omitted --&gt;
&lt;a href=&#34;http://homer.stuy.edu/~belinda.liang/18-MadLibsMiniProject.py&#34;&gt;http://homer.stuy.edu/~belinda.liang/18-MadLibsMiniProject.py&lt;/a&gt;
&lt;!-- raw HTML omitted --&gt;
4. &lt;!-- raw HTML omitted --&gt;
&lt;a href=&#34;http://homer.stuy.edu/~kyle.oleksiuk/MadlibifyProject5.py&#34;&gt;http://homer.stuy.edu/~kyle.oleksiuk/MadlibifyProject5.py&lt;/a&gt;
&lt;!-- raw HTML omitted --&gt;
5. &lt;!-- raw HTML omitted --&gt;
&lt;a href=&#34;http://homer.stuy.edu/~phillip.huynh/story.py&#34;&gt;http://homer.stuy.edu/~phillip.huynh/story.py&lt;/a&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;The students wrote a basic story with substitution points. Their
programs then randomly replaced these points with words from an
assortment of categorized lists.&lt;/p&gt;
&lt;p&gt;Enjoy!!!!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Real Data</title>
      <link>https://cestlaz.github.io/posts/2013-04-14-real_data/</link>
      <pubDate>Sun, 14 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-04-14-real_data/</guid>
      <description>&lt;p&gt;When looking for assignments for our classes, in addition to trying to
craft assignments that develop and reinforce key ideas, we also strive
to come up with ideas that &amp;ldquo;speak&amp;rdquo; to the students and keep their
interest. We write small games, use problems within the student&amp;rsquo;s
experiences, and in general try to find problems that are appealing.&lt;/p&gt;
&lt;p&gt;This is much easier to do when the kids can read data from a file. The
tool we&amp;rsquo;re using with our sophomores right now is Python and Python
makes reading files very easy. Combining file input with basic string
functions and all of a sudden, we can read and parse comma separated
values.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;l&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; line &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; open(filename)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readlines():
l&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(line&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;True, this doesn&amp;rsquo;t handle quotes and embedded commas, but that just
leads to a discussion on cleaning up data and when we do list
comprehensions, things get even slicker.&lt;/p&gt;
&lt;p&gt;We could just make up some sample data, for example, student test scores:&lt;/p&gt;
&lt;p&gt;Tom,95,87,97,93&lt;/p&gt;
&lt;p&gt;Sarah,98,98,84,92&lt;/p&gt;
&lt;p&gt;Harry,90,90,90,90&lt;/p&gt;
&lt;p&gt;Sue,94,95,96,97&lt;/p&gt;
&lt;p&gt;But it&amp;rsquo;s so much more fun with the wealth of CSV data waiting to be
grabbed. If your kids like sports, you can check
out &lt;!-- raw HTML omitted --&gt;baseball-reference.com&lt;!-- raw HTML omitted --&gt;
or it&amp;rsquo;s counterparts for basketball or football.&lt;/p&gt;
&lt;p&gt;We decided to look at government data instead.&lt;/p&gt;
&lt;p&gt;Federal data can be found at &lt;!-- raw HTML omitted --&gt;data.gov&lt;!-- raw HTML omitted --&gt; but we focused on &lt;!-- raw HTML omitted --&gt;New York City&lt;!-- raw HTML omitted --&gt;. We
settled
on &lt;!-- raw HTML omitted --&gt;SAT&lt;!-- raw HTML omitted --&gt;
data. SAT math, reading, and writing scores for all NYC public
schools. Something Stuy kids are very interested in. We were able to
look for comparable schools, which schools had large spreads between
math and verbal, which schools had score increases over time, etc.&lt;/p&gt;
&lt;p&gt;Much more interesting to look at real SAT data than made up student
grade info.&lt;/p&gt;
&lt;p&gt;Tomorrow we&amp;rsquo;ll look at combining data sets &amp;ndash; looking at
the relationship between SAT scores and school ratings and
demographics. It should be interesting. Later, we&amp;rsquo;ll grab books
from &lt;!-- raw HTML omitted --&gt;Project Gutenberg&lt;!-- raw HTML omitted --&gt; and see
how we can analyze large texts.&lt;/p&gt;
&lt;p&gt;The moral of the story - there&amp;rsquo;s lots of great data easily accessible
&amp;ndash; let&amp;rsquo;s use it to motivate and engage our students.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;UPDATE:&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s taken me a while to post this, and in the meantime we analyzed
the SAT data from one NYC data set and matched it with a data set of
demographic data:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The graph shows a strong correlation between schools with a high number of
students eligable for free lunch (the Y-axis) and low SAT scores (the
X-axis). This led to a very interesting conversation on the effects of
poverty.&lt;/p&gt;
&lt;p&gt;We also noticed a couple of outliers. There&amp;rsquo;s one school at about
(1400,82). High poverty (free lunch) and national average SAT. Also two
schools with low free lunch numbers and middling SAT scores
(1400,17ish).&lt;/p&gt;
&lt;p&gt;The (1400,82) point turns out to be a school that caters to English
Language Learners and we presume has a large number of recent
immigrants (partially noted by the name and also by the fact that
their SAT math scores far surpassed the English ones).&lt;/p&gt;
&lt;p&gt;Great discussions ensued all due to applying CS to real world data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Who won the election -- Quadratic to Linear Time!!!!!</title>
      <link>https://cestlaz.github.io/posts/2013-03-23-who_won_the_election-quadratic_to_linear_time/</link>
      <pubDate>Sat, 23 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-03-23-who_won_the_election-quadratic_to_linear_time/</guid>
      <description>&lt;p&gt;Last week was crazy. Busy, stressful, late night after late night. It
ended, though, on a great note.&lt;/p&gt;
&lt;p&gt;A young lady in my intro class found me in my office near the end of the day:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Student: Mr. Z, I wanted to make sure to catch you before vacation!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Me: What&amp;rsquo;s up?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Student: I wanted to tell you that today&amp;rsquo;s lesson was AWESOME!!!!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wow. I&amp;rsquo;ve been teaching 23 years and that&amp;rsquo;s never happened before!!!!&lt;/p&gt;
&lt;p&gt;So, what was the hubbub about?&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve been doing list processing in Python over the past few days. We already did the basics, such as finding the largest element in a list:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;find_max&lt;/span&gt;(L):
  maxval &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
  i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;len(L):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; L[i]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;maxval:
     maxval&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;L[i]
  i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; maxVal&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We&amp;rsquo;ve also done basic searching, counting elements, removing elements, etc.&lt;/p&gt;
&lt;p&gt;Today we started with finding the mode of a list of grades.&lt;/p&gt;
&lt;p&gt;Most students approached the problem as a maximum problem. Assume the
first item is the mode and find it&amp;rsquo;s frequency, then proceed through
the list each time seeing if the current node occurs more fequently
than the &amp;ldquo;mode so far.&amp;rdquo; Pretty much the same idea as find_max (but in this case, returning a list of all the modes).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mode&lt;/span&gt;(L):
  modecount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count( L[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] )
  modes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ L[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] ]
  i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; len(L):
    c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count(L[i])
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; modecount:
      modecount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c
      modes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ L[i] ]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;modecount &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; L[i] &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; modes:
      modes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append( L[i] )
    i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; modes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pretty cool. The kids are doing something pretty sophisticated here.&lt;/p&gt;
&lt;p&gt;Time to look deeper. We started running this on larger and larger data
sets. Things started really slowing down at about 20K. We then timed
things to get some numbers (thanks
&lt;a href=&#34;http://stackoverflow.com/questions/5998245/get-current-time-in-milliseconds-in-python&#34;&gt;StackOverflow&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;What was going on. The students pretty quickly honed in on the line
that called L.count(L[i]) &amp;ndash; &lt;strong&gt;Hidden Complexity&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We haven&amp;rsquo;t done big-O notation but the class easily saw that count had
to go through the entire data set and we ended up with an N^2
algorithm. For example, if we have 10 items, the main loop executes 10
times and each time, count goes through the entire list (10 items) as
well. If we go to 100 items, it becomes 100x100.&lt;/p&gt;
&lt;p&gt;What to do????&lt;/p&gt;
&lt;p&gt;Time to talk about what&amp;rsquo;s probably the most discussed instance of mode
finding - elections. The winner is &amp;ldquo;the mode of the ballots.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Of course we don&amp;rsquo;t use the above algorithm. We usually tally or count the ballots. We go through the ballots once, each time adding one to the appropriate candidates &amp;ldquo;bucket.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cestlaz.github.io/img/tally.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;From here, it&amp;rsquo;s a short step to see that we can use a list. It&amp;rsquo;s
indices represent the grade values and the data in the list the counts
or tallies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fastmode&lt;/span&gt;(L):
  i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  counts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;max(L)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
    counts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    i&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; len(L):
    counts[ L[i] ] &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
    i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  modecount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(counts)
  modes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
  i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; len(counts):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; counts[i]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;modecount:
    modes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(i)
    i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; modes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We go through the list once to build the tallies and then the &amp;ldquo;tally&amp;rdquo;
list once to get the modes. Simple, straightforward, and linear
time!!!!!!!!!&lt;/p&gt;
&lt;p&gt;The original routine started to hit a roadblock at about 20K items,
here we got to one million without breaking a sweat.&lt;/p&gt;
&lt;p&gt;The take away:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get it working first.&lt;/li&gt;
&lt;li&gt;Then profile to find your bottleneck&lt;/li&gt;
&lt;li&gt;Look at the problem in a different way&lt;/li&gt;
&lt;li&gt;Using data structures in a clever way can really improve performance.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Schools, Snake Oil, and the SOTU</title>
      <link>https://cestlaz.github.io/posts/2013-02-14-schools-snake-oil-and-the-sotu/</link>
      <pubDate>Thu, 14 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-02-14-schools-snake-oil-and-the-sotu/</guid>
      <description>&lt;p&gt;Today I had the privilege of attending my second live State of the City
address. Mayor Bloomberg didn&amp;rsquo;t spend as much time on education as he
did at last year&amp;rsquo;s address but he did take a moment to give a shout out
to charter schools. It gets old hearing the same false story about how
charters are better than public schools. At least we have people
like &lt;!-- raw HTML omitted --&gt;Gary
Rubinstein&lt;!-- raw HTML omitted --&gt; and &lt;!-- raw HTML omitted --&gt;Diane
Ravitch&lt;!-- raw HTML omitted --&gt; trying to set the record straight.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s worse, when public schools are lauded, it seems that the ones
given the spotlight are selling the same snake oil as the charter
schools. Gary Rubinstein recently posted on one
case &lt;!-- raw HTML omitted --&gt;here&lt;!-- raw HTML omitted --&gt;
but I&amp;rsquo;d like to talk about another.&lt;/p&gt;
&lt;p&gt;This week President Obama gave his State of the Union address. He
gave a shout out to P-Tech, a new school with a six year (9-14)
program. It&amp;rsquo;s a partnership with IBM and students completing the six
years will have the opportunity to interview for a job at IBM (note,
that&amp;rsquo;s an opportunity to interview, not an actual job). When I heard
the shout out, my stomach sank.&lt;/p&gt;
&lt;p&gt;P-Tech is being hailed as a new model for public education but for me,
it raised serious questions.&lt;/p&gt;
&lt;p&gt;First off, when did we start considering a school, under two years in
existence, a success. The education reformers love to talk data yet
here&amp;rsquo;s the President, lauding a school that&amp;rsquo;s collected no data. I
personally feel that P-Tech is more style than substance but we won&amp;rsquo;t
know either way for another six to ten years.&lt;/p&gt;
&lt;p&gt;In any event, let&amp;rsquo;s think about the possible outcomes.&lt;/p&gt;
&lt;p&gt;The best case is a student selects P-Tech in the 8th grade and leaves
six years later with a solid job at IBM. What&amp;rsquo;s wrong with that?&lt;/p&gt;
&lt;p&gt;Well, since NY dismantled all the large schools, all that&amp;rsquo;s left are
small &amp;ldquo;themed&amp;rdquo; schools. Since they&amp;rsquo;re small, they don&amp;rsquo;t offer a wide
range of electives, only ones in their theme. So, a youngster has
to &lt;!-- raw HTML omitted --&gt;know&lt;!-- raw HTML omitted --&gt; that they want to do in 8th grade. Should a thirteen
year old be forced to make a decision like that?&lt;/p&gt;
&lt;p&gt;Another question is will there be quality jobs waiting for these
kids? With more and more computing moving to the cloud, will there be
jobs waiting for these kids in NY six years after they begin?&lt;/p&gt;
&lt;p&gt;I have numerous other questions about P-Tech, but I really want to
focus on one more here and it&amp;rsquo;s one that surprised me when I started
thinking about it.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not really a commentary on P-Tech but more on &amp;ldquo;early college&amp;rdquo; and
what we consider college level work.&lt;/p&gt;
&lt;p&gt;After the President&amp;rsquo;s shout out, I decided to see if P-Tech would have
something to say about it. I ended up reading a piece by Principal
Rashid Davis where he talked about fifteen of his students earning a
&amp;ldquo;C&amp;rdquo; or better in a college level course at City Tech, a CUNY school.&lt;/p&gt;
&lt;p&gt;My first reaction was &amp;ldquo;that&amp;rsquo;s really cool.&amp;rdquo; Then I started to
think. My daughter&amp;rsquo;s graduating high school this year. She&amp;rsquo;s very
smart and capable and has always achieved academically. I wondered,
how would I feel if the courses she takes next year are at a level of
rigor such that she could have succeeded as a high school freshman? My
answer was that I would be very disappointed in the college.&lt;/p&gt;
&lt;p&gt;She backed me up by saying that she felt, looking back at all the AP
courses she has taken, she probably wasn&amp;rsquo;t ready for most of them in
her freshman high school year. My own observations back this up. At
Stuyvesant, we teach an enhanced version of the old AB AP Computer
Science curriculum. We teach this to students in their junior
year. Years ago, I had some sophomores enrolled and while a few
succeeded, most of the time, the kids just weren&amp;rsquo;t ready.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t mean to say anything demeaning to Mr. Davis&amp;rsquo; students here,
but if our colleges are teaching courses in which a typical high school
freshman can excel, then  maybe they shouldn&amp;rsquo;t be college level courses.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve never really believed in the &amp;ldquo;early college&amp;rdquo; model anyway. We
teach A.P. computer science at Stuyvesant but most of our CS sequence
is designed to complement what our graduates will face in
college. We&amp;rsquo;re giving them the missing pieces. Yes, there is overlap,
and I do believe we have a similar level of rigor but we strive to
give the kids something they won&amp;rsquo;t get otherwise.&lt;/p&gt;
&lt;p&gt;In any event, at the end of the day what do we have? Plenty of snake
oil to go around.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Taking it out of the school</title>
      <link>https://cestlaz.github.io/posts/2013-02-10-taking-it-out-of-the-school/</link>
      <pubDate>Sun, 10 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-02-10-taking-it-out-of-the-school/</guid>
      <description>&lt;!DOCTYPE html&gt;


Inspired by the likes of &lt;a href=&#34;https://twitter.com/JonSimantov&#34;&gt;Jon
Simantov&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/davidblerner&#34;&gt;David
Lerner&lt;/a&gt; as well as the greater Stuy CS family, a few of us have
been working on &lt;a href=&#34;http://cstuy.org&#34;&gt;CSTUY&lt;/a&gt;, Computer Science
and Technology for Urban Youth. Yeah, we backed into the
acronym. Let&#39;s bring Stuy CS out of Stuy so we can work on inspiring
a wider range of students.
&lt;p&gt;
Well, last Wednesday we had our inaugural event. Hosted
by &lt;a href=&#34;http://www.techstars.com/program/locations/nyc/&#34;&gt;NY
TechStars&lt;/a&gt; (thanks Moisey), we invited 75 youngsters to an evening
of talks. The idea was to have five different speakers each deliver
words of wisdom and inspiration on a different but related topic.
&lt;p&gt;

First up, John Lee of &lt;a href=&#34;http://schoolyourself.org/index.html&#34;&gt;School Yourself&lt;/a&gt;.
&lt;p&gt;
&lt;p&gt;

&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;http://cestlaz.github.com/img/techstars-2-6/johnlee.png&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/techstars-2-6/johnlee.png&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;p&gt;

John talked about big data. Starting with a question &#34;Who plays Chase
on House?&#34; John showed that by looking at huge data sets we can,
relatively easily, come up with the answer. John showed that problems
such as question answering are really accessible to youngsters. They
might just be beginning, but they&#39;re not far away from being able to
do some really cool things.
&lt;p&gt;

Next up &lt;a href=&#34;https://twitter.com/moiseyuretsky&#34;&gt;Moisey Uretsky&lt;/a&gt;. Moisey talked about his journey from
graduating high school through his college days, to starting
companies, successes, failures and the adventure along the way. Moisey was frank and engaging and really gave the kids a lot to think about.
&lt;p&gt;

&lt;a href=&#34;https://twitter.com/spikegronim&#34;&gt;Spike Gronim&lt;/a&gt; was next.
&lt;p&gt;
&lt;p&gt;


&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/techstars-2-6/spike.png&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/techstars-2-6/spike.png&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;p&gt;

Also talking about big data but Spike talked more about the dangers of
misinterpreting data and how different representations can yield very
different results. Spike also spent time giving career advice.
&lt;p&gt;
&lt;p&gt;


&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/techstars-2-6/spike2.png&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/techstars-2-6/spike2.png&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;p&gt;


&lt;a href=&#34;https://twitter.com/TimNovikoff&#34;&gt;Tim Novikoff&lt;/a&gt; gave a different perspective. Tim spoke about how his explorations in IOS development lead in a roundabout way to his doctoral studies and very interesting research.

&lt;p&gt;
&lt;p&gt;

Hitting cleanup was Gerry Seidman of &lt;a href=&#34;http://www.tactonic.com/company.html&#34;&gt;Tactonic Technologies&lt;/a&gt;.
&lt;p&gt;
&lt;p&gt;

Gerry gave a whirlwind talk about many of the things he&#39;s worked
on. As he said &#34;I don&#39;t have time to talk about anything, so I&#39;ll talk
about everything.&#34; Highlights included the latest touch technology he&#39;s
working on as well as vacation man++.
&lt;p&gt;
&lt;p&gt;

&lt;div align=&#34;center&#34;&gt;f
&lt;a href=&#34;https://cestlaz.github.io/img/techstars-2-6/vacationman.png&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/techstars-2-6/vacationman.png&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;p&gt;

Gerry also dispensed words of wisdom to the audience.
&lt;p&gt;
&lt;p&gt;

&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;https://cestlaz.github.io/img/techstars-2-6/gerryadvice.png&#34; rel=&#34;lightbox&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/techstars-2-6/gerryadvice.png&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;p&gt;

While each talk was different, there were common themes:
&lt;p&gt;
&lt;p&gt;

&lt;ul&gt;
&lt;li&gt;Do something you&#39;re passionate about.&lt;/li&gt;
&lt;li&gt;Build stuff and do stuff.&lt;/li&gt;
&lt;li&gt;Journey can begin in unexpected ways.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;p&gt;

It was a great first event. We&#39;re very excited about &lt;a
href=&#34;http://cstuy.org&#34;&gt;CSTUY&lt;/a&gt; and are looking to roll out more
programs including more talks, classes, mentoring, internships and
more. We&#39;re also planning professional development opportunities for
computer science teachers.

&lt;p&gt;
&lt;p&gt;

We&#39;ll be putting some of the attendees&#39; takes on the event up on the
CSTUY &lt;a href=&#34;http://cstuy.org/blog&#34;&gt;blog&lt;/a&gt; over the next few days.
&lt;p&gt;
&lt;p&gt;

To hear about our latest, &lt;a href=&#34;https://twitter.com/cstuyrun&#34;
class=&#34;twitter-follow-button&#34; data-show-count=&#34;false&#34;
data-size=&#34;large&#34;&gt;Follow @cstuyrun&lt;/a&gt; &lt;script&gt;!function(d,s,id){var
js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&#34;//platform.twitter.com/widgets.js&#34;;fjs.parentNode.insertBefore(js,fjs);}}(document,&#34;script&#34;,&#34;twitter-wjs&#34;);&lt;/script&gt;
on twitter, sign up for our &lt;a href=&#34;http://cstuy.org&#34;&gt;mail list&lt;/a&gt;
and keep an eye on the CSTUY &lt;a
href=&#34;https://cstuy.org/blog&#34;&gt;blog&lt;/a&gt;.

</description>
    </item>
    
    <item>
      <title>Why we script</title>
      <link>https://cestlaz.github.io/posts/2013-01-24-why-we-script/</link>
      <pubDate>Thu, 24 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2013-01-24-why-we-script/</guid>
      <description>&lt;p&gt;I tell my students &amp;ldquo;the cool thing about what we do is that if we&amp;rsquo;re not happy with the way something works, we&amp;rsquo;ve got a shot at fixing it.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;That came up this morning so I thought I&amp;rsquo;d share.&lt;/p&gt;
&lt;p&gt;I
recently &lt;!-- raw HTML omitted --&gt;posted&lt;!-- raw HTML omitted --&gt;
about the in-term projects my Software Development kids were working
on. Well, now it&amp;rsquo;s time to grade their final projects.&lt;/p&gt;
&lt;p&gt;The code is up on GitHub. This morning I was faced with independently
going to every project page and cloning each one:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Not fun!!!!&lt;/p&gt;
&lt;p&gt;There had to be a better way. Fortunately all the projects were under a single &amp;ldquo;organization&amp;rdquo; and a little digging into the GitHub API reminded me that I could use this url:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;which brought up all this nice JSON data.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;A little poking around in the data finds that each project url is part of a line that starts with &amp;ldquo;ssh_url.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;a little wget, sed, grep and  sh magic later:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Now, as long as all the projects are under a single Github organization I can easily clone or pull them without having to navigate the Github web site.&lt;/p&gt;
&lt;p&gt;Commandline FTW!!!!!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Investing in People</title>
      <link>https://cestlaz.github.io/posts/2012-12-20-investing-in-people/</link>
      <pubDate>Thu, 20 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-12-20-investing-in-people/</guid>
      <description>&lt;p&gt;A little over a year ago, I decided it was time to reach out to my
alums, a group I refer to as the &amp;ldquo;Stuy CS family&amp;rdquo; and try to get us
together. The most rewarding part of my job involves the relationships
I&amp;rsquo;ve developed over the years but is was always between me and my
alums and them to their classmates. This was an attempt to start
building a network that spanned the years.&lt;/p&gt;
&lt;p&gt;Yesterday, we had our fourth meetup. Somewhere between fifty and
seventy tech professionals getting together over pizza and drinks. Our
past meetups were always at bars - it was easy - send out an email
with an address, time., and date, and people show up. This time, we
really wanted to include the younger crowd, the 18-20 year olds so a
bar was out. I asked the family if anyone could host and Ethan came
through, volunteering &lt;a href=&#34;http://pave.com&#34;&gt;Pave&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://pave.com&#34;&gt;Pave&lt;/a&gt; is a pretty neat company. The best way I can
describe them is that they invest in people. It&amp;rsquo;s a place where
backers invest in prospects, not only financially, but socially as
well. I really like the idea and you should all check them out.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The Pave folks were really awesome, offering space, helping to
oraganize and also taking part in the event.&lt;/p&gt;
&lt;p&gt;The event was great and having it at a company rather than a bar or
restaurant had some unexpected side effects. Since there weren&amp;rsquo;t
nearly as many chairs, people mixed more and as I said, this allowed
the younger set to meet the older alums.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Being at Pave made me think that as a teacher, my entire career is
about investing in people. Not in the same way as Pave, but still. My
results aren&amp;rsquo;t financial but in community. Although Pave does have a
financial component to it, I really think they &amp;ldquo;get it&amp;rdquo; and wouldn&amp;rsquo;t
be surprised if they end up getting the community rewards as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Layers of a lesson</title>
      <link>https://cestlaz.github.io/posts/2012-12-17-layers-of-a-lesson/</link>
      <pubDate>Mon, 17 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-12-17-layers-of-a-lesson/</guid>
      <description>&lt;!DOCTYPE html&gt;


&lt;div align=&#34;center&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/turtle-anim.gif&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;p&gt;
My last post I was talking about the fact that as teachers, our
knowledge and experience is frequently trivialized. The tenor of the
times is that anyone can design a course, anyone can teach, and in
fact, we don&#39;t even need teachers, just videos or computer based
systems. If you&#39;ve ever tutored a friend, you&#39;re more than qualified.

&lt;p&gt;
That might be a strong statement but everywhere you look you see
&#34;education&#34; programs designed and implemented by non teachers. It
seems that it&#39;s believed that teaching only involves the most
superficial of transfers of information.

&lt;p&gt;
Today, I thought I&#39;d look at a lesson I taught the other week. How
I&#39;ve seen similar material presented and how my colleagues and I might treat
the subject.

&lt;p&gt;
We use &lt;a href=&#34;http://ccl.northwestern.edu/netlogo/&#34;&gt;NetLogo&lt;/a&gt; in
our Sophomore level intro course. It&#39;s a highly parallel version of
logo. It&#39;s very visual, it&#39;s great for modeling and you can introduce
deep, meaningful concepts such as parallel processing in a gentle
manner.

&lt;p&gt;
Early on the kids have to learn how to manipulate the turtles. In
NetLogo you write a single program and it&#39;s run by all the turtles &#34;at
once.&#34; The image above is one of their early &#34;experiments.&#34; Have the
turtles wiggle out of the center, but when they get to an invisible
border, start spinning. They do a number of variations on this theme.

&lt;p&gt;
A solution might look like this:

&lt;pre&gt;
; asked in a turtle context
to gospin
ifelse abs xcor &lt; 8 or abs ycor &lt; 8
[ wiggle ] ; wiggle implementation not shown
[ left 5 ]
end
&lt;/pre&gt;

&lt;p&gt;
Let&#39;s call level one just talking about the solution by looking at the
program as a sequence of instructions. Specifically relating the
instructions to the problem, showing how it solves it, and that&#39;s it.

&lt;p&gt;
This is the simplest level. A book, video, or online courseware can
approach teaching at this level. A non computer scientist teacher or a
non teacher computer scientist could do so as well. Students might
learn a bit but I wouldn&#39;t hope for much inspiration or
creativity to come out of it.

&lt;p&gt;
Let&#39;s move to level two.
&lt;p&gt;
Here we might talk about &#34;what the turtles are doing.&#34; They&#39;re always
doing something, either wiggling or spinning. This is a step in the
right direction. When done right, the students start thinking about
the problem in a more general sense but they&#39;re still looking at the
problem as something that exists only in the world of NetLogo. They
are more likely develop patterns than in level one, but it&#39;s still
limited.

&lt;p&gt;
Level three is where things get interesting. On the surface, the
problem is just a nice introduction to programming turtles in
NetLogo. At a deeper level, it&#39;s an opportunity to introduce the kids
to State Machines. A new way of thinking about problems and problem
solving.

&lt;p&gt;
Students understand the idea of a &#34;state.&#34; For example, in class,
they&#39;re in a &#34;seated state,&#34; maybe in a &#34;note taking state,&#34; etc. It&#39;s
easy to see that they don&#39;t know what their day will bring but they
constantly make decisions based on their &#34;state.&#34; Likewise, they can
think about the turtle as in a state. It&#39;s either in a wiggling state
or a spinning state and based on their situation they can either
continue in their current state or transition to the other one:

&lt;div align=&#34;center&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/spin-state.png&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/div&gt;

This opens up a new way of thinking and it&#39;s easy to see how this
extends to other problems, for example, a ghost from pacman:

&lt;div align=&#34;center&#34;&gt;
&lt;img width=&#34;50%&#34; src=&#34;https://cestlaz.github.io/img/pacman-ghost-state.png&#34; class=&#34;&#34; alt=&#34;&#34; /&gt;
&lt;/div&gt;

A good teacher thinks about working across these levels. He adjusts
based on the class and looks for opportunities to develop these deeper
concepts.
</description>
    </item>
    
    <item>
      <title>Who&#39;s missing from the picture</title>
      <link>https://cestlaz.github.io/posts/2012-12-12-whos-missing-from-the-picture/</link>
      <pubDate>Wed, 12 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-12-12-whos-missing-from-the-picture/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;p&gt;
So, it&#39;s Computer Science Education Week. Full of rah rah events and everyone&#39;s gung ho about teaching computer science.


&lt;p&gt;
You all know that CS Ed is what I&#39;ve dedicated most of my life to and
maybe that&#39;s why I&#39;m &#34;not feeling it&#34; in terms of CS Ed Week. Let me
explain.

&lt;p&gt;
Yesterday there was
a &lt;a href=&#34;http://csedweek.eventbrite.com/&#34;&gt;Twitter Conversation&lt;/a&gt;
led by a &#34;national panel of thought leaders in the field.&#34; Click on
the link. If it&#39;s still active you can see the list of &#34;facilitators&#34;
they were highligthing.

&lt;p&gt;
I know some of the people and heard of some of the names and I do
respect some of them. The problem is that if you look down the list
you&#39;ll notice something missing. There are &lt;b&gt;zero&lt;/b&gt; K-12 teachers on the
list. None, not one. Some of the people on the list taught in the
past. I don&#39;t know how long and in what capacity, but there are no
current teachers. None of us current teachers are worthy &#34;thought leaders?&#34;

&lt;p&gt;
This is a big danger with respect to CS Education. There are a small
handful of us on the ground, actually teaching, with a strong CS
background and with &lt;b&gt;real&lt;/b&gt; successes.

&lt;p&gt;
I know there aren&#39;t many of us. People with a strong CS background
that have decided to become career teachers but there are a
few. Stuyvesant barely had a single AP CS class when I started teaching
here and now we have nine teachers. We&#39;ve exposed and inspired student
after student to CS. People dismiss us -- &#34;You&#39;re Stuyvesant, you have
gifted kids.&#34; We do have great kids, but then why haven&#39;t programs like
ours sprouted up at other high performing schools? I&#39;d like to think
I&#39;ve had something to do with our success.

&lt;p&gt;
So, here we have an incredibly successful program but no one wants to
engage us in terms of improving and developing CS Education. I know a
handful of other great CS Educators around the country. They&#39;ve
similarly felt ignored, rebuffed, and unengaged.

&lt;p&gt;
I think the problem is twofold. First, our society has taken to
blaming teachers for society&#39;s woes and places little value in what we
do. Second, education is the one field that everyone thinks they&#39;re an
expert in. You went to school so obviously you&#39;re qualified to
teach. There&#39;s a huge difference in what I do and with giving a few
guest talks.

&lt;p&gt;
I&#39;ve tried to engage NYC&#39;s DOE a number of times. According to Mayor
Bloomberg, the Academy for Software Engineering (afse) was my
brianchild but the DOE didn&#39;t pay any regard to my early suggestions,
I had no voice in the development process and when push came to shove,
the DOE decided to hire a consultant with a track record far more
limited than mine or my team&#39;s. I finally gave up asking how I would
be involved.

&lt;p&gt;
I&#39;m also a CSTA member. In fact, I&#39;m a NY State CSTA Advocate.  I&#39;ve
reached out for help and to offer it over the years but responses
have been lukewarm at best.

&lt;p&gt;
I&#39;m here, my colleagues are here. We want to do more but apparently
educators need not apply.

&lt;p&gt;
Back to the Twitter Conversation. Here are just a few tweets and some
comments:

&lt;p&gt;
Tweet: &lt;blockquote class=&#34;blockquote&#34;&gt;
More and more online resources like @codecademy mean computing clubs
without a highly trained CS Teacher are possible. #csedweek
&lt;/blockquote&gt;

&lt;p&gt;Comment&lt;blockquote&gt; I like codecademy and like the fact that they&#39;re engaging
educators, but when I read this it screams to me &#34;doesn&#39;t get it.&#34; I
just taught a lesson today that on the surface seems like it could be
covered by some automated service but there&#39;s so much going on between
the lines.

It&#39;s like saying &#34;we don&#39;t need history teachers, let them read a book or watch a movie.&#34; If the tweeter said that when commenting on teaching history, the tweeter would be laughed out of the room.

&lt;/blockquote&gt;

&lt;p&gt;
Tweet: &lt;blockquote class=&#34;blockquote&#34;&gt;
YES! RT @ruthef If we want CS teachers, we need to increase teacher
pay and partner with industry to get tech into the classroom!
#csedweek &lt;/blockquote&gt;

&lt;p&gt;
Comment&lt;blockquote&gt; It has more to do with the lack of respect payed to
teachers. No matter how much you raise pay, it won&#39;t compete with
private industry. Also, what makes a great tech person doesn&#39;t
necessarily make a great teacher. You need that rare union of both.
&lt;/blockquote&gt;

&lt;p&gt;
Tweet: &lt;blockquote class=&#34;blockquote&#34;&gt;
One of the problems we have with CS Education is that not
enough research is bring done. Not teaching or results. #CSEdWeek
&lt;/blockquote&gt;

&lt;p&gt;
Comment&lt;blockquote&gt; Research? How about talking to the teachers on the ground and
helping build more of them.
&lt;/blockquote&gt;

&lt;p&gt;
Tweet: &lt;blockquote class=&#34;blockquote&#34;&gt;
Encouragement works. There are amazing tech girls @superandomness
@temiri Just awarded 310 outstanding girls http://www.ncwit.org/blog
#CSEDWeek
&lt;/blockquote&gt;

&lt;p&gt;
Comment&lt;blockquote&gt; Yes, but who are you encouraging. I&#39;ve had many NCWIT winners
come from my program. Usually, the most deserving young ladies lose
out to young ladies who are lesser candidates but better essay
writers. In any event, we&#39;ve already done the hard work at Stuy
inspiring the kids. By the time NCWIT gives the awards, we&#39;ve already
done the hard work. How about helping us rather than taking credit for
our work.
&lt;/blockquote&gt;

&lt;p&gt;
There are those of us out there who have succeeded in spite of a lack of support. Why not engage us, use as as models, or at the very least, study us and decide that we don&#39;t know what we&#39;re doing.
&lt;p&gt;
So, where does this leave us?

&lt;p&gt;
I&#39;m still fighting the fight. I&#39;m still trying to get NYC and
Stuyvesant to recognize CS as a department and help me train teachers
and build programs around the city, but I&#39;m not hopeful.

&lt;p&gt;
Meanwhile the train lurches forward.

&lt;p&gt;
About a year ago I was speaking to a friend of mine who&#39;s well placed
in the tech world. He had just met with a number of movers and shakers
about CS and technical education. His take away: if we go the way
they&#39;re looking to go, maybe we&#39;re better off not doing anything.

&lt;p&gt;
I share that fear. No one&#39;s pushing for CS Education harder than I am
but I fear that we will get &#34;CS Ed&#34; as opposed to CS, much like many
of us feel &#34;Math Ed&#34; has hurt math education in our country.

&lt;p&gt;
I&#39;ll close with the sentiment shared with my by another high level
tech person after another meeting with movers and shakers. He told me:

&lt;p&gt;&lt;blockquote&gt;
&#34;There are a small handful of successes, like you at Stuy, but
basically, we&#39;re f*cked.&#34;
&lt;/blockquote&gt;

</description>
    </item>
    
    <item>
      <title>Real Projects</title>
      <link>https://cestlaz.github.io/posts/2012-12-09-real-projects/</link>
      <pubDate>Sun, 09 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-12-09-real-projects/</guid>
      <description>&lt;!DOCTYPE html&gt;


This post was supposed to be about varsity academic teams but I wanted
to share something else first.

&lt;p&gt;
For years I was unhappy with our &#34;research&#34; course but due to the
misguided views of our past administration, I pretty much had to keep
it running. Over the same time, I was frustrated by the fact that
there was so much missing in our students computer science related
education. Specifically, kids don&#39;t really get to experience creating
large &#34;real&#34; systems from beginning to end. I was also frustrated by
the fact that the previous administration prevented me from creating a
course to address this problem.


&lt;p&gt;
Due to a particular set of circumstances, I was able to
convert our research course into what is now my &#34;Software Development&#34;
course.

&lt;p&gt;
So far, I&#39;m very happy with the results.

&lt;p&gt;
The classes just finished their latest projects. Over the course of
about three week, mostly on their own time, working around homework
and other obligations, student groups designed, developed, tested and
deployed a range of applications.

&lt;p&gt;
All the programs
use &lt;a href=&#34;flask.pocoo.org&#34;&gt;Flask&lt;/a&gt; as a web framework. Many
use &lt;a href=&#34;mongodb.org&#34;&gt;MongoDB&lt;/a&gt; to store data and they used a
range of web resources and apis. The students were a little limited by
the time frame of the project and the fact that I just started
teaching them how to use javascript mid project, but they really did a
terrific job.

&lt;p&gt;
A few in particular were a lot of fun:

&lt;p&gt;
&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;http://ml7.stuycs.org:7207&#34;&gt;
&lt;img width=&#34;400px&#34; src=&#34;https://cestlaz.github.io/img/survival-guide.png&#34;/&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;
The &lt;a href=&#34;http://ml7.stuycs.org:7207&#34;&gt;Survival Guide&lt;/a&gt; used
Google Maps to help prepare you for all sorts of disasters ranging
from Hurricanes, to Alien Invasions, to the Zombie Apocalypse.

&lt;p&gt;
A &lt;a href=&#34;http://ml7.stuycs.org:6202&#34;&gt;Movie recommender&lt;/a&gt; That used
MoveDB, YouTube, and the NY Times API to find and show info about
movies and actors.

&lt;p&gt;
&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;http://ml7.stuycs.org:7203&#34;&gt;
&lt;img width=&#34;400px&#34; src=&#34;https://cestlaz.github.io/img/recipe-pricer.png&#34;/&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;http://ml7.stuycs.org:7203&#34;&gt;Recipe Pricer&lt;/a&gt; scrapes &lt;a href=&#34;http://allrecipes.com&#34;&gt;allrecipes.com&lt;/a&gt; for a
recipe then uses Google&#39;s shopping API to price out the ingredients
(with some interesting results).

&lt;p&gt;
&lt;div align=&#34;center&#34;&gt;
&lt;a href=&#34;http://ml7.stuycs.org:7205&#34;&gt;
&lt;img width=&#34;400px&#34; src=&#34;https://cestlaz.github.io/img/stuy-page.png&#34;/&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;
One group remade the &lt;a href=&#34;http://ml7.stuycs.org:7205&#34;&gt;Stuyvesant
Home Page&lt;/a&gt; but since they&#39;re using a Twilio test account you won&#39;t
be able to see the really neat stuff they did.

&lt;p&gt;
and

&lt;p&gt;
&lt;a href=&#34;http://ml7.stuycs.org:6206&#34;&gt;Tweet Stat&lt;/a&gt; tells you how well
your favorite celebrity spells.

&lt;p&gt;
This is just a sampling.

&lt;p&gt;
You can see all of them at &lt;a href=&#34;http://ml7.stuycs.org/project2-results.html&#34;&gt;Our Projects Page&lt;/a&gt; and all the code is up on GitHub (linked from the page).

&lt;p&gt;
I&#39;d encourage you to take a look. It would be terrific if you could
give the class feedback either by commenting here or on the project
page.

&lt;p&gt;
I can&#39;t wait to see what they do for their next projects.

&lt;p&gt;
Special thanks to Ben, Moisey and the entire &lt;a href=&#34;http://digitalocean.com&#34;&gt;DigitalOcean&lt;/a&gt; team for providing us with server space for all of this.
</description>
    </item>
    
    <item>
      <title>Making Varsity part 1 - Athletics</title>
      <link>https://cestlaz.github.io/posts/2012-11-29-making-varsity-pt-1/</link>
      <pubDate>Thu, 29 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-11-29-making-varsity-pt-1/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve never been a huge fan of the way we do varsity sports, and I say
this as a guy that coached for a number of years. In NYC, we&amp;rsquo;re
governed by the Public School Athletic League or PSAL. Practice time
and lack of facilities make teaching difficult, but my biggest problem
is the fact that most teams cut, that is, if you&amp;rsquo;re not in the top
&amp;ldquo;n,&amp;rdquo; you&amp;rsquo;re out. So, if our basketball team has, let&amp;rsquo;s say 15 kids on
it, they get exclusive use of the gym every afternoon during
basketball season and no one else can receive coaching or be part of
the team.&lt;/p&gt;
&lt;p&gt;I coached Stuyvesant&amp;rsquo;s fencing team for a bunch of years and I think I
did a pretty good job. We won our share of city titles but while most
coaches ran teams in a traditional way I never cut anyone &amp;ndash; we might
have over thirty people in a tiny room trying to learn how to fence.&lt;/p&gt;
&lt;p&gt;I can be competitive and we often won but high school should be about
exposing kids to new experiences and the exclusiveness of competitive
sports seems to be contrary to this.&lt;/p&gt;
&lt;p&gt;Thats why I love Stuy&amp;rsquo;s rowing club. I&amp;rsquo;ve been involved in the program
for about five years now. Prior to that many of my CS students were
involved and they kept saying &amp;ldquo;Z - you&amp;rsquo;ve got to check out the rowing
club.&amp;rdquo; During good weather, every Wednesday, we go up to &lt;!-- raw HTML omitted --&gt;the village community
boathouse&lt;!-- raw HTML omitted --&gt; at Pier 40 and row &lt;!-- raw HTML omitted --&gt;Whitehall
Gigs&lt;!-- raw HTML omitted --&gt; - old school wooden boats - 4 oars and a coxswain. We&amp;rsquo;ve
rowed up to the Intrepid and down to the Statue of Liberty.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a great activity and everyone&amp;rsquo;s welcome. It&amp;rsquo;s an athletic, team
building activity and very different from what our kids normally
do. It&amp;rsquo;s an opportunity for our non-competitive kids to be involved in
a great athletic activity.&lt;/p&gt;
&lt;p&gt;For our competitive kids, they can enter our races. Everyone can take
part in local races (cancelled this year due to Sandy) and we usually
send our top crew and a younger crew to events outside the city. Just
two weeks ago, Stuyvesant sent two crews up to Hull, MA to take part in
The Icebreaker Northeast Regional Youth Rowning Championships. Our
kids got to meet and compete with kids from all over the northeast.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;If you&amp;rsquo;re wondering about how we do with the non-cut format - both of
our boats won their respective divisions (first fours, the top
division, and second fours). A mixed crew with Stuy alumi won the
first sixes division. And yes, that&amp;rsquo;s Batya in the picture - she coxed
our first fours.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;It would be great if kids had more athletic opportunities like this.&lt;/p&gt;
&lt;p&gt;Next post &amp;ndash; how this relates to computer science.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Alumni Day(s)</title>
      <link>https://cestlaz.github.io/posts/2012-11-25-alum-days/</link>
      <pubDate>Sun, 25 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-11-25-alum-days/</guid>
      <description>&lt;p&gt;The day before Thanksgiving is always fun. For as long as I can
remember, recent graduates descend upon Stuy. For the most part, they
mull around the senior bar but we get our share up in 301.&lt;/p&gt;
&lt;p&gt;This year was a little quiet but I got to see more than my share of
graduates over the weekend as I attended the 2002 and 2007 class
reunions. I&amp;rsquo;ve only been invited to a handful of reunions and really
consider it an honor when I am.&lt;/p&gt;
&lt;p&gt;I had a great time at both events but here are some notes for those of
you organizing reunions in the future:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I&amp;rsquo;ve got to also give particular props to Gary He for keeping the class of 2002 crush lists for the past 10 years.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Between the two reunions and the alumni visits prior, I noticed a few
things. First. I was reminded that each years is like a separate
stratified layer. You might know a couple of students from the year
before or after, but that&amp;rsquo;s about it. It&amp;rsquo;s like groundhog day. Each
year has a similar assortment of personalities and archetypes and
exists in semi-isolation. I also noticed that while the graduates were
strongly connected to each other, not so much to the school.&lt;/p&gt;
&lt;p&gt;These are two of the things that I&amp;rsquo;ve tried to address by creating &lt;!-- raw HTML omitted --&gt;family.stuycs.org&lt;!-- raw HTML omitted --&gt;. I&amp;rsquo;m hoping this
group can bring Stuy grads together across the years. The feedback I
got from people at both reunions was very positive. I&amp;rsquo;m also counting
on this community to give back to help us in our efforts to enhance
computer science education at Stuy and in the city.&lt;/p&gt;
&lt;p&gt;On the lack of connection to the school, I do think things will get
better. Stuyvesant&amp;rsquo;s new principal, Jie Zhang was at the 2002
reunion. The fact that she was there was huge. I can&amp;rsquo;t imagine the
previous principal coming in to attend a class reunion. After all,
he&amp;rsquo;s the principal that tried to keep the alums out of Stuyvesant on
multiple occasions. There was also a point in the evening when one of
our alums was telling Principal Zhang that many graduates wanted to be
more connected to Stuy but felt alienated. She seemed shocked and
emphasized that graduates should be welcome at and feel part of the
community.&lt;/p&gt;
&lt;p&gt;It was a tiring weekend &amp;ndash; too many late nights, but a good one.&lt;/p&gt;
&lt;p&gt;I sense good things to come.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Back to Work</title>
      <link>https://cestlaz.github.io/posts/2012-11-02-back-to-work/</link>
      <pubDate>Fri, 02 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-11-02-back-to-work/</guid>
      <description>&lt;h3 id=&#34;on-going-back-to-work-today&#34;&gt;On going back to work today&lt;/h3&gt;
&lt;p&gt;Since school was still out due to Sandy, we ran a second online class
yesterday. At the end of the session, which I&amp;rsquo;ll summarize below, I
told the class what I wanted them to accomplish today and over the
weekend. One student queried &amp;ldquo;you mean no class on Friday :-(?&amp;rdquo; Alas
no &amp;ndash; while students aren&amp;rsquo;t reporting to school this morning, teachers
are.&lt;/p&gt;
&lt;p&gt;Of course the logic as to why is far from sound. Some schools are
fine, some not, in our case, there&amp;rsquo;s no subway service south of 34th
street or coming in from Brooklyn and we&amp;rsquo;re located near the tip of
Manhattan.&lt;/p&gt;
&lt;p&gt;What are we going to do? Who knows. We don&amp;rsquo;t have lessons to plan and
while Stuy has power, phones and internet are out. Professional
development? Even when planned extensively, I&amp;rsquo;ve found it to be mostly
useless (I always have to sit through math PD, for example, learning
how to use a graphing calculator).&lt;/p&gt;
&lt;p&gt;So, we&amp;rsquo;re going to report in for no real purpose. Best I can figure,
the city wants teachers in so they can call it a professional
development day then they can try to change things so that students
will report during Brooklyn Queens day next semester thus restoring
one instructional day lost this week. Not a bad idea to recapture the
day but to make teachers - coming from all over the area - trudge in
for no purpose just to play politics is distasteful but unfortunately typical.&lt;/p&gt;
&lt;p&gt;To add to the insult, not only are us teachers still in the dark as to
what&amp;rsquo;s going on, we weren&amp;rsquo;t even told when to report until after
midnight yesterday. I woke up at my usual 5:00am to exercise but first
checked my email &amp;ndash; waiting was an email from Chancellor Dennis
Walcot. I recieved it at 12:52 this morning. This was when I was first
told that I was to report to school at 10:00am. I can&amp;rsquo;t believe this
decision couldn&amp;rsquo;t have been made and emailed out a few hours
earlier. In any event, I&amp;rsquo;m waiting until 10:00 to get in - I&amp;rsquo;ve often
found the building locked when I&amp;rsquo;ve shown up before official opening hours.&lt;/p&gt;
&lt;p&gt;So now for the part of my job that I actually enjoy:&lt;/p&gt;
&lt;h3 id=&#34;how-did-yesterdays-online-class-go&#34;&gt;How did yesterday&amp;rsquo;s online class go?&lt;/h3&gt;
&lt;p&gt;Today&amp;rsquo;s class was a wrapup of a mini project &amp;ndash; basically an
add-a-line story site. You can see an unfinished version that two of
the students put together &lt;a href=&#34;http://ml7.stuycs.org:5200&#34;&gt;here&lt;/a&gt;. You can
see more of the stuff we are using on our &lt;a href=&#34;http://github.com/organizations/stuycs-ml7&#34;&gt;class github
page&lt;/a&gt;. The students are
using &lt;a href=&#34;http://flask.pocoo.org&#34;&gt;Flask&lt;/a&gt; which is a python website
generator along with &lt;a href=&#34;http://www.mongodb.org&#34;&gt;MongoDB&lt;/a&gt;. We had to tie
up some loose ends.&lt;/p&gt;
&lt;p&gt;We again broadcast a Google+ hangout live through YouTube and we again
used a google doc as a chat space. This time we used the right hand
side bar for comments and only used the document for more permanent
material (a web refernce for example). It worked much better.  The
vertical flow of comments on the sidebar were much easier to track and
work with than a freeform document.&lt;/p&gt;
&lt;p&gt;The session still had the time delay problem and the feedback loop is
still a killer but the students again seemed to enjoy the
experience. This is clearly not a replacement for in person teaching,
but again, better than nothing on a day off.&lt;/p&gt;
&lt;h3 id=&#34;and-a-note-on-the-stuy-cs-culture&#34;&gt;And a note on the Stuy CS Culture&lt;/h3&gt;
&lt;p&gt;The seniors were game for this experiment and would be happy to go
again today if we were able to.  They also continually surprise me in
little ways. When we started this mini project, we all had to learn
how to use MongoDB (myself included). At first I had a hard time
confirming that they had done the outside work to learn the MongoDB
specifics. Only as they continually gave me better alternatives to my
approaches did I know that they were on top of things.&lt;/p&gt;
&lt;p&gt;On the other hand, my sophomores were much less receptive to an online
class during the hurricane days. A handful wanted to give it a go, but
the majority never responded to my email. Why was that?&lt;/p&gt;
&lt;p&gt;I have a few thoughts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A big reason is that I&amp;rsquo;ve only been with my sophomores for a short
time. We haven&amp;rsquo;t yet built the rapport and culture that exists in my
senior classes. I always notice a difference in class attitude around
Halloween but we really don&amp;rsquo;t have the feeling of family until late
November or some time in December.&lt;/li&gt;
&lt;li&gt;The sophomores are in a required course, the seniors an elective. I
think this is secondary to the culture / rapport but I&amp;rsquo;m sure it has
an effect.&lt;/li&gt;
&lt;li&gt;I believe the seniors have a better understanding that what we&amp;rsquo;re doing in class is to their benefit and the sophomores are still&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m going to have to pay more attention to the time line from when
students come into my class and when they become part of &amp;ldquo;the family.&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sandy Bridge and Screen Casting</title>
      <link>https://cestlaz.github.io/posts/2012-10-31-sandy-bridge/</link>
      <pubDate>Wed, 31 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-10-31-sandy-bridge/</guid>
      <description>&lt;!DOCTYPE html&gt;


Here&#39;s what the bridge leading across the West Side Highway over to
Stuy during the storm. Hence the title with the weak tech reference.

&lt;div align=&#34;center&#34;&gt;
&lt;img  width=&#34;300&#34; src=&#34;https://cestlaz.github.io/img/hurricane-bridge.jpg&#34;&gt;
&lt;/div&gt;

The storm has kept the schools closed all week so it&#39;s as good a
time as any to try to resurrect this blog.
&lt;p&gt;
As you can see, I&#39;ve moved from blogger to a Jekyll based blog hosted
on Github. I&#39;m really liking the way it works but more on that at a
later date.
&lt;p&gt;
Some time Monday evening or Tuesday morning, I asked Batya if she
thought my seniors would be up for a livestreamed class (Batya, my
daughter, for anyone who doesn&#39;t know, is in one of the sections of
the class). It turned out they were all in.
&lt;p&gt;
I&#39;ve got to say that I&#39;ve got amazing classes -- the fact that they&#39;re
into the same brand of insanity as I am and even willing to go again tomorrow isawesome.
&lt;p&gt;
So, here was today&#39;s experiment:
&lt;p&gt;
A Google+ hangout based live stream of Stuyvesant&#39;s
Software Development class. In my favor was the fact that I was just
going to introduce CSS - not a subject that lends itself to deep
classroom discussion. Against me was the use of technologies I haven&#39;t
used before and the fact that we have about 64 students that I was
hoping to reach.
&lt;p&gt;
So, how did it go?
&lt;p&gt;

&lt;h3&gt;First, let&#39;s talk about the technical side.&lt;/h3&gt;

Here&#39;s the basic setup:

&lt;img src=&#34;https://cestlaz.github.io/img/screenshot.png&#34;&gt;

I&#39;ve got two monitors and Google would only broadcast the screenshot
from the smaller one on the right. It had Emacs and a chrome going
most of the time with an occasional shell. While teaching about CSS, I
also introduced the students
to &lt;a href=&#34;https://github.com/magit/magit/downloads&#34;&gt;Magit&lt;/a&gt; as
well as
Emacs &lt;a href=&#34;https://github.com/skeeto/impatient-mode&#34;&gt;impatient&lt;/a&gt;
mode both of which are awesome. On the left hand screen I had the
actual Hangout as well as the Google shared doc.
&lt;p&gt;
It turns out that you can&#39;t make a public Hangout and also stream it
live on YouTube, you can only invite people in your circles. Since
most of my students aren&#39;t in my circles, only a few could &#34;join&#34; the
Hangout. Most watched the YouTube stream and we all connected to a
shared Google Doc for notes and questions.
&lt;p&gt;
The Google Doc turned out not to be the best idea. It got everyone
writing in the same document but people ended up writing all over the
document. If something wasn&#39;t on the screen I wouldn&#39;t see it. We&#39;re
going to try something more sequential tomorrow -- maybe disqus
comments.
&lt;p&gt;
The other two problems were the low resolution of the screenshot
broadcast and the lag. I really had to blow up the font size. If
anyone has any ideas how to do this well, please share. The lag was
also a problem since it kept me from having anything resembling a reasonable feedback loop.
&lt;p&gt;
On the other hand, my students were left with this enduring image of me:


&lt;div align=center&gt;&lt;img width=50% src=&#34;https://cestlaz.github.io/img/monocle.jpg&#34;&gt;&lt;/div&gt;

&lt;h3&gt;And the view from a teacher&lt;/h3&gt;

On the one hand, it was pretty cool to be at home and able to work
with my students but there were some major deficiencies:

&lt;dl&gt;
&lt;dt&gt;Can&#39;t see the audience&lt;/dt&gt;
&lt;dd&gt;Even at best, with the Hangout you can only see 10 people. I&#39;m guessing it feels like a stage actor doing a movie. I was talking but couldn&#39;t see my audience. No nodding heads, no nodding off heads, just talking to a screen. It was a little disconcerting. Teachers adjust to their class all the time both consciously and subconsciously. You might do something overt like call on a particular student or maybe sense it&#39;s time for a joke or even little things like how or where you stand. All of this was lost.&lt;/dd&gt;
&lt;dt&gt;Need a better chatroom&lt;/dt&gt;
&lt;dd&gt;I mentioned that the Google Doc wasn&#39;t a great idea. I think
something that&#39;s more vertical like a chatroom will work better. I&#39;ll
know tomorrow.&lt;/dd&gt;
&lt;dt&gt;An shared board space would be very cool&lt;/dt&gt;
&lt;dd&gt;The other missing piece is a way for the students to directly interact with what I&#39;m presenting. A shared Emacs would be amazing.&lt;/dd&gt;
&lt;dt&gt;The delay is a killer&lt;/dt&gt;
&lt;dd&gt;This was also a problem. I found myself saying or doing something then waiting until something came through the document. This hurt the flow considerably&lt;/dd&gt;

I really found the experience enlightening. People keep talking about
recorded lectures and MOOCS and all that but if anything, today&#39;s
experience just confirms to me that there&#39;s nothing like an in class
teacher, particularly with a small group of students.

That said, I think this was a good experience and my students seem to
agree. We spent part of an otherwise unproductive day in a productive
manner and we&#39;re planning on doing it again tomorrow.

&lt;p&gt;
Since Students will be home until Monday, I&#39;d like to go for a third
class on Friday but I&#39;ll be back at work so it looks like no class
after tomorrow until Monday.

&lt;p&gt;
Comments?


</description>
    </item>
    
    <item>
      <title>My Favorite Year Teacher</title>
      <link>https://cestlaz.github.io/posts/2012-05-09-my-favorite-year-teacher/</link>
      <pubDate>Wed, 09 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-05-09-my-favorite-year-teacher/</guid>
      <description>&lt;!DOCTYPE html&gt;

Sorry for the weak title and movie reference.&lt;br /&gt;&lt;br /&gt;It&#39;s teacher appreciation week -- one of our lesser celebrated weeks. I&#39;m waiting for the annual letter we get from the chancellor. Given the level of teacher bashing over the last few years, I&#39;ve recently found their emails amusing.&lt;br /&gt;&lt;br /&gt;I though I&#39;d take the time to thank a few of my most influential teachers. To paraphrase: whatever good I&#39;ve been able to do, it has been because I have stood on the shoulders of giants.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;span style=&#34;font-size: large;&#34;&gt;Alan Goff - 7th grade English - Wagner JHS&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Great teacher, great storyteller. &amp;nbsp;Every now and then class would be spent with Mr. Goff &amp;nbsp;telling us a story of his childhood. From his school days when he discovered how to make explosive &#34;goffolini&#34; bombs and had to deal with &amp;nbsp;the bully &#34;GodDilla&#34; to when he blew his hand off with said bombs to his time in the merchant marines. I think I learned more about bringing characters to life from listening to Mr. Goff than anywhere else. I&#39;d like to think I&#39;m somewhat entertaining in class and it started with Mr. Goff. Mr. Goff also shared with us the range of his interests. For me this led to a life of trying to learn something about everything. Thanks.&lt;br /&gt;&lt;br /&gt;Mr. Goff passed away a number of years ago and I never had a chance to thank him. I still regret that. A few years ago, when Batya was graduating from Wagner. I drew the short straw and had to go to the awards ceremony. I love going to Batya and Natan&#39;s concerts and other things they do, but I hate these award ceremonies. When the vast majority of the students get awards, there really isn&#39;t anything special about them - I wasn&#39;t thrilled to go. It turned out that Batya won the Alan Goff Memorial Medal for writing. I didn&#39;t even know there was one. Brought a tear to my eye.&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;b&gt;Herb Greenhut - 7th grade History - Wagner JHS&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Wow, what can I say about Herb. He was the first teacher to challenge me to really think. Every year he would start the semester by impersonating a famous figure. Someone his students would never have heard of but their parents would have. For us I think it was William Jennings Bryan. Another year it was Thoreau. All his paperwork was under the pseudonym and he&#39;d play us on for days. He&#39;d engage us in debates as if we were adults.&lt;br /&gt;&lt;br /&gt;Herb was a straight shooter. We were young but he never sugar coated things. Herb got us to question things like no teacher had before.&lt;br /&gt;&lt;br /&gt;I could go on and on about Herb. He influenced generations. By the time I was in his class in the seventies, he was a veteran and he continued on until right before his death a couple of years ago.&lt;br /&gt;&lt;br /&gt;Both my son and daughter had the&amp;nbsp;privilege&amp;nbsp;of being in Herb&#39;s class during his final years. He had retired from the school system but still taught at our synagogue. I asked them both about Herb. Their response &#34;he makes us think.&#34; Thanks&lt;br /&gt;&lt;br /&gt;As I said, I could go on and on about Herb but I found this piece&amp;nbsp;&lt;a href=&#34;http://newworld1.blogspot.com/2010/12/herbert-greenhut-rip.html&#34;&gt;here&lt;/a&gt;&amp;nbsp;that does a better job than I&#39;d be able to.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;span style=&#34;font-size: large;&#34;&gt;Richie Rothenberg - 12th grade AP CS - Stuy&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The only way you could describe Richie would be a mensch in the truest sense of the word.&lt;br /&gt;&lt;br /&gt;Richie was my teacher at Stuyvesant. He was a great teacher, but I got more from him as a colleague years later. Richie was always on the side of right and always did the right thing. Never a self promoter and never the &#34;hip&#34; teacher, &amp;nbsp;he just went about his business of being a great teacher. If there was something he could do to help a student, he did it. Many times, the student never knew.&lt;br /&gt;&lt;br /&gt;Richie passed away at 50 in 1997. &amp;nbsp;The day it happened, school basically shut down. Normally a small memorial plaque is placed up near a room in memory of a teacher. This wouldn&#39;t do for Richie. Students, teachers, and alums contributed money and Madeleine Segall-Marx, artist and Stuy parent, contributed a year of her life creating &lt;u&gt;Celebration&lt;/u&gt;:&lt;br /&gt;&lt;br /&gt;&lt;img alt=&#34;File:Danny-Jaye
</description>
    </item>
    
    <item>
      <title>Continuing the Journey</title>
      <link>https://cestlaz.github.io/posts/2012-04-24-continuing-journey/</link>
      <pubDate>Tue, 24 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-04-24-continuing-journey/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Shortly after our event at Foursquare, I was chatting with Kevin Friedman (Stuy &#39;96). Kevin&#39;s startup is &lt;a href=&#34;http://www.cojourneo.com/&#34;&gt;Cojourneo&lt;/a&gt;&amp;nbsp;and since it has an educational bent, he thought I might be interested in hearing about it.&lt;br /&gt;&lt;br /&gt;I certainly was.&lt;br /&gt;&lt;br /&gt;Rather than visiting Kevin, I thought it would be fun to have him come down after school, present Cojourneo to any students that wanted to stay late and then field questions.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-L7-QKnsProM/T5dO_0YvmRI/AAAAAAAAG_A/YsV-hRI3-ws/s1600/IMG_20120424_154655.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;320&#34; src=&#34;http://2.bp.blogspot.com/-L7-QKnsProM/T5dO_0YvmRI/AAAAAAAAG_A/YsV-hRI3-ws/s320/IMG_20120424_154655.jpg&#34; width=&#34;240&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Cojourneo is an interesting product. There&#39;s been a lot of hype around on line education in the past year, but it seems to me that Cojourneo&#39;s a little different. We&#39;ve got efforts like Coursera and Udacity that are trying to bring university style offerings to the masses while places like Codecademy seem to be more vocational in nature. All three efforts are &#34;class&#34; based. That is, you are taking a class over a period of time. Despite some resources to make these classes shared experiences -- specifically things like discussion groups, they mostly seem to have students watching videos or working through on line material on their own.&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Cojourneo&#39;s approach is to organize around &#34;journeys&#34; which aren&#39;t necessarily academic in nature, one of the journeys they have going now is&amp;nbsp;&lt;a href=&#34;http://u125899.sendgrid.org/wf/click?upn=RFLYp28x4tn3zctFtSv9u26CpQORa-2F0ctjP5N2rt-2BPjEwScoB8-2FDiOTIH3A2decWJOBzbvP-2BL04E-2BTSUUzAnnrfeBTKDP98OMWzCupR8df4-3D_0yQd2FpqhdDJMpTKTRf0-2Bgkt9TsX0gLH-2FMd1xsBq45m-2BDWXDwm9y5rOApSyT2yeJcwKLUGkENJdoY9rRSsOVmrBLVPyJXYbty3GU3x6bt2xa-2Bn7F4b-2Brh2n-2Flt7pIOH-2Bzk3N2i42qHszSVEJ5ojVeg-3D-3D&#34;&gt;Surviving the Startup Journey&lt;/a&gt;, but Kevin mentioned that they could have things like book clubs, travel journeys or any number of other types of journeys. They&#39;re also different in that they&#39;re really trying to create a shared experience -- you take the journey with a small circle of people, not solo - I love this aspect.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;By no means am I an expert, but I like a lot of their ideas.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;A bunch of students gathered and we were off. I had no idea how the talk would go but I figured that the kids hadn&#39;t had an opportunity to speak one on one with someone in the early stages of a startup so it would probably be valuable.&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Kevin presented the product, talked about some difficulties and decisions along the way and generally tried to give the kids the flavor of what it was like to start a product and a company. The kids tried to reciprocate by providing feedback on the product.&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Most of the questions focused on the business side rather than the technical. Kevin was asked about funding, monetization, building a user base, scaling, and any number of other ideas.&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;All in all, I think it was a valuable experience and look forward to bringing more alums down to talk to the current crop.&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-3559652079994112054?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Anyone can cook</title>
      <link>https://cestlaz.github.io/posts/2012-04-15-anyone-can-cook/</link>
      <pubDate>Sun, 15 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-04-15-anyone-can-cook/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span style=&#34;font-size: x-large;&#34;&gt;Anyone can cook&lt;/span&gt; - Chef Gusteau&lt;/div&gt;&lt;br /&gt;These days the rage seems anyone can code.&lt;br /&gt;&lt;br /&gt;On line attempts to teach coding and computing abound.&lt;br /&gt;&lt;br /&gt;We&#39;ve got Udacity and Coursera trying to bring college level academic offerings to the masses on one extreme and more down to earth &#34;learn to code&#34; efforts with Codecademy getting the most press.&lt;br /&gt;&lt;br /&gt;While I applaud any effort to make knowledge more accessible, there are a lot of unanswered questions as to the effectiveness of these latest attempts. Recent posts by&amp;nbsp;&lt;a href=&#34;http://blog.mrmeyer.com/?p=13213&#34;&gt;Dan Meyer&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;http://hackeducation.com/2012/04/14/udacity-cs101/&#34;&gt;Audrey Watters&lt;/a&gt;&amp;nbsp;have started to raise questions and in my opinion some of the hype has worn off.&lt;br /&gt;&lt;br /&gt;At some point, I plan to talk at length about the Udacity and Coursera offerings as well as attempts to increase on line course offerings at the high school levels. I&#39;ll talk about the difficulties and dangers that lie ahead.&lt;br /&gt;&lt;br /&gt;Today, I&#39;d like to talk about the more vocational offerings such as what Codecademy is doing.&lt;br /&gt;&lt;br /&gt;The premise seems to be that anyone can code and that everyone should code. I&#39;ve been thinking about this for a while and I keep coming back to the question, &#34;what&#39;s the endgame?&#34;&lt;br /&gt;&lt;br /&gt;Teaching Javascript, HTML and the like narrowly focuses on creating web pages. Even if we forget about difficulties of on line learning that include lack of an interactive feedback loop, lack of follow up, &amp;nbsp;a narrow curriculum, and the fact that programming beyond the basics is not easy, what&#39;s the goal? While I find making an interactive web site cool, I don&#39;t know how much it benefits the masses.&lt;br /&gt;&lt;br /&gt;One could argue that the mental exercise of programming is a benefit and having a better understanding of how a computer works is a good thing. I&#39;d agree, but what we really could benefit from is a different paradigm in terms of how we approach using computers. A new approach would make even rudimentary scripting skills of greater value to all.&lt;br /&gt;&lt;br /&gt;Most of us use computers as program loaders. That is, we sit down, load our word processor, edit something, and exit the word processor. Load our web browser, search the web, exit, load the next program, do something, etc. We might have multiple programs up at the same time, but we use them in isolation.&lt;br /&gt;&lt;br /&gt;This is how most people&#39;s computing experience has evolved.&lt;br /&gt;&lt;br /&gt;With this mindset, I&#39;m not sure how useful coding will be for the masses. People might benefit from some rudimentary scripting a la Excel macros or Google App Scripts, but power users already do this. I don&#39;t think that the ability to program within the constraints of scripting individual applications will be a game changer. &amp;nbsp;To make rudimentary programming skills valuable we must use computers in a way that allows us to use simple techniques to tie together powerful applications.&lt;br /&gt;&lt;br /&gt;A few years ago, right before our Christmas break, I stopped over in the Math Chairman&#39;s office to wish him a good holiday. Danny was hard at work. He was frantically trying to change the math web site before he left.&lt;br /&gt;&lt;br /&gt;The math site was a mess. It consisted of a few dozen loosely arranged folders each with multiple sub folders. Danny was looking in each folder for old sample final exams, each saved as a Tiff file. He would load the file into Photoshop, convert it to another format and save it. He would then change the corresponding HTML file to reference the new file. He had been at it for hours with no end in sight. I said &#34;Danny, I&#39;ve got this, go home.&#34;&lt;br /&gt;&lt;br /&gt;I went to my office, wrote a small shell script, maybe 10 lines, hit enter, got on my bike and rode home. When I got there, the job was done.&lt;br /&gt;&lt;br /&gt;Now Danny&#39;s a really smart guy and he&#39;s technically savvy. The difference is that I was taught to try to tie programs together through the command line while he was taught to do things in the Windows/Mac way of loading one program and using it in isolation. I used a simple shell script to tie together a number of powerful Linux applications (find, imagemagick, sed) rather than pointing and clicking over and over again.&lt;br /&gt;&lt;br /&gt;I&#39;ve seen this &#34;program loader&#34; mind set time and time again and in surprising places. My good friend and colleague&amp;nbsp;&lt;a href=&#34;http://garyrubinstein.teachforus.org/&#34;&gt;Gary Rubenstein&lt;/a&gt;&amp;nbsp;has done a lot of work debunking the &#34;educational reformers&#34; that are currently in power. Gary had been using Excel to do all his analysis until I pointed out that he could download his data and use simple Python scripts to greater effect. Why was I&amp;nbsp;surprised that Gary wasn&#39;t already doing this? Well, in addition to being an amazing math teacher, Gary holds a Masters degree in Computer Science and had worked as a professional programmer in a prior life.&lt;br /&gt;&lt;br /&gt;Of course, our life isn&#39;t made any easier with closed file formats and vendors that try to isolate their data, but if we could re-educate people to use computers across applications, that would make rudimentary programming useful to all and then indeed there would be a reason for everyone to code.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-448488222916899193?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Checking in with the family</title>
      <link>https://cestlaz.github.io/posts/2012-03-31-checking-in-with-family/</link>
      <pubDate>Sat, 31 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-03-31-checking-in-with-family/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;blockquote class=&#34;tr_bq&#34;&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222; font-family: arial, sans-serif; font-size: 13px;&#34;&gt;&#34;...&amp;nbsp;the standardized courses don&#39;t shed much light on future opportunities and they make it hard for students to identify what they&#39;re most interested in. The CS department, on the other hand, is great at demonstrating all the things that are going on in the modern comp sci world.&#34;&amp;nbsp;&lt;/span&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222; font-family: arial, sans-serif; font-size: 13px;&#34;&gt;-- Asa, one of our current CS students.&lt;/span&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;span style=&#34;color: #222222; font-family: arial, sans-serif; font-size: x-small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;color: #222222; font-family: inherit;&#34;&gt;Asa&#39;s comment was in response to an event we held last Tuesday. We brought 100 current students up to &lt;a href=&#34;http://foursquare.com/&#34;&gt;FourSquare&lt;/a&gt;&amp;nbsp;along with 100 of our CS alums for a mixer. Other than the fact that we aren&#39;t a department, I&#39;m hoping he was spot on.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;color: #222222; font-family: arial, sans-serif; font-size: x-small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&#34;color: #222222; font-family: arial, sans-serif; font-size: x-small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;table align=&#34;center&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; class=&#34;tr-caption-container&#34; style=&#34;margin-left: auto; margin-right: auto; text-align: center;&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-8sE0kCWEeMU/T3cKj8o5GrI/AAAAAAAAG2A/4Ygwoo9qnfI/s1600/P1010793.JPG&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;180&#34; src=&#34;http://1.bp.blogspot.com/-8sE0kCWEeMU/T3cKj8o5GrI/AAAAAAAAG2A/4Ygwoo9qnfI/s320/P1010793.JPG&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;tr-caption&#34; style=&#34;text-align: center;&#34;&gt;Stuy CS from 1976 to the present&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;A couple of months ago, I started to try to organize the graduates I&#39;ve had the&amp;nbsp;privilege of teaching over the years. I put out some feelers and the response has been great. So far we have about 400 members. I like to refer to us as the Stuy CS family since I&#39;d like to think there&#39;s a stronger bond than that typical between a teacher and his students.&amp;nbsp;&amp;nbsp;I&#39;d also like to think there&#39;s a common thread across the years that ties the older and younger graduates together.&lt;br /&gt;&lt;br /&gt;To kick things off, I thought it would be a great idea to get the alums together with the current students. We&#39;ve got people all over the tech map, from giant companies to startups. I started putting a list together&amp;nbsp;&lt;a href=&#34;http://family.stuycs.org/pbs&#34;&gt;here&lt;/a&gt;. I thought it would be great to expose our current students to the range of possibilities that await them.&lt;br /&gt;&lt;br /&gt;Immediately, the family came through.&amp;nbsp;&lt;a href=&#34;https://twitter.com/#!/noah_weiss&#34;&gt;Noah&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;https://twitter.com/#!/whizziwig&#34;&gt;Dave&lt;/a&gt;&amp;nbsp;volunteered FourSquare as host for the event. They provided the food and the site. The alternative would have been to have the event at Stuy. This would have cost us and would have been somewhat mundane. Just being at a place like FourSquare seemed to really excite the current crop of Stuy students.&lt;br /&gt;&lt;br /&gt;The evening of the event, I was a little nervous -- about 100 alums signed up, but would they show. I&#39;ve been told that general alumni events can typically have a very high no-show rate, particularly when the event has no cost and registering is as easy as an email.&lt;br /&gt;&lt;br /&gt;The kids and I arrived early -- school lets out at 3:30 and the event didn&#39;t start until 6:00. As 6:00 approached, the alums started to dribble in. By the time we started, we had a packed house!!! It was great seeing everybody again.&lt;br /&gt;&lt;br /&gt;We had alums from every year. From 1995, my first set of&amp;nbsp;graduates, to last years senior class. We also had a few older alums, including me and &amp;nbsp;my classmate and friend Steve from &#39;84 and Gerry (&#39;76) , who I met when he volunteered to help Stuy CS back in the 90&#39;s. He&#39;s become a good friend to both me and the program in the years since.&lt;br /&gt;&lt;br /&gt;For my part, I was extremely touched that everyone showed. As a teacher, you&#39;d like to think you&#39;ve had enough of an impact that your students would give back, but we rarely get any evidence as to the effects we&#39;ve had. I&#39;ve been fortunate enough to be in contact with a number of my alums through the years and a number of them have been kind enough express gratitude (often times more than I deserve) but to see everyone show up en masse really meant a lot to me. The only down side was there was so much going on, I really didn&#39;t get to spend time with anyone -- it was like hosting a wedding or bar mitzvah -- everyone&#39;s there, but you don&#39;t get to see anyone. I hope we can remedy this with more events and smaller events in the future.&lt;br /&gt;&lt;br /&gt;If any of the &#34;family&#34; is reading this, you&#39;ve also got to give me some props -- even though I haven&#39;t seen many of the alums in years, I recognized almost everyone and remembered far more names than I probably deserved to.&lt;br /&gt;&lt;br /&gt;We spent the evening mixing students and alums and the FourSquare crew threw in tours of the facilities. Afterwards, many of the alums stayed back to discuss how to move Stuy CS forward. How the alumni community can help Stuy CS&amp;nbsp;and it&#39;s current students and how it can become a resource for fellow alums. I think there are a lot of things we can do as a community, and I&#39;m excited about what&#39;s to come in the near future for us as a group.&lt;br /&gt;&lt;br /&gt;For the students, feedback has been terrific. I&#39;ve gotten comments like:&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&#34;tr_bq&#34;&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222; font-family: arial, sans-serif; font-size: 13px;&#34;&gt;I was wavering between whether or not I would continue CS in college and as a career, but now I&#39;m fairly certain.&lt;/span&gt;&lt;/blockquote&gt;&lt;div style=&#34;text-align: left;&#34;&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222; font-family: inherit;&#34;&gt;and&lt;/span&gt;&lt;/div&gt;&lt;blockquote class=&#34;tr_bq&#34;&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222; font-family: arial, sans-serif; font-size: 13px;&#34;&gt;I really enjoyed the compsci&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;il&#34; style=&#34;background-attachment: initial; background-clip: initial; background-color: rgba(255, 255, 255, 0.917969); background-image: initial; background-origin: initial; color: #222222; font-family: arial, sans-serif; font-size: 13px;&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222; font-family: arial, sans-serif; font-size: 13px;&#34;&gt;, it was very helpful to talk to alumni because they reminded me that there is life after college. I also liked the community within a community feel of the&amp;nbsp;&lt;/span&gt;&lt;span class=&#34;il&#34; style=&#34;background-attachment: initial; background-clip: initial; background-color: rgba(255, 255, 255, 0.917969); background-image: initial; background-origin: initial; color: #222222; font-family: arial, sans-serif; font-size: 13px;&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222; font-family: arial, sans-serif; font-size: 13px;&#34;&gt;.&lt;/span&gt;&lt;/blockquote&gt;&lt;span style=&#34;color: #222222; font-family: arial, sans-serif; font-size: x-small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222;&#34;&gt;&lt;span style=&#34;font-family: inherit;&#34;&gt;The students pretty much universally loved the event and &amp;nbsp;I really think they got a lot out of it.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222;&#34;&gt;&lt;span style=&#34;font-family: inherit;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;background-color: rgba(255, 255, 255, 0.917969); color: #222222;&#34;&gt;&lt;span style=&#34;font-family: inherit;&#34;&gt;We had parent conferences last Thursday and Friday and parent after parent confirmed this. Just about every visitor I had mentioned how much their son or daughter got out of meeting the &#34;family&#34;. People &amp;nbsp;who were in their shoes a few short years ago and are now doing great things in the tech community.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #222222; font-family: inherit;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #222222;&#34;&gt;From what I can tell, this was a unique event, at least to Stuy, no one&#39;s ever done anything like this before in any subject area. It looks like it was a slam dunk, at least with respect to value to the students.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #222222;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #222222;&#34;&gt;Now the &#34;family&#34; just has to decide where we can go from here.&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;color: #222222;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-6020489050963401462?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Field Trip!!!!!!!!</title>
      <link>https://cestlaz.github.io/posts/2012-03-03-field-trip/</link>
      <pubDate>Sat, 03 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-03-03-field-trip/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;br /&gt;When kids are knee deep in nlog(n) algorithms and working on recursion, it&#39;s easy to lose track of the amazingly neat things that are right around the corner for them.&lt;br /&gt;&lt;br /&gt;I&#39;ve recently been working on organizing our Stuyvesant Computer Science alumni network and am putting together a page with some of the places our graduates work&amp;nbsp;&lt;a href=&#34;http://family.stuycs.org/pbs&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;It can be hard to see how one goes from sorting and searching in Java to working at places like Google, or FourSqurare or creating your own startup like &lt;a href=&#34;http://www.digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt;, &lt;a href=&#34;http://usablehealth.com/&#34;&gt;Usable Health&lt;/a&gt;,&amp;nbsp;&lt;a href=&#34;http://www.timehop.com/&#34;&gt;TimeHop&lt;/a&gt;, or &lt;a href=&#34;http://prophop.com/&#34;&gt;PropHop&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;We try to show how close they are to doing really cool things, like the other day when we developed some solutions that lead to&amp;nbsp;&lt;a href=&#34;http://www.faculty.idc.ac.il/arik/SCWeb/imret/index.html&#34;&gt;seam carving&lt;/a&gt;, but there&#39;s still a large enough gap between what they are learning and where they will be that it&#39;s hard for them to see how close they are.&lt;br /&gt;&lt;br /&gt;With this in mind, yesterday, we took a field trip.&lt;br /&gt;&lt;br /&gt;Being an NYU Alum myself &amp;nbsp;(BA &#39;89, MS &#39;95?), the CS people at Courant and I have periodically tried to form a partnership but there were internal problems at NYU that prevented us. Over the past few years, however, things have changed and we&#39;re well on our way.&lt;br /&gt;&lt;br /&gt;Thanks to the efforts of the always amazing &lt;a href=&#34;http://cs.nyu.edu/~korth/&#34;&gt;Evan Korth&lt;/a&gt;, Michael Overton, Rosemary D&#39;Amico, Romeo Kumar, Shawn Abbot, and others, we were able to bring about 100 Stuyvesant juniors to NYU for a day of computer science.&lt;br /&gt;&lt;br /&gt;We had four amazing presenters.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://blog.kenperlin.com/&#34;&gt;Ken Perlin&lt;/a&gt;&amp;nbsp;batted leadoff talking to the kids about a variety of his interests. Basically a&amp;nbsp;smorgasbord of places one can go to with CS. Ken touched on things ranging from expressing emotions from an animated &amp;nbsp;avatar composed of five polygons to paradigm shifts relating to ebooks.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://cs.nyu.edu/~fergus/pmwiki/pmwiki.php&#34;&gt;Rob Fergus&lt;/a&gt; then gave a talk on image deblurring. Where Ken&#39;s talk provided a range of topics, Rob focussed in on one. The kids were really able to see how what they&#39;re doing now is just one step from solving some really neat problems.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.news.cs.nyu.edu/~jinyang/&#34;&gt;JinYang Li&lt;/a&gt; was next. Her talk focused on systems touching on infrastructure issues and&amp;nbsp;parallel&amp;nbsp;processing. This provided an overview of one specific field in computer science.&lt;br /&gt;&lt;br /&gt;Batting cleanup was Nathan Hull. Nathan talked about IOS developement. The most hands on topic of the day. Nathan really emphasized the fact that the kids could just download the tools to do either IOS or Android development and with online resources, they could teach it to themselves.&lt;br /&gt;&lt;br /&gt;All this was followed by a great lunch.&lt;br /&gt;&lt;br /&gt;It was a great range of talks and the kids left having a much better idea of what CS will be like in college and the range of things they&#39;ll be able to do.&lt;br /&gt;&lt;br /&gt;Right now, I&#39;m working on another event which will bring our students together with Stuy graduates working in the industry to give our kids more exposure to the step after college but more on that in a few weeks.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-4837721709455320779?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Pair Programming Tag Team Shootout</title>
      <link>https://cestlaz.github.io/posts/2012-03-01-pair-programming-tag-team-shootout/</link>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-03-01-pair-programming-tag-team-shootout/</guid>
      <description>&lt;!DOCTYPE html&gt;

So today we changed things up a bit.&lt;br /&gt;&lt;br /&gt;Instead of having a typical lab type periods, we tried the Pair Programming Tag Team Shootout.&lt;br /&gt;&lt;br /&gt;We aren&#39;t annualized so while the kids that have been with me since September have been working in pairs for a while, the other half of the class is just getting used to how we do it. I also wanted to get the kids to mix a little more.&lt;br /&gt;&lt;br /&gt;Hence the shootout.&lt;br /&gt;&lt;br /&gt;Everyone got a sheet with a bunch of problems on it:&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.scribd.com/doc/83400730/Shootout&#34; style=&#34;-x-system-font: none; display: block; font-family: Helvetica,Arial,Sans-serif; font-size-adjust: none; font-size: 14px; font-stretch: normal; font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; margin: 12px auto 6px auto; text-decoration: underline;&#34; title=&#34;View Shootout on Scribd&#34;&gt;Shootout&lt;/a&gt;&lt;iframe class=&#34;scribd_iframe_embed&#34; data-aspect-ratio=&#34;0.772727272727273&#34; data-auto-height=&#34;true&#34; frameborder=&#34;0&#34; height=&#34;600&#34; id=&#34;doc_39108&#34; scrolling=&#34;no&#34; src=&#34;http://www.scribd.com/embeds/83400730/content?start_page=1&amp;amp;view_mode=list&amp;amp;access_key=key-2kfbc4856l652aq1j5ik&#34; width=&#34;100%&#34;&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;I then paired them off randomly.&lt;br /&gt;&lt;br /&gt;The idea is complete the first problem, find a new partner, repeat.&lt;br /&gt;&lt;br /&gt;By the end of the period each student worked with between five and seven partners.&lt;br /&gt;&lt;br /&gt;I&#39;m having them send me their solutions and partners tonight.&lt;br /&gt;&lt;br /&gt;The early response was good -- it&#39;s speeding up them getting to know each other and it was a nice change of pace. We had some problems coordinating switching problems, but we&#39;ll do better next time.&lt;br /&gt;&lt;br /&gt;All in all a good day.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-8898870113233862529?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Let me Google that for you</title>
      <link>https://cestlaz.github.io/posts/2012-02-08-let-me-google-that-for-you/</link>
      <pubDate>Wed, 08 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-02-08-let-me-google-that-for-you/</guid>
      <description>&lt;!DOCTYPE html&gt;

Piloting a new course this semester - Intro to Computer Science part 2. Between the existing Intro part 1 and this, we should be able to do a pretty thorough job in preparing our kids for the future.&lt;br /&gt;&lt;br /&gt;We decided that we wanted the kids to make deliverables in the form of web pages - plain old html written by hand. Part of the idea was to demystify things, part was to let the kids show off their work, part was to have something that they can generate programatically as the course progressed, and part was to give them a tool they might find valuable beyond their computer science classes.&lt;br /&gt;&lt;br /&gt;We also wanted to help teach the kids how to find information and how to learn things on their own. Despite the fact that our students use computers all the time, they possess a widely varying skill set. With that in mind, &amp;nbsp;here&#39;s what we tried to do:&lt;br /&gt;&lt;br /&gt;After a brief introduction to what a web page is (just a text file with markup) and showing them the bare&lt;br /&gt;minimum of markup:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/1775745.js?file=simple.html&#34;&gt;&lt;/script&gt;&lt;br /&gt;&lt;br /&gt;I recommended a simple editor - gedit - while resisting all my inner urges for all things emacs, and then showed them an image of a web page:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://www.stuycs.org/courses/ml2/zamansky/work/hw-1/SampleHTMLWebPagePicture.gif&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;177&#34; src=&#34;http://www.stuycs.org/courses/ml2/zamansky/work/hw-1/SampleHTMLWebPagePicture.gif&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The end goal was to make a page that had all of the elements in the above image but I also asked:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;How did they go about finding out how to make the page?&lt;/li&gt;&lt;li&gt;Where did they search?&lt;/li&gt;&lt;li&gt;what turned up bad results (and what were they)?&lt;/li&gt;&lt;li&gt;what turned up good results (and what were they)?&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;I was very pleased with the results. Just about all the kids are now able to make a web page with the components in the image above. More importantly, this is what came out of our discussion:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Everyone used Google exclusively as a search engine.&lt;/li&gt;&lt;li&gt;The range of&amp;nbsp;queries ranged from things like &#34;html tutorial,&#34; &#34;making a web page,&#34; and just plain &#34;html&#34; to maybe not so good things like &#34;gedit web page.&#34;&lt;/li&gt;&lt;li&gt;No one used social search or used facebook.&lt;/li&gt;&lt;li&gt;They mostly all found sites such as w3schools.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;I&#39;m hoping this is a good first step in having the students find things on their own and not be afraid to try things. I think it&#39;s an encouraging start.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-984256400226014120?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CS Stress</title>
      <link>https://cestlaz.github.io/posts/2012-01-29-cs-stress/</link>
      <pubDate>Sun, 29 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-01-29-cs-stress/</guid>
      <description>&lt;!DOCTYPE html&gt;

I&#39;ve been mostly underwater for the last couple of weeks.&lt;br /&gt;&lt;br /&gt;End of term issues combined with the Academy of Software Engineering announcement has pretty much eaten up all of my out of class time.&lt;br /&gt;&lt;br /&gt;It&#39;s going to be a week or so before I can finish writing the posts I was planning on, but it looks like a storm is brewing around Stuyvesant and Computer Science so I thought I&#39;d put up this short semi-related post.&lt;br /&gt;&lt;br /&gt;Stuyvesant has a reputation of being something of a pressure cooker. The day can be as long as ten periods and it&#39;s not uncommon for a student to take three or more AP classes, even before the senior year. The question of student workload and stress has been a hot topic for a number of years.&lt;br /&gt;&lt;br /&gt;There&#39;s frequently tension over how many courses and which courses a student should be allowed to take. &amp;nbsp;Usually, this revolves around the school placing a limit on the number of classes, or more specifically, the number of A.P. classes a student can take. Most recently, the conversation looks to be turning to the number of classes a student can take overall.&lt;br /&gt;&lt;br /&gt;Given that most A.P. classes fall within a Stuyvesant student&#39;s required sequence of classes - that is, Calculus is just &#34;the next math class&#34; and A.P. U.S. History is slotted in place of a students regular U.S. History course, limiting the number of classes a student can take, A.P. or otherwise could have a major impact on Computer Science at Stuyvesant.&lt;br /&gt;&lt;br /&gt;What&#39;s most disturbing is that limiting student options in terms of courses may not do anything to decrease stress and workload. No one has looked at what is actually going on in student&#39;s required classes.&lt;br /&gt;&lt;br /&gt;I decided to collect some information from our students. I sent out a survey to five of our seven A.P. C.S. classes (three of mine, two of JonAlf&#39;s -- the other two classes don&#39;t have a mailing list). I asked them to rate the work load and stress factor for A.P. CS, their typical Stuy course and their typical Stuy A.P.course. So far, I&#39;ve gotten 80 responses (out of about 150 students emailed). Here&#39;s what we got (ratings were on a 1-10 scale):&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;A.P. C.S.&lt;/th&gt;&lt;th&gt;Reg. Class&lt;/th&gt;&lt;th&gt;A.P. Class&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Workload avgs   &lt;/td&gt;&lt;td&gt;4.97    &lt;/td&gt;   &lt;td&gt;6.65    &lt;/td&gt;   &lt;td&gt;7.13    &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Workload dev   &lt;/td&gt;&lt;td&gt;1.94    &lt;/td&gt;   &lt;td&gt;1.41   &lt;/td&gt;   &lt;td&gt;1.52   &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stress avgs   &lt;/td&gt;&lt;td&gt;4.67   &lt;/td&gt;   &lt;td&gt;6.39    &lt;/td&gt;   &lt;td&gt;6.94   &lt;/td&gt;   &lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stress dev   &lt;/td&gt;&lt;td&gt;2.24   &lt;/td&gt;   &lt;td&gt;1.63    &lt;/td&gt;   &lt;td&gt;1.64    &lt;/td&gt;   &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;I know this isn&#39;t really hard data, but it seems that our A.P. C.S. classes are considered to be both easier and less stressful than other classes at Stuyvesant. Given that our kids do very well at C.S., we&#39;re probably doing something right and it will be a shame if student opportunities become limited. I&#39;ll certainly write more on this as the situation develops.&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For you educators out there, is stress an issue at your schools and how do you deal with making room for students to take CS at your schools?&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-7465860293098412736?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My Favorite Student</title>
      <link>https://cestlaz.github.io/posts/2012-01-15-my-favorite-student/</link>
      <pubDate>Sun, 15 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-01-15-my-favorite-student/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;table align=&#34;center&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; class=&#34;tr-caption-container&#34; style=&#34;margin-left: auto; margin-right: auto; text-align: center;&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-jER9_A86OtU/TxMfvZAQI5I/AAAAAAAAGtQ/8zSaqDnUe-U/s1600/Screenshot+at+2012-01-15+13%253A48%253A37.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;228&#34; src=&#34;http://4.bp.blogspot.com/-jER9_A86OtU/TxMfvZAQI5I/AAAAAAAAGtQ/8zSaqDnUe-U/s320/Screenshot+at+2012-01-15+13%253A48%253A37.png&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;tr-caption&#34; style=&#34;text-align: center;&#34;&gt;Fred Wilson and me at #SOTC2012&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;Last week I was given the honor of attending the State of the City address. The mayor was announcing a new school for the fall. An Academy for Software Engineering. This has been in the works for a while and has a long way to go but the announcement was a major step. The project really got its start a couple of years ago. I&#39;d been working hard for years prior trying to get the city to help me grow the program I developed at Stuyvesant, but until Fred got involved, there was no movement. Fred has to receive much of the credit for any good that we do as a result of this and I&#39;d like to&amp;nbsp;publicly&amp;nbsp;thank him. If you don&#39;t follow Fred, you can read his post on the school&amp;nbsp;&lt;a href=&#34;http://www.avc.com/a_vc/2012/01/the-academy-for-software-engineering.html&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It was pretty neat to be on stage for the announcement, but those of you who know me know that I&#39;m not a self promoter and these types of events aren&#39;t &#34;me.&#34;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;What I found really special, were the emails and tweets I got from my former students over the next day or so. As a teacher, we&#39;d like to think we are in some way a &#34;force for good&#34; in our student&#39;s lives and we rarely get to really see what impact we do or don&#39;t have. To hear from so many and such gracious comments brought tears to my eyes. Thanks guys.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I&#39;ve been thinking a lot about my career as a teacher recently. I decided to leave industry over twenty years ago. As teachers, particularly teachers with technical backgrounds we leave a financially lucrative field to enter one with very few financial rewards. It&#39;s also a field very much under attack, particularly in recent years. The current line of thought seems to be that teachers are to blame for everything bad in education and government and private interests, everything good. As a senior teacher, I&#39;m particularly worthless, at least according to what I&#39;ve heard on the radio over the past year.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So, what do I get out of the deal?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Well, when I hear form my graduates, I know that I&#39;ve made a difference.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Also, the friendships I&#39;ve developed over the years.&lt;/div&gt;&lt;div&gt;&lt;table align=&#34;center&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; class=&#34;tr-caption-container&#34; style=&#34;margin-left: auto; margin-right: auto; text-align: center;&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&#34;text-align: center;&#34;&gt;&lt;img class=&#34;eq&#34; height=&#34;400&#34; src=&#34;https://lh5.googleusercontent.com/-d1KZ2LtyNbs/TuPud4EM8hI/AAAAAAAAGq0/9M__1ubQhWI/s400/IMG_20111210_184233.jpg&#34; style=&#34;margin-left: auto; margin-right: auto;&#34; width=&#34;300&#34; /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&#34;tr-caption&#34; style=&#34;text-align: center;&#34;&gt;Stuy &#39;84, &#39;95, 2013, 2015 and families&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&#34;margin-left: 1em; margin-right: 1em; text-align: left;&#34;&gt;&lt;br /&gt;A few weeks ago, we were catching up with a few of the Stuy &#39;95 crew. We do it far too infrequently. They were students, they&#39;re now friends. I&#39;ve had the privilege of seeing many young people grow to adulthood, get married, have children and in a small way I&#39;ve been able to share in their lives. This is the upside of my career choice.&lt;br /&gt;&lt;br /&gt;Maybe this is a result of being a computer science teacher who tries to keep a foot in the tech world. Maybe something else.&lt;br /&gt;&lt;br /&gt;From the college student who stops by just to say hello to the graduate living across the country who drops a line to say how they&#39;re doing. That&#39;s the upside of the teaching profession.&lt;br /&gt;&lt;br /&gt;Recently I thought it would be a good idea to organize the Stuy CS family. Collect email addresse and get a network going. I posted on facebook and sent out a few emails two days ago. So far, 240+ signups.&lt;br /&gt;&lt;br /&gt;A while ago someone asked me who was my favorite student?&lt;br /&gt;&lt;br /&gt;They&#39;re the ones that I&#39;m still in touch with many years after they graduate.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1213107704301509869?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Pretty sneaky, Sis</title>
      <link>https://cestlaz.github.io/posts/2012-01-11-pretty-sneaky-sis/</link>
      <pubDate>Wed, 11 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2012-01-11-pretty-sneaky-sis/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img height=&#34;200&#34; id=&#34;il_fi&#34; src=&#34;http://ecx.images-amazon.com/images/I/5103F3DHQ0L._SL500_AA300_.jpg&#34; style=&#34;padding-bottom: 8px; padding-right: 8px; padding-top: 8px;&#34; width=&#34;200&#34; /&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;https://www.google.com/search?q=connect+4&amp;amp;hl=en&amp;amp;prmd=imvns&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;ei=Y74NT7zGJoTX0QHxv8zsBQ&amp;amp;sa=X&amp;amp;oi=mode_link&amp;amp;ct=mode&amp;amp;cd=2&amp;amp;ved=0CBUQ_AUoAQ&amp;amp;biw=1016&amp;amp;bih=623#&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;https://www.google.com/search?q=connect+4&amp;amp;hl=en&amp;amp;prmd=imvns&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;ei=Y74NT7zGJoTX0QHxv8zsBQ&amp;amp;sa=X&amp;amp;oi=mode_link&amp;amp;ct=mode&amp;amp;cd=2&amp;amp;ved=0CBUQ_AUoAQ&amp;amp;biw=1016&amp;amp;bih=623#&#34;&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;I&#39;ve always lamented the fact that we don&#39;t have the time or structure to really teach our kids to program.&lt;br /&gt;&lt;br /&gt;In their early classes, they learn syntax, algorithms, and &amp;nbsp;some ways of storing data and while they &amp;nbsp;will probably work on some larger projects as they study CS, kids seem to be mostly left on their own in terms of how to take a project from problem or idea to completion.&lt;br /&gt;&lt;br /&gt;This frequently leads to poorly designed projects that are harder for the kids to write, debug, and modify. They end up with huge functions/methods no overall plan or design and&amp;nbsp;everything&#39;s&amp;nbsp;pretty much a mess&lt;br /&gt;&lt;br /&gt;To try to address this, and having finished &amp;nbsp;most of the A.P. curriculum and not wanting to diverge from the other teachers, I figured we&#39;d develop a class project before I gave the class time for their final projects.&lt;br /&gt;&lt;br /&gt;I&#39;m not a huge game person, but since they decompose well, we decided on writing connect 4 - a game that can be described as tic-tac-toe but with four in a row, on a larger board, and WITH GRAVITY!!!!!!&lt;br /&gt;&lt;br /&gt;Actually, the choice of project didn&#39;t matter that much so long as it was the right size -- this was more about how we develop a program than about the actual program itself.&lt;br /&gt;&lt;br /&gt;I started by giving my classes about ten or so minutes to talk&amp;nbsp;among&amp;nbsp;themselves to design the program -- no guidance was given. About seven minutes in, I asked them to reflect on whatever they were discussing - if they were discussing a data structure, why? If class design, why? What was so important about whatever they were discussing that made it their first order of business.&lt;br /&gt;&lt;br /&gt;After a while, we started to share thoughts as a group. Most suggestions revolved around details -- how to you check for a winner, how do you make a move. This made sense - we&#39;ve spent much of the term dealing with writing code fragments to do things and not too much time thinking about overall design.&lt;br /&gt;&lt;br /&gt;This lead to a healthy discussion of looking at things from the top down as well as bottom up.&lt;br /&gt;&lt;br /&gt;By the end of the class, we had identified the key classes we&#39;d need (Board, Player, UI, Game Driver) and had some idea as to how they would relate to each other. By the next morning, we added a data structure for the board.&lt;br /&gt;&lt;br /&gt;Over the next few days we filled in the missing pieces. We moved up and down levels of&amp;nbsp;abstraction&amp;nbsp;being careful to discuss why we designed things the way we did and adapting pieces as needed.&lt;br /&gt;&lt;br /&gt;By the end of the project we were able to accomplish the following:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Students saw how to have classes refer to each other - that is, the Player class had an instance variable to hold the board, while the Game class had instances for Players as well as the Board).&amp;nbsp;&lt;/li&gt;&lt;li&gt;We were able to use different user interfaces for the program -- starting with simple console input and then moving to a GUI -- all we had to do was extend the UI class.&lt;/li&gt;&lt;li&gt;Likewise, implementing a computer player (albeit a rather limited one) was trivial.&lt;/li&gt;&lt;li&gt;I also tried to show frequent testing and the idea of developing one concept at a time.&lt;/li&gt;&lt;li&gt;We discussed the idea that while design is important, there&#39;s a point where you can over design. Be aware of the scope of a project, what can generalize, and what shouldn&#39;t.&lt;/li&gt;&lt;li&gt;With a good design, it was also trivialize to change things like game rules, how to move, board size. etc.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;Based on preliminary feedback, I think the students have a much better ideas as to how to break down, design, and build up a project from design to implementation.&lt;br /&gt;&lt;br /&gt;If any one&#39;s interested, the code is available&amp;nbsp;&lt;a href=&#34;http://code.google.com/p/ml1x-z-src/source/browse/#svn%2Ftrunk%2Fsrc%2Fc4&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;We&#39;ll see if it helps with the final projects, but I&#39;m&amp;nbsp;optimistic. &amp;nbsp;Spending time highlighting the design and development process while building a project can only help.&lt;br /&gt;&lt;br /&gt;Anyone else have interesting mid-size projects they do with their classes?&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-5982145998594622193?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Stanford classes -- what I&#39;d do next</title>
      <link>https://cestlaz.github.io/posts/2011-12-15-stanford-classes-what-id-do-next/</link>
      <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2011-12-15-stanford-classes-what-id-do-next/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;br /&gt;Now that the ML and AI courses are at an end, here are some of the things I would do moving forward.&lt;br /&gt;&lt;br /&gt;Both courses already have a basic track where students just watch the lectures and do the in lecture quizzes and an advanced track where students also complete weekly assignments. I think we can be certain that there were students who just watched a few lectures, many who completed every assignment, and those who fell at all points in between.&lt;br /&gt;&lt;br /&gt;On top of this, there were students who made use of the on line discussion groups and those who didn&#39;t.&lt;br /&gt;&lt;br /&gt;This means there ware a wide range of experiences to be had.&lt;br /&gt;&lt;br /&gt;With this in mind, here&#39;s what I would do.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;Suggestions dealing with basic site content:&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;More practice problems, particularly in AI&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;While there were in video quizzes each week that provided practice, it would have been nice if there was a link to additional optional problems (preferably with solutions available). &amp;nbsp;This would be easy to implement. The ML class would also benefit from this, but since you could retake the weekly assignments and get some variation on the questions, it would be as&amp;nbsp;necessary.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Better reference materials&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Reference sections would be nice as well. The AI staff posted related sections from the text, but there were a number of great on line resources I discovered by reading the discussion groups. Perhaps some of these could be linked to from the main site.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Grading&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;I&#39;m pretty sure that having weekly assignments that were actually graded helped keep me honest. &amp;nbsp;The fact that the ML course was submit as many times as you want and the AI course was one shot didn&#39;t matter. I put the same effort into both classes. In a way I preferred the ML course. &amp;nbsp;I was frustrated a few times when I mis-entered something on a homework or forgot to convert units and got a lower grade than I thought I should have (I know, the grade doesn&#39;t really count).&lt;br /&gt;&lt;br /&gt;I&#39;d actually kind of like the AI course to move more towards the ML class model. The grades don&#39;t really count for anything anyway, and if they did, there are so many X-factors.&lt;br /&gt;&lt;br /&gt;For example, if some one has to do the weekly assignment early due to obligations later in the week, he or she can&#39;t make use of clarifications. Likewise, students probably had widely varying amounts of time to dedicate towards the course. Contrast that to the traditional undergrad student probably has a similar workload to the other people in their classes. In the ML class, it all really didn&#39;t matter.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Office Hours:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;I wasn&#39;t a huge fan of the office hour questions in the AI class but I very much liked the idea of seeing the profs directly answering weekly questions, it helped connect the instructors and the class. This was lacking in the ML class and should be added.&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;On running the class in the future:&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;What made these classes different from other on line lectures was that these were &#34;live&#34; with a staff releasing new content, opening and closing assignments, and adjusting as the course progressed. Each class also had a large number of people taking the class at the same time. Far different than say someone arbitrarily to watch videos from an Open Class Ware course.&lt;br /&gt;&lt;br /&gt;I&#39;d like to believe that the live staff, real deadlines, and large cohorts had a significant psychological effect. &amp;nbsp;I&#39;ve started on line courses in the past but rarely finished them. I think the weekly deadlines and &#34;live&#34; aspect of the course got me to start early each week and forced me to stay up to date.&lt;br /&gt;&lt;br /&gt;With this in mind, Stanford could just run the courses again in a similar manner, possibly with some one else acting as &#34;instructor&#34; to field office hours and oversee the course.&lt;br /&gt;&lt;br /&gt;In addition I&#39;d allow people to take the courses in the following ways:&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Solo:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;Since many people probably didn&#39;t avail themselves of the discussion groups, there&#39;s no reason not to allow someone to start at any time. All that would be needed is the ability to have them submit projects, quizes, etc. If the system could do that, Anyone could take the course at any time, albeit without interaction with others.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Cohort:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;People could sign up with a start date or number of students in mind. When that&#39;s reached, a cohort group can start the class. The discussion pages could be modified so that a cohort can go to it&#39;s own discussion page and the system can dole out lectures and assignments on a pre-determined schedule. This would allow the course to start at a range of times while making sure that students had a community of learners to support each other via discussion groups.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Facilitated:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;Similar to Cohort but someone would sign up as a facilitator. They would moderate the discussion group and control the flow of lectures and assignments. There could even be a way of &#34;licensing&#34; facilitators so they could run official versions of the classes. This way, a local group or school could run the class on their schedule.&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;So, there you have it. How I&#39;d modify Stanford&#39;s great educational experiment. Next time, I&#39;ll share my thoughts on on-line education and how it&#39;s (mis) used in our high schools.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-5909921438108205670?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ML and AI Courses - how they were taught</title>
      <link>https://cestlaz.github.io/posts/2011-12-08-ml-and-ai-courses-how-they-were-taught/</link>
      <pubDate>Thu, 08 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2011-12-08-ml-and-ai-courses-how-they-were-taught/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;br /&gt;This is the first in a three part series.&lt;br /&gt;&lt;br /&gt;Part 1 talks about my take on how the courses were presented.&lt;br /&gt;in Part 2, I&#39;ll discuss my take on how to improve the experience&lt;br /&gt;and finally, in part 3, we&#39;ll look at on line education with an emphasis on the high school market.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt; &lt;td align=&#34;left&#34;&gt;&lt;br /&gt;&lt;div style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;rg_hi&#34; data-height=&#34;249&#34; data-width=&#34;202&#34; height=&#34;200&#34; id=&#34;rg_hi&#34; src=&#34;https://encrypted-tbn2.google.com/images?q=tbn:ANd9GcSz2UVcJKxi-GaRmx3YkMgXFsbHLv3GzzHScWL3s5-C_ZxFcspk&#34; style=&#34;height: 249px; width: 202px;&#34; width=&#34;162&#34; /&gt;&lt;/div&gt;&lt;br /&gt;&lt;/td&gt; &lt;td align=&#34;right&#34; width=&#34;100%&#34;&gt;&lt;br /&gt;&lt;div style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;rg_hi&#34; data-height=&#34;215&#34; data-width=&#34;234&#34; height=&#34;215&#34; id=&#34;rg_hi&#34; src=&#34;https://encrypted-tbn3.google.com/images?q=tbn:ANd9GcRgdP0dnwf27O3eF0sDEgxIswi2ahjhzwD-TOO1OoaKClry5krvPA&#34; style=&#34;height: 215px; width: 234px;&#34; width=&#34;234&#34; /&gt;&lt;/div&gt;&lt;br /&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;As some of you know, I&#39;ve been taking the on line &lt;a href=&#34;http://ml-class.com/&#34;&gt;Machine Learning&lt;/a&gt; and&lt;a href=&#34;http://ai-class.com/&#34;&gt; Artificial Intelligence&lt;/a&gt; courses offered by Stanford this semester. I took my AI&amp;nbsp;class a hundred years ago and I never formally studied ML so I figured this would be a fun way to keep current.&lt;br /&gt;&lt;br /&gt;Lots of people have already &#34;reviewed&#34; the courses, compared the instructors, assignments, and what have you. Now that the courses are almost over, I thought I&#39;d try to look at it a little differently, wearing my hat as a high school CS educator rather than just a consumer.&lt;br /&gt;&lt;br /&gt;I&#39;ve enjoyed both courses tremendously and I&#39;d like to thank everyone involved in making them available to the public.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: x-large;&#34;&gt;Teaching style:&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Every teacher has their own style. &amp;nbsp;Here&#39;s my take on our three instructors. I don&#39;t think any one style is universally better than any other, rather different styles speak to different students.&lt;br /&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;Peter Norvig:&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;While watching Professor Norvig&#39;s videos, I felt that he was the learned sage imparting information. He&#39;s the wise man in the village that everyone turns to for answers.&lt;br /&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;Andrew Ng:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;I felt like I was with a tutor or a coach, everything was gently presented and at the end of the lecture I looked back and said &#34;wow, I got all of that, it made sense.&#34; As he was the only lecturer for the ML class, I&#39;ll explain in more detail in the next section.&lt;br /&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;Sebastian Thrun:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;I can&#39;t come up with an analogy for Profressor Thrun, but I could feel him saying &#34;let&#39;s try something neat, make some mistakes, explore neat things, and learn a whole bunch as a result.&#34; It took a while to get used to this, particularly when being asked questions before given enough information to approach them. Once used to the technique, however, I really enjoyed his approach to teaching.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Conclusions:&lt;/b&gt;&amp;nbsp;I would love to have the opportunity to sit in on live classes with all three as sitting in on a class can be very different from watching a video, but being on the east coast, I don&#39;t think that will happen any time soon.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: x-large;&#34;&gt;Lecture style:&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;In the ML lectures, Prof. Ng gently guided the viewer through the topics. Generally first by describing the various parts of the topic in question and then by bringing it all together, completely describing the algorithm or technique.&lt;br /&gt;&lt;br /&gt;There are points in the lectures where Prof Ng states that the material is hard and that he had a tough time with some of it. This empathy and his assurances go a long way. I found the lectures easy to absorb and didn&#39;t generally have to think too hard. By itself this might have limited the educational experience, but combined with the assignments, it worked great.&lt;br /&gt;&lt;br /&gt;The AI class had a different approach. The class was frequently tasked with solving problems before material was presented. This turned me off early on. As the class progressed, the professors started to emphasize the fact that your quiz scores didn&#39;t matter (they appear on the web site but aren&#39;t calculated in the final grade, not that the final grade matters anyway) and that these questions were to get you thinking about the topic more deeply. Once I started looking at the approach from this point of view, I enjoyed the class much more.&lt;br /&gt;&lt;br /&gt;That said, I found the ML class lectures much more self contained and found myself looking for additional resources to learn the &#34;base&#34; material at times in the AI class.&lt;br /&gt;&lt;br /&gt;The AI lectures forced &amp;nbsp;me to think more than the ML class which is probably a good thing since there were no programming projects to take up the slack.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Conclusions: &lt;/b&gt;Styles differ but both can be effective. I could make as much or as little a mental effort as I wanted for the ML class and I&#39;d get out of it what I put in. The AI required more effort to get anything out of it -- the approach forced you to think where the ML class encouraged you to think. In the end, I put comparable amounts of time into both and got about the same amount out of each.&lt;br /&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: x-large;&#34;&gt;Homework and Projects:&lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;Both classes had weekly homework assignments. Without these, I would probably have slacked off on the videos.&lt;br /&gt;&lt;br /&gt;In the AI class, these were submitted over the course of the week and then graded. Results and explanation videos were provided after grading was done. The process was fine but I found the interface occasionally frustrating. There were some complaints on the message boards about losing points due to mis-entry or insufficient accuracy of answers. I &amp;nbsp;had a few problems with both but since I wasn&#39;t obsessed with getting a perfect score, it didn&#39;t bother me too much.&lt;br /&gt;&lt;br /&gt;I&#39;m not sure how great the assignments were in terms of assessments but attempting them and then watching the video explanations turned out to be a strong pedagogical approach. I would recommend including the explanation videos in the regular sequence for the in lecture quizzes. I frequently gleaned a tidbit or two from them even when I answered the questions correctly.&lt;br /&gt;&lt;br /&gt;The only downside to the AI class quizzes and homeworks is that they were all in video form. A PDF of the midterm was published and something similar, at least for the weekly homework assignments would be a plus.&lt;br /&gt;&lt;br /&gt;The ML class also had weekly assignments. They were in the form of an interactive five question quiz. You could attempt them up to 100 times and your top score would count towards your grade.&lt;br /&gt;&lt;br /&gt;The real value added to these assignments was the explanations when you answered one wrong. There were even a couple of times I answered a question or two incorrectly on purpose to see the explanations provided. &amp;nbsp;This style of assessment provided a feedback loop that could really help a student to be sure they understood the work.&lt;br /&gt;&lt;br /&gt;The one thing the AI class lacked that the ML class included was programming assignments. Probably a good thing for me since I don&#39;t think I would have had the time to be able to complete both courses with that added burden. That said, I loved the ML class programming assignments.&lt;br /&gt;&lt;br /&gt;For the most part, they were extremely well constructed, stepping the student through all of the weeks topics. By the end of each project, we had a working system and a good understanding of the weeks concepts. You could take shortcuts and finish the assignments by merely copying and coding up formulas but if you did it right, you&#39;d learn a lot.&lt;br /&gt;&lt;br /&gt;The only assignment that I felt was less than stellar was the SVM project. Even then, it had redeeming features. For part of the project we had to process emails and build a table of word counts. Not directly related to SVMs but something that&#39;s frequently done with data to be processed and therefore still worthwhile.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Conclusions: &lt;/b&gt;The programming projects really reinforced the lecture content in the ML class and I would imagine that adding them to the AI class would benefit students. Even without them, one could go to the actual Stanford class&#39;es web site and work on their projects.&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: x-large;&#34;&gt;&lt;b&gt;Other random thoughts:&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: x-large;&#34;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;Both courses used the web site, email, and twitter to periodically communicate information, but the AI did one thing the ML class didn&#39;t. They periodically sent messages of congratulations and encouragement. They also repeatedly mentioned how well we were all doing in the lectures and in the office hours. Prof. Ng also provided encouraging words, but they seemed more self contained and generic.&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;On the other hand, I wasn&#39;t happy with the large numbers of hints and deadline extensions that the AI class offered. I felt that it rewarded people who left things to for the last minute and gave them an advantage over students who were more diligent or had to complete the weeks work early and could not take advantage of the last minute hints and extensions. Ultimately it doesn&#39;t matter, but that&#39;s the type of thing that pushes my buttons.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Conclusions: &lt;/b&gt;Again, both courses were great, but the AI course seemed to do a better job in connecting with the class, that is, making me feel like I&#39;m part of the class rather than just watching.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Wow, that was long. I hope some one finds this interesting. In the next installment, I&#39;ll talk about what I would do if I were moving these projects ahead.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-3798273183924664881?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Where&#39;s Waldo - Text style</title>
      <link>https://cestlaz.github.io/posts/2011-12-03-wheres-waldo-text-style/</link>
      <pubDate>Sat, 03 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2011-12-03-wheres-waldo-text-style/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-hMHnHYdTs4s/TtplhsggjFI/AAAAAAAAGqs/AwPiobAINw0/s1600/Screenshot%2Bat%2B2011-12-03%2B12%253A55%253A43.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;100&#34; src=&#34;http://3.bp.blogspot.com/-hMHnHYdTs4s/TtplhsggjFI/AAAAAAAAGqs/AwPiobAINw0/s200/Screenshot%2Bat%2B2011-12-03%2B12%253A55%253A43.png&#34; width=&#34;100&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Ok, it&#39;s a word search.&lt;br /&gt;&lt;br /&gt;We&#39;re always looking for interesting applications to build lessons around. Over the years, I&#39;ve tried different things when teaching 2 dimensional arrays. Simple game boards, representing a crossword puzzle, tables of various sorts, etc.&lt;br /&gt;&lt;br /&gt;This year,&amp;nbsp;&lt;a href=&#34;http://www.jonalf.com/&#34;&gt;JonAlf&lt;/a&gt;, one of my amazingly talented colleagues,&amp;nbsp;decided to go with building a word search. I decided to steal the idea. It&#39;s a great one.&lt;br /&gt;&lt;br /&gt;I thought I&#39;d use this post to go through the project and why I like it.&lt;br /&gt;&lt;br /&gt;Ultimately, the students end up with a program that will generate an n by m&amp;nbsp;word search filled with random words from a dictionary. We gave the kids a skeleton of the base class. The only actual code we had to supply was the method that loaded a dictionary file into memory. You can check out the assignment &lt;a href=&#34;https://sites.google.com/a/stuycs.org/home/courses/ml1x/zamansky/work/hw-20-duetbd&#34;&gt;here&lt;/a&gt;&amp;nbsp;and&amp;nbsp;the finished code&amp;nbsp;&lt;a href=&#34;http://code.google.com/p/ml1x-z-src/source/browse/#svn%2Ftrunk%2Fsrc%2FWordSearch&#34;&gt;here&lt;/a&gt;&amp;nbsp;(we updated the repository as the project developed).&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The first part of the project are pretty mundane. The kids write a couple of constructors and toString. Basically just practice traversing a 2D array. The project starts to get interesting at part 2, when they write the methods that add words into the grid. First horizontally:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/1428475.js?file=addWordH&#34;&gt;&lt;/script&gt;&lt;br /&gt;&lt;br /&gt;After they write the method to add words vertically, we can start to refine things. We notice that the routines are essentially the same. The only difference between adding a word horizontally and vertically is &amp;nbsp;what we add &amp;nbsp;to the row and column each time. For one, there is a delta column of + 1, for the other it&#39;s a delta row. Further, they realize that adding diagonal words just needs both deltas. This leads us to factoring out the common aspects of the code and writing something like:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/1428495.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;&lt;br /&gt;All of a sudden, they&#39;ve written one piece of code that can add words in 8 orientations.&lt;br /&gt;&lt;br /&gt;After filling the rest of the grid with random letters, we turn our attention to building a random puzzle.&lt;br /&gt;&lt;br /&gt;This part of the project involves using an ArrayList of words. Our students frequently mix up array and ArrayList notation early on so by having a project that uses both but in clearly delineated areas, the students can be more comfortable with each.&lt;br /&gt;&lt;br /&gt;For this piece, the code is again straight forward. Students run a loop that gets a random word from our dictionary and tries to place it in our grid at a random location choosing one of our possible orientations randomly. We get to see another nice little refinement again when we move from the typical first take at building a random puzzle which uses a three (or more) way if statement to select how to add words:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/1428594.js?file=addWords1&#34;&gt;&lt;/script&gt;&lt;br /&gt;&lt;br /&gt;to using our more general addWords method described above:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/1428599.js?file=addWords2&#34;&gt;&lt;/script&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;When we&#39;re all done, we had some time to project the word search on the board and fun was had by all.&lt;br /&gt;&lt;br /&gt;Peter, another one of our CS teachers had a great suggestion that I think I&#39;ll try. Start a competition to have the students modify the program so that it generates as densely packed &amp;nbsp;a wordsearch &amp;nbsp;as possible (giving higher scores first for longer words, then number of words).&lt;br /&gt;&lt;br /&gt;Between the way the project broke down, the topics covered and the little refinements, I really enjoyed working with my classes on this project -- I&#39;m hoping they enjoyed it as well.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-2041316883816388484?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Reboot</title>
      <link>https://cestlaz.github.io/posts/2011-11-27-reboot/</link>
      <pubDate>Sun, 27 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2011-11-27-reboot/</guid>
      <description>&lt;!DOCTYPE html&gt;

A couple of weeks ago, I attended the K-12 workshop at the Grace Hopper Celebration of Women in Computing Conference. It was great to reconnect with some old friends, make some new ones, and talk shop for the weekend.&lt;br /&gt;&lt;br /&gt;One result was that I promised to start blogging again.&lt;br /&gt;&lt;br /&gt;I&#39;ve got a number of ideas for posts lined up. Some on pedagogy, some technical, and some cultural. Hope you enjoy them.&lt;br /&gt;&lt;br /&gt;Earlier today Ben Chun tweeted about this post:&amp;nbsp;&lt;a href=&#34;http://worrydream.com/SomeThoughtsOnTeaching/&#34;&gt;http://worrydream.com/SomeThoughtsOnTeaching/&lt;/a&gt;. &amp;nbsp;To summarize -- teachers should practice what they preach. In the post, Bret Victor wonders if there are calculus teachers who spend their evenings doing calculus.&lt;br /&gt;&lt;br /&gt;I know a number of math teachers who spend a considerable amount of their free time working on problems and refining their math skills, I also know many who don&#39;t.&lt;br /&gt;&lt;br /&gt;I know wonderful, inspirational teachers in both camps. I&#39;ve also known weak teachers that fall into both categories. Great teachers in both categories also spend large amounts of time working on how to best deliver instruction.&lt;br /&gt;&lt;br /&gt;Before I started developing the computer science program at Stuyvesant, there were one or two sections of A.P. Computer Science. They were taught by a terrific teacher -- one of my mentors and role models, but he was a math guy and not passionate about CS. When I took over, the enrollment&amp;nbsp;immediately&amp;nbsp;shot up. Not because I was any great shakes, and Dave, the previous teacher was legendary. Rather, the students knew I loved CS. Part of that love was that I enjoy solving problems with computers, coding and what have you. The students can tell.&lt;br /&gt;&lt;br /&gt;The fact that I code is a byproduct of my passion and part of the whole package that defines me as a teacher and a person. Whatever success I achieve is a result of this package. It&#39;s something I enjoy, and it also keeps me current with the field.&lt;br /&gt;&lt;br /&gt;I&#39;ve seen &#34;naturals&#34; who are just great teachers and get by without a passion for their subjects. More often than not, there&#39;s a ceiling in terms of what they can give their students either in terms of content, or more importantly, in terms of&amp;nbsp;inspiration. Some times the ceiling is high enough that there isn&#39;t a problem.&lt;br /&gt;&lt;br /&gt;Over the years, my &#34;practice&#34; has taken different shapes. Early on, while my students were working on&amp;nbsp;&lt;a href=&#34;http://www.usaco.org/&#34;&gt;USACO&lt;/a&gt;&amp;nbsp;problems. I figured I had better be able to represent, so I started doing them. Later on, I would write systems to support my teaching.&lt;br /&gt;&lt;br /&gt;More recently, I&#39;ve been lucky enough to be surrounded by a number of like minded educators. We frequently share little projects we work on.&lt;br /&gt;&lt;br /&gt;This semester, I&#39;ve been taking the Stanford on line&amp;nbsp;&lt;a href=&#34;http://ai-class.org/&#34;&gt;AI&lt;/a&gt;&amp;nbsp;and&amp;nbsp;&lt;a href=&#34;http://ml-class.org/&#34;&gt;ML&lt;/a&gt;&amp;nbsp;classes -- both have been lots of fun.&lt;br /&gt;&lt;br /&gt;This is just what I do and who I am and it is reflected in how I teach.&lt;br /&gt;&lt;br /&gt;Of course, time and job constraints make coding difficult during the school year. With ~150 students, lesson planning, grading, and ancillary responsibilities take their tolls.&lt;br /&gt;&lt;br /&gt;So, I guess I&#39;m an example of what Bret Victor was talking about. I&#39;m not sure I fully agree with his thesis, but it seems to work for me.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1460836429704454417?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The Rest of the Trip</title>
      <link>https://cestlaz.github.io/posts/2010-08-15-rest-of-trip/</link>
      <pubDate>Sun, 15 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-15-rest-of-trip/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;span style=&#34;font-size: large;&#34;&gt;&lt;b&gt;Now for the rest of the trip.&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;b&gt;Rome to &lt;span style=&#34;font-size: large;&#34;&gt;Little&lt;/span&gt; Falls&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;We had some trouble getting out of Rome. As always, once we&#39;re on trail, it&#39;s pretty easy to follow, but entering and leaving towns and cities, with the exceptions of canal side towns like Lockport, can be a challenge. During the day, we found that we could either follow the official Erie Canal Trail signs or the pink trail blazes painted on the streets for the Erie Canal Tour (that preceded us by a week). As we get to towns, the blazes are of little use since they lead to rest stops and camp sites rather than through. We also had the &lt;a href=&#34;http://www.ptny.org/guidebook/index.shtml&#34;&gt;Cycling the Erie Canal&lt;/a&gt; book. It&#39;s terrific and I recommend it to anyone riding the canal. It does, however, have one problem. When the path is on the road, it doesn&#39;t actually name the road (rather, it superimposes the path line). This made getting out of Rome a chore. Fortunately, we only added one mile to our day before we found our way out.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Leaving town we saw Rome&#39;s beautifully restored train station:&lt;br /&gt; &lt;br /&gt; &lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGSElnvuA5I/AAAAAAAAGBo/8xS2pUIxkuY/s1600/IMG_20100812_085625.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGSElnvuA5I/AAAAAAAAGBo/8xS2pUIxkuY/s200/IMG_20100812_085625.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGSEmflCK-I/AAAAAAAAGBw/_196cSQpiFo/s1600/IMG_20100812_085634.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGSEmflCK-I/AAAAAAAAGBw/_196cSQpiFo/s200/IMG_20100812_085634.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Also, the Fort Herkimer Church:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGSE8s3YozI/AAAAAAAAGCA/04I7vpST8K8/s1600/IMG_20100812_145416.jpg&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGSE8s3YozI/AAAAAAAAGCA/04I7vpST8K8/s320/IMG_20100812_145416.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The rest of the ride was relatively uneventful.&lt;br /&gt;&lt;br /&gt;We spent the night in Little Falls. Stayed in the &#34;Canal Side Inn,&#34; a small in with three rooms. Our&#39;s was both huge and gorgeous.&amp;nbsp; It has a connected restaurant. Fine French/American fare. Everything on the menu looked delicious, but after a day of riding, it was a little much. They also had a less expensive, less elaborate grill menu with items like Steak Frites, or scrod in an almond crust served in the lounge. As the lounge was booked, they offered us the grill menu in the main dining room. Food was excellent, including the deserts -- chocolat pot de creme, a meringue filled with strawberries and ice cream, and a blueberry bread pudding.&lt;br /&gt;&lt;br /&gt;If you ever get to Little Falls, eat at the Canal Side Inn.&lt;br /&gt;&lt;br /&gt;Then it was time to turn in.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Miles today: 44.5&lt;br /&gt;Miles total: 313.5&lt;br /&gt; &lt;br /&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;b&gt; Little Falls to Amsterdam:&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;b&gt;&amp;nbsp; &lt;/b&gt;&lt;/span&gt;&lt;br /&gt;As Little Falls was right next to the canal, leaving town was easy. Just outside of town, we passed the high point of the canal. At the point, a lock with what I think was the canal&#39;s largest altitude change.&lt;br /&gt;&lt;br /&gt;It looked to be another uneventful day. More beautiful views that have become de rigueur and more crushed stone path that was more like biking through sand.&lt;br /&gt;&lt;br /&gt;It looked like our two most promising lunch spots were at around 15 miles (too early) and 30 miles (too late). At 15 miles, at Canajoharie, we stopped for ice cream:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGWnOr5elOI/AAAAAAAAGDc/hvji45k5tSk/s1600/IMG_20100813_112629.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGWnOr5elOI/AAAAAAAAGDc/hvji45k5tSk/s200/IMG_20100813_112629.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This was the first time all trip we were able to find mid-day ice cream!!!!!!&lt;br /&gt;&lt;br /&gt;Canajoharie is another one of those small towns we passed through, but they set up a little information stand right where the trail crosses main street. The young man working there directed us to the ice cream.&lt;br /&gt;&lt;br /&gt;One of the things that surprised me throughout was the lack of signage at the towns, particularly the small ones. While the traffic on the trail isn&#39;t great, a couple of signs pointing to food and refreshments at the trail heads would cost next to nothing and maybe draw a few more people into the towns.&lt;br /&gt;&lt;br /&gt;Refreshed and refueled, we continued on. After lunch at Fultonville, we soldiered on. A few miles out of Amsterdam, we got to the Schoharie crossing:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGWnDTW-NHI/AAAAAAAAGDY/LKb2Ys2kcA0/s1600/IMG_20100813_141549.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGWnDTW-NHI/AAAAAAAAGDY/LKb2Ys2kcA0/s200/IMG_20100813_141549.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Here, you can see the remains Schoharie aqueduct from the barge canal in the distance:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGWmbWf4cZI/AAAAAAAAGDA/QDWBCAZeh_k/IMG_20100813_143044.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGWmbWf4cZI/AAAAAAAAGDA/QDWBCAZeh_k/IMG_20100813_143044.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;The Schoharie crossing is the one location where there are remnants from all renditions of the canal and one can also see the I90, where the bridge collapsed some 20 years ago.&lt;br /&gt;&lt;br /&gt;It also turns out that this was the site of other historic places:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGWl6TsYd9I/AAAAAAAAGC4/Y6QW5D1Wy1c/IMG_20100813_143305.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGWl6TsYd9I/AAAAAAAAGC4/Y6QW5D1Wy1c/IMG_20100813_143305.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;We arrived in Amsterdam a short time later. We stayed at the America&#39;s Best Value hotel. The only one in town. Looks like new ownership is doing some serious renovations but the rooms were spacious, clean, and nice. BIL Mike and SO Maria live nearby and joined us for dinned. We ate at the on site indian restaurant -- naan and saag paneer -- mmmmm.&lt;br /&gt;&lt;br /&gt;One more day of riding.&lt;br /&gt;&lt;br /&gt;Miles today: 49&lt;br /&gt;Miles total: 362.5&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-size: large;&#34;&gt;&lt;b&gt;Amsterdam to Albany:&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Last day of riding. We estimated about 50 miles. Best lunch possibility was Cohoe s, about 30 miles away. We were hoping to find a snack along the way but figured we&#39;d make it on Nuun and Cliff Bars if needs be. The mileage looked to be formidable, but we also new the whole day would be on paved roads and paved trail.&lt;br /&gt;&lt;br /&gt;Leaving Amsterdam, we saw a couple more historic sites:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGcqdcaITKI/AAAAAAAAGEU/qql-cg88k9k/s1600/IMG_20100814_081946.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGcqdcaITKI/AAAAAAAAGEU/qql-cg88k9k/s200/IMG_20100814_081946.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGcqg9XwEHI/AAAAAAAAGEc/HpdCKiaZKw4/s1600/IMG_20100814_082014.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGcqg9XwEHI/AAAAAAAAGEc/HpdCKiaZKw4/s200/IMG_20100814_082014.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Sad to say, even here, there are ghost bikes:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqn8XBziI/AAAAAAAAGEo/pjrFvH3jy-Y/s1600/IMG_20100814_092902.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqn8XBziI/AAAAAAAAGEo/pjrFvH3jy-Y/s200/IMG_20100814_092902.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Some final pretty views along the way:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqpnPulZI/AAAAAAAAGEw/b0JOc0Ntmg4/s1600/IMG_20100814_093507.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqpnPulZI/AAAAAAAAGEw/b0JOc0Ntmg4/s200/IMG_20100814_093507.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqrq4igOI/AAAAAAAAGE0/Mu8vfzqwvgw/s1600/IMG_20100814_093511.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqrq4igOI/AAAAAAAAGE0/Mu8vfzqwvgw/s200/IMG_20100814_093511.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;New and old locks:&lt;br /&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqtYbzG0I/AAAAAAAAGE4/FLz2agDshq0/s1600/IMG_20100814_095507.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqtYbzG0I/AAAAAAAAGE4/FLz2agDshq0/s200/IMG_20100814_095507.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqv52lLvI/AAAAAAAAGE8/_p_MQWye5Yw/s1600/IMG_20100814_100035.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcqv52lLvI/AAAAAAAAGE8/_p_MQWye5Yw/s200/IMG_20100814_100035.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;A fallen Rock zone complete with fallen rock:&lt;br /&gt; &lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGcqxekphKI/AAAAAAAAGFA/5jNEf3IaUkQ/s1600/IMG_20100814_104825.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGcqxekphKI/AAAAAAAAGFA/5jNEf3IaUkQ/s320/IMG_20100814_104825.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;This bridge that just rose out of nowhere:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGcq5Vxmt2I/AAAAAAAAGFY/NTwQtHz9Kkc/s1600/IMG_20100814_122541.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGcq5Vxmt2I/AAAAAAAAGFY/NTwQtHz9Kkc/s320/IMG_20100814_122541.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;And a family picture sans me:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGcq3nL4KPI/AAAAAAAAGFU/-mFNRJ5hbd4/s1600/IMG_20100814_112458.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGcq3nL4KPI/AAAAAAAAGFU/-mFNRJ5hbd4/s320/IMG_20100814_112458.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;And we were at the Cohoes falls:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcq62bVYSI/AAAAAAAAGFc/zPuysKYoc7Y/s1600/IMG_20100814_125125.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcq62bVYSI/AAAAAAAAGFc/zPuysKYoc7Y/s320/IMG_20100814_125125.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcq8gAChBI/AAAAAAAAGFk/RZke_MBz1AM/s1600/IMG_20100814_140052.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcq8gAChBI/AAAAAAAAGFk/RZke_MBz1AM/s200/IMG_20100814_140052.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;We stumbled upon a bike shop that recommended we go to &#34;Bread and Jam&#34; for lunch.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;After lunch, we were down to our last 10 miles.&lt;br /&gt; &lt;br /&gt; Along the way we saw this:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcrI1hx8eI/AAAAAAAAGGA/i-46oVYQaiw/s1600/IMG_20100814_143805.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcrI1hx8eI/AAAAAAAAGGA/i-46oVYQaiw/s320/IMG_20100814_143805.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Clearly owned by the third pig.&lt;br /&gt; &lt;br /&gt; Finally, to the Hudson river, our river:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGcrMTIRR1I/AAAAAAAAGGI/jGoCEtyV7wc/s1600/IMG_20100814_151614.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGcrMTIRR1I/AAAAAAAAGGI/jGoCEtyV7wc/s200/IMG_20100814_151614.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcrODecKEI/AAAAAAAAGGM/5OBUBSKmgSo/s1600/IMG_20100814_151619.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGcrODecKEI/AAAAAAAAGGM/5OBUBSKmgSo/s200/IMG_20100814_151619.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;We got to Albany early enough that we were able to switch our train tickets, cancel our hotel reservation and get home by 7:00. &lt;br /&gt;&lt;br /&gt;Miles today: 55&lt;br /&gt;Miles total: 417.5&lt;br /&gt;Plus the miles to reconcile with Devorah&#39;s count give us: 420&lt;br /&gt;&lt;br /&gt;That&#39;s 420 miles in 10 days, right across the state. 46.6 miles a day on average for the ride days. &lt;br /&gt;&lt;br /&gt;We&#39;re all a little tired but feeling a sense of pride.&lt;br /&gt;&lt;br /&gt;Next, some reflections on the tour and touring.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-8375338461918808827?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>No wifi</title>
      <link>https://cestlaz.github.io/posts/2010-08-13-no-wifi/</link>
      <pubDate>Fri, 13 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-13-no-wifi/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;br&gt;No wifi last night.hopefully tonight.&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-3439188711432106621?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Too tired to blog</title>
      <link>https://cestlaz.github.io/posts/2010-08-13-too-tired-to-blog/</link>
      <pubDate>Fri, 13 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-13-too-tired-to-blog/</guid>
      <description>&lt;!DOCTYPE html&gt;

Got in to Amsterdam NY a few hours ago. Just finished mapping out tomorrow&#39;s route. Hope to get all the details and pictures for the past three days up tomorrow or Sunday. Too sleepy to do it now.&lt;br /&gt;&lt;br /&gt;Miles Yesterday: 44.5&lt;br /&gt;Miles Today: 49&lt;br /&gt;Total: 362.5 (but I think I lost a handful of miles somewhere).&lt;br /&gt;&lt;br /&gt;Tomorrow we make our way to Albany.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-4149788241103838418?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>All roads may lead to Rome, but not all are paved</title>
      <link>https://cestlaz.github.io/posts/2010-08-11-all-roads-may-lead-to-rome-but-not-all/</link>
      <pubDate>Wed, 11 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-11-all-roads-may-lead-to-rome-but-not-all/</guid>
      <description>&lt;!DOCTYPE html&gt;

Today figured to be one of our longer days mileage wise, we didn&#39;t think it would be that tough or tricky to navigate.&lt;br /&gt;&lt;br /&gt;We checked out of our hotel at about 8:30 and hit the road. Streets through Syracuse, up a few hills towards the outskirts of town. Our directions and actual streets didn&#39;t quite jive so we had a little trouble finding our way back to the canal path, but once we did we figured it would be smooth sailing. Most of today was along the &#34;Old Erie Canal State Park.&#34; A 36 mile linear park stretching from Syracuse to Rome.&amp;nbsp; Just about all of it is off road.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGMyaf2_BuI/AAAAAAAAF_Q/1rBGV1AA_ao/s1600/IMG_20100811_092547.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGMyaf2_BuI/AAAAAAAAF_Q/1rBGV1AA_ao/s200/IMG_20100811_092547.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGMypRMsDsI/AAAAAAAAF_Y/s7Z3Yysg_ow/s1600/IMG_20100811_093605.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGMypRMsDsI/AAAAAAAAF_Y/s7Z3Yysg_ow/s200/IMG_20100811_093605.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;About 17 miles in we got to Chitenango, birthplace of L. Frank Baum of &#34;Wizard of Oz&#34; fame.&amp;nbsp; We spent some time at their &#34;Canal Boat Museum.&#34; It&#39;s on the site where they built and repaired canal boats. They&#39;ve been working to restore as much of the site as possible. This includes the drydocks:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGMzUgsvXLI/AAAAAAAAF_0/yenDVdU5CRM/s1600/IMG_20100811_110232.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGMzUgsvXLI/AAAAAAAAF_0/yenDVdU5CRM/s200/IMG_20100811_110232.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGMzdXQrsdI/AAAAAAAAF_4/93Fxo4k5qEs/s1600/IMG_20100811_111038.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGMzdXQrsdI/AAAAAAAAF_4/93Fxo4k5qEs/s200/IMG_20100811_111038.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;as well as an 80% sized canal boat they&#39;re building:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGMzp258PPI/AAAAAAAAGAE/W8ALxRligZE/s1600/IMG_20100811_111701.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGMzp258PPI/AAAAAAAAGAE/W8ALxRligZE/s200/IMG_20100811_111701.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Back on the trail, we spotted the remains of sunken canal boat (note the rebar tracing out the boat in the water):&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGMzzx7AVeI/AAAAAAAAGAI/U9pJ0kzMOrs/s1600/IMG_20100811_113100.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGMzzx7AVeI/AAAAAAAAGAI/U9pJ0kzMOrs/s200/IMG_20100811_113100.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Continuing on, there were more locks:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGMz6iF9UFI/AAAAAAAAGAM/pZ952XKrbQU/s1600/IMG_20100811_144601.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGMz6iF9UFI/AAAAAAAAGAM/pZ952XKrbQU/s200/IMG_20100811_144601.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;and bridges:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGM0D_oB1RI/AAAAAAAAGAU/FPR0gfn6h_I/s1600/IMG_20100811_144614.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGM0D_oB1RI/AAAAAAAAGAU/FPR0gfn6h_I/s200/IMG_20100811_144614.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;After lunch in Canastota, we set out on the second 25ish miles of the day. We found our way back onto the path, the stone dust was fine and even some of the road was paved. This lulled us into a sense of security. About 15 miles into the afternoon ride, we crossed path with what appeared to be a trail resurfacing machine. Not a good thing. The next few miles had us hugging the one good edge of the trail. The rest was soft and full of holes. The whole trail was also full of runs of dirt and gullies. All hazardous to us.&lt;br /&gt;&lt;br /&gt;We struggled through and made it to the outskirts of Rome. We followed the last few miles of path, but the path kept degrading. First to a rocky surface, then to one with pools of water, then to no path at all!!!! Fortunately, there was an outlet to a road nearby. We worked our way to it and followed the roads the rest of the way in.&lt;br /&gt;&lt;br /&gt;We had made it to Rome.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGM0D_oB1RI/AAAAAAAAGAU/FPR0gfn6h_I/s1600/IMG_20100811_144614.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGM0D_oB1RI/AAAAAAAAGAU/FPR0gfn6h_I/s200/IMG_20100811_144614.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;After lunch in Canastota, we set out on the second 25ish miles of  the day. We found our way back onto the path, the stone dust was fine  and even some of the road was paved. This lulled us into a sense of  security.&lt;br /&gt;&lt;br /&gt;After checking into the hotel and a cooling dip in the pool, we walked over to fort Stanwix, dating back to the French and Indian war.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGM1SdeOSiI/AAAAAAAAGA0/c9V03bGaSZs/s1600/IMG_20100811_174126.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGM1SdeOSiI/AAAAAAAAGA0/c9V03bGaSZs/s320/IMG_20100811_174126.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGM1lKtcmnI/AAAAAAAAGA4/wiWcHcXk4c0/s1600/IMG_20100811_174156.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGM1lKtcmnI/AAAAAAAAGA4/wiWcHcXk4c0/s320/IMG_20100811_174156.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Dinner at the Franklin Hotel (appropriately, Italian food. As they say, when in Rome...).&lt;br /&gt;&lt;br /&gt;Tomorrow we head off to Little Falls.&lt;br /&gt;&lt;br /&gt;Today: 49.5&lt;br /&gt;Total:&amp;nbsp;&amp;nbsp; 269&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-324626734191713469?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Nothing to see here</title>
      <link>https://cestlaz.github.io/posts/2010-08-10-nothing-to-see-here/</link>
      <pubDate>Tue, 10 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-10-nothing-to-see-here/</guid>
      <description>&lt;!DOCTYPE html&gt;

Yesterday we left Seneca Falls and headed back north up to Syracuse. Our fifth day in a row of riding. Figured it could be one of the tougher days between the changing terrain and the return of the heat and humidity.&amp;nbsp; Apparently, there&#39;s no shade in northern NY.&lt;br /&gt;&lt;br /&gt;Turned out to be true. The first part of the ride was mostly on road. Easy surface, but up and down.&amp;nbsp; When we got to the old canal path, it was more gravely than crushed stone. Felt like we were riding through mush.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Stopped about 20 mile in for lunch at Jordan. Just about our halfway point of the day and of the trip.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGCC8cTQSwI/AAAAAAAAF9M/FdO1UkNllU8/s1600/IMG_20100809_123907.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGCC8cTQSwI/AAAAAAAAF9M/FdO1UkNllU8/s320/IMG_20100809_123907.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Unlike other days when we were able to find nice local eateries, today we hat to resort to a single pizza place. Truth be told, it was pretty good but as the pizzeria was hot, we were actually better off eating at the picnic table in the sun out front. &lt;br /&gt;&lt;br /&gt;Back on the trail, there were some nice sights, including remnants from the old canal.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGCDAI9Fa2I/AAAAAAAAF9U/3ogAk3MMLVc/s1600/IMG_20100809_123944.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGCDAI9Fa2I/AAAAAAAAF9U/3ogAk3MMLVc/s320/IMG_20100809_123944.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGCDBoilDCI/AAAAAAAAF9c/2l4t0kJibyM/s1600/IMG_20100809_124127.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TGCDBoilDCI/AAAAAAAAF9c/2l4t0kJibyM/s320/IMG_20100809_124127.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&#34;text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGCDDBBAC6I/AAAAAAAAF9g/o-XNCakXEwg/s1600/IMG_20100809_133337.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;br /&gt;&lt;/a&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGCDF94R9kI/AAAAAAAAF9o/1lEr5AnU7lo/s1600/IMG_20100809_135909.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGCDF94R9kI/AAAAAAAAF9o/1lEr5AnU7lo/s320/IMG_20100809_135909.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;After 42.5 tough miles, we ended up in Syracuse.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGCDJjSkSBI/AAAAAAAAF90/edt7IgpzS38/s1600/IMG_20100809_170609.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TGCDJjSkSBI/AAAAAAAAF90/edt7IgpzS38/s320/IMG_20100809_170609.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Hearty appetites in tow, we decided to sample Dinosaur Bar-B-Que. Good. Personally, I prefer the burnt ends at Rub and the overall meal at Hill Country, and those are just a couple of blocks from our house.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGCDKYYof0I/AAAAAAAAF94/UOauSrVwiBE/s1600/IMG_20100809_170905.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TGCDKYYof0I/AAAAAAAAF94/UOauSrVwiBE/s320/IMG_20100809_170905.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Today was our rest day. Hot and humid -- would have been brutal to ride, but it wasn&#39;t a lot of fun walking around town. Not much to tell, just a quiet day. Most things we hoped to see were closed. We did get to the Erie Canal museum -- In the last remaining WeighLock house (sorry, no pictures, accidentally erased what was on my phone). To pay for the original canal as well as it&#39;s expansion, tolls were levied on good passing through. To determine the toll, canal boats had to be weighted. At the beginning of each season, weights were determined for each boat. Then, as they moved through the canal, they would enter a weighlock, the water would drain, depositing the boat on a huge wooden cradle which was part of a scale. The boat would be weighed and the toll assessed.&lt;br /&gt;&lt;br /&gt;Here&#39;s a picture from wikipedia:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/ErieCanalMuseumSyracuse.JPG/250px-ErieCanalMuseumSyracuse.JPG&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/ErieCanalMuseumSyracuse.JPG/250px-ErieCanalMuseumSyracuse.JPG&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Note the road in front -- that used to be the old canal. Other than the weigh lock building and a few other artifacts, there&#39;s nary a trace.&lt;br /&gt;&lt;br /&gt;The rest of the day was spent walking around and taking it easy.&lt;br /&gt;&lt;br /&gt;&lt;span id=&#34;goog_725115&#34;&gt;&lt;/span&gt;&lt;span id=&#34;goog_725116&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGGRUAoj4bI/AAAAAAAAF-Y/ylZymwTXCrI/s1600/IMG_20100810_110327.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TGGRUAoj4bI/AAAAAAAAF-Y/ylZymwTXCrI/s320/IMG_20100810_110327.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Miles from the previous day: 42.5&lt;br /&gt;Total: 219.5&lt;br /&gt;&lt;br /&gt;Tomorrow: All roads lead to Rome.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-7077795059789910778?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Day 5</title>
      <link>https://cestlaz.github.io/posts/2010-08-09-day-5/</link>
      <pubDate>Mon, 09 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-09-day-5/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;br /&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF9GwanbIJI/AAAAAAAAF78/MLoPnvKbGP8/s1600/IMG_20100808_162329.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF9GwanbIJI/AAAAAAAAF78/MLoPnvKbGP8/s200/IMG_20100808_162329.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;Angel 1: What are the Zamansky&#39;s doing next to that bridge?&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Angel 2: Maybe they&#39;re pondering if their lives have had any meaning in this world.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF9GuQHtPYI/AAAAAAAAF70/tF5-5yU-KZM/s1600/IMG_20100808_162143.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF9GuQHtPYI/AAAAAAAAF70/tF5-5yU-KZM/s200/IMG_20100808_162143.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Angel 1: Do you think we should send Clarence to straighten them out? He seemed to do a good job&lt;br /&gt;&amp;nbsp;the last time we had a troubled person on that bridge. He even earned his wings.&lt;br /&gt;&lt;br /&gt;Angel 2: I don&#39;t know, maybe they&#39;re just trying to decide on where to go to dinner.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Yep there we were, on the bridge in Bedford, I mean Seneca Falls. The bridge and town that was purportedly used as a model for Frank Capra&#39;s &#34;It&#39;s a Wonderful Life.&#34; But how did we get there? Maybe we should start at the beginning.&lt;br /&gt;&lt;br /&gt;We left our intrepid adventurers last night in Palmyra. After posting, we went to look at the Joseph Smith farm and Sacred Grove, passing the Mormon Temple and Church along the way. This morning after breakfast with what appeared to be a number of &#34;pilgrims&#34; getting ready to worship, we set off.&lt;br /&gt;&lt;br /&gt;Requisite pretty pictures here:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF9GbuC2jRI/AAAAAAAAF6s/DOE-e3hEtsU/s1600/IMG_20100808_084313.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF9GbuC2jRI/AAAAAAAAF6s/DOE-e3hEtsU/s320/IMG_20100808_084313.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9Gdo0lQjI/AAAAAAAAF60/_UQzuQEElRw/s1600/IMG_20100808_090932.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9Gdo0lQjI/AAAAAAAAF60/_UQzuQEElRw/s320/IMG_20100808_090932.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Passing through all the &#34;port&#34; towns, each with the canal neatly manicured. Straight banks and a narrow channel it&#39;s easy to forget that the whole project tied together a number of NY waterways. At points like in the above picture, it&#39;s much wider and the banks much more natural.&lt;br /&gt;&lt;br /&gt;We stopped at a hotel in Newark NY for the facilities. Natan noticed this:&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF9Ge7sl-wI/AAAAAAAAF64/qDhPqccIY5o/s1600/IMG_20100808_093354.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF9Ge7sl-wI/AAAAAAAAF64/qDhPqccIY5o/s320/IMG_20100808_093354.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;The sign instructs to flush up for liquid waste, down for solid. We decided not to ask. Tim, I don&#39;t know if you read this blog, but I think you had a story about this.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;From there we moved from the canal path to the road. After a few miles on Bike Route 5, we ended up in Clyde. Ate at&amp;nbsp; &#34;Brickoven&#34; a restaurant that used to be an industrial bakery.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF9GmIMCBmI/AAAAAAAAF7Q/yHwo-nhIkas/s1600/IMG_20100808_120721.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF9GmIMCBmI/AAAAAAAAF7Q/yHwo-nhIkas/s200/IMG_20100808_120721.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF9Gm1qODcI/AAAAAAAAF7U/fHQDToHPSgM/s1600/IMG_20100808_121016.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF9Gm1qODcI/AAAAAAAAF7U/fHQDToHPSgM/s200/IMG_20100808_121016.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Perfect stop for lunch. The corned beef hash I had wasn&#39;t great -- tasted like canned. Maybe that&#39;s just coming off of the hash I had at the diner in Tonowanda which was truly exceptional. Everything else was terrific and the staff and clientèle as friendly as could be.&lt;br /&gt;&lt;br /&gt;From there it was on route 414 until we got to Seneca Falls. We did some road riding on our first day, but this was our most extensive. We had some stretches of six foot shoulders, but some of three and some of none. Since the roads weren&#39;t that busy it wasn&#39;t too nerve wracking.&lt;br /&gt;&lt;br /&gt;Interesting though, to see how motorists treat you. Most motorists made attempts to slow down and shift at least partly into the neighboring lane (where oncoming traffic sometimes made this impossible). Every now and then, however, a car would blow by right next to us.&lt;br /&gt;&lt;br /&gt;I particularly noticed a three car caravan that whooshed passed us. The first and third cars were no surprise -- a big honkin SUV and a red sports car. The car in the middle was an ice cream truck -- you know the kind. The small ones that park on a street corner to dispense Good Humor Bars. Complete with those big SLOW &lt;br /&gt;emblems on it. In all fairness to the SUV&#39;s most of them gave us wide berth.&lt;br /&gt;&lt;br /&gt;Forty two miles after we started, we ended up in Seneca Falls. It&#39;s noted for a number of things including the women&#39;s rights movement. There are a number of plaques noting important achievements of women including Amelia Bloomer, Elizbeth Cady Stanton, and others.&lt;br /&gt;&lt;br /&gt;We walked part of the town, passing the church where the first equal rights amendment was proposed:&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9Gp3rMNBI/AAAAAAAAF7g/rzvdjzcfzvY/s1600/IMG_20100808_160404.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9Gp3rMNBI/AAAAAAAAF7g/rzvdjzcfzvY/s200/IMG_20100808_160404.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The Cayuga - Seneca canal:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9GsM2bj7I/AAAAAAAAF7o/X011uG3IO4s/s1600/IMG_20100808_160908.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9GsM2bj7I/AAAAAAAAF7o/X011uG3IO4s/s200/IMG_20100808_160908.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;And a neat sculpture garden:&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9GzUgyfgI/AAAAAAAAF8I/RNJ9VVTDJuI/s1600/IMG_20100808_164257.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9GzUgyfgI/AAAAAAAAF8I/RNJ9VVTDJuI/s200/IMG_20100808_164257.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;After dinner, we walked back to our inn. So tired from the day, only 42 miles, but with a fair number of hills that we got a laugh out of this sign:&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9G0TSCqRI/AAAAAAAAF8M/D5RCJlb0Y9g/s1600/IMG_20100808_185139.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF9G0TSCqRI/AAAAAAAAF8M/D5RCJlb0Y9g/s320/IMG_20100808_185139.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Only to realize that it was just poor typesetting:&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF9G1VUD02I/AAAAAAAAF8Q/AyW7CaW-Cno/s1600/IMG_20100808_185143.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF9G1VUD02I/AAAAAAAAF8Q/AyW7CaW-Cno/s320/IMG_20100808_185143.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Now back at the inn for a good night&#39;s sleep.&lt;br /&gt;&lt;br /&gt;Today: 42 miles&lt;br /&gt;Total: 177&lt;br /&gt;Tomorrow: Syracuse&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1274380354398171463?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Weak wifi last night</title>
      <link>https://cestlaz.github.io/posts/2010-08-09-weak-wifi-last-night/</link>
      <pubDate>Mon, 09 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-09-weak-wifi-last-night/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF_qbcL2XDI/AAAAAAAAF8w/p4MncXU1KKM/Weak%20wifi%20last%20night_img_1.jpg&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF_qbcL2XDI/AAAAAAAAF8w/p4MncXU1KKM/Weak%20wifi%20last%20night_img_1.jpg&#34; style=&#34;margin: 0pt 10px 10px 0pt; float: left cursor: pointer;&#34; height=&#34;240px&#34; width=&#34;320px&#34; /&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;Weak wifi last night so I wasn&#39;t able too post a full report.&amp;nbsp; Hopefully tonight from syracuse. 42 miles yesterday for a total of 177.&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-8350779558099799484?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Brockport to Palmyra</title>
      <link>https://cestlaz.github.io/posts/2010-08-07-brockport-to-palmyra/</link>
      <pubDate>Sat, 07 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-07-brockport-to-palmyra/</guid>
      <description>&lt;!DOCTYPE html&gt;

Beautiful weather today, just like yesterday. Forgot to mention yesterday that Clarence Birdseye started his quick freezing experiments in Brockport.&lt;br /&gt;&lt;br /&gt;Let&#39;s start with the requisite canal pics:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3BcuqFYdI/AAAAAAAAF4Q/JldOAdU1-xA/s1600/IMG_20100807_094535.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3BcuqFYdI/AAAAAAAAF4Q/JldOAdU1-xA/s200/IMG_20100807_094535.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF3Bo8TzlJI/AAAAAAAAF4g/a1etW0pVRNQ/s1600/IMG_20100807_095017.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF3Bo8TzlJI/AAAAAAAAF4g/a1etW0pVRNQ/s200/IMG_20100807_095017.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;And a picture of my trusty steed:&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF3BixkmluI/AAAAAAAAF4Y/DDgSo_19ryw/s1600/IMG_20100807_094917.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF3BixkmluI/AAAAAAAAF4Y/DDgSo_19ryw/s320/IMG_20100807_094917.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;We originally figured we&#39;d get lunch at Rochester -- about 18 miles into the ride. If we felt good, we&#39;d try to push on to Pittsford. We were pretty excited when we saw:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF3Bq2SnbiI/AAAAAAAAF4k/W9G8ttVDbyY/s1600/IMG_20100807_110404.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF3Bq2SnbiI/AAAAAAAAF4k/W9G8ttVDbyY/s320/IMG_20100807_110404.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Of course, the entire canal path in Rochester is in park so we rode right through without thinking about it.&lt;br /&gt;&lt;br /&gt;At mile 25, we finally stopped for lunch.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF3Bwf-vA1I/AAAAAAAAF4w/Ew0Nbh5fpGM/s1600/IMG_20100807_135634.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF3Bwf-vA1I/AAAAAAAAF4w/Ew0Nbh5fpGM/s200/IMG_20100807_135634.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF3Bt-HHKpI/AAAAAAAAF4o/siPLwYGbn14/s1600/IMG_20100807_122959.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF3Bt-HHKpI/AAAAAAAAF4o/siPLwYGbn14/s200/IMG_20100807_122959.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pittsford has a nice little park right on the canal. A Bike shop, a couple of other shops, and a few restaurants. We wanted to try the Crepe place, but long lines led us to a third day of medeteranian food. Not bad, and a pretty view of the canal. Besides, since we were eating outdoors, we didn&#39;t even have to lock up the bkes.&lt;br /&gt;&lt;br /&gt;We were making much better time than our first two days, but today was a tough one for Batya. She just felt weak all day. On top of that, porta-potties were at a premium. Throughout the trip, we&#39;ve been surprised by the cleanliness of the porta-potties on the canal route. We&#39;ve been equally surprised by the irregularity of their spacing. Some times they&#39;re at every lift bridge, some time much further apart. Today, there was nothing from shortly after we set out up until lunch. In the afternoon, Batya was ecstatic to find:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3B1InLm1I/AAAAAAAAF44/qir0aRS0BUs/s1600/IMG_20100807_135818.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3B1InLm1I/AAAAAAAAF44/qir0aRS0BUs/s320/IMG_20100807_135818.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Other than the scenic ride, not too much today en route. We did see the lift bridge in Fairport. It&#39;s unique in that it has no right angles and that&amp;nbsp; the two banks are at different levels:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3B3fc-ddI/AAAAAAAAF48/6hICJZhzRmk/s1600/IMG_20100807_141325.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3B3fc-ddI/AAAAAAAAF48/6hICJZhzRmk/s200/IMG_20100807_141325.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3B71oEcmI/AAAAAAAAF5E/ryLc7yfOgPk/s1600/IMG_20100807_144322.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3B71oEcmI/AAAAAAAAF5E/ryLc7yfOgPk/s200/IMG_20100807_144322.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;We also saw: &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;br /&gt;I&#39;m also continually amazed at the design and engineering of the canal. We got to one of the locks just as it was about to go into action. Moving water from here:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3CAIEfikI/AAAAAAAAF5M/luD401xSOz4/s1600/IMG_20100807_150535.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3CAIEfikI/AAAAAAAAF5M/luD401xSOz4/s200/IMG_20100807_150535.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3CF1t4hNI/AAAAAAAAF5Y/bDX3272DmuI/s1600/IMG_20100807_151037.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TF3CF1t4hNI/AAAAAAAAF5Y/bDX3272DmuI/s200/IMG_20100807_151037.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;To here, and then abck in just a couple of minutes.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&lt;br /&gt;We finished the day in Palmyra where the Mormons got their start. Known for it&#39;s &#34;four corners&#34; an intersection with a churh on each of the four corners.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF3CLhFue0I/AAAAAAAAF5k/p7rzavt8pJg/s1600/IMG_20100807_155741.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF3CLhFue0I/AAAAAAAAF5k/p7rzavt8pJg/s200/IMG_20100807_155741.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF3CJdMbL2I/AAAAAAAAF5g/fYJFk74H4L8/s1600/IMG_20100807_155709.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TF3CJdMbL2I/AAAAAAAAF5g/fYJFk74H4L8/s200/IMG_20100807_155709.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF3CQHcWJtI/AAAAAAAAF5s/0XwD7yDSx4E/s1600/IMG_20100807_155850.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TF3CQHcWJtI/AAAAAAAAF5s/0XwD7yDSx4E/s200/IMG_20100807_155850.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF3CNWggtLI/AAAAAAAAF5o/rtc87y3aMP8/s1600/IMG_20100807_155807.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;200&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TF3CNWggtLI/AAAAAAAAF5o/rtc87y3aMP8/s200/IMG_20100807_155807.jpg&#34; width=&#34;150&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;All in all, a 50 mile day -- new touring best.&lt;br /&gt;&lt;br /&gt;Total Miles: 135&lt;br /&gt;&lt;br /&gt;Tomorrow we head off the canal and down to Seneca Falls.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1943890247473322475?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Lockport to Brockport</title>
      <link>https://cestlaz.github.io/posts/2010-08-06-lockport-to-brockport/</link>
      <pubDate>Fri, 06 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-06-lockport-to-brockport/</guid>
      <description>&lt;!DOCTYPE html&gt;

Day 3. From Lockport to Brockport.&lt;br /&gt;&lt;br /&gt;Lockport is &#34;famous&#34; for it&#39;s locks -- the two channel 5 step ones. Brockport is famous for it&#39;s... brocks?&lt;br /&gt;&lt;br /&gt;After a reasonable nights sleep and breakfast at Hambleton House, our BnB, we were off.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFx4tP1JEFI/AAAAAAAAF1c/h12KoxOqvrc/s1600/IMG_20100806_093418.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFx4tP1JEFI/AAAAAAAAF1c/h12KoxOqvrc/s320/IMG_20100806_093418.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&amp;nbsp;Here&#39;s one of the many lift bridges that cross the canal. Right now it&#39;s down. It&#39;s raised when a boat has to pass under. Back in the day, as there was much less road traffic, the bridges stayed in the raised position so boats and barges could pass. Stairways took pedestrians to the raised pathway to cross at any time. The bridge only had to be lowered when vehicular traffic had to cross.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The entire day was spent right along the canal providing for some very pleasant scenery:&lt;br /&gt; &lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFx4xygAZGI/AAAAAAAAF1k/XywYlgzeKsk/s1600/IMG_20100806_100916.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFx4xygAZGI/AAAAAAAAF1k/XywYlgzeKsk/s200/IMG_20100806_100916.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFx4z6cIbzI/AAAAAAAAF1s/zRr1S0R9nfU/s1600/IMG_20100806_100926.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFx4z6cIbzI/AAAAAAAAF1s/zRr1S0R9nfU/s200/IMG_20100806_100926.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;And more lift bridges:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFx5Vr6PplI/AAAAAAAAF2g/OzKoBz7N-9E/s1600/IMG_20100806_114638.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFx5Vr6PplI/AAAAAAAAF2g/OzKoBz7N-9E/s200/IMG_20100806_114638.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Crossing a canal aqueduct.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFx5nDHKxyI/AAAAAAAAF24/tq79--D6TM0/s1600/IMG_20100806_120451.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFx5nDHKxyI/AAAAAAAAF24/tq79--D6TM0/s200/IMG_20100806_120451.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;And here, this aqueduct is the only point at which a road passes under the canal.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;And then to the northern most point of the canal:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFx5s7inxZI/AAAAAAAAF3E/4AFrM93O61E/s1600/IMG_20100806_125455.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFx5s7inxZI/AAAAAAAAF3E/4AFrM93O61E/s320/IMG_20100806_125455.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;About 22 or so miles in, we stopped at Albion for lunch. After riding around the historic downtown and seeing the cobblestone buildings, we stopped at a coffee shop&amp;nbsp; for lunch, picking up one of their famous SchnickleFritz cookies for a snack later on.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFx5yTNhabI/AAAAAAAAF3Q/XtOREP7EnA0/s1600/IMG_20100806_135549.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFx5yTNhabI/AAAAAAAAF3Q/XtOREP7EnA0/s200/IMG_20100806_135549.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Here&#39;s another lift bridge -- in the up position this time.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFx5405ItnI/AAAAAAAAF3g/emvsi1zcnYc/s1600/IMG_20100806_135700.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;240&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFx5405ItnI/AAAAAAAAF3g/emvsi1zcnYc/s320/IMG_20100806_135700.jpg&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This lift bridge was the sight of a circus stunt gone terribly awry.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Making it to Holley NY, we realized that we&#39;ve actually covered a fair amount of ground:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFx57bl8e0I/AAAAAAAAF3k/_H-kmQQq94M/s1600/IMG_20100806_151036.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFx57bl8e0I/AAAAAAAAF3k/_H-kmQQq94M/s320/IMG_20100806_151036.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;This was at a park that had a really nice waterfall, but alas, I don&#39;t have a shot worthy of sharing.&lt;br /&gt;&lt;br /&gt;From there five more miles to Brockport, the Victorian Inn, showers and dinner at a Greek restaurant.&lt;br /&gt;&lt;br /&gt;Mileage for the day: 47&lt;br /&gt;Total: 85&lt;br /&gt; &lt;br /&gt; This beats both our touring one day total of 42 from McKeesport PA to Connelsville, PA and two day touring total: Mkeesport PA to Ohiopyle PA, 58 miles. It doesn&#39;t beat our top day which was 88 miles -- the NY Century (75 mile ride plus an extra 13 afterwards).&lt;br /&gt;&lt;br /&gt;Tomorrow to Palmyra.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-2060842584962667541?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Erie Canal - Day 2</title>
      <link>https://cestlaz.github.io/posts/2010-08-05-erie-canal-day-2/</link>
      <pubDate>Thu, 05 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-05-erie-canal-day-2/</guid>
      <description>&lt;!DOCTYPE html&gt;

Surpassing our day 1 total of 1 mile wasn&#39;t going to be hard. We set out for breakfast. Rode down by the Niagara River and over the Rainbow Bridge. I was a little surprised not to find Asgard on the other side.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFsqHeJqGgI/AAAAAAAAFys/HjjGnfMe1wo/s1600/IMG_20100805_092716.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFsqHeJqGgI/AAAAAAAAFys/HjjGnfMe1wo/s320/IMG_20100805_092716.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Back in New York, we continued on. Our first stretch was on Bike Route 5:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFsqPrQNRjI/AAAAAAAAFyw/VHmDkQXjS4A/s1600/IMG_20100805_101249.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFsqPrQNRjI/AAAAAAAAFyw/VHmDkQXjS4A/s320/IMG_20100805_101249.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Paved but cragly and full of holes. Not very scenic either, at least not until we got closer to Tonowanda where we found the Seabee&#39;s memorial:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFsqvFFcrLI/AAAAAAAAFzA/XWbkAHtkjr0/s1600/IMG_20100805_104307.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFsqvFFcrLI/AAAAAAAAFzA/XWbkAHtkjr0/s200/IMG_20100805_104307.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFsq8B75nDI/AAAAAAAAFzE/xxx0Gq3gLLo/s1600/IMG_20100805_104334.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFsq8B75nDI/AAAAAAAAFzE/xxx0Gq3gLLo/s200/IMG_20100805_104334.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;What else did we find in Tonowanda?&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The Carousel Museum&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFsrTMfFqDI/AAAAAAAAFzQ/fH4xxwfYbDs/s1600/IMG_20100805_110310.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFsrTMfFqDI/AAAAAAAAFzQ/fH4xxwfYbDs/s200/IMG_20100805_110310.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFsro3Y79BI/AAAAAAAAFzg/UdDwjOFu5ec/s1600/IMG_20100805_112744.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFsro3Y79BI/AAAAAAAAFzg/UdDwjOFu5ec/s200/IMG_20100805_112744.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Apparently, Carousel&#39;s were made in Tonowanda. One can learn all about them -- making the animals, the Wurlitzer organs, motors, construction, etc. Worth it if you&#39;re in the area.&lt;br /&gt; &lt;br /&gt; &lt;br /&gt;After lunch at a local diner, the kind where everyone knows everyone and the hash is homemade and tasty, we finally found our way to the canal!!!!!!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFsr1JRp3ZI/AAAAAAAAFzo/sEoLP7U0Zcw/s1600/IMG_20100805_130905.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFsr1JRp3ZI/AAAAAAAAFzo/sEoLP7U0Zcw/s320/IMG_20100805_130905.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;We rode for miles along the canal with brief detours out to the road.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFsr6X7BSSI/AAAAAAAAFzs/Wl_V9QCTz90/s1600/IMG_20100805_132821.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFsr6X7BSSI/AAAAAAAAFzs/Wl_V9QCTz90/s1600/IMG_20100805_132821.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFsr6X7BSSI/AAAAAAAAFzs/Wl_V9QCTz90/s1600/IMG_20100805_132821.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;320&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TFsr6X7BSSI/AAAAAAAAFzs/Wl_V9QCTz90/s320/IMG_20100805_132821.jpg&#34; width=&#34;240&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFssFarE6RI/AAAAAAAAFzw/gSOhqcfV5u8/s1600/IMG_20100805_132825.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFssFarE6RI/AAAAAAAAFzw/gSOhqcfV5u8/s320/IMG_20100805_132825.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFsson8l_vI/AAAAAAAAFz8/LNNSh3q2Dcw/s1600/IMG_20100805_133340.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFsson8l_vI/AAAAAAAAFz8/LNNSh3q2Dcw/s320/IMG_20100805_133340.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;In this picture, all that green is actually on the canal. It&#39;s water chestnuts waiting to be harvested.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;After a stop at the Amherst museum for bathrooms and a cold drink of water, we continued on. A few miles later,&lt;br /&gt;we were in Lockport. Our destination for the night. Lockport is best known for having a two channel five step lock. One side has been replaced with a two step lock and the other is no longer functional but it&#39;s still pretty neat.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFstlvtO5fI/AAAAAAAAF0k/D0yzmLZL3RE/s1600/IMG_20100805_155733.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFstlvtO5fI/AAAAAAAAF0k/D0yzmLZL3RE/s320/IMG_20100805_155733.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;From there to our BnB:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFtOQdynCQI/AAAAAAAAF00/1fuBqfJ014E/s1600/IMG_20100805_172631.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TFtOQdynCQI/AAAAAAAAF00/1fuBqfJ014E/s320/IMG_20100805_172631.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Pizza and pasta for dinner, and now for a good night&#39;s sleep.&lt;br /&gt;&lt;br /&gt;Total miles for the day: 37 for a grand total of 38.&lt;br /&gt;&lt;br /&gt;Tomorrow: 42 miles to Brockport.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-8730908885262180492?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Erie Canal Day 1</title>
      <link>https://cestlaz.github.io/posts/2010-08-05-erie-canal-day-1/</link>
      <pubDate>Thu, 05 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-08-05-erie-canal-day-1/</guid>
      <description>&lt;!DOCTYPE html&gt;

Yesterday we started on a 12 day adventure. From Niagara Falls, Ont to Albany, mostly along the Erie Canal Tow path all by bike. A little more ambitious than our four day excursion outside of Pittsburgh last year.&lt;br /&gt;&lt;br /&gt;Bright and early we set out -- at Penn Station by 6:00am. That&#39;s where we had our first scare -- the Amtrak agent said we couldn&#39;t bring out bikes. Amtrak policy say&#39;s otherwise (folding bikes that fold to within a certain size are allowed at any time according to their on line regulations. We also checked by calling). The agent checked and we were allowed to board.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFspGwBG7NI/AAAAAAAAFyA/Urp1eXL-WKw/s1600/IMG_20100804_150043.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFspGwBG7NI/AAAAAAAAFyA/Urp1eXL-WKw/s200/IMG_20100804_150043.jpg&#34; width=&#34;200&#34; /&gt;]&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&amp;nbsp;&lt;/div&gt;&amp;nbsp;After a long day on the train including about an hour waiting for customs, we got off at Niagara Falls, Ontario. After checking in to the hotel, we went down to the falls. Had dinner at an OK middle eastern place -- good Schwarma, so-so falafel.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFspkOkxLJI/AAAAAAAAFyM/21VgEx7c__M/s1600/IMG_20100804_201218.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TFspkOkxLJI/AAAAAAAAFyM/21VgEx7c__M/s200/IMG_20100804_201218.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFsp9yFEIAI/AAAAAAAAFyo/OuWbqkbv3iA/s1600/IMG_20100804_204634.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TFsp9yFEIAI/AAAAAAAAFyo/OuWbqkbv3iA/s200/IMG_20100804_204634.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;br /&gt;&lt;br /&gt;We then walked back to the hotel for the night.&lt;br /&gt;Total milage: 1 (.5 from home to Penn Station and .5 from The Niagara Falls station to the hotel). &lt;br /&gt;&lt;br /&gt;We did walk 2 to 3 miles though.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-5194588514322483498?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Circumnavigating the Island (mostly)</title>
      <link>https://cestlaz.github.io/posts/2010-06-20-circumnavigating-island-moastly/</link>
      <pubDate>Sun, 20 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-06-20-circumnavigating-island-moastly/</guid>
      <description>&lt;!DOCTYPE html&gt;

&amp;nbsp;Been a while since my last post but summer&#39;s coming so I think I&#39;ll have more time and energy. For today, a break from CS and Education issues and something on one of my other passions, bicycling.&lt;br /&gt;&lt;br /&gt;Having not gone on a substantial ride for a while, yesterday, we decided to do a modified circumnavigation of NYC. Starting from home, we rode east over to first avenue. From there North...&lt;br /&gt;&lt;br /&gt;&amp;nbsp;First stop, the UN. Here in front of the St. George and the Missile Dragon sculpture.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_qY3_s-fM9jM/TB1WjtcpihI/AAAAAAAAKGQ/-8qI8qnmVSQ/s1600/P6190006.JPG&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://3.bp.blogspot.com/_qY3_s-fM9jM/TB1WjtcpihI/AAAAAAAAKGQ/-8qI8qnmVSQ/s200/P6190006.JPG&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_qY3_s-fM9jM/TB1V1cBTR0I/AAAAAAAAKGI/fecb0uVeyTQ/s1600/P6190007.JPG&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://4.bp.blogspot.com/_qY3_s-fM9jM/TB1V1cBTR0I/AAAAAAAAKGI/fecb0uVeyTQ/s200/P6190007.JPG&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;Typically NY, the first guy we asked to take our picture said no.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;At 84th street, we made our way &lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TB0F6jQ81jI/AAAAAAAAFrQ/Gn2iXV-TzuQ/s640/IMG_20100619_122541.jpg&#34;&gt;Carl Shurz park&lt;/a&gt;. A beautiful little park on NY&#39;s upper east side. Home to Gracie Mansion and a number of quiet spots.&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Here, along the&amp;nbsp; bike path, you can see the Triboro bridge (no, not the RFK bridge) in the background as well as the Hell Gate Bridge, that&#39;s the one in the background. It served as the model for the Sydney Harbour bridge in Australia.&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&amp;nbsp;&lt;a href=&#34;http://4.bp.blogspot.com/_qY3_s-fM9jM/TB1VfUin9qI/AAAAAAAAKF8/zPOwnfiFTmk/s1600/P6190010.JPG&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;240&#34; src=&#34;http://4.bp.blogspot.com/_qY3_s-fM9jM/TB1VfUin9qI/AAAAAAAAKF8/zPOwnfiFTmk/s320/P6190010.JPG&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Unfortunately, the waterside path ends at about 120th street or so, so we turned into Harlem:&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&amp;nbsp;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TB0J8_t1CpI/AAAAAAAAFsg/NJjF6wtF9z0/s1600/IMG_20100619_102256.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TB0J8_t1CpI/AAAAAAAAFsg/NJjF6wtF9z0/s320/IMG_20100619_102256.jpg&#34; /&gt; &lt;/a&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;A Hariet Tubman monument&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TB0IwkB2WrI/AAAAAAAAFsQ/Fm1d6q5sIQU/s1600/IMG_20100619_103734.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TB0IwkB2WrI/AAAAAAAAFsQ/Fm1d6q5sIQU/s320/IMG_20100619_103734.jpg&#34; /&gt; &lt;/a&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;and Hamilton Grange.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Up at 155th, you can get back by the river by the Harlem River Drive. You can see in the distance both the Highbridge aquaduct as well as the Highbridge water tower:&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TB0IoTfJKQI/AAAAAAAAFsI/gycpEljYMNk/s1600/IMG_20100619_105308.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TB0IoTfJKQI/AAAAAAAAFsI/gycpEljYMNk/s320/IMG_20100619_105308.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;At the north end of the Harlem River Drive bike path is Swindler&#39;s Cove. One of the quietest, most beautiful secret nooks in Manhattan:&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;a href=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TB0Icx6Z6oI/AAAAAAAAFsE/Qusezgz7Sq4/s1600/IMG_20100619_110317.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh6.ggpht.com/_7YN3bkG0cSc/TB0Icx6Z6oI/AAAAAAAAFsE/Qusezgz7Sq4/s200/IMG_20100619_110317.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TB0IFenkCUI/AAAAAAAAFsA/EDmZ5VblvXg/s1600/IMG_20100619_110408.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TB0IFenkCUI/AAAAAAAAFsA/EDmZ5VblvXg/s200/IMG_20100619_110408.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TB0G2oW90-I/AAAAAAAAFrk/LjHF4_RZmjU/s1600/IMG_20100619_110509.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/TB0G2oW90-I/AAAAAAAAFrk/LjHF4_RZmjU/s200/IMG_20100619_110509.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TB0HmUNRp3I/AAAAAAAAFrw/brAgjaNRbd4/s1600/IMG_20100619_110427.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TB0HmUNRp3I/AAAAAAAAFrw/brAgjaNRbd4/s200/IMG_20100619_110427.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;From there, up to Spuyten Dyuvil. Here from Inwood park with a view of the Henry Hudson Bridge:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TB0GkTsUNEI/AAAAAAAAFrc/E4sIWfh1k40/s1600/IMG_20100619_113731.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/TB0GkTsUNEI/AAAAAAAAFrc/E4sIWfh1k40/s320/IMG_20100619_113731.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Having reached our northmost point, we headed south. We of course had to stop at the Little Red Lighthouse by the Great Grey Bridge:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TB0F6jQ81jI/AAAAAAAAFrQ/Gn2iXV-TzuQ/s1600/IMG_20100619_122541.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/TB0F6jQ81jI/AAAAAAAAFrQ/Gn2iXV-TzuQ/s320/IMG_20100619_122541.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;From here, it was a quick stop at Fairways and then home.&lt;br /&gt;&lt;br /&gt;About 27 miles total on an amazingly beautiful day.&lt;br /&gt;&lt;br /&gt;Next week we&#39;re thinking of riding across the GWB and into NJ.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-2408940169368847645?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Flatbreads</title>
      <link>https://cestlaz.github.io/posts/2010-05-02-flatbreads/</link>
      <pubDate>Sun, 02 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-05-02-flatbreads/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;/div&gt;&lt;div style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;I made chapati the other day. Based on a couple of recipe requests and the fact that this blog has been dormant for a while, I thought I&#39;d post the recipe here.&lt;br /&gt;&lt;br /&gt;&amp;nbsp;To start -- Chapati is an Indian flatbread. I guess what I made is technically Pulka but it&#39;s really easy to make and quite tasty.&lt;br /&gt;&lt;br /&gt;Ingredients:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94M2Dh9cgI/AAAAAAAAFoE/1Xh3w4TljhI/s1600/2010-05-02%2015.31.02.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94M2Dh9cgI/AAAAAAAAFoE/1Xh3w4TljhI/s320/2010-05-02%2015.31.02.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;2 cups whole wheat flour&lt;/li&gt;&lt;li&gt;1 cup water&lt;/li&gt;&lt;li&gt;1 tsp salt&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;Mix all the ingredients together to form a dough. Don&#39;t add too much water (I did this time) or it will be hard to roll the dough. Use a spoon at first but then use your hands.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94MYut_zbI/AAAAAAAAFn8/2xu_sDIGlzc/s1600/2010-05-02%2015.37.14.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94MYut_zbI/AAAAAAAAFn8/2xu_sDIGlzc/s200/2010-05-02%2015.37.14.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/S94L5pCwewI/AAAAAAAAFn4/UekmmsU_Oa8/s1600/2010-05-02%2015.37.26.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;150&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/S94L5pCwewI/AAAAAAAAFn4/UekmmsU_Oa8/s200/2010-05-02%2015.37.26.jpg&#34; width=&#34;200&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;The dough should be soft and maybe just a little sticky:&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94LpIn1NfI/AAAAAAAAFn0/pOABdeTfqHY/s1600/2010-05-02%2015.39.06.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;240&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94LpIn1NfI/AAAAAAAAFn0/pOABdeTfqHY/s320/2010-05-02%2015.39.06.jpg&#34; width=&#34;320&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Knead the dough for a few minutes then wrap in plastic wrap and rest for at least 15 minutes or up to a couple of hours.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Now, head a griddle or fry pan to medium high heat (I set the electric griddle to 400 degrees).&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/S94KQbRJo0I/AAAAAAAAFng/nVPVvMphoX4/s1600/2010-05-02%2018.38.46.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/S94KQbRJo0I/AAAAAAAAFng/nVPVvMphoX4/s320/2010-05-02%2018.38.46.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Separate the dough into eight pieces and roll them into balls.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94J9nIDx_I/AAAAAAAAFnc/oY_rCuiCRx4/s1600/2010-05-02%2018.40.00.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94J9nIDx_I/AAAAAAAAFnc/oY_rCuiCRx4/s320/2010-05-02%2018.40.00.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Roll a ball out and place it on the griddle.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;a href=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94JL-NSUgI/AAAAAAAAFnM/GW2s72fbmVg/s1600/2010-05-02%2018.40.49.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh4.ggpht.com/_7YN3bkG0cSc/S94JL-NSUgI/AAAAAAAAFnM/GW2s72fbmVg/s320/2010-05-02%2018.40.49.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Cook for about a minute, then flip and cook for another minute.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Now the fun part -- take the bread and put it over an open burner:&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;a href=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/S94GaAgandI/AAAAAAAAFm0/L8p_Wi6sjFY/s1600/2010-05-02%2018.44.25.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://lh5.ggpht.com/_7YN3bkG0cSc/S94GaAgandI/AAAAAAAAFm0/L8p_Wi6sjFY/s320/2010-05-02%2018.44.25.jpg&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;This will cause the bread to puff up and parts will blacken.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;Remove from flame and eat.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-4405741913192647810?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Sorting from the top and from the bottom</title>
      <link>https://cestlaz.github.io/posts/2010-03-14-sorting-from-top-and-from-bottom/</link>
      <pubDate>Sun, 14 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-03-14-sorting-from-top-and-from-bottom/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div id=&#34;content&#34;&gt;&lt;h1 class=&#34;title&#34;&gt;Sorting from the top and from the bottom&lt;/h1&gt; &lt;p&gt;I&#39;ve been meaning to write this post for a couple of weeks, but some times life just gets in the way. &lt;/p&gt;&lt;p&gt;I&#39;ve always thought it important to arm students with as many different tools with which to attack problems as possible. As such, the courses I teach use a number of different languages, each highlighting a different paradigm and thought process. The hope is that by the end of the sequence, they can look at problems from many different angles. &lt;/p&gt;&lt;p&gt;In my advanced placement classes, we recently studied sorting algorithms.  It think the quicksort is a good example of a problem that can be looked at from multiple points of view. &lt;/p&gt;&lt;p&gt;In my experiences talking to teachers and students who cut there teeth using languages like Java, C, or C++, much of the discussion deals with the actual partitioning of the array. Comparing elements, swapping them and arriving in the middle. One might end up with something like this as a first cut: &lt;/p&gt;   &lt;pre class=&#34;src src-java&#34;&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 1:  &lt;/span&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #228b22;&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;qsort&lt;/span&gt;(&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt;[] &lt;span style=&#34;color: #a0522d;&#34;&gt;a&lt;/span&gt;,&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;l&lt;/span&gt;, &lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;h&lt;/span&gt;)&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 2:  &lt;/span&gt;{&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 3:  &lt;/span&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;if&lt;/span&gt; (l&amp;gt;=h)&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 4:  &lt;/span&gt;  &lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt;;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 5:  &lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 6:  &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;/* &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;Just use lowest index as pivot for now */&lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 7:  &lt;/span&gt;&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;pivot&lt;/span&gt; = a[l];&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 8:  &lt;/span&gt;&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;low&lt;/span&gt;=l;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 9:  &lt;/span&gt;&lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;high&lt;/span&gt;=h;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;10:  &lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;11:  &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;/* &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;partition the data set around the pivot value */&lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;12:  &lt;/span&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;while&lt;/span&gt; (l&amp;lt;=h)&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;13:  &lt;/span&gt;{&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;14:  &lt;/span&gt;  &lt;span style=&#34;color: #a020f0;&#34;&gt;while&lt;/span&gt; (a[l]&amp;lt;pivot)&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;15:  &lt;/span&gt;    l++;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;16:  &lt;/span&gt;  &lt;span style=&#34;color: #a020f0;&#34;&gt;while&lt;/span&gt; (a[h]&amp;gt;pivot)&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;17:  &lt;/span&gt;    h--;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;18:  &lt;/span&gt;  &lt;span style=&#34;color: #a020f0;&#34;&gt;if&lt;/span&gt; (l&amp;lt;=h)&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;19:  &lt;/span&gt;  {&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;20:  &lt;/span&gt;    &lt;span style=&#34;color: #228b22;&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #a0522d;&#34;&gt;tmp&lt;/span&gt;=a[l];&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;21:  &lt;/span&gt;    a[l]=a[h];&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;22:  &lt;/span&gt;    a[h]=tmp;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;23:  &lt;/span&gt;    l++;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;24:  &lt;/span&gt;    h--; &lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;25:  &lt;/span&gt;  }&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;26:  &lt;/span&gt;}&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;27:  &lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;28:  &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;/* &lt;/span&gt;&lt;span style=&#34;color: #b22222;&#34;&gt;sort items below and above the pivot */&lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;29:  &lt;/span&gt;qsort(a,low,l-1);&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;30:  &lt;/span&gt;qsort(a,l,high);&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;31:  &lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;32:  &lt;/span&gt;}&lt;br /&gt;&lt;/pre&gt;    &lt;p&gt;A fair amount of time and detail is spent dealing with the low level movement of data within the array . This is important &amp;ndash; good stuff, but it takes the emphasis away from the higher level elegance of the algorithm. &lt;/p&gt;&lt;p&gt;The quicksort can be described as: &lt;/p&gt;  &lt;ol&gt;&lt;li&gt; If the size of the list is &lt;= 1, return.&lt;/li&gt;&lt;li&gt;&lt;ol&gt;&lt;li&gt; Select a pivot element&lt;/li&gt;&lt;li&gt; Generate the list L of items smaller than the pivot&lt;/li&gt;&lt;li&gt; Generate the list H of items larger than the pivot&lt;/li&gt;&lt;li&gt; the sorted list is qsort(L)+pivot+qsort(R)&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt; &lt;p&gt;Having seen some scheme in their intro class, our students have a tool with which we can describe the quicksort in terms much closer to the description (allowing for the fact that this doesn&#39;t deal with multiple values equal to the pivot correctly): &lt;/p&gt;    &lt;pre class=&#34;src src-scheme&#34;&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 1:  &lt;/span&gt;(&lt;span style=&#34;color: #a020f0;&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;makefilter&lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 2:  &lt;/span&gt;  (&lt;span style=&#34;color: #a020f0;&#34;&gt;lambda&lt;/span&gt; (op x)&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 3:  &lt;/span&gt;    (&lt;span style=&#34;color: #a020f0;&#34;&gt;lambda&lt;/span&gt; (n) (op x n))))&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 4:  &lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 5:  &lt;/span&gt;(&lt;span style=&#34;color: #a020f0;&#34;&gt;define&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;qsort&lt;/span&gt; &lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 6:  &lt;/span&gt;  (&lt;span style=&#34;color: #a020f0;&#34;&gt;lambda&lt;/span&gt; (l)&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 7:  &lt;/span&gt;    (&lt;span style=&#34;color: #a020f0;&#34;&gt;cond&lt;/span&gt; ((null? l) &#39;())&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 8:  &lt;/span&gt;          (&lt;span style=&#34;color: #a020f0;&#34;&gt;else&lt;/span&gt; (append (qsort (filter (makefilter &amp;gt; (car l)) l))&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt; 9:  &lt;/span&gt;                        (list (car l))&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;10:  &lt;/span&gt;                        (qsort (filter (makefilter &amp;lt; (car l)) l)))))))&lt;br /&gt;&lt;/pre&gt;    &lt;p&gt;This allows us to discuss the quicksort at a much higher level and focus on things like selecting a good pivot or the analysis of the run time. I believe this makes it much easier to really understand what&#39;s going on. &lt;/p&gt;&lt;p&gt;Having discussed it in this functional context, we can also look at the same thing in a scripting language such as python: &lt;/p&gt;   &lt;pre class=&#34;src src-python&#34;&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;1:  &lt;/span&gt;&lt;span style=&#34;color: #a020f0;&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #0000ff;&#34;&gt;qsort&lt;/span&gt;(l):&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;2:  &lt;/span&gt;    &lt;span style=&#34;color: #a020f0;&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #a020f0;&#34;&gt;len&lt;/span&gt;(l)&amp;lt;=1:&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;3:  &lt;/span&gt;        &lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; l&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;4:  &lt;/span&gt;    &lt;span style=&#34;color: #a020f0;&#34;&gt;else:&lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;5:  &lt;/span&gt;        &lt;span style=&#34;color: #a020f0;&#34;&gt;return&lt;/span&gt; qsort([x &lt;span style=&#34;color: #a020f0;&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color: #a020f0;&#34;&gt;in&lt;/span&gt; l[1:] &lt;span style=&#34;color: #a020f0;&#34;&gt;if&lt;/span&gt; x &amp;lt;= l[0]]) + [l[0]]+\&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;6:  &lt;/span&gt;            qsort([x &lt;span style=&#34;color: #a020f0;&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color: #a020f0;&#34;&gt;in&lt;/span&gt; l[1:] &lt;span style=&#34;color: #a020f0;&#34;&gt;if&lt;/span&gt; x &amp;gt; l[0]])&lt;br /&gt;&lt;span class=&#34;linenr&#34;&gt;7:  &lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;    &lt;p&gt;Again, the focus is on the algorithm, not the array or list manipulation. &lt;/p&gt;&lt;p&gt;Looking at the problem from both the more abstract side, which in this case functional languages allow, and the more concrete, as we did in Java gives our students more tools with which to attack problems. &lt;/p&gt;&lt;p&gt;Just some food for thought. &lt;/p&gt;       &lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-2070280110494147035?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s Next</title>
      <link>https://cestlaz.github.io/posts/2010-02-18-whats-next/</link>
      <pubDate>Thu, 18 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-02-18-whats-next/</guid>
      <description>&lt;!DOCTYPE html&gt;

Just a short follow up on the last post.&lt;br /&gt;&lt;br /&gt;In thinking about how I frequently programs, once I have a plan, I work on one part of the project, and then ask myself &#34;what&#39;s next?&#34; That is, what is the next step towards completion.&lt;br /&gt; &lt;br /&gt;It reminded me about a guest speaker we had a about a year and a half ago at one of our &#34;professional development&#34; days. For the past two years, our school has had &#34;writing across the curriculum&#34; as one of it&#39;s goals. While it&#39;s a laudable idea, I find the rationale for this goal to be poorly communicated to our faculty and the implementation weak at best.&lt;br /&gt;&lt;br /&gt;Regardless, the guest speaker, &lt;a href=&#34;http://en.wikipedia.org/wiki/William_Zinsser&#34;&gt;William Zinsser&lt;/a&gt;, made a few good points.&lt;br /&gt;&lt;br /&gt; The most important reason for most of us to write is to convey ideas or arguments. In short, communication. Many students have problems organizing and ordering their thoughts and as a result, their writing is all over the place. Zinsser simplified it to the following:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;What does the audience know?&lt;/li&gt;&lt;li&gt;What do they need to know next?&lt;/li&gt;&lt;/ol&gt;That drives your next sentence. You continue this 1-2 punch until you&#39;ve communicated your ideas.&lt;br /&gt;&lt;br /&gt;This makes loads of sense, but here I was 40 years old and it was the first time I heard writing explained this way. What really struck me, however was that this concept wasn&#39;t new at all. Every ninth or tenth grader goes through this process time and time again.&lt;br /&gt;&lt;br /&gt;Think about geometric proof. We have some given information and a conclusion we wish to prove. At each step along the way its:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;What do we know so far?&lt;/li&gt;&lt;li&gt;What&#39;s the next step to get us closer to the conclusion?&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;Same idea.&lt;br /&gt;&lt;br /&gt;The same can be said for program development.&lt;br /&gt;&lt;br /&gt;Of course this makes tremendous sense since all thee things: writing, proof, and programming, are methods of communication.&lt;br /&gt;&lt;br /&gt;Just something to think about.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-1983623605693836355?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>They teach programming, don&#39;t they?</title>
      <link>https://cestlaz.github.io/posts/2010-02-15-they-teach-programming-dont-they/</link>
      <pubDate>Mon, 15 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-02-15-they-teach-programming-dont-they/</guid>
      <description>&lt;!DOCTYPE html&gt;

One evening, many years ago, when I was in college, I had an epiphany. Maybe not as enlightening as the epiphany I had while watching &#34;The Mummy Returns&#34;&amp;nbsp; many years later, but that&#39;s a story for another day.&lt;br /&gt;&lt;br /&gt;While working on some class project, I realized that soon, within a couple of&amp;nbsp; years, I&#39;d be working for a real company and I&#39;d actually have to write code that &lt;b&gt;REALLY&lt;/b&gt; works. Not just something that gets past the grader, or answers all the test cases. Something well designed, well written, maintainable, and reliable.&amp;nbsp; Scary thought.&lt;br /&gt;&lt;br /&gt;I&#39;ve thought about this a lot since I started teaching computer science. We teach programming languages, algorithms, and assign projects. Maybe the students hear something like &#34;comment your code,&#34; or &#34;use good variable names,&#34; but we never really give them the tools to take a project from description to completion.&lt;br /&gt;&lt;br /&gt;Too often young programmers rush to the keyboards and write copious amounts of code without any plan and with little discipline. In short they do everything they can to set themselves up for a difficult road ahead.&lt;br /&gt;&lt;div style=&#34;text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;There are probably a number of reasons for this. When we teach introductory&amp;nbsp; programming, assignments are so short and simple that we can&#39;t easily model good programming techniques, and if we do, it&#39;s difficult to get students to &#34;buy in&#34; since it&#39;s hard for them to see the value. As complexity increases, we&#39;re faced with limited time to actually cover the prescribed course content, leaving little room for a protracted unit on &#34;program development.&#34;&lt;br /&gt;&lt;br /&gt;I&#39;m certainly not going to be so bold as to say that I have the answer to the problem, but I&#39;ve tried some things to help address it.&lt;br /&gt;&lt;br /&gt;We&#39;ll take a few class days to take a project from beginning to end. Something that can be done incrementally but isn&#39;t particularly difficult. &lt;br /&gt;&lt;br /&gt;This semester, I attempted this with my AP students. We wrote a series of text filters in Java. I lifted the topic from Kernighan and Plauger&#39;s &#34;Software Tools.&#34; We wrote versions of character count, word count, detabbing a file, run length encoding and a simple version of tr. Nothing too heavy, but it allowed us to focus on the development piece rather than coming up with clever algorithms and data structures (which is what the rest of the class is for). The problem may be a little contrived, but I hope the benefits outweighed any issues with the choice of problem.&lt;br /&gt;&lt;br /&gt;We start by talking about the importance of understanding the problem, which includes finding out what &#34;the client&#34; wants and not making our own assumptions. Some times, I try to leave a little ambiguity to give us a platform to discuss the &#34;what the client wants&#34; issue.&lt;br /&gt;&lt;br /&gt;From there comes design, which might be mixed with writing some code to make sure we understand certain aspects of the problem and the environment we&#39;ll be working in.&lt;br /&gt;&lt;br /&gt;Once we have a design and a plan we can start incremental development. This is what I think is most important for the youngsters. I try to model and emphasize the idea of coding one &#34;concept&#34; at a time. Frequently testing that concept and only moving on once it&#39;s completed. &lt;br /&gt;&lt;br /&gt;I&#39;ll also talk about things that have worked for me along the way. I always like to put consistent comment blocks at the top of my functions, trying to keep functions a &#34;screen length&#34; or shorter, my preferences for naming, indentation, etc. Of course, I&#39;m careful to emphasize that my way works for me, but it&#39;s just one approach. I try to present alternatives when possible.&lt;br /&gt;&lt;br /&gt;Other ideas I try to emphasize is actually reading ones code and having others read it. Last semester I experimented with &#34;pair programming&#34; and while I have no idea how good it is as a professional development technique, I like it from a pedagogical point of view.&lt;br /&gt;&lt;br /&gt;I think presenting these ideas while actually developing the project helps to drive in the concepts.&lt;br /&gt;&lt;br /&gt;I&#39;d like to think adding units like this helps to develop stronger programmers. Any teachers out there -- your thoughts?&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;center&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table style=&#34;width: auto;&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&#34;http://picasaweb.google.com/lh/photo/ljE9q55t6ltZzZVKwTzA9g?authkey=Gv1sRgCOSJ5YGwwb7e_AE&amp;amp;feat=embedwebsite&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_7YN3bkG0cSc/S3m2eJx5aiI/AAAAAAAAFj4/I57gKwaFxzQ/s144/2010-02-15%2008.49.59.jpg&#34; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/center&gt;&lt;br /&gt;&lt;br /&gt;In an unrelated note, yesterday was valentines day. We don&#39;t really do anything to celebrate it, but in anticipation of her new loom, Devorah had to clear off some room in the apartment. She stumbled upon love letters sent between my parents back in the fifties. If you&#39;d like a small taste of the past, you can see here post on squidknits &lt;a href=&#34;http://squid-knits.blogspot.com/2010/02/love-letters.html&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Although we have gained all this immediacy with the electronics age, it sometimes feels that somethings been lost.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-3365288827630860097?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Subversion for Homework part II and the start of the new term</title>
      <link>https://cestlaz.github.io/posts/2010-02-01-subversion-for-homework-part-ii-and/</link>
      <pubDate>Mon, 01 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-02-01-subversion-for-homework-part-ii-and/</guid>
      <description>&lt;!DOCTYPE html&gt;

Starting the new semester tomorrow and I&#39;ve got a whole bunch of interesting topics to blog about. Some about pedagogy, some technical, and some that I can&#39;t really catagorize.&lt;br /&gt;&lt;br /&gt;For now, though, just a brief follow up on using Subversion for homework collection.&lt;br /&gt;&lt;br /&gt;The basic model used in New York City for teacher improvement and evaluation is the official &#34;observation.&#34; Either your supervisor or the principal sits in on one of your classes. Afterwards you meet and discuss the lesson and a report is written up. Basically, there are two possible outcomes: satisfactory or unsatisfactory.&lt;br /&gt;&lt;br /&gt;Untenured teachers are generally observed three times a semester. Tenured teachers, once a year.&lt;br /&gt;&lt;br /&gt;In all cases, this system is severely flawed. The supervisor sees a 40 minute snapshot out of context and is supposed to evaluate the teacher and make recommendations for teacher improvement. It&#39;s generally of limited value at best.&lt;br /&gt;&lt;br /&gt;Because of this, years ago, I started to ask my students to evaluate me. For quite some time now, I&#39;ve used a custom written web app that allows students to complete long questionnaires over a period of weeks. The system allows me to know who submitted an evaluation while maintaining anonymity. &lt;br /&gt;&lt;br /&gt;I&#39;ve found these evaluations to be incredibly valuable and I&#39;ve used them to try to improve my classes and my teaching over the years.&lt;br /&gt;&lt;br /&gt;Having just wrapped the semester, I&#39;ve gone through my students responses and the vast majority liked using subversion for homework. As I figured, some felt that it was a little confusing at first and there was a learning curve but most felt it was either as good as any other method and many said it was superior.&lt;br /&gt; &lt;br /&gt;This combined with the fact that it makes me more efficient confirms that it&#39;s a win.&lt;br /&gt;&lt;br /&gt;It was also interesting that I had hardly any suggestions for alternative ways of collecting homework.&lt;br /&gt;&lt;br /&gt;Recently, I&#39;ve been using Git for my personal development work and I&#39;m planning on experimenting with it in one of my classes, so we&#39;ll see how that goes.&lt;br /&gt;&lt;br /&gt;Now, on to the new semester!!!!!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-3477377644002525047?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Subversion in the classroom</title>
      <link>https://cestlaz.github.io/posts/2010-01-19-subversion-in-classroom/</link>
      <pubDate>Tue, 19 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-01-19-subversion-in-classroom/</guid>
      <description>&lt;!DOCTYPE html&gt;

Ok, not &lt;a href=&#34;http://www.merriam-webster.com/dictionary/subversion&#34;&gt;subversion&lt;/a&gt;, rather &lt;a href=&#34;http://subversion.tigris.org/&#34;&gt;subversion&lt;/a&gt;, the version control system.&lt;br /&gt;&lt;br /&gt;I&#39;ve used subversion as a way for students to hand in their projects for years. I haven&#39;t used it with my intro classes as I think the learning curve is a little steep and the benefits few, but for A.P. and beyond (juniors and seniors) it&#39;s worked very well as a method of collection and I think it&#39;s good to get the kids in the habit of using versioning systems.&lt;br /&gt;&lt;br /&gt;A versioning, or revision control system let&#39;s an individual frequently save versions of their files, in our case, on a central server.&amp;nbsp; One can easily go back to earlier versions as well as manage changes made by multiple developers. Once one&#39;s in the habit of using a revision control system, it can greatly improve&amp;nbsp; productivity.&lt;br /&gt;&lt;br /&gt;For my classes, I would create a repository for a project, give the kids a little version control primer, and they would create projects in the repository.&lt;br /&gt;&lt;br /&gt;There are usually a few bumps in the road.&lt;br /&gt;&lt;br /&gt;At first the kids go kicking and screaming. They create the repository, and neglect it until the last minutes. I&#39;d wake up on a project due date, check out the repository and seem maybe 4 out of 60 projects only to see them mystically appear as the closing time approached.&lt;br /&gt;&lt;br /&gt;As we move through the year and work on more projects, things get better.&lt;br /&gt;&lt;br /&gt;Students start to update their projects more frequently. Not as frequently as I like, partly because SVN gets really slow on our system, but it&#39;s still an improvement.&amp;nbsp; Invariably, it saves a student or two when they accidentally delete all their files. Also, when things become&amp;nbsp; a real mess, being able to go back a few versions is a godsend. A much better alternative than what they had to do in the past, which was restarting the entire project.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;What I find really interesting is how wonderful a tool svn is from my point of view as an educator.&lt;br /&gt;&lt;br /&gt;By looking at the log files, I can see who made changes and when. By looking at the diffs, I can look at the projects progress much as an english teacher might look at drafts. &lt;br /&gt;&lt;br /&gt;&amp;nbsp;Version control for projects turns out to be a win across the board.&lt;br /&gt; &lt;br /&gt;Recently, I&#39;ve been using SVN for homeworks as well. Homework collection has always been difficult for me as I&#39;m disorganized and forgetful. SVN has made things much easier. At the start of the semester, I made a homework repository for each student. They then check it out at home.&lt;br /&gt;&lt;br /&gt;Whenever a student does a homework, he or she just names it according to our conventions (HW1-name, HW2-name, etc.), put it in their checked out repository, add the file(s) and commits. With tortoiseSVN under windows it&#39;s trivial.&lt;br /&gt;&lt;br /&gt;This lets me easily see all of the homeworks for a student as well as all submissions for a specific assignment. Again it&#39;s an overall win.&lt;br /&gt;&lt;br /&gt;Next semester I&#39;m going to be experimenting with GIT as a replacement for SVN.&lt;br /&gt;&lt;br /&gt;If you&#39;re looking for a way to collect and track assignments, I&#39;d highly recommend using a revision control system.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-8125210248407710385?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cold Weather Commuting</title>
      <link>https://cestlaz.github.io/posts/2010-01-15-cold-weather-commuting/</link>
      <pubDate>Fri, 15 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-01-15-cold-weather-commuting/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_7YN3bkG0cSc/S1BadY4-CkI/AAAAAAAAFig/0if7XeTQmBk/s1600-h/IMG_1575.JPG&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/_7YN3bkG0cSc/S1BadY4-CkI/AAAAAAAAFig/0if7XeTQmBk/s200/IMG_1575.JPG&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;That&#39;s me with my trusty Bike Friday New World Tourist. Love the bike. Love riding. It&#39;s the fastest, most pleasant way to get around the city. My commute by bike, door to door is 12 minutes. Subway is 20 - 25. Walking about 45. &lt;br /&gt;&lt;br /&gt;One certainly can&#39;t let winter weather get in the way. &lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_7YN3bkG0cSc/S1BdvWzkMpI/AAAAAAAAFio/hk5KchXYRaI/s1600-h/fugu.jpg&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/_7YN3bkG0cSc/S1BdvWzkMpI/AAAAAAAAFio/hk5KchXYRaI/s320/fugu.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;I&#39;ve got the body covered with my Assos Fugu jacket. With just a cheap long sleeve duofold shirt it&#39;s great to about 16 degrees. It feels a little boxy off the bike, but as soon as you&#39;re riding, it fits like a glove. Expensive, but well worth it.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;My real problem has always been my hands. Especially on a short commute when I don&#39;t have time to generate body heat.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_7YN3bkG0cSc/S1BaYW72AlI/AAAAAAAAFiQ/-IKb6X9aZ1M/s1600-h/P1010711.JPG&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/_7YN3bkG0cSc/S1BaYW72AlI/AAAAAAAAFiQ/-IKb6X9aZ1M/s200/P1010711.JPG&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Most recently, I&#39;ve been using Pearl Izumi Inferno Gloves. They&#39;re ok, but sub 20 degress, they don&#39;t do it, particularly since I like riding the hoods where I&#39;m right up against cold metal.&lt;br /&gt;&lt;br /&gt;Last year, my wife made a wonderful discovery....&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_7YN3bkG0cSc/S1BaDtFi4yI/AAAAAAAAFh4/kwmiZhDcUiw/s1600-h/P1010708.JPG&#34; imageanchor=&#34;1&#34; style=&#34;clear: right; float: right; margin-bottom: 1em; margin-left: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/_7YN3bkG0cSc/S1BaDtFi4yI/AAAAAAAAFh4/kwmiZhDcUiw/s200/P1010708.JPG&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.trails-edge.com/retail/te_shirts/amfbikemits.htm&#34;&gt;Moose Mitts&lt;/a&gt;!!!! They velcro on over the handlebards. You stick your hands in when you ride.&lt;br /&gt;&lt;br /&gt;This year, AMF Threadworks designed a set that fit on drop bars. Two weeks ago my set arrived!!!&lt;br /&gt;&lt;br /&gt;Last week we were consistantly 20 degress or below in the mornings, I used these $10 hytrel gloves from campmor:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_7YN3bkG0cSc/S1BaSPQff-I/AAAAAAAAFiI/1HFgpEzZlb0/s1600-h/P1010710.JPG&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/_7YN3bkG0cSc/S1BaSPQff-I/AAAAAAAAFiI/1HFgpEzZlb0/s200/P1010710.JPG&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;Along with my new moose mitts:&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_7YN3bkG0cSc/S1BZ4xCmd8I/AAAAAAAAFho/RnCtiJaQ84I/s1600-h/P1010706.JPG&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/_7YN3bkG0cSc/S1BZ4xCmd8I/AAAAAAAAFho/RnCtiJaQ84I/s200/P1010706.JPG&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;They were terrifice. My hands stayed wram and I have the benefit of being able to regulate temperature by pulling my hands up to the cross bar or out entirely.&lt;br /&gt;&lt;br /&gt;If you ride in the cold, check out Moose Mitts!!!!&lt;br /&gt;&lt;span id=&#34;goog_1263433400704&#34;&gt;&lt;/span&gt;&lt;span id=&#34;goog_1263433400705&#34;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-272083960586840973?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Towers of Hanoi</title>
      <link>https://cestlaz.github.io/posts/2010-01-10-towers-of-hanoi/</link>
      <pubDate>Sun, 10 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-01-10-towers-of-hanoi/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div class=&#34;figure&#34;&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_7YN3bkG0cSc/S0pFwojEDmI/AAAAAAAAFa8/WMWXtwK6nxo/s1600-h/Hanoi.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/_7YN3bkG0cSc/S0pFwojEDmI/AAAAAAAAFa8/WMWXtwK6nxo/s320/Hanoi.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;Closed out last week teaching the &lt;a href=&#34;http://www.cut-the-knot.org/recurrence/hanoi.shtml&#34;&gt;Towers of Hanoi&lt;/a&gt;. It&#39;s a wonderful topic. Not because it&#39;s so interesting in and of itself, but as a platform from which you can explore any number of interesting topics.&lt;br /&gt;&lt;br /&gt;Many books appropriate for the AP (AB) curriculum mention the towers, but to my knowledge most only scratch the surface. I randomly grabbed two books that I consider good from the shelf before writing this. One that I actually use when I teach AP comp sci and another more appropriate for a follow up course. Both discuss the towers, but merely show a solution and talk about the run time a little.&lt;br /&gt;&lt;br /&gt;So many possibilities left out. &lt;br /&gt;&lt;br /&gt;I usually do these lessons with my sophomores but since many of my AP students (juniors) hadn&#39;t ever seened the problem, I felt it was worth covering. &lt;br /&gt;&lt;br /&gt;By looking at a few small examples, 1 disk, two disks, three disks, four disks, it&#39;s easy to notice the symetry in the solutions ultimately leading the this short routine: &lt;br /&gt;&lt;pre class=&#34;src src-java&#34;&gt;&amp;nbsp;&lt;/pre&gt;&lt;pre class=&#34;src src-java&#34;&gt; 1:  hanoi(n,src,dst,tmp) {&lt;br /&gt; 2:    &lt;span style=&#34;color: #a020f0;&#34;&gt;if&lt;/span&gt; (n==1)&lt;br /&gt; 3:      System.out.println(&lt;span style=&#34;color: #8b2252;&#34;&gt;&#34;Move from &#34;&lt;/span&gt;+src+&lt;span style=&#34;color: #8b2252;&#34;&gt;&#34; to &#34;&lt;/span&gt;+dst);&lt;br /&gt; 4:    &lt;span style=&#34;color: #a020f0;&#34;&gt;else&lt;/span&gt;&lt;br /&gt; 5:    {&lt;br /&gt; 6:      hanoi(n-1,src,tmp.dst);&lt;br /&gt; 7:      hanoi(1,src,dst,tmp);&lt;br /&gt; 8:      hanoi(n-1,tmp,dst,src);&lt;br /&gt; 9:    }&lt;br /&gt;10:  }  &lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Now, the fun can really start: &lt;br /&gt;&lt;br /&gt;We want to talk about the correctness of our algorithm and also how many moves it will take, that is, the run time. First, we&#39;ll use inductive ideas to show our algorithm is correct. This &#34;proof&#34; (we do it somewhat informally) can be enlightening. As sophomores, the only proofs students have seen are those statement/reason things they do in math class. Here we can introduce them to the idea that proof is just an &#34;irrefutable argument&#34; and apply it in a more practical setting. &lt;br /&gt;&lt;br /&gt;From there we look at run time, that is, how many moves will it take to solve the n disk problem. It&#39;s easy to see the pattern of T(N) = 2T(n-1)+1 . Students will usually see that we can rewrite this as T(N)=2&lt;sup&gt;N&lt;/sup&gt;-1 which we can also prove by induction.&lt;br /&gt;&lt;br /&gt;Now we can see the ramifications of the run time. At 1 million moves per second, it works out to close to 600,000 years. This in and of itself is revealing, we can&#39;t just &#34;get a faster computer.&#34;  Here we can discuss &lt;a href=&#34;http://en.wikipedia.org/wiki/Moore%27s_law&#34;&gt;Moore&#39;s Law&lt;/a&gt; and the physical limits on our computers, making sure to make appropriate reference to &lt;a href=&#34;http://en.wikipedia.org/wiki/Grace_Hopper&#34;&gt;Grace Hopper&lt;/a&gt; and her &lt;a href=&#34;http://www.flickr.com/photos/shinythings/154816771/&#34;&gt;nanosecond&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;This leads to a discussion alternate approaches such as parallel processing, but that doesn&#39;t work if our problem can only be solved sequentially.&lt;br /&gt;&lt;br /&gt;The rest of the class is used discussing other hard problems and other approaches including heuristics, probabalistic, randomized, and anything else that comes up. &lt;br /&gt;&lt;br /&gt;So, there you have it. From this one simple problem we get to introduce students to: &lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li id=&#34;sec-1&#34;&gt;Alternate forms of proof (specificall induction) &lt;br /&gt;&lt;/li&gt;&lt;li id=&#34;sec-2&#34;&gt;Intractable problems &lt;br /&gt;&lt;/li&gt;&lt;li id=&#34;sec-3&#34;&gt;Unsolvable problem &lt;br /&gt;&lt;/li&gt;&lt;li id=&#34;sec-4&#34;&gt;Moores law and the limits of our computing power &lt;br /&gt;&lt;/li&gt;&lt;li id=&#34;sec-5&#34;&gt;Alternate approaches to computing &amp;nbsp; &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li id=&#34;sec-5&#34;&gt;Parallel programming &lt;br /&gt;&lt;/li&gt;&lt;li id=&#34;sec-5.2&#34;&gt;Protein based computers &lt;br /&gt;&lt;/li&gt;&lt;li id=&#34;sec-5.3&#34;&gt;Randomized algorithms &lt;br /&gt;&lt;/li&gt;&lt;li id=&#34;sec-5.4&#34;&gt;Probabalistic algorithms &lt;br /&gt;&lt;/li&gt;&lt;li id=&#34;sec-5.5&#34;&gt;Heuristics&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-6512019415176840666?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Who is this man?</title>
      <link>https://cestlaz.github.io/posts/2010-01-07-who-is-this-man/</link>
      <pubDate>Thu, 07 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-01-07-who-is-this-man/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_7YN3bkG0cSc/S0aNLCe-BoI/AAAAAAAAFaY/R4VEOV6kCeE/s1600-h/frontwolly.jpg&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/_7YN3bkG0cSc/S0aNLCe-BoI/AAAAAAAAFaY/R4VEOV6kCeE/s320/frontwolly.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Who is this man?&lt;br /&gt;&lt;br /&gt;I showed this to Devorah last night and she immediately said &#34;Hey, that&#39;s the metal filing guy!!!&#34; Yes, you got it -- &lt;a href=&#34;http://www.smethporthistory.org/smethportspeciality/wollypage.htm&#34;&gt;Wooly Willy&lt;/a&gt;!!! Everybody&#39;s favorite party toy.&lt;br /&gt;&lt;br /&gt;Why did this come up? Well, yesterday, Rick put &lt;a href=&#34;http://www.zamansky.net/wooly.html&#34;&gt;this&lt;/a&gt; together at work. So much for any productivity after that.&lt;br /&gt;&lt;br /&gt;It&#39;s amazing all the time sinks you can throw together with just a few lines of code and NetLogo.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-5205617721773351791?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Talking Shop</title>
      <link>https://cestlaz.github.io/posts/2010-01-06-talking-shop/</link>
      <pubDate>Wed, 06 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-01-06-talking-shop/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;p&gt;During my first few years teaching computer science, I frequently felt isolated. As pretty much the only CS guy I really didn&#39;t have any one to &#34;talk shop&#34; with. It&#39;s hard to bounce pedagogical ideas off of your colleagues when they teach subjects that are tangentially related, at best. &lt;/p&gt;&lt;p&gt;I now consider myself extremely fortunate that I have four terrific friends and colleagues teaching CS with me. Now we have the same advantage that other teachers have enjoyed for years.  &lt;/p&gt;&lt;p&gt;Today I started one of my favorite topics in my AP classes, recursion. Our students have already done recursion during the scheme unit of our intro class so today was at some levels, a review. Most of the students were fine with the basic concepts, but I wanted to make sure they had a solid foundation before we moved to more advanced problems. &lt;/p&gt;&lt;p&gt;I realized even though I &#34;got&#34; recursion back when I was starting out as a CS student those many years ago, no one ever really explained how the call stack worked. When you&#39;re calling functions and methods all over the place, how does the system know to return to the right place at the right time. It was alluded to when we expanded a recursion: &lt;/p&gt;&lt;p&gt;fact(4) &amp;ndash;&amp;gt; 4*fact(3) &amp;ndash;&amp;gt; 3*fact(2) &amp;ndash;&amp;gt; 2*fact(1) &amp;ndash;&amp;gt; 1*fact(0) &amp;ndash;&amp;gt; 1 &lt;/p&gt;&lt;p&gt;but never in the general sense of function calls. I thought it might make sense to try to &#34;demystify&#34; the computer and explain how things really worked.  &lt;/p&gt;&lt;p&gt;I outlined a basic memory layout, stack, heap, data segment and roughly defined a stack frame (storing parameters, local variables, and a return address). We then looked at a code snippet such as: &lt;/p&gt;   &lt;pre class=&#34;src src-Java&#34;&gt;&lt;br /&gt;a()&lt;br /&gt;{&lt;br /&gt;  b();&lt;br /&gt;  c();&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;b()&lt;br /&gt;{&lt;br /&gt;  c();&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;c()&lt;br /&gt;{&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;main()&lt;br /&gt;{&lt;br /&gt;  a();&lt;br /&gt;  b();&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;    &lt;p&gt;and traced through the stack. We then did this with a couple of simple recursive examples. Only time will tell if this was helpful, but I think it was worth the time. &lt;/p&gt;&lt;p&gt;What I particularly enjoyed was later that day when I was talking shop with my fellow AP teacher. He wasn&#39;t planning on explaining the stack in this kind of detail but he liked the idea and planned to use that part of my lesson. I look forward to hearing how it went. &lt;/p&gt;&lt;p&gt;I have likewise borrowed ideas from his and our other colleagues classes. &lt;/p&gt;&lt;p&gt;Any CS teachers out there, I&#39;m sure we&#39;d all love to hear classroom techniques that have and haven&#39;t worked. &lt;/p&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-4999548631085910659?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>First Day Back</title>
      <link>https://cestlaz.github.io/posts/2010-01-04-first-day-back/</link>
      <pubDate>Mon, 04 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-01-04-first-day-back/</guid>
      <description>&lt;!DOCTYPE html&gt;

&lt;p&gt;First day back after a break is always hard. By the last day of vacation, I&#39;m actually sleeping a little later and shifting the body clock back is rather harsh. &lt;/p&gt;&lt;p&gt;It&#39;s tough enough getting started again, but it&#39;s even worse when you&#39;re thrown a curve ball. &lt;/p&gt;&lt;p&gt;I got in at my usual 7:00, made my coffee, and started getting my lessons ready for the day. At about 7:30 we lost power in half of the room. Unfortunately, it was the half with the CS servers. The machines that provide log in and file services as well as svn, our web server, mail server, wiki and other services. &lt;/p&gt;&lt;p&gt;Now, on top of my teaching duties (four classes of 32 students and another of about 20), I basically run the computer services for our CS program. I used to do the whole network, but I stopped that a few years ago. I receive some help from colleagues, but it&#39;s still mostly me. &lt;/p&gt;&lt;p&gt;For our CS program we have two Linux labs of about 31 computers each (all running Linux) and a bunch of servers running the same. &lt;/p&gt;&lt;p&gt;After spending about 20 minutes to find the circuit breaker, most services came back up. Terror struck 10 minutes later when we saw that all of the students home directories had disappeared!!!!! &lt;/p&gt;&lt;p&gt;After a brief period of panic and a few stressful minutes of scouring file systems for evidence of the missing directories I found the problem. The answer, as with so many other problems, is that I was being an idiot. About a month earlier, I had installed a new drive for the student directories. I had mounted it, but neglected to change the fstab file. This is what happens when you have to do all your sysadmin work on live systems in brief periods of time between classes. When we lost power today, the old drive was mounted, not the new one. It&#39;s fixed now. &lt;/p&gt;&lt;p&gt;It would be nice if there we actually had people to run our systems, but since that&#39;s not going to happen, I&#39;ve spend time over the years to try to make the whole thing somewhat do able. Using common tools such as NFS, NIS, Apache and the like help, and we&#39;ve currently moved to using kvm for virtual machines so we can easily experiment with new systems and cleanly and have a one &#34;machine&#34; per service mentality, but system administration still can&#39;t really be done as a part time job. &lt;/p&gt;&lt;p&gt;Any one out there have any war stories or suggestions as part time sysadmins? &lt;/p&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-4782617949077508854?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Looking for interesting questions</title>
      <link>https://cestlaz.github.io/posts/2010-01-03-looking-for-interesting-questions/</link>
      <pubDate>Sun, 03 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-01-03-looking-for-interesting-questions/</guid>
      <description>&lt;!DOCTYPE html&gt;

For the winter break, I assigned &lt;a href=&#34;http://apcentral.collegeboard.com/apc/public/repository/ap08_comp_sci_a_frq.pdf&#34;&gt;this&lt;/a&gt; set of A exam questions (actually, just the three that don&#39;t deal with the case study) to my AP classes. I wanted to assign something that wasn&#39;t particularly heavy but I didn&#39;t want my students to forget everything over break. &lt;br/&gt;&lt;br/&gt;As with most AP exam questions, they&#39;re long, wordy, and somewhat brain dead. They take a long time to read, but they frequently take you step by step through what they want you to do. &lt;br/&gt;&lt;br/&gt;I remember the first time I really thought about this. It was back when the exam was given in Pascal. The curriculum required that classes cover one of the nlogn sorts but didn&#39;t specify which one. One of the free response questions literally walked the students, step by step, through the merge sort. Part one had them split an array in to two parts, part two had them write a routine that merged two sorted arrays (and explained step by step how to do it). You could get a perfect score and still know nothing about the algorithm, or even about writing a recursive routine (since the question told you exactly what to do). &lt;br/&gt;&lt;br/&gt;I hate these types of questions. The exam tests coders, not computer scientists. Programming competition problems (such as from the  &lt;a href=&#34;http://www.uwp.edu/sws/usaco/&#34;&gt;USACO&lt;/a&gt;) are much more interesting, but from a beginners point of view they have their own problems. Beginners might not have enough tools to attack them, and at times they&#39;re all or nothing – they&#39;re not set up to develop a simple, working solution that you can then improve on. &lt;br/&gt;&lt;br/&gt;So, I&#39;m always looking for interesting questions for my students. Problems that a student can attack with a minimal skill set, but can be refined through analysis or upon studying more advanced techniques. &lt;br/&gt;&lt;br/&gt;I guess the first problem of this nature that I usually do with my AP students, usually deals with counting frequencies of test student test scores, identifying students by their four digit ID number. Most students start by creating a huge list all the tests for all the students, but some, and soon all, realize that by using the ID number as an index into an array, they can solve this type of problem much more efficiently. Looking at this technique early also sets the stage for looking at topics such as radix sorting and hashing later on. &lt;br/&gt;&lt;br/&gt;This weekend I stumbled upon &lt;a href=&#34;http://20bits.com/articles/interview-questions-two-bowling-balls/&#34;&gt;this&lt;/a&gt; problem and we&#39;ll probably look at in in class some time this week. I like it because you can easily get a naive solution, but it lends it self to a step wise refinement that works well in the classroom.  &lt;br/&gt;&lt;br/&gt;A few years ago, I also discovered a wonderful article by David Ginat, titled &#34;Effective binary perspectives in algorithmic problem solving&#34; which you can get if you are an ACM member &lt;a href=&#34;http://portal.acm.org/citation.cfm?id=772942&amp;amp;dl=&#34;&gt;here&lt;/a&gt;. &lt;br/&gt;&lt;br/&gt;Both the stuff in Ginat&#39;s piece and the bowling ball article are nice because they can be handled naively with brute force approaches using arrays, but with a little cleverness you can do much better. &lt;br/&gt;&lt;br/&gt;Of course, as students progress through our classes, we have more flexibility as to types of questions. For example, once we do search and other recursive algorithms a few weeks from now, I can present problems that lead to dynamic programming solutions.  &lt;br/&gt;&lt;br/&gt;I&#39;d love to hear any interesting accessible problems you&#39;ve come across in your computing careers.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-7947206663945758208?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>https://cestlaz.github.io/posts/2010-01-02-welcome/</link>
      <pubDate>Sat, 02 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2010-01-02-welcome/</guid>
      <description>&lt;!DOCTYPE html&gt;

Over the past twenty years or so, I&#39;ve mulled, discussed, and argued various aspects of education, computer science, and of course computer science education with friends, students, and colleagues.&lt;br /&gt;&lt;br /&gt;This past summer, I had the privilege to get to meet and briefly work with comp sci educators from around the country and started to thing that there were other like minded people, but we didn&#39;t have a forum with which to communicate.&lt;br /&gt;&lt;br /&gt;I also started to think that maybe some of the things I&#39;ve discovered over the past twenty years might be useful to some one&amp;nbsp; if only it were available.&lt;br /&gt;&lt;br /&gt;So, there you go. The plan is to regularly post about items of interest that I&#39;ve come up&amp;nbsp; with ranging from pedagogical techniques,&amp;nbsp; to facilities management, to interesting class topics, to anything else that seems relevant. I&#39;d imagine that some of my other interests, notably food, biking, and family will also creep in.&lt;br /&gt;&lt;br /&gt;Hope others find this interesting and relevant.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;img width=&#39;1&#39; height=&#39;1&#39; src=&#39;https://blogger.googleusercontent.com/tracker/468689896075458340-2438686823306490556?l=cestlaz.blogspot.com&#39; alt=&#39;&#39; /&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cestlaz.github.io/posts/2015-05-19-code-org-college-board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2015-05-19-code-org-college-board/</guid>
      <description>title: &#34;Code.org and the College Board - what&#39;s the catch and is it a cash cow?&#34;
date: &#34;2015-05-19&#34;
tags:
- policy
#+END_COMMENT


&lt;style&gt;
div.center {text-align:center;}
&lt;/style&gt;

&lt;div id=&#34;outline-container-sec-1&#34; class=&#34;outline-2&#34;&gt;
&lt;h2 id=&#34;sec-1&#34;&gt;&lt;/h2&gt;
&lt;div class=&#34;outline-text-2&#34; id=&#34;text-1&#34;&gt;
&lt;p&gt;
Big announcement the other day. Code.org will be partnering with the
College Board.
&lt;/p&gt;

&lt;p&gt;
They&#39;ll help school&#39;s adopt their CS courses and provide funding for
Code.org&#39;s professional development.
&lt;/p&gt;

&lt;p&gt;
You can read about it on Code.org&#39;s blog &lt;a href=&#34;http://blog.code.org/post/118964845433/college-board-and-code-org-announce-an-alliance-to&#34;&gt;here&lt;/a&gt; and a USA Today article
&lt;a href=&#34;http://www.usatoday.com/story/tech/2015/05/14/codeorg-college-board-computer-science-high-school-diversity/27304593/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Already it&#39;s made it&#39;s rounds with Alfred Thompson giving his take on
his blog over &lt;a href=&#34;http://blog.acthompson.net/2015/05/expanding-computing-educationare-we.html&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
Sounds terrific.
&lt;/p&gt;

&lt;p&gt;
I&#39;m not sold.
&lt;/p&gt;

&lt;p&gt;
I do believe that Code.org has the best of intentions and they&#39;ve been
front and center on the PR front for CS Education - that&#39;s great but
they also seem to be taking that startup mentality - scale, scale,
scale, fast, fast, fast. It&#39;s the drop in curriculum plus PD
approach. I wrote about it about a month ago &lt;a href=&#34;http://cestlaz.github.io/2015/03/04/expedient-vs-good.html#.VVvHnt-c30o&#34;&gt;here&lt;/a&gt;. I hope I&#39;m wrong,
but we&#39;ll see.
&lt;/p&gt;

&lt;p&gt;
What I really want to comment on here is the whole College Board
piece. The kicker is the PSAT 8/9 - a new PSAT exam for eighth and ninth
graders. The Code.org blog says that schools will be encouraged to use
this exam. The USA Today piece says that schools that use the PSAT 8/9
will receive funding to subsidize the Code.org stuff.
&lt;/p&gt;

&lt;p&gt;
Either way, it&#39;s a concern.
&lt;/p&gt;

&lt;p&gt;
As it stands, kids have to take either the SAT or ACT for college
acceptance (for the most part). I know that now the College Board says
that the SAT measures college readiness but I recall a few years ago
they proudly proclaimed that the SAT could only predict one thing: how
a student would do on the next SAT.
&lt;/p&gt;

&lt;p&gt;
So, if the SAT has little value, the PSAT has less, other than
possible entry to scholarships. Taking the test down to eight or
ninth grade seems to have little to no value for students and don&#39;t tell me that
an SAT style test in the 8th grade can determine if you&#39;ll be a good
computer scientist or not.
&lt;/p&gt;

&lt;p&gt;
What is it about?
&lt;/p&gt;

&lt;p&gt;
Call me cynical, but I think the College Board is looking for a new
cash cow.
&lt;/p&gt;

&lt;p&gt;
Districts push the PSAT 8/9 saying it&#39;s good for kids and
force the kids to take an additional test. Since schools and districts
typically pay for the PSAT, the taxpayers fork over money year after
year and funnel it to the College Board and get no real value in
return. To make it all seem kosher, the College Board kicks in a
little for the Code.org training, for whatever that&#39;s worth.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cestlaz.github.io/posts/2016-04-17-emacs-jekyll-nikola/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/2016-04-17-emacs-jekyll-nikola/</guid>
      <description>&lt;p&gt;
—
title: &amp;#34;Blogging with Emacs, Jekyll and Nikola&amp;#34;
date: 2016-04-17
tags:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
mathjax
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
emacs
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
tools
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
draft: false
—
&lt;/p&gt;
&lt;p&gt;
Switched over from &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; to &lt;a href=&#34;https://getnikola.com/&#34;&gt;Nikola&lt;/a&gt; yesterday.
&lt;/p&gt;
&lt;p&gt;
One of the primary reasons was that I got fed up with managing a Ruby
development environment across all my machines. In spite of my
rantings, I&amp;#39;m sure Ruby and Ruby installs are fine - it&amp;#39;s just
something that I&amp;#39;d have to deal with on a recurring basis for one
specific task - other than for Jekyll blogging, I don&amp;#39;t use Ruby.
&lt;/p&gt;
&lt;p&gt;
So while a platform based on Python - generally my go to language,
made sense, the other driving force for the switch was the fact that
&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;Emacs&lt;/a&gt; and &lt;a href=&#34;http://orgmode.org/&#34;&gt;org-mode&lt;/a&gt; have become such major parts of my workflow and
productivity.
&lt;/p&gt;
&lt;p&gt;
What do I use org-mode for?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
lesson planning
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
document preparation (instead of LaTeX)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
note taking
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
blogging
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
email (with mu4e)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
managing my schedule
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
tracking bookmarks
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and probably a lot more.
&lt;/p&gt;
&lt;p&gt;
Jekyll is actually a really nice tool. It&amp;#39;s simple. You put together a
simple directory structure: Templates in _layouts, blog posts in
_posts, drafts in _drafts. Other directories that start with an
underscore are ignored and everything else is copied up to your site.
&lt;/p&gt;
&lt;p&gt;
I love that it&amp;#39;s &amp;#34;close to the metal&amp;#34; You can put in html files with
some meta information up top or markdown.
&lt;/p&gt;
&lt;p&gt;
You can take a look at my old site at
&lt;a href=&#34;https://github.com/cestlaz/cestlaz.github.io-jekyll&#34;&gt;&lt;a href=&#34;https://github.com/cestlaz/cestlaz.github.io-jekyll&#34;&gt;https://github.com/cestlaz/cestlaz.github.io-jekyll&lt;/a&gt;&lt;/a&gt; if you want to
take a look.
&lt;/p&gt;
&lt;p&gt;
The beauty is that you just push your files up to GitHub and it
automatically runs Jekyll and builds your site (&lt;a href=&#34;https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/&#34;&gt;more info here&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
The problem is that Jekyll doesn&amp;#39;t play well with org-mode and
org-markup so my workflow became something like this
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Create a post &lt;strong&gt;&lt;strong&gt;something.org&lt;/strong&gt;&lt;/strong&gt; in the _org directory.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
From within emacs, publish it. I&amp;#39;ve configured org-mode to publish
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
by exporting the org-mode markup file to html and saving it in the
_drafts directory.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
If it looks good, copy and rename the file from _drafts to the
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
_posts directory and push it up to GitHub.
&lt;/p&gt;
&lt;p&gt;
A little clunky, but it works. The bigger problem was the amount of
time I&amp;#39;d spend putting html blocks into my org formatted posts to get
them to look the way I wanted (or at least close enough).
&lt;/p&gt;
&lt;p&gt;
Enter Nikola.
&lt;/p&gt;
&lt;p&gt;
Nikola&amp;#39;s a much more powerful tool. It does much more but as a result
is much more complex. Normally, that&amp;#39;s not my style but in this case
since It&amp;#39;s Python, things balance out.
&lt;/p&gt;
&lt;p&gt;
I still have to figure out the entire templating system and all the
plugins but getting started was pretty quick.
&lt;/p&gt;
&lt;p&gt;
The big win is that Nikola supports a ton of formats for your posts
and pages. Native org-mode support for me was what did it for me. On top of
that, although I haven&amp;#39;t tested it yet, is that there&amp;#39;s also an
org-mode plugin to export to Nikola restructure text.
&lt;/p&gt;
&lt;p&gt;
My new workflow:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Write the post as an org-mode file.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
run &lt;strong&gt;&lt;strong&gt;nikola github_{}deploy&lt;/strong&gt;&lt;/strong&gt;.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
And that&amp;#39;s it. You can look at my Nikola site here:
&lt;a href=&#34;https://github.com/cestlaz/cestlaz.github.io&#34;&gt;&lt;a href=&#34;https://github.com/cestlaz/cestlaz.github.io&#34;&gt;https://github.com/cestlaz/cestlaz.github.io&lt;/a&gt;&lt;/a&gt;.
The source code is in the &lt;strong&gt;&lt;strong&gt;src&lt;/strong&gt;&lt;/strong&gt; branch, the actual rendered blog in
the &lt;strong&gt;&lt;strong&gt;master&lt;/strong&gt;&lt;/strong&gt; branch.
&lt;/p&gt;
&lt;p&gt;
So far, I&amp;#39;m pretty happy with the setup.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>college-board Stuff`</title>
      <link>https://cestlaz.github.io/posts/college-board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cestlaz.github.io/posts/college-board/</guid>
      <description>&lt;p&gt;
—
title: &amp;#34;Remember, school is all about profit, wait no, I mean testing, no, I mean…&amp;#34;
date: 2016-05-06
tags:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
policy
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
draft: false
—
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s important to remember, the college board is about making money
for the college board. It&amp;#39;s not about supporting teachers and it&amp;#39;s
certainly  not about educating kids.
&lt;/p&gt;
&lt;p&gt;
Kids took the AP Computer Science A exam last week and the College
Board just released the free response questions. There seems to me
more chatter about them in social media than in past years.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m just left wondering how AP became the be all and end all.
&lt;/p&gt;
&lt;p&gt;
From where I stand, the College Board, who runs AP, SAT, and PSAT
exams is all about making money for the College Board - they&amp;#39;re a
non-profit in name only.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s all about market share and dominance.
&lt;/p&gt;
&lt;p&gt;
Looking at APCS A, it&amp;#39;s not a great exam or course. At Stuy, I taught
a super-set of the old AB and pretty much ignored the parts I didn&amp;#39;t
like (that is, the case study) but many schools can&amp;#39;t do that. In my
case, most of the schools my kids went to didn&amp;#39;t award credit, even
for a 5. They did sometimes award placement but I&amp;#39;ve had just as many,
if not more kids gain placement just by showing their work to the CS
department at their chosen school.
&lt;/p&gt;
&lt;p&gt;
Now they&amp;#39;re rolling out APCS Principles. I do get the fact that many
schools don&amp;#39;t have people to roll their own courses, but I&amp;#39;m not
overly impressed by much of what&amp;#39;s come out. I think what we&amp;#39;ve
developed is stronger and time proven.
&lt;/p&gt;
&lt;p&gt;
Regardless, and moving beyond just CS, the College Board has somehow
bamboozled the public to think AP = Good. Colleges are awarding less
and less credit but everyone&amp;#39;s telling the kids to take more and more
AP classes. What&amp;#39;s worse, somehow US News and World Report magically
became an authority on school ratings and now the more AP classes your
kids take the better.
&lt;/p&gt;
&lt;p&gt;
I know of at least one school with a highly lauded principal boast
about all his kids came in behind in math and by their senior year
passed honors calculus. Looking at the data unfortunately showed that
while all his seniors took the class, all failed, scoring below
a 3. It made the school look great but I&amp;#39;d argue that it was child
abuse.
&lt;/p&gt;
&lt;p&gt;
The principal of course parlayed that gig to an even higher profile
one.
&lt;/p&gt;
&lt;p&gt;
Now, you could just file the stupid paperwork so that you can run
classes labeled as AP and have kids take the classes but not the exam
but the College Board&amp;#39;s working on that - there are rumblings in NY
on using &lt;a href=&#34;http://www.chalkbeat.org/posts/ny/2016/04/13/new-york-considering-using-scores-on-ap-exams-and-sat-subject-tests-in-teacher-evaluations/#.VyyRlN9vGAk&#34;&gt;student AP scores in teacher ratings&lt;/a&gt;. Using student test
results for teacher ratings is already a bad idea - using AP is even
worse.
&lt;/p&gt;
&lt;p&gt;
Of course, to really get the cash cow going, AP is entering deals with
agencies and municipalities for large scale testing – in NY students will have to take the
SAT and &lt;a href=&#34;http://nymag.com/daily/intelligencer/2015/10/nyc-will-give-free-sat-testing-to-hs-juniors.html&#34;&gt;take it for free&lt;/a&gt;. Then there&amp;#39;s code.org&amp;#39;s deal free PD for
school&amp;#39;s that have their kids take &lt;a href=&#34;http://cestlaz.github.io/posts/2015-05-19-code-org-college-board.html/&#34;&gt;yet another meaningless exam&lt;/a&gt;, the
new PSAT/8-9.
&lt;/p&gt;
&lt;p&gt;
Of course, none of this is free - it&amp;#39;s our taxpayer money hard at work
being shuttled right into the college board.
&lt;/p&gt;
&lt;p&gt;
What are we getting? Tests that they create and control and are
EXTREMELY secretive about that don&amp;#39;t tell us anyhting that we don&amp;#39;t
already know about our kids. Oh, and teachers lose instructional time
and have to &lt;a href=&#34;http://cestlaz.github.io/posts/2015-10-13-psat.html/#.VyzHNN9vGAk&#34;&gt;proctor&lt;/a&gt; these exams instead of teaching.
&lt;/p&gt;
&lt;p&gt;
Great deal if you can get it.
&lt;/p&gt;
&lt;p&gt;
Now, what&amp;#39;s the value of this – more meaningless tests for the
kids. I don&amp;#39;t know if there&amp;#39;s a record of this anywhere but in the
pre-internet day, I remember watching a news report where a College
Board representative stated that the SAT was a valid predictor of one
thing - how students would do on future SAT exams.
&lt;/p&gt;
&lt;p&gt;
So, were left with more money flowing to an outside company with
students taking more meaningless tests.
&lt;/p&gt;
&lt;p&gt;
I wish more schools showed the backbone that Fieldston, an elite
private school in NY had when it &lt;a href=&#34;http://www.nytimes.com/2002/02/01/nyregion/high-school-drops-its-ap-courses-and-colleges-don-t-seem-to-mind.html&#34;&gt;dropped A.P. courses&lt;/a&gt; over 10 years
ago. They still seem to be well regarded as a school and their kids do
just fine in terms of college acceptance.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>