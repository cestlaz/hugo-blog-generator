<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on C&#39;est la Z</title>
    <link>https://cestlaz.github.io/post/</link>
    <description>C&#39;est la Z (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Aug 2020 07:37:12 -0400</lastBuildDate>
    
    <atom:link href="https://cestlaz.github.io/post/rss.xml" rel="self" type="application/rss" />
    
    
    <item>
      <title>Preparing CS Teachers - what to leave in, what to leave out</title>
      <link>https://cestlaz.github.io/post/teacher-cert-methods-choosing/</link>
      <pubDate>Thu, 06 Aug 2020 07:37:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-methods-choosing/</guid>
      <description>&lt;p&gt;
Teachers always make decisions in their courses - what to leave in,
what to leave out. I&amp;#39;ve seen programming and data structure classes
where everything is written from scratch and others where a few things
are explained and the students just use built in types like the
java LinkedList  or Arrays.sort() method.
&lt;/p&gt;
&lt;p&gt;
Do too much from scratch and you&amp;#39;ll never finish the curriculum. Do to
little and the students won&amp;#39;t really understand what&amp;#39;s going on and
walk a path towards being programmers or coders rather than computer
scientists. Most teachers work somewhere between the extremes.
&lt;/p&gt;
&lt;p&gt;
We not only had to make these decisions for our CS content but also
for our methods. We decided to leave out two particular
methods that are very popular - pair programming and Parsons
problems. We did mention both in passing and did a little talk on pair
programming but the treatment was far less than say live coding,
subgoal labeling or the many other teaching techniques we decided to
explicitly cover. 
&lt;/p&gt;
&lt;p&gt;
Why did we leave out these two topics? 
&lt;/p&gt;
&lt;p&gt;
Partly pragmatism and pragmatism is something that&amp;#39;s always left out
when talking about teaching. Let&amp;#39;s look at Parsons problems. If you&amp;#39;re
unfamiliar with them, they&amp;#39;re basically scrambled code
fragments. Students have to put them in order. They&amp;#39;re cool puzzles
and a nice change of pace. but you have to create them and get them to
your students. That didn&amp;#39;t fit all that well with us. By the time we
got to content that would benefit from Parsons problems our pace or approach
didn&amp;#39;t really fit using them. It&amp;#39;s also worth noting that we haven&amp;#39;t
seen any good online Parson problem generator systems which would be
both a boon to problem creation and potentially distribution and
assessment. 
&lt;/p&gt;
&lt;p&gt;
There just wasn&amp;#39;t that much bang for the buck in giving them more than
lip service. Since our cohort was composed of experienced teachers, we
were confident that they can find the appropriate Parsons problems
resources and use them where appropriate in their classes.
&lt;/p&gt;
&lt;p&gt;
On pair programming we had similar pragmatic issues - it didn&amp;#39;t fit
all that well given how tight the program was and we had to figure out
how bet to do it remotely on the fly. We also knew that the cohort had
all been to at least some NYC CS4All training and so were at least
exposed to the idea. Still, we, or more accurately, Topher, who&amp;#39;s had
great success getting student buy in did do a brief talk on the
subject. Some of the things we covered were: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
How to motivate pair programming in a collaborative way
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What activities can you give the navigator while the driver&amp;#39;s
setting up the environment to involve them.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How in the &amp;#34;real world&amp;#34; some developers love PP and some hate it
and that there are many variations on the theme.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
You&amp;#39;d not always going to get student buy in.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
That last point is &lt;strong&gt;very&lt;/strong&gt; important. Teachers are going to try things
that don&amp;#39;t always work and unfortunately, the system of evaluation
doesn&amp;#39;t promote such necessary experimentation. What&amp;#39;s more every time
you go to a professional development or training session or head
something online it&amp;#39;s about how the presented did it and it worked
perfectly and if you follow the same recipe it&amp;#39;ll work for you. It
might, but then, it might not. It&amp;#39;s all about building the toolbox of
tricks and using them when appropriate and even then, not every lesson
is going to be John Keating or Jaime Escalante on the big screen.
&lt;/p&gt;
&lt;p&gt;
So, in the end we made choices. We&amp;#39;re they the right ones? I think
so. Next time around the cohort will be different and the
circumstances a little as well. Will we make the same choices? Maybe,
we&amp;#39;ll have to wait and see. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teacher Certification - Topics in CS</title>
      <link>https://cestlaz.github.io/post/teacher-cert-topics/</link>
      <pubDate>Wed, 05 Aug 2020 07:13:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-topics/</guid>
      <description>&lt;p&gt;
Officially, the last course of the summer was &amp;#34;Modern Topics in
Computer Science.&amp;#34; The idea was that K12 CS teachers on the one hand
need depth beyond the typical terminal high school course, hence data
structures and also breadth so that they could create electives, mix
teasers in to the regular courses, or help precocious students with
independent or semi-independant explorations. 
&lt;/p&gt;
&lt;p&gt;
If someone was teaching this in a typical fall or spring semester
course, they&amp;#39;d probably have a list of topics and spend a couple of
weeks on each. We wanted to do it a little differently. 
&lt;/p&gt;
&lt;p&gt;
The original thought was to integrate some of the topics in with the
earlier computer science but there weren&amp;#39;t too many opportunities due
to the compressed nature of the program. Instead, a few days before we
wrapped up data structures we gave the cohort a list of potential
topics and asked them to select one. Since the cohort had all already
been teaching CS and had differing content backgrounds we also
encouraged them to choose a topic not on the list.
&lt;/p&gt;
&lt;p&gt;
When it was time for them to begin work on the topics part of the
intensive, they all shared their desired topic. Fortunately, things
worked out. We ended up with two solo students and a bunch of small
teams. The teams were tasked with learning about the topic and
designing a lesson or unit covering it. This could be for their
current students or some other hypothetical group. Each group would
also have to create a program or programs to show an implementation
and or use of the topic. Once they chose their topics, we picked a few
out of the remaining selections as topics that we&amp;#39;d present. 
&lt;/p&gt;
&lt;p&gt;
The next few days were Topher, JonAlf and I delivering our topics and
the cohort working in groups. When they worked, we&amp;#39;d drop in and
support. The final two days consisted of the groups presenting their
work.
&lt;/p&gt;
&lt;p&gt;
The topics they selected were:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Data Mining
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Public Key Encryption
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Blockchain
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Natural Language Processing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Classic AI - Decision Trees
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
SQL / Cyber Security
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Visualization
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Machine Learning / Cipher Decryption
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Genetic Algorithms
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Classic AI - Search
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
We weren&amp;#39;t sure exactly what to expect but we were blown away both in
terms of the CS content as well as what they prepared in terms of
lessons and units. 
&lt;/p&gt;
&lt;p&gt;
Since this is just year one of the program we thought we&amp;#39;d get ahead
of the game and set up a site where we could host and share these
units and other resources so check them out &lt;a href=&#34;https://github.com/hunter-teacher-cert/Teacher-Resources/blob/master/README.org&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
We didn&amp;#39;t have a strict format for the cohort to use so each one is a
little different but each link&amp;#39;s README.md file will get you started.
&lt;/p&gt;
&lt;p&gt;
As I said, we were blown away by their work but super proud that we
also have the bonus of being able to make their work available to the
general CS Ed community. If you&amp;#39;re looking to create a unit in any of
these, check them out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing CS Teachers - adding methods to our madness</title>
      <link>https://cestlaz.github.io/post/teacher-cert-methods/</link>
      <pubDate>Tue, 04 Aug 2020 06:47:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-methods/</guid>
      <description>&lt;p&gt;
Our summer intensive was, well, pretty intensive. We met all day every
day for a month and knocked out four classes. 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Programming (CS1)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data Structures
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Topics
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Methods
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If you ever took or taught a summer session class, you know that time
is tight and generally you cover a little less than in a fall or
spring semester class. N credits in 5 weeks just isn&amp;#39;t the same as
those same N credits spread over 13. 
&lt;/p&gt;
&lt;p&gt;
How did we recapture some time? First, we had some pre-work and second
we integrated some of the courses. We couldn&amp;#39;t really do it with
programming and data structures and we were less successful at
integrating the topics than we liked but it made the most sense with
methods, in fact, I think the methods part of the class was more
successful as a result of it&amp;#39;s integration with the other subjects
than it would have been as a stand alone.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what we did.
&lt;/p&gt;
&lt;p&gt;
We first thought about covering methods as we taught topics - that is,
present something using some teaching technique, cover the topic and
then also dive in to the technique. This turned out to be a
mistake. The teachers that came in with a strong CS background  seemed
fine but for the ones newer to the subject matter, it was too much at
once. We had to alter course.
&lt;/p&gt;
&lt;p&gt;
So we did.
&lt;/p&gt;
&lt;p&gt;
We continued to model various methods and sometimes made a side remark
here or there but focused on the CS. After a few days in, we were
ready to spend a day on pedagogy. We broke the class into groups and
had them reflect on the content we taught - how did we teach it? Why
did we approach it the way we did? Did it work? This led to some rich
discussion of both CS teaching techniques and teaching in general. We
were very happy with how it all went.
&lt;/p&gt;
&lt;p&gt;
We then went back to content but added more side bits here and there
about the teaching methods - as they became more comfortable with the
CS we were able to integrate more methods talk in with the CS talk. At
our next formal pedagogy lesson, we again talked about new techniques
that were modeled but also looked at alternative approaches and
took a deeper look at our individual cohort members student
populations. 
&lt;/p&gt;
&lt;p&gt;
Some of the methods we discussed included: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Live Coding 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Subgoal labeling
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Make predictions
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Modifying existing code
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
code tracing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
diagramming
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
scaffolded assignments (code skeletons)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Rubber Duck Debugging
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Code sharing (presenting)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
writing implementations of library code
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
slack techniques (reacts polls, channels, ) 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
thought-grooming/sparking warm-up Qs/tasks
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
relevant quotes at warm-up
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and more but the list doesn&amp;#39;t really do the discussion justice. Take
&amp;#34;live coding&amp;#34; for example - that&amp;#39;s not just writing code in front of
the class. There&amp;#39;s a rich discussion here - how do you narrate? Is it
truly live or from a note sheet? How about discussing workflow while
modeling it? How about live coding subgoals? The actual class is much
richer than just &amp;#34;live coding.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
In addition to integrating methods into the teaching of content, we
also merged it with the topics course for some of the assessment. For
topics, each group created a class or unit on some area of CS and
included in the documents they prepared and presentation was a
discussion of how it might bet taught. I know that they all came in as
experienced teachers so weren&amp;#39;t starting with nothing but man, they
knocked it out of the park. I&amp;#39;ll be talking more about the topics in a
later post.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll probably say this a lot in my summer intensive wrap up posts but
it was such a treat working with a cohort of great educators and also
to have two of the best teachers I know to work with as the teaching
team.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing teachers to teach CS</title>
      <link>https://cestlaz.github.io/post/teacher-cert-recap-intro/</link>
      <pubDate>Mon, 03 Aug 2020 06:16:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-recap-intro/</guid>
      <description>&lt;p&gt;
Now that the summer portion of Hunter College&amp;#39;s Advanced Certificate
in Teaching Computer Science is over I thought I&amp;#39;d do a
postmortem. That is, a few posts about what we did and how it all
went. 
&lt;/p&gt;
&lt;p&gt;
First, though, an overview of the program.
&lt;/p&gt;
&lt;p&gt;
The Advanced Certificate program is geared towards teachers who are
currently certified in another subject area who wish to earn an
additional New York State teaching certificate in Computer
Science. Aspiring teachers - people who don&amp;#39;t currently have either a
Masters degree or any teaching certification can enroll in our Masters
in Computer Science Education program. We&amp;#39;re starting a small cohort
of five on that in the Fall. 
&lt;/p&gt;
&lt;p&gt;
The certificate program consists of a bunch of graduate classes plus
field work which is required by the state. Over the summer we covered
four of the classes. 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Programming - essentially a CS1 type course.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data Structures - since K12 teachers should go deeper than the last
HS course which is typically APCS-A.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Topcs in Compute rScience - since K12 teachers need a wide breadth
of CS knowledge.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Methods - since teachers need to know how to teach CS.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
In the fall, we&amp;#39;ll continue with Ethics in Computer Science and
Curriculum Development which also includes the field work.
&lt;/p&gt;
&lt;p&gt;
For this summer we started with a cohort of 22 practicing teachers but
lost one along the way. They all came from different schools and we
had all five boroughs represented. Most of the teachers worked in high
schools but we had some middle school representation and in terms of
current certifications, we had at least math, special ed, and science
represented but that&amp;#39;s something we didn&amp;#39;t officially track.
&lt;/p&gt;
&lt;p&gt;
Staffing wise, it was me along with two of my long time collaborators
JonAlf Dyrland-Weaver and Topher Mykolyk. JonAlf and Topher are two of
the best educators out there and part of my former core team at
Stuy. That team is the biggest thing I still miss having come over to
Hunter. They&amp;#39;re quite simply the best.
&lt;/p&gt;
&lt;p&gt;
The program ran basically all day every day during the month of
July. we knew it would be tight so we also added on some pre-work
which made sure all participants had some experience with Java prior
to our official start. 
&lt;/p&gt;
&lt;p&gt;
More will be revealed over the next few posts but I&amp;#39;ll spoil the
ending - I&amp;#39;m super proud of our 21 participants - while they still
have more work to do to earn their certifications, if I ran a school,
I&amp;#39;d love to have any of them teaching my CS classes. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not planning on writing much about the programming and data
structure classes except possibly through the methods eye because both
of those courses are pretty well established and cut and dry but I do
plan to write at least the following: 
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
The methods course 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
More on the methods course 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The topics course 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Use of tools for remote teaching 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Our overall philosophy in designing and running the program.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
So, stay tuned for more.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scared teachers can&#39;t teach and scared students won&#39;t learn</title>
      <link>https://cestlaz.github.io/post/scared-teachers-scared-students/</link>
      <pubDate>Sat, 01 Aug 2020 13:23:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/scared-teachers-scared-students/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been reading a lot of takes on NYC schools reopening. We&amp;#39;ve had
daily conversations about it with our summer teachers but
conversations abound on Facebook, Twitter and everywhere else.
&lt;/p&gt;
&lt;p&gt;
Many salient points have been raised - given the DOE&amp;#39;s track record,
can they make things safe and will they? Can they be trusted? Given
that any policy needs all players to follow the rules - students,
teachers, and staff how can that ever happen? What happens when a
parent want&amp;#39;s their kid in school but wants to opt out of wearing a
mask? What happens if kids just straight out refuse? 
&lt;/p&gt;
&lt;p&gt;
Then there&amp;#39;s logistics and teacher workload - even if you have fewer
kids in school there will still be far too many on subway platforms
and who knows if they&amp;#39;ll be masked outside of the school
building. What about bathrooms and class changeovers? 
&lt;/p&gt;
&lt;p&gt;
Then there&amp;#39;s that little matter of teachers having to now, instead of
just five classes which is already too many could effectively be asked
to teach double or more - the result of splitting their classes into
live and remote. There&amp;#39;s also the way they want the live teaching to
work which basically reduces the in person instruction to a remote
experience.
&lt;/p&gt;
&lt;p&gt;
What isn&amp;#39;t being talked about is discomfort and fear. 
&lt;/p&gt;
&lt;p&gt;
From what I can tell, a lot of teachers are afraid for their
health. Not mildly concerned, afraid. I don&amp;#39;t blame them. I would be
too. I&amp;#39;m betting a lot of students are also afraid of going back.
&lt;/p&gt;
&lt;p&gt;
How effective is a teacher going to be when they feel that any
interaction or even too much time in the wrong space might get them
sick or worse. Same for students.
&lt;/p&gt;
&lt;p&gt;
After 9/11 we relocated to Brooklyn Tech. It was surreal
and weird but it felt fine. I taught, they learned. We were pushed
back to Stuy too early. You could still smell the smoke from the
smoldering wreckage of ground zero and there were concerns about the
air quality. It was on a lot of our minds all the time we were down on
Chambers street. It was certainly on my mind. 
&lt;/p&gt;
&lt;p&gt;
I know that I wasn&amp;#39;t teaching at anything resembling my normal level
and I&amp;#39;m pretty sure the kids weren&amp;#39;t learning nearly as well.
&lt;/p&gt;
&lt;p&gt;
Eventually, the smoke cleared, they cleaned the building again (and
stole a lot of valuables) and set up sensors that at least seemed more
accurate and after a period of time we felt normal or at least close
enough.
&lt;/p&gt;
&lt;p&gt;
Of course, that was from a single event not an ongoing pandemic.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t believe for one second that NYC schools will be safe for
teachers and students in the fall but even if they were, if teachers
and students don&amp;#39;t feel safe, student learning will suffer. 
&lt;/p&gt;
&lt;p&gt;
I get that there are downsides to staying remote but don&amp;#39;t fool
yourself into believing that just because you&amp;#39;re sending your kid to
school they&amp;#39;ll be socializing and doing all that good in person
stuff. They&amp;#39;ll be sitting in rows watching a projector and then
shuffled home.
&lt;/p&gt;
&lt;p&gt;
Sure, remote is not as good as normal in person classes but don&amp;#39;t
blame teachers, blame the pandemic. These are exceptional times and
bad and unsafe  in person &amp;#34;solutions&amp;#34; are much worse than safety of
remote. At the end of the day, this pandemic will pass and we will get
back to in person. So what if a for a year students don&amp;#39;t reach some
arbitrary standard bar because remote is sub-optimal. 
&lt;/p&gt;
&lt;p&gt;
Even if safe, scared teachers can&amp;#39;t teach and scared students won&amp;#39;t
learn.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter College CS Teacher Certification - Final Project Fun Time</title>
      <link>https://cestlaz.github.io/post/teacher-cert-presentations/</link>
      <pubDate>Tue, 28 Jul 2020 10:09:25 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-presentations/</guid>
      <description>&lt;p&gt;
Well, we just delivered the last formal piece of instruction for the
summer intensive. Writing this post between visits to breakout rooms
as the cohort works on their final projects.
&lt;/p&gt;
&lt;p&gt;
Tomorrow and Thursday will be presentation time. Each group will give
spend thirty minutes teaching us all about some topic in CS along with
the plan for how we could teach the topic to our kids. We&amp;#39;ve got a few
more things to talk about as a group but it&amp;#39;s mostly time to sit back
and enjoy the show.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s been a long hard month for JonAlf Topher and me. A lot of work
goes in to a first time program and when you&amp;#39;re meeting every day all
day with off hours student support there&amp;#39;s not a lot of time for the
inevitable steering that comes with something new.
&lt;/p&gt;
&lt;p&gt;
Now though we can sit back and enjoy some presentations by some great
teachers and provide some meaningful feedback. We&amp;#39;ve got a nice list
of topics.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Blockchain
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Genetic Algorithms
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data Mining
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Machine Learning
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Natural Language Processing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Public Key Encryption
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data Visualization
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Classic AI - Decision Trees
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Classic AI - search
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Databases / SQL
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Obviously we&amp;#39;re not going to learn everything about topics like NLP or
ML but rather a single unit that can be done in a lass.
&lt;/p&gt;
&lt;p&gt;
In the end, the idea is that every cohort member will have a nice set
of topics and support materials from which to choose for their classes.
&lt;/p&gt;
&lt;p&gt;
Should be a lot of fun.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Certification summer intensive - the home strecth</title>
      <link>https://cestlaz.github.io/post/teacher-cert-home-stretch/</link>
      <pubDate>Fri, 24 Jul 2020 07:30:32 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-home-stretch/</guid>
      <description>&lt;p&gt;
We&amp;#39;ve a week to go in the summer intensive part of our CS teacher
certification program so after an intense few weeks, I can start to
breath a little. There&amp;#39;s still a lot to be done but I feel like I can
breath. 
&lt;/p&gt;
&lt;p&gt;
The first three and a half weeks covered programming and data
structures with a bunch of pedagogy mixed in. This meant a lot of day
to day adjustment of what we were teaching and how we were teaching
it, after all, this is the first time a program like this has ever
existed let alone shifted from in person to remote. Now we&amp;#39;ve moved in
to the last course - Topics, combined with yet more pedagogy. This is
the easy part. Each cohort member selected some area of computer
science that is both new to them and not covered in a typical K12 CS
class. We provided some ideas but they were free to come up with their
own. They&amp;#39;re spending time learning about the topic and designing a
lesson or unit around it. The deliverable is a unit plan with
resources and guidance on preferred pedagogy techniques and a code
implementation of the topic. The idea is that in addition to showing
their own expertise that other cohort members can use the project as a
resource for their own classes at some future date.
&lt;/p&gt;
&lt;p&gt;
The next few days consist of us supporting their work while mixing in
a few lessons on topics that they didn&amp;#39;t select. Much easier than the
first few weeks. 
&lt;/p&gt;
&lt;p&gt;
Looking forward to some cool presentations - Blockchain, public key
encryption, some machine learning and more.
&lt;/p&gt;
&lt;p&gt;
Really happy about how this has all played out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tools matter when teaching (and learning)</title>
      <link>https://cestlaz.github.io/post/tools-matter/</link>
      <pubDate>Wed, 22 Jul 2020 07:52:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/tools-matter/</guid>
      <description>&lt;p&gt;
One of our teacher certification cohort members asked for some help on
our Slack the other day. It was about a side project - he was learning
him so Javascript. It&amp;#39;s always very cool to see teachers exploring
things that can help with their craft on their own.
&lt;/p&gt;
&lt;p&gt;
The whole situation reminded me  about how important good tooling is
and why, in spite of its popularity, javascript has some severe issues
as a learning language and I&amp;#39;m a guy that actually likes javascript. 
&lt;/p&gt;
&lt;p&gt;
The project was a small interactive javascript todo application and he was
having trouble getting a button to react. I grabbed his code off
GitHub, fired up a server and took a look. Indeed, there were
issues. Some of the interface worked - you could type in a new item
and hit enter or click an add button and it worked. You could check or
uncheck items and you could delete them individually. Everything
worked except the clear button which did nothing. Weird.
&lt;/p&gt;
&lt;p&gt;
Exploring the code, here were some of the key sections:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// there were sections like this
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filterOption&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.filter-todo&amp;#34;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;clearButton&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.clear-button&amp;#34;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;// then more code 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;// then some of this
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;filterOption&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;filterTodo&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;clearButton&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;clearTodos&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;// and more code
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
I just pulled out the lines relevant to what he was doing and to the
error so be aware that it&amp;#39;s all out of context. 
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;document.querySelector&lt;/code&gt; lines get references to DOM elements -
elements on the page. The &lt;code&gt;addEventListener&lt;/code&gt; then links a function to
the event. So, when you click on the &lt;strong&gt;clear&lt;/strong&gt; button on the web site,
it&amp;#39;s supposed to run the function &lt;code&gt;clearTodos&lt;/code&gt; and when you click on
the &lt;strong&gt;filter&lt;/strong&gt; button it will run &lt;strong&gt;fiterTodo&lt;/strong&gt;. There&amp;#39;s more linking of
events to elements in the code.
&lt;/p&gt;
&lt;p&gt;
What was really weird was that parts and in fact most of the interface
was working and just the clear button was not. To make matters worse,
looking both at the server output and the actual web page, there was
no indication of anything wrong. Even if you looked at the developers
console in the browser it didn&amp;#39;t really give you a clue.
&lt;/p&gt;
&lt;p&gt;
It didn&amp;#39;t take me &lt;strong&gt;too&lt;/strong&gt; long to find the error but that&amp;#39;s only because
I spent hours on similar errors back when I learned javascript. Back
then though I lost hours of time on errors like these and I was
learning JS decades into my career as a computer science teacher and
professional.
&lt;/p&gt;
&lt;p&gt;
What was going on?
&lt;/p&gt;
&lt;p&gt;
When javascript executes  &lt;code&gt;querySelector&lt;/code&gt; it returns a reference to an
element in the web page. If that element doesn&amp;#39;t exist, it returns
 &lt;code&gt;null&lt;/code&gt;. As it turned out, at least in the version I looked at, there
was no element on the page identified by the class &lt;strong&gt;filter-todo&lt;/strong&gt;. The
result was that after executing
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filterOption&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.filter-todo&amp;#34;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;filterOption&lt;/code&gt; is set to refer to null.
&lt;/p&gt;
&lt;p&gt;
Then later, this code: 
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;filterOption&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;filterTodo&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
crashes the program because you can&amp;#39;t call the &lt;code&gt;addEventListener&lt;/code&gt;
method on &lt;code&gt;null&lt;/code&gt; which is what &lt;code&gt;filterOption&lt;/code&gt; is set to.
&lt;/p&gt;
&lt;p&gt;
Therein lies the problem. I commented out the two lines, the program
ran, and the &lt;strong&gt;clear&lt;/strong&gt; button was clickable.
&lt;/p&gt;
&lt;p&gt;
The killer was that the tool gave some pretty weird results - it
wasn&amp;#39;t all or nothing. Parts of the interface responded but parts
didn&amp;#39;t. There was no actionable feedback. The only feedback was indeed
this error: &lt;strong&gt;TypeError: filterOption is null&lt;/strong&gt; but this seems wholly
unrelated to the clear button and since most of the interface was
responsive it seemed even weirder.
&lt;/p&gt;
&lt;p&gt;
My best guess was that the web browser executed the JS code
until the crash so anything that parts of the user interface that were
wired up prior to that null pointer reference did indeed run.
&lt;/p&gt;
&lt;p&gt;
The lack of feedback and this manner of execution can make javascript
really tough on both beginners and self learners. It&amp;#39;s also tough with
a teacher if they don&amp;#39;t really know the ins and outs of the toolset.
&lt;/p&gt;
&lt;p&gt;
This was all just a reminder that tools matter. Java, Python, and C++
might not give the best error messages but generally the tooling isn&amp;#39;t
so bad. They could of course, be better, and I&amp;#39;m not arguing that any
of them are ideal learning environments but JS has a long way to
go. On the other hand, languages and environment specifically made for
learning have issues as well. The bottom line in choice of tools is
that there&amp;#39;s no magic bullet and the answer is as usual, &amp;#34;it depends.&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Github and Student Feedback</title>
      <link>https://cestlaz.github.io/post/github-student-feedback/</link>
      <pubDate>Mon, 20 Jul 2020 16:12:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-student-feedback/</guid>
      <description>&lt;p&gt;
Beyond the CS specifics We&amp;#39;ve been primarily using three tools in our
summer certification program.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Zoom for video conferencing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Slack for text based communicaiton
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
GitHub for just about everything else
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
We use GitHub as a CMS - a place to share code and assignments as well
as collect them. We&amp;#39;re also playing with GitHub discussions although
that&amp;#39;s fallen somewhat to the wayside with Slack being preferred. 
&lt;/p&gt;
&lt;p&gt;
One of the choices I&amp;#39;m digging more than ever is &lt;a href=&#34;https://classroom.github.com/&#34;&gt;GitHub Classroom&lt;/a&gt; for
assignments. Recently GitHub added a feedback feature powered through
what known as Pull Requests. You just have to check the &amp;#34;feedback&amp;#34;
button when you create an assignment. I also set my notifications so I
receive an email alert whenever a students submits anything.
&lt;/p&gt;
&lt;p&gt;
Whenever a student updates an assignment or in Git parlance commits
and pushes up a change, I get an email alert. The email includes: 
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
The repo where the change was made 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A brief message describing the most recent change
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A link the the students GitHub account
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A link to the actual change.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Clicking on the change and I get to a screen like this:
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/githubdiff.png&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
A summary of exactly what changed. I see lines that were deleted,
lines that were added and lines that were modified. At the top I see
the one line brief description which the student put in when making
the commit. I can also easily navigate through their assignment both
to see other parts of it as well as earlier versions.
&lt;/p&gt;
&lt;p&gt;
If you scroll down the page there&amp;#39;s a place you can leave a comment
which will go to the student. 
&lt;/p&gt;
&lt;p&gt;
This all makes for a very quick and easy feedback mechanism. You can
also go to the &amp;#34;pull request&amp;#34; section of the repo (link at the top of
the repo page) where you can find all the comments.
&lt;/p&gt;
&lt;p&gt;
All in all this provides a very quick and painless way of seeing what
students are up to and a quick way to provide some feedback.
&lt;/p&gt;
&lt;p&gt;
The only catch is that this only works when the students actively push
changes up to GitHub. While this group of teachers have been great
that&amp;#39;s sometimes a challenge with high school or college
students. Working on strategies to get this type of buy in from my
first years in the Fall.
&lt;/p&gt;
&lt;p&gt;
So, GitHub Classroom&amp;#39;s feedback mechanism? A big win and more great
work from the GitHub education team.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Merge Over Zoom - A Hunter CS Certification Program Update</title>
      <link>https://cestlaz.github.io/post/merge-over-zoom/</link>
      <pubDate>Thu, 16 Jul 2020 19:00:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/merge-over-zoom/</guid>
      <description>&lt;p&gt;
We&amp;#39;ve been talking sorting and searching in our teacher certification
program and today was all about the merge sort. One of the strategies
we use when teaching it in person involves sorting a deck of cards by
&lt;a href=&#34;https://cestlaz.github.io/posts/2014-02-27-dumbass/&#34;&gt;Tom Sawyering&lt;/a&gt; it with the class. It&amp;#39;s fun and it&amp;#39;s effective but you
can&amp;#39;t do it over Zoom. What to do? We didn&amp;#39;t want to just jump into
the nuts and bolts of merge sort. We could - we&amp;#39;ve got a great group
of teachers who could handle it but we&amp;#39;re not just talking about
content in the program we&amp;#39;re also talking about pedagogy.
&lt;/p&gt;
&lt;p&gt;
How could we adapt a divide and conquer algorithm where we split a
deck of cards and pass it out to the class to a remote environment.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what we came up with.
&lt;/p&gt;
&lt;p&gt;
I started with a story about how I pitched Hunter about having a party
with this first cohort when they all earn their NY State CS Teaching
Certificates (assuming we could have a party in person). They said yes
but to keep costs down I had to get them a list of possible
restaurants to order from sorted by lowest price. We decided to use
Chinese restaurants and the price of pork dumplings. 
&lt;/p&gt;
&lt;p&gt;
I had a long list and was going to have to go to the seamless page for
each one and get the price and then sort them. Not fun.
&lt;/p&gt;
&lt;p&gt;
Since I&amp;#39;m running the program but have two instructors - JonAlf and
Topher working with me, we decided I could &amp;#34;volunteer&amp;#34; each to do half
the list. They weren&amp;#39;t happy so they looked for Teaching Assistants to
pawn the work off on but having none went to the students. We
continued with the split until a bunch of students each had to look up
one and only one restaurant to find the price of the pork. We then
passed the restaurants and prices back up the chain and voila - merge
sort. .
&lt;/p&gt;
&lt;p&gt;
We basically were able to replicate the in class card sorting
experience with something that we could do over Zoom. It went over
pretty well. 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re going to talk more about what we did and why and the idea of
actively engaging students in different ways over virtual conference
technologies tomorrow. 
&lt;/p&gt;
&lt;p&gt;
It was all pretty cool.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Virtual Conferences - CSTA 2020 part 2</title>
      <link>https://cestlaz.github.io/post/csta-2020/</link>
      <pubDate>Wed, 15 Jul 2020 19:32:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2020/</guid>
      <description>&lt;p&gt;
Now that CSTA 2020&amp;#39;s over time for some more thoughts on the
conference and also on virtual conferences in general.
&lt;/p&gt;
&lt;p&gt;
I only got to attend a couple of sessions as I was working my CS
teacher certification program but a nice feature is that I was able to
hop in and out of sessions without disturbing or disrupting. You can&amp;#39;t
really do that in person. I&amp;#39;m also looking forward to when they
release the sessions for later viewing. In addition to not being able
to get to everything I wanted, my session overlapped with Nifty
Assignments - always a fun show. Now I still get to see it!!!!
&lt;/p&gt;
&lt;p&gt;
Speaking of my session, JonAlf and I had fun but I would have much
preferred doing it in person. After a few minor hiccups, Hopin worked
perfectly but it suffers the same problem as Zoom when your kids turn
off their cameras. I didn&amp;#39;t really feel connected to the audience,
Sure, there was the chat, but with the number of people in the
session, it flew by way to fast. We could have invited a few attendees
&amp;#34;up on stage&amp;#34; but that would have made the dual screen share
smaller. None of this was a deal breaker but the tech still has some
limitations.
&lt;/p&gt;
&lt;p&gt;
So, sessions worked but had some pluses and minuses against in person
and the networking feature I described &lt;a href=&#34;https://cestlaz.github.io/post/virtual-conf/&#34;&gt;last time&lt;/a&gt; was a clear winner so
what&amp;#39;s next - the exhibits. Exhibits didn&amp;#39;t work for me. I can&amp;#39;t say
why. I think it&amp;#39;s because I like strolling the exhibit hall and just
chatting with both attendees and company reps. I generally don&amp;#39;t like
the formal booth talk and that&amp;#39;s all we got here. Nothing wrong with
the booth presentation but it&amp;#39;s just normally not my thing. 
&lt;/p&gt;
&lt;p&gt;
The other thing missing and it&amp;#39;s related to those exhibition hall
chats was the hallway track. That was the biggest loss. The informal
and semi-formal meetups. Impromptu lunches and dinners and one offs
that just happen. Can&amp;#39;t really have that with the current virtual
tools.
&lt;/p&gt;
&lt;p&gt;
A final point was that when I go to a conference I get to both explore
a new part of the world and I get to turn off the outside world for a
couple of days - I can just enjoy the conference. You can&amp;#39;t do that if
it&amp;#39;s virtual but you get other advantages - no cost of travel and the
ability to attend at all your schedule doesn&amp;#39;t allow you to get away
for half a week.
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the verdict? 
&lt;/p&gt;
&lt;p&gt;
The 2020 edition of the CSTA conference was a big win in my book. I
hope we can do it in person next year but even if we can, it would be
great to offer at least parts virtually to make at least sessions
available to a wider audience.
&lt;/p&gt;
&lt;p&gt;
Either way, I&amp;#39;m there.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Virtual Conferences - CSTA 2020</title>
      <link>https://cestlaz.github.io/post/virtual-conf/</link>
      <pubDate>Mon, 13 Jul 2020 16:27:02 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/virtual-conf/</guid>
      <description>&lt;p&gt;
I wasn&amp;#39;t supposed to be in NYC this week. I was supposed to be in
Arlington Virginia with around one thousand of my CS Teacher friends
at CSTA2020. Devorah was going to spend the days at the GitHub booth
&lt;a href=&#34;https://cestlaz.github.io/post/blanket-statement-2020/&#34;&gt;teaching knitting&lt;/a&gt; and I was going to do a GitHub workshop and
generally enjoy the show
&lt;/p&gt;
&lt;p&gt;
Of course nobody&amp;#39;s traveling these days and CSTA2020 is running
remote. This is my second virtual conference as I attended parts of MongoDB
world a few weeks ago.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m still forming my opinion on CSTA2020 but I thought I&amp;#39;d share my
thoughts in progress.
&lt;/p&gt;
&lt;p&gt;
To start, virtual conferences aren&amp;#39;t the same as in person - they
can&amp;#39;t be. For me, CSTA is a person first conference rather than
session first. That is, I get most of my value from the hallway
track. That&amp;#39;s not to say I don&amp;#39;t enjoy the sessions, it&amp;#39;s just that
for me personally, I get more from the chats than from the talks. By
contrast, for me SIGCSE is more about the sessions. There are a few
reasons why things fall this way but there neither here nor there.
&lt;/p&gt;
&lt;p&gt;
So, since there can&amp;#39;t really be a hallway track, I was wondering how
CSTA2020 would feel. 
&lt;/p&gt;
&lt;p&gt;
TL;DR - it&amp;#39;s different but still pretty great.
&lt;/p&gt;
&lt;p&gt;
Keynote&amp;#39;s are keynotes wether virtual or in person so not much to say
in them so let&amp;#39;s move to the sessions. CSTA is using hopin.to and it&amp;#39;s
working pretty well. MongoDB used another platform that seemed to be
more glitchy. Hopin&amp;#39;s been working pretty seamlessly for me. I&amp;#39;m
presenting tomorrow so we&amp;#39;ll see if that changes my view. None of the
sessions I attended brought any participants &amp;#34;on stage&amp;#34; so
interactions were through the chat. It worked pretty well but at times
there was so much chatter that things flew off the screen before you
could read them.
&lt;/p&gt;
&lt;p&gt;
Overall, I&amp;#39;m digging the plaltform. Not the same as in person but it&amp;#39;s
a good approximation.
&lt;/p&gt;
&lt;p&gt;
The vendor / exhibit area worked pretty much the same way so not much
to say there. 
&lt;/p&gt;
&lt;p&gt;
Overall the interface is pretty smooth. Navigation could be smoother
and so could user search but overall, pretty nice.
&lt;/p&gt;
&lt;p&gt;
So, where are we at? We&amp;#39;ve got a pretty good platform for sessions
with decent navigation, chat, and messaging but what about that
hallway track. 
&lt;/p&gt;
&lt;p&gt;
We don&amp;#39;t have one but we have a pretty cool alternative. Hopin has a
networking feature. When you drop in, you&amp;#39;re matched with someone else
randomly for a 5 minute video chat. After five minutes, its over. You
can come back in and chat with someone else or be done with it.
&lt;/p&gt;
&lt;p&gt;
I really like this feature.
&lt;/p&gt;
&lt;p&gt;
For someone asocial and somewhat awkward like me, it&amp;#39;s great. Five
minutes isn&amp;#39;t too long to get awkward but it&amp;#39;s enough for a brief chat
and you can follow up later. The randomness lets you meet new people.
&lt;/p&gt;
&lt;p&gt;
In some ways it&amp;#39;s better than in person. I frequently fly solo at
conferences. At this point I know a decent amount of people but when
at a new conference, it&amp;#39;s hard to break in. The reason is that many
colleges or schools send groups of teachers and they cluster together
making it hard for an individual to join in. I see it and fee it all
the time, With this platform, you&amp;#39;re dumped in one on one - no worries
about cliques. 
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the verdict. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m loving the networking feature and liking the overall tool. I hope
CSTA&amp;#39;s in person next year but I&amp;#39;ll be a happy attendee even if we
remain remote.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter&#39;s CS Teacher Certification program Week 2</title>
      <link>https://cestlaz.github.io/post/teacher-cert-week-2/</link>
      <pubDate>Sun, 12 Jul 2020 10:31:53 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-week-2/</guid>
      <description>&lt;p&gt;
Time for some thoughts after week 2.
&lt;/p&gt;
&lt;p&gt;
Since this is the inaugural edition of our program and there was no
way to really know what the cohort would be like we&amp;#39;ve been adjusting
on the fly. This was expected but we&amp;#39;re finally starting to settle
in. We&amp;#39;re still finding more zoom heavy days but as we move towards
the end of our data structures segment there should be fewer of those.
&lt;/p&gt;
&lt;p&gt;
The cohort is progressing nicely. They&amp;#39;re working hard - we&amp;#39;ve got
some members who are former CS majors or otherwise came in with a
strong CS background but many were relative beginners. They&amp;#39;re all
coming along. We have to remind them that some topics just take
time. I&amp;#39;ve taught these subjects for years at Stuy but also at Hunter
College and NYU and recursion just takes time. So do Linked Lists and
dynamic data structures. It&amp;#39;s typical for CS majors not to be really
comfortable with them for a couple of years. I think I was near the
end of my college days before I&amp;#39;d roll out a pointer based solution to
a problem with the same comfort as with an array. So, the long and
short is that they&amp;#39;re doing great.
&lt;/p&gt;
&lt;p&gt;
When we started, we tried to integrate a discussion of pedagogy with
the CS but found that we were expecting too much as the CS was new to
a large portion of the group. We decided instead to model assorted
teaching techniques but keep the analysis and discussion mostly to the
CS. Last Friday though we spent most of the morning looking back at
the pedagogy. It was a rich discussion. We loved that many of the
teachers commented on &amp;#34;when we modeled&amp;#34; one technique or another. We
ended up spending a good amount of time talking about scaffolding and
code skeletons, code reading and tracing, live coding and a bunch of
others. What was also cool was that some of the techniques we modeled
didn&amp;#39;t come up in our discussion originally (we had to interject them)
and some things we did unintentionally were also highlighted by the
cohort. 
&lt;/p&gt;
&lt;p&gt;
It was a fun and productive morning. 
&lt;/p&gt;
&lt;p&gt;
Another thing that came out of the discussion was our use of
technology but I&amp;#39;m saving that for another post. 
&lt;/p&gt;
&lt;p&gt;
Finally, I&amp;#39;m remembering that a month long summer intensive is, well,
intensive. It&amp;#39;s really draining. After Friday&amp;#39;s session was done and
JonAlf, Topher and I debriefed, I just crashed for the night and
pretty much took Saturday off save making one video that we&amp;#39;ll need on
Monday. It&amp;#39;s also hard on the students - 12 credits in one month. 
&lt;/p&gt;
&lt;p&gt;
That said, we&amp;#39;re chugging along and they&amp;#39;re doing great. More
confident than ever that we&amp;#39;re going to have a 21 new leaders in CS Ed
in NY come the program&amp;#39;s conclusion.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reopening Schools - de Blasio and Carranza throw kids and teachers under the bus.</title>
      <link>https://cestlaz.github.io/post/reopening-schools/</link>
      <pubDate>Thu, 09 Jul 2020 08:18:21 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/reopening-schools/</guid>
      <description>&lt;p&gt;
Yesterday, Bill de Blasio and Richard Carranza unveiled their open the
schools in the fall plan. 
&lt;/p&gt;
&lt;p&gt;
The plan is perfectly consistent with de Blasio and Carranza&amp;#39;s
education policies and efforts in general - tone deaf, ineffective,
and in this case, unsafe.
&lt;/p&gt;
&lt;p&gt;
I know we were told that part of this came from survey results but we
all know that surveys are super easy to fix. I mean, ask any teacher
or parent &amp;#34;do you want schools to be open and in person in the Fall?&amp;#34;
and everyone will say &amp;#34;yes.&amp;#34; Of course, there&amp;#39;s the implication that
it&amp;#39;s safe and I bet that part didn&amp;#39;t make it in to the surveys.
&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t watch the news conference live, but I was told that while
principals, parents, and children were mentioned over and over as
consulted constituents when forming the plan, somehow teachers never
came up. Typical.
&lt;/p&gt;
&lt;p&gt;
The basics of the plan is that students could go all remote or hybrid
and under the hybrid model, they&amp;#39;d be in the schools some days and not
others.
&lt;/p&gt;
&lt;p&gt;
Does this address health concerns? Doubtful. They&amp;#39;re talking about a
third to half the students attending at a time. Take a look at any
school on opening and closing - it&amp;#39;s wall to wall from the school to
the subway. It&amp;#39;s a mess. Many schools are already split schedule -
they have their kids entry and egress staggered into halves or thirds
and the beginning and end of days there are &lt;strong&gt;STILL&lt;/strong&gt; wall to wall for
blocks not to mention the subway platforms and cars. Even 1/3 isn&amp;#39;t
going to do it and the more you stagger, the more you lengthen the
school days and this affects both staff and families. What good is
having a kid go to school so you can work if they don&amp;#39;t start until
mid day?
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s assume, although I don&amp;#39;t think it&amp;#39;s a safe assumption, that you
can get the kids to and from school safety. How big are the
classrooms? I heard that some Stuy teacher&amp;#39;s measured them and they
could safely accommodate something like 9 -  12 people. That&amp;#39;s in line
with what DbD said but what about transfer between classes? Some
schools - particularly those in converted spaces have TINY halls or
limited stairwells. What about bathrooms? None of this has been
addressed.
&lt;/p&gt;
&lt;p&gt;
What about cleaning? Teachers have regularly begged for basic
supplies. Schools go without necessities like toilet paper and the
Mayor&amp;#39;s saying that we&amp;#39;ll have sufficient masks and cleaning supplies?
Good luck with that! 
&lt;/p&gt;
&lt;p&gt;
Even if we have the supplies, will they be used and used correctly and
often enough? 
&lt;/p&gt;
&lt;p&gt;
What about compliance? For years, schools had a &amp;#34;no hats&amp;#34; policy but
rarely are there no hats. Even when the policy works, usually it&amp;#39;s a
result of teachers continually asking students to remove their
hats. How did those cell phone bans work? Do we really believe we can
get 100% compliance from students, teachers, and staff? What about the
younger grades? We really expect them to comply with adult
protocols?????
&lt;/p&gt;
&lt;p&gt;
Even if everything is implemented, will it keep everyone safe?
Unlikely. Professional and big time college sports have extreme
incentive to &amp;#34;open up&amp;#34;, boatloads of money and everyone pulling in the
same direction. They test all the time, have all the space they need
and can implement whatever protocols they want. Even with all this we
keep hearing about new cases in those populations. If they can&amp;#39;t do it
how can underfunded schools?
&lt;/p&gt;
&lt;p&gt;
With all of this, even if it&amp;#39;s safe and even if schools can manage
reasonable schedules, students will only be going to school a couple
of times a week - will this really help parents? Maybe not. I remember
when we had Batya. We were looking for child care for just a couple of
days a week. Five days was easy, no days was easy but just a couple -
not so much. What about the shifted days? Large schools might need 4
shifts. Kids either start and end super early or super late. Will that
help parents who work &amp;#34;regular time&amp;#34; jobs?
&lt;/p&gt;
&lt;p&gt;
Finally, let&amp;#39;s get to the education side of things. High school
teachers teach five classes a day. Around 34 kids in a class. Given
room size restrictions that  means we have to split into threes. If
one teacher has to deal with this then it&amp;#39;s a HUGE increase in
work. If kids come to school on different days they&amp;#39;ll get different
live lessons - for each class teachers will have to make at least one
in person lesson and at least one corresponding remote lesson and I&amp;#39;m
over simplifying. Since you&amp;#39;re now &amp;#34;teaching&amp;#34; 10 or 15 classes instead
of 5 I don&amp;#39;t see how you can meet with them in person and deliver
synchronous remote instruction which means you&amp;#39;re only actually
interacting with your students once or twice a week and there&amp;#39;s no way
teachers will be able to actually develop materials, assess students,
and maintain meaningful contact unless someone finds a whole lot of
hours to the day.
&lt;/p&gt;
&lt;p&gt;
On the other hand, if the teacher just does the in person and another
or other teachers do the remote you&amp;#39;ll have multiple teachers teaching
a single class without any real coordination  - this is yet another
recipe for disaster.
&lt;/p&gt;
&lt;p&gt;
I get it - we all want to get back to normal. I want to be with my
students but I want to be with them safely. I also get that some
students are not doing well in isolation and that remote school is
both less effective than in person and a hardship all around but when
we open it has to make sense both in terms of safety and in terms of
education. de Blasio and Carranza&amp;#39;s plan is neither.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Productive Fidgeting at CSTA2020 - Build a Blanket for good</title>
      <link>https://cestlaz.github.io/post/blanket-statement-2020/</link>
      <pubDate>Mon, 06 Jul 2020 15:49:30 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/blanket-statement-2020/</guid>
      <description>&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/blanket2019.png&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s almost time for CSTA2020. I&amp;#39;m looking forward to it but since
it&amp;#39;s going remote it is going to be interesting.
&lt;/p&gt;
&lt;p&gt;
Since CSTA is, at least to me, very much a  &amp;#34;people conference&amp;#34; as
opposed to a &amp;#34;session conference&amp;#34; it&amp;#39;ll be interesting to see how it
all plays out.
&lt;/p&gt;
&lt;p&gt;
One of the things I was super excited about last year was Devorah&amp;#39;s
getting her &lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;Blanket Statement&lt;/a&gt; project off the ground. The whole idea
was to have knitters and crocheters make squares while attending
conference sessions instead of incessantly checking their
phones. Productive fidgeting she calls it. At the end, Devorah put the
squares together into a blanket and it was donated to a child in need.
&lt;/p&gt;
&lt;p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Finished! 44 / 49 blocks crafted by CSTA participants. Thank you &lt;a href=&#34;https://twitter.com/GitHubEducation?ref_src=twsrc%5Etfw&#34;&gt;@GitHubEducation&lt;/a&gt; for hosting, &lt;a href=&#34;https://twitter.com/csteachersorg?ref_src=twsrc%5Etfw&#34;&gt;@csteachersorg&lt;/a&gt; for allowing and promoting and to all who participated whether I have your handle / name or not! &lt;a href=&#34;https://twitter.com/akohart?ref_src=twsrc%5Etfw&#34;&gt;@akohart&lt;/a&gt; &lt;a href=&#34;https://twitter.com/Sputtnikme?ref_src=twsrc%5Etfw&#34;&gt;@sputtnikme&lt;/a&gt; &lt;a href=&#34;https://twitter.com/RebekahCLang?ref_src=twsrc%5Etfw&#34;&gt;@RebekahCLang&lt;/a&gt; &lt;a href=&#34;https://twitter.com/TweetsInShadow?ref_src=twsrc%5Etfw&#34;&gt;@TweetsInShadow&lt;/a&gt; &lt;a href=&#34;https://twitter.com/karmaturner?ref_src=twsrc%5Etfw&#34;&gt;@Karmaturner&lt;/a&gt; ... &lt;a href=&#34;https://t.co/96XzrVRcCG&#34;&gt;pic.twitter.com/96XzrVRcCG&lt;/a&gt;&lt;/p&gt;&amp;mdash; BlanketStatement (@BlanketStmtProj) &lt;a href=&#34;https://twitter.com/BlanketStmtProj/status/1150878754916450304?ref_src=twsrc%5Etfw&#34;&gt;July 15, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/p&gt;
&lt;p&gt;
It was really cool. Our friends at GitHub Education provided space at
their booth where Devorah could teach knitters or people could stop by
on a break to make a square or two.
&lt;/p&gt;
&lt;p&gt;
It was really cool.
&lt;/p&gt;
&lt;p&gt;
While we can&amp;#39;t do it again in person we can do it remotely. So, if you
knit or crochet, pick up those needles or hooks while you&amp;#39;re watching
those sessions and knit some squares. 
&lt;/p&gt;
&lt;p&gt;
You can &lt;del&gt;email&lt;/del&gt; mail  your squares to Devorah and she&amp;#39;ll put them all together
into a blanket or you can donate them locally. 
&lt;/p&gt;
&lt;p&gt;
You can find more details at &lt;a href=&#34;http://blanketstatementproject.com&#34;&gt;http://blanketstatementproject.com&lt;/a&gt; or
email Devorah at &lt;a href=&#34;http://mailto:blanketstatementproject@gmail.com&#34;&gt;blanketstatementproject@gmail.com&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Hope to see many friends at CSTA2020 and hope many do some productive
fidgeting to crowdsource a blanket for a chile in need.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter&#39;s CS Teacher Certification program  Week 1</title>
      <link>https://cestlaz.github.io/post/teacher-cert-week-1/</link>
      <pubDate>Thu, 02 Jul 2020 13:48:21 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-cert-week-1/</guid>
      <description>&lt;p&gt;
Time for an update on our NY State Teacher Certification Program. 
&lt;/p&gt;
&lt;p&gt;
We kicked off on Monday. Twenty two students working with three
instructors from 9:00 - 3:00 every day. We&amp;#39;ve been using a combination
of synchronous with Zoom and async using Slack and GitHub
discussions. We&amp;#39;re using GitHub as our main platform.
&lt;/p&gt;
&lt;p&gt;
Day 0 was very Zoom heavy but we&amp;#39;re trying to balance one big Zoom
session a day combined with other work so as to minimize fatigue. 
&lt;/p&gt;
&lt;p&gt;
Due to our time constraints we had some prework before we officially
started. We had to debrief on that at the start and then also had to
deliver new instruction and all that made for a rough first day. 
&lt;/p&gt;
&lt;p&gt;
Things got better in day 1. We were able to do one zoom session in the
morning to set the stage on 2D arrays and were able to work more
independently with slack support in the afternoon.
&lt;/p&gt;
&lt;p&gt;
On Day 2 I finally got to teach as I had been running a &lt;a href=&#34;https://cestlaz.github.io/post/teaching-cs-in-all-the-grades/&#34;&gt;Computational
Thinking&lt;/a&gt; workshop during days 0 and 1. I led the morning session on
Conway&amp;#39;s Game of Life which led to a coding project in the afternoon. 
&lt;/p&gt;
&lt;p&gt;
Today we flipped the script doing self directed work in the morning
and then got together to go over objects and classes in the afternoon.
&lt;/p&gt;
&lt;p&gt;
While there&amp;#39;s more to tweak I&amp;#39;m very happy with how things are
going. We have a great cohort. In addition to supporting each other in
class they&amp;#39;ve started to organize their own study groups and sessions
both off hours and during our independant work. I haven&amp;#39;t said
anything about this nor have I intruded as I think it&amp;#39;s healthy for
the cohort to have their own self directed space. I&amp;#39;m glad it&amp;#39;s
happening without me having to prod behind the scenes.
&lt;/p&gt;
&lt;p&gt;
While I&amp;#39;m very happy with how it&amp;#39;s gone so far there are some areas of
concern. Since this is a new program with an unknown cohort we&amp;#39;re
figuring out a lot on the fly. We&amp;#39;re doing better on the format and
pacing of activities but I feel we can still do better. With this in
mind we&amp;#39;re all having an online discussion throughout the weekend
about how to adjust and by we I mean the entire cohort and all the
instructors. If you&amp;#39;ve got a cohort of 22 experienced teachers you&amp;#39;re
foolish not to exploit their expertise. I&amp;#39;m also a little concerned
about the methods component. We&amp;#39;re already integrating some things -
live coding and subgoal labeling for example but some of the methods I
wanted to cover just don&amp;#39;t fit well in a remote model and we also have
to be careful about not overloading the teachers while many are just
learning the CS.
&lt;/p&gt;
&lt;p&gt;
Next week we&amp;#39;ll start getting into data structures. We&amp;#39;ve got four
more weeks but we&amp;#39;re well on our way.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching CS  - all the educators to all the grades</title>
      <link>https://cestlaz.github.io/post/teaching-cs-in-all-the-grades/</link>
      <pubDate>Sat, 27 Jun 2020 12:29:06 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teaching-cs-in-all-the-grades/</guid>
      <description>&lt;p&gt;
I&amp;#39;m kicking off a couple of exciting summer projects next week and
it&amp;#39;s been pointed out to me a couple of times that I&amp;#39;ll be working
with educators at every level to help them to deliver CS instruction
to students at every level. What an opportunity to be a part of and
learn from - working with every level of teacher for every level of
student. I&amp;#39;m part of the teaching teams but I think I&amp;#39;m also going to
learn a lot.
&lt;/p&gt;
&lt;p&gt;
So, how is this happening? 
&lt;/p&gt;
&lt;p&gt;
One project I&amp;#39;m working on, entering its second year is a &lt;a href=&#34;https://cestlaz.github.io/post/ct-in-primary-grades/&#34;&gt;project&lt;/a&gt; on
computational thinking in the early grades. &lt;a href=&#34;https://twitter.com/yadavaman&#34;&gt;Aman Yadav&lt;/a&gt; and I, with the
support of the Robin Hood Foundation will be working with primary
grade teachers to develop experience that both teach computational
thinking and use CT to support the core subject areas. As we had last
time, we&amp;#39;ll have both working teachers and pre-service teachers - that
is, Hunter students close to earning their teaching degrees and
certifications. In the Fall, the pre-service teachers will student
teach under the supervision of the working teachers in our
program. 
&lt;/p&gt;
&lt;p&gt;
Based on what we did last year I&amp;#39;m convinced that this years cohort
will get a lot out of the experience but I&amp;#39;m also convinced that the
workshop still faces the limitations of any professional development
style training - short duration, one shot, and no long term
support. PD can be valuable but I&amp;#39;m 100% convinced it&amp;#39;s not the answer
in terms of preparing CS teachers. At the end of the workshop, our
teachers will have learned something about CT, be more comfortable
with it, and have designed some lessons that they&amp;#39;ll deliver in the
Fall. It&amp;#39;s a start but it&amp;#39;s not the end. 
&lt;/p&gt;
&lt;p&gt;
The game changer brings me to the other group of people
participating - four full time Hunter Faculty members. They all teach
in our School of Education. The aim is to see where we can add CT to
our pre-service classes. This moves the needle. If we do it right,
soon enough, every Hunter College primary grade teaching candidate
will be learning about Computational Thinking in their required Ed
classes. That&amp;#39;s how you do it - get it into pre-service.
&lt;/p&gt;
&lt;p&gt;
So, that has me working with pre-service and in-service teachers as
well as full time research faculty. That&amp;#39;s a lot of levels of
educators but it&amp;#39;s not all the grades.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s the other project we&amp;#39;re kicking off on Monday and one that I
plan to write a lot about over the next month and into next year. 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re finally kicking off our Computer Science Teacher certification
program. We&amp;#39;ve got a cohort of a little over 20 teachers that will
take part in a month long intensive followed by more coursework in
the Fall. When they&amp;#39;re done, they&amp;#39;ll be among the first certified
computer science teachers in New York State. The cohort consists
mostly of High School teachers but we&amp;#39;ve got some middle school in
there as well. 
&lt;/p&gt;
&lt;p&gt;
This too is a game changer. We&amp;#39;re not giving a curriculum to follow or
scripts to copy but rather we&amp;#39;re teaching serious CS and how to teach
it. Of course it doesn&amp;#39;t hurt that the cohort is comprised of strong,
experienced teachers. 
&lt;/p&gt;
&lt;p&gt;
So there it is - all the levels of teachers to all the levels of
students. I&amp;#39;m super excited to be part of both of these game changing
projects and can&amp;#39;t wait for Monday when we get to work.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why are police held to such a lower standard than teachers?</title>
      <link>https://cestlaz.github.io/post/teachers-police-2/</link>
      <pubDate>Fri, 19 Jun 2020 12:36:04 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachers-police-2/</guid>
      <description>&lt;p&gt;
My friend Neal Zupancic, actually former student, friend, and long
time teacher Neal Zupancic posted this on Facebook. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s 100% spot on. I&amp;#39;d add my two cents but Neal captured it better
than I ever could. 
&lt;/p&gt;
&lt;p&gt;
Take a minute to read it:
&lt;/p&gt;
&lt;p&gt;
In my ten years of teaching, I&amp;#39;ve dealt with a number of situations
that could have potentially turned dangerous.  I&amp;#39;ve taught in public
schools and private; urban schools and rural.  I have de-escalated
every last one of those situations.  I have never once used force.  I
once broke up a fist fight using only my voice and my presence.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never felt the need to announce that before, because it&amp;#39;s just a
part of my profession.  Every teacher knows it and most of the public
knows as well.  And there are teachers who have been in far more
dangerous situations than I have.  Teachers who deal with gang
activity, drug dealers, kids who bring weapons to school with the
intent to use them, kids who fight and don&amp;#39;t necessarily stop when you
show up.  I know teachers who have been assaulted by students.  I know
teachers who have been threatened by students, including with deadly
weapons.  Every teacher is expected to deal with every one of these
situations without using force or violence.  Some of us are
well-trained, and some of us are thrown in and just go on instinct.
But we de-escalate.  We calm.  We soothe.  We help.  We repair and
restore the community.  We heal people.  We build an environment in
which those we are responsible for can thrive.
&lt;/p&gt;
&lt;p&gt;
I keep seeing people ask &amp;#34;who would want to be a cop if you could get
fired for doing your job?&amp;#34;  But literally any teacher could do that
job without killing people.  Literally any teacher would have had the
patience to talk George Floyd into getting into that police car
instead of tossing him on the ground and murdering him.  Literally any
teacher would have let Rayshard Brooks get away rather than shooting
him dead, knowing that the system would provide accountability for his
resisting arrest and that you didn&amp;#39;t have to be his executioner.
Literally any teacher knows that by the time you are in a power
struggle with a student, you have already lost.
Literally. any. teacher.
&lt;/p&gt;
&lt;p&gt;
I hear these cops whining on social media and it sickens me.  They
wouldn&amp;#39;t last a day teaching.  And of course we see that when we see
how often cops in schools arrest kids for routine behavior problems
that teachers could have solved peacefully.  We already know cops
can&amp;#39;t handle teenagers without resorting to force.  We already know
cops in schools exacerbate racism and inequality - just like they do
outside of schools.
&lt;/p&gt;
&lt;p&gt;
And the reason for that is that we fire teachers who can&amp;#39;t control
their tempers.  We fire teachers who use force rather than let them
stay on the job and keep escalating that force until they kill
someone.  We &lt;strong&gt;weed out&lt;/strong&gt; the bad apples.  And no teacher would ever
dream of protesting or walking off the job in support of someone who
got fired for assaulting a student.  Are you kidding me?
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m reading posts in teacher&amp;#39;s groups about going back to school in
fall - or in some cases, in July or August to extend the school year -
without adequate protection from coronavirus, without enough room in
their halls and classrooms to socially distance, without funding for
hand sanitizer or wipes or masks, without training or PD on blended or
distance learning, without promised raises because municipalities have
lost tax revenue because of corona - and then I see cops who walk
around in body armor and work for departments that own tanks, whining
about how hard their jobs are because they&amp;#39;re finally catching flak
for shooting people, and it&amp;#39;s like - what are your priorities?  Where
is your perspective?  What kind of society do you expect to raise into
the next generation when you&amp;#39;ll fund a militarized occupying force
with impunity for homicide but you won&amp;#39;t buy teachers masks and
sanitizer during a pandemic?
&lt;/p&gt;
&lt;p&gt;
And teachers never, ever, ever whine like these cops do.  My
&lt;strong&gt;students&lt;/strong&gt; don&amp;#39;t even whine like these cops do.
&lt;/p&gt;
&lt;p&gt;
Seriously - where do they find these people?  Our job is a hundred
times harder and if we mess up even once the way cops do every day,
we&amp;#39;re out in a heartbeat.  And yet if I whined about it the way cops
whine about it, people would say &amp;#34;hey man, maybe you should stfu and
find a different job.&amp;#34;  And they&amp;#39;d be right.
&lt;/p&gt;
&lt;p&gt;
So to all the cops out there who think they have it rough: You ain&amp;#39;t
nothing compared to a teacher.  STFU and find a different job.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PSA on CSTA (NYC)</title>
      <link>https://cestlaz.github.io/post/psa-for-csta/</link>
      <pubDate>Wed, 17 Jun 2020 11:43:42 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/psa-for-csta/</guid>
      <description>&lt;p&gt;
Just a quick public service announcemnt.
&lt;/p&gt;
&lt;p&gt;
Up until now CSTA-NYC has been using Meetup to organize and advertise
events but now they&amp;#39;re moving over to using the CSTA site as their
platform. 
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re a CS teacher you should be a part of CSTA. There&amp;#39;s both a
free tier and a plus tier which costs $50 a year.  I&amp;#39;ve been a plus
member since that level became available. If you&amp;#39;re a NYC teacher, you
should join the CSTA NYC chapter. If you&amp;#39;re already coming to CSTA-NYC
events, you should still go to the CSTA web site and check to make
sure you&amp;#39;re part of the NYC chapter so that you don&amp;#39;t miss any
exciting announcements or events. 
&lt;/p&gt;
&lt;p&gt;
Read the tweet below for instructions:
&lt;/p&gt;
&lt;p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;NEWS: The NYC &lt;a href=&#34;https://twitter.com/csteachersorg?ref_src=twsrc%5Etfw&#34;&gt;@csteachersorg&lt;/a&gt; chapter is moving platforms from Meetup to CSTA&amp;#39;s membership site!&lt;br&gt;&lt;br&gt;1. Join CSTA at &lt;a href=&#34;https://t.co/ze7ix0491W&#34;&gt;https://t.co/ze7ix0491W&lt;/a&gt;&lt;br&gt;2. Select &amp;quot;CSTA NYC&amp;quot; in the Member Area&lt;a href=&#34;https://twitter.com/hashtag/cs4allnyc?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#cs4allnyc&lt;/a&gt; &lt;a href=&#34;https://twitter.com/diane_levitt?ref_src=twsrc%5Etfw&#34;&gt;@diane_levitt&lt;/a&gt; &lt;a href=&#34;https://twitter.com/csnyc?ref_src=twsrc%5Etfw&#34;&gt;@csnyc&lt;/a&gt; &lt;a href=&#34;https://twitter.com/CSforAllNYC?ref_src=twsrc%5Etfw&#34;&gt;@CSforAllNYC&lt;/a&gt; &lt;a href=&#34;https://twitter.com/UpperlineCode?ref_src=twsrc%5Etfw&#34;&gt;@UpperlineCode&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ed_saber?ref_src=twsrc%5Etfw&#34;&gt;@ed_saber&lt;/a&gt; &lt;a href=&#34;https://twitter.com/learningdrive?ref_src=twsrc%5Etfw&#34;&gt;@learningdrive&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ronsummersnyc?ref_src=twsrc%5Etfw&#34;&gt;@ronsummersnyc&lt;/a&gt; &lt;a href=&#34;https://t.co/5KBHeErZPT&#34;&gt;pic.twitter.com/5KBHeErZPT&lt;/a&gt;&lt;/p&gt;&amp;mdash; Tom O&amp;#39;Connell 🏳️‍🌈 (@mrtomocon) &lt;a href=&#34;https://twitter.com/mrtomocon/status/1273276485638504455?ref_src=twsrc%5Etfw&#34;&gt;June 17, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A new book on teaching CS in K12 - and I wrote a chapter!!</title>
      <link>https://cestlaz.github.io/post/in-a-book/</link>
      <pubDate>Mon, 15 Jun 2020 07:08:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/in-a-book/</guid>
      <description>&lt;p&gt;
I was involved in a really exciting project a few months ago and now
that it&amp;#39;s available, it&amp;#39;s time to tell everyone about it.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a new book on teaching CS in K12 - &lt;a href=&#34;https://www.shuchigrover.com/atozk12cs/&#34;&gt;Computer Science in K12&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
I got an email a few months ago from &lt;a href=&#34;https://twitter.com/shuchig&#34;&gt;Shuchi Grover&lt;/a&gt;. Okay, actually a
DM over twitter. I hadn&amp;#39;t officially met Shuchi although I&amp;#39;m pretty
sure we&amp;#39;ve been at the same table or group in a conference or two but
I did know her from reputation. Shuchi was putting together a book on
teaching CS in K12 and asked if I was interested in contributing a
chapter. I was flattered and honored and since I&amp;#39;ve never written a
chapter in a book I agreed. 
&lt;/p&gt;
&lt;p&gt;
The book&amp;#39;s made up of 26 chapters with a who&amp;#39;s who of authors
including teachers, professors, researchers, and other CS Ed adjacent
professionals. Check out the full &lt;a href=&#34;https://www.shuchigrover.com/atozk12cs/authors/&#34;&gt;cast of characters&lt;/a&gt;. It was cool to
see many friends involved in the project. It should be a welcome
addition since I don&amp;#39;t think there&amp;#39;s anything like in currently out. 
&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t read the full book - I&amp;#39;m anxiously awaiting my copy to
arrive but with chapter titles ranging from concepts like &amp;#34;Data Structures&amp;#34; and
&amp;#34;Repetition and Recursion&amp;#34; to techniques like &amp;#34;Questions and Inquiry&amp;#34;
and &amp;#34;Guided Exploration Through Unplugged Activities&amp;#34; it should be a
really valuable resource to teachers rather than just a book to use in
a class and keep on the shelf.
&lt;/p&gt;
&lt;p&gt;
I worked on the chapter on functions. Once again I was paired with my
long time partner in crime JonAlf Dyrland-Weaver. Jens Monig, whom I
hadn&amp;#39;t known prior also worked on the chapter contributing the drag
and drop material - something that neither JonAlf nor I felt
particularly comfortable with doing ourselves.
&lt;/p&gt;
&lt;p&gt;
One weird thing, though it makes sense, was that I never interacted
with most of the other authors - just my chapter co-authors and
Shuchi. Nothing wrong with it but given the number of friends working
on the book and a chance to meet new friends it would have been great
to have something like a meetup at SIGCSE had it happened. On the
other hand, working with Shuchi was terrific. This not only gave me a
chance to contribute to a book but it also got us together and now I
look forward to future collaborations.
&lt;/p&gt;
&lt;p&gt;
The other big take away for me was that writing the chapter was
fun. I&amp;#39;ve been playing with the idea of writing a book on teaching CS
but wasn&amp;#39;t sure I&amp;#39;d enjoy the process. Now I think I might and I might
get started in August when I think I&amp;#39;ll finally have some project
time. What do all of you think? 
&lt;/p&gt;
&lt;p&gt;
For now, check out &lt;a href=&#34;https://www.shuchigrover.com/atozk12cs/&#34;&gt;Computer Science in K-12&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Just released on Amazon in &lt;a href=&#34;https://www.amazon.com/Computer-Science-K-12-Z-Programming/dp/1734662700/&#34;&gt;Color&lt;/a&gt; and &lt;a href=&#34;https://www.amazon.com/dp/1734662719/&#34;&gt;Black and White&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 73 - Ripgrep and updating the blog</title>
      <link>https://cestlaz.github.io/post/using-emacs-72-rg/</link>
      <pubDate>Sun, 14 Jun 2020 11:58:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-72-rg/</guid>
      <description>&lt;p&gt;
As I said in my &lt;a href=&#34;As I mentioned in my &#34;&gt;last post&lt;/a&gt;, I&amp;#39;m moving to a new Hugo theme. I decided
on &lt;a href=&#34;https://github.com/mitrichius/hugo-theme-anubis&#34;&gt;Anubis&lt;/a&gt;. It&amp;#39;s simple and clean. Unfortunately, in this change over,
many things broke. Specifically, all my embedded html. Using earlier
version of Hugo I could directly embed HTML and it would render. Now I
have to bracket the HTML with special org markup - &lt;strong&gt;#+begin_export html&lt;/strong&gt; and &lt;strong&gt;#+end_export html&lt;/strong&gt;. 
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
#+begin_export html
&amp;lt;h1&amp;gt;html stuff to render goes in here &amp;lt;/h1&amp;gt;
#+end_export
&lt;/pre&gt;
&lt;p&gt;
Minimally I had to find all my embedded videos and all my embedded
Tweets. There&amp;#39;s probably a lot more. Fortunately with Emacs this is
pretty easy. I used &lt;a href=&#34;https://github.com/dajva/rg.el&#34;&gt;rg.el&lt;/a&gt; which is an Emacs front end to &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt;. If
you don&amp;#39;t know ripgrep, it&amp;#39;s kind of like a super fast, super enhanced grep on
steroids. 
&lt;/p&gt;
&lt;p&gt;
In Emacs, I was able to do a ripgrep search which created a buffer
containing all the embedded html fragments from all my blog posts
across all the directories. I then used Emacs&amp;#39; &lt;a href=&#34;https://github.com/mhayashi1120/Emacs-wgrep&#34;&gt;wgrep&lt;/a&gt; feature which
allowed me to edit that combined buffer and save all the results back
to the original files. 
&lt;/p&gt;
&lt;p&gt;
All in all it just took a few minutes. There are still some things I
have to clean up from older posts but at least the site is workable now.
&lt;/p&gt;
&lt;p&gt;
Check out the video for a walkthrough:
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/OcR-Ke2CiPo&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Time For A New Theme</title>
      <link>https://cestlaz.github.io/post/time-for-a-new-theme/</link>
      <pubDate>Sat, 13 Jun 2020 09:03:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/time-for-a-new-theme/</guid>
      <description>&lt;p&gt;
While setting up my &lt;a href=&#34;https://cestlaz.github.io/post/pinebook-update/&#34;&gt;Pinebook Pro&lt;/a&gt; I wanted to make sure I could write
blog posts. &lt;a href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; and &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; installed and ran no problem but I switched to
Hugo in April 2020 back when it was version .49 or something like
that. Now it&amp;#39;s up to .73. It turns out there have been a few
changes. First, I set up my blog with two directories for posts. One
for the posts I wrote originally in Jekyll and one for the ones I
wrote for Hugo. I had to make a few changes to get that to work with
the new version.
&lt;/p&gt;
&lt;p&gt;
I also discovered that my archive page no longer works under the
current version of Hugo. As I poked around a little more, it turns out
that HTML embedding changed so I&amp;#39;m going to have to tweak all my Emacs
posts as well as posts where I embed tweets or other content.
&lt;/p&gt;
&lt;p&gt;
All of this is to say that some or maybe many of my older posts will
be wonky until I can get around to fixing them. 
&lt;/p&gt;
&lt;p&gt;
Rather than figuring out how to fix them under my current blog theme I
figured it was also a good time to explore a new Hugo theme so don&amp;#39;t
be surprised if the overall look here changes a few times over the
next few posts.
&lt;/p&gt;
&lt;p&gt;
Hopefully I&amp;#39;ll be able to get everything working again sooner rather
than later.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Supporting Our Students</title>
      <link>https://cestlaz.github.io/post/supporting-our-students/</link>
      <pubDate>Fri, 12 Jun 2020 12:22:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/supporting-our-students/</guid>
      <description>&lt;p&gt;
Austin Cory Bart put together a great &lt;a href=&#34;https://acbart.github.io//2020/06/10/race-in-cs1/&#34;&gt;post&lt;/a&gt; about supporting Black
students in CS1. Cory asked about this on the SIGCSE mailing list and
in his post he both breaks things down and shares all the resources
that he compiled from the ensuing discussion. 
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot of good stuff both in the post and in the links but
there&amp;#39;s a lot to get lost in. As teachers we can sometimes affect
change at a department or school level but we can always make a
difference in our classes and with our students.
&lt;/p&gt;
&lt;p&gt;
I titled this post &amp;#34;Supporting Our Students&amp;#34; and not &amp;#34;Supporting Black
Students.&amp;#34; I&amp;#39;m certainly &lt;strong&gt;not&lt;/strong&gt; pulling any all lives matter BS but
rather reflecting back on something that shaped my approach with my
students and started to open my eyes and that specific experience for
me was an all students experience.
&lt;/p&gt;
&lt;p&gt;
I cut my teach at Seward Park High School down on the Lower East
Side. It was a high poverty school and a very diverse one. I had
top flight honors students, criminal thugs, druggies, sweet kids whom
the system failed and everything else you can imagine. The main groups
were classified back then as Chinese and Hispanic and then Black then
White but within those groups there were subdivisions. Shortly before
I got the gig the school had brokered an in school truce between the
factions of Chinese gangs and while the term of the day was
Hispanic the students were from a variety of places.
&lt;/p&gt;
&lt;p&gt;
One day I was talking to a guidance counselor in the hall. We didn&amp;#39;t
know each other - I shanghaied her in another conversation - I had
something to ask. She said &amp;#34;wait - you&amp;#39;re Zamansky right?&amp;#34; Yep. &amp;#34;I was
wondering who you were, all the students want to be in your class.&amp;#34; I
was confused. I wasn&amp;#39;t super popular - I was just in about a year and
a half. I also wasn&amp;#39;t so good. I&amp;#39;d rate myself as an above average
very raw young teacher but that&amp;#39;s about it. She explained that I was
one of the only teachers where students from all the population groups
wanted to be in my class. The Hispanic students, for instance all
wanted to be in Pablo Chang&amp;#39;s math class, the Chinese in another
teachers but apparently I appealed to everyone equally. 
&lt;/p&gt;
&lt;p&gt;
I started to think about why that might be the case and it got me
thinking about what I had learned in my short time teaching. Prior to
teaching I led a pretty sheltered life. I went to public school up
until college and had a pretty diverse group of friends but as a kid
you can be pretty oblivious to economic and race related
differences. As an adult I went to a private college, NYU, and started off
at Goldman Sachs. Not exactly a recipe for awareness. I quickly
realized that not all kids learned the same, thought the same and
going further, lived the same.
&lt;/p&gt;
&lt;p&gt;
It taught me that it&amp;#39;s not merely about talking to your students, it&amp;#39;s
about listening to them. Given time and the chance, they&amp;#39;ll open up
and you&amp;#39;ll learn about their challenges. When it seems there giving
you a song and dance, don&amp;#39;t assume they&amp;#39;re trying to pull a fast
one. Give them the benefit of the doubt. You&amp;#39;ll get burned now and
again by a kid taking advantage but things have a way of coming clean
and if you don&amp;#39;t give the kid the benefit of the doubt you can
irreparably harm your relationship. Trust is key in
education.  Besides I&amp;#39;ve been burned way more by giving the benefit of
the doubt to people professionally than as a teacher and at the end of
the day I&amp;#39;d rather lose sleep angry over being taken advantage of than
lose sleep feeling guilty for damaging my relationship with a student
for the wrong reasons.
&lt;/p&gt;
&lt;p&gt;
If you treat your students like people - young people but  people
nonetheless and earnestly listen and try to learn from them and learn
about them that&amp;#39;s your guide. I&amp;#39;m not saying I&amp;#39;m particularly good at
helping my kids - I&amp;#39;m your stereotypical socially awkward computer
geek but the more I listened the more I understood the individual
issues my students had to deal with. My Black students, my immigrant
students, my poor students and all the rest. Sure there were common
themes but every one has a unique story.
&lt;/p&gt;
&lt;p&gt;
While we teach our assorted subjects to our students really at the end
of the day more so than teaching any specific computer science I hope
to be a force for good in their lives and their development as
people. The best way I can do that is to listen, try to learn, try to
understand and then try to help and support.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Quick Pinebook Pro update</title>
      <link>https://cestlaz.github.io/post/pinebook-update/</link>
      <pubDate>Wed, 10 Jun 2020 17:10:51 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pinebook-update/</guid>
      <description>&lt;p&gt;
Since posting about my new &lt;a href=&#34;https://cestlaz.github.io/post/pinebook/&#34;&gt;Pinebook Pro&lt;/a&gt; I&amp;#39;ve gotten a few questions as
it pertains to teaching CS so I thought I&amp;#39;d give a quick update.
&lt;/p&gt;
&lt;p&gt;
In terms of software here&amp;#39;s what I&amp;#39;ve actually gotten working: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
libreoffice (comes preinstalled)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
C/C++ toolchain (manjaro package install)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Java (manjaro package install)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Emacs (built from scratch and manjaro install)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
NetLogo (had to customize the startup script as per the NetLogo
FAQ)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Racket (had to compile from source)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I&amp;#39;ve also heard the VSCode works with no issues.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also manjaro which is a little different from Ubuntu which is
probably more well known. I installed a program named &lt;a href=&#34;https://computingforgeeks.com/yay-best-aur-helper-for-arch-linux-manjaro/&#34;&gt;yay&lt;/a&gt; for
package management which also gave me access to the community packages
(like extra repos for Ubuntu). 
&lt;/p&gt;
&lt;p&gt;
The biggest difference I&amp;#39;ve had between Manjaro and Ubuntu is with
Ubuntu I&amp;#39;d search for packages with &lt;code&gt;apt-cache search package&lt;/code&gt; and
install with &lt;code&gt;apt-get install package&lt;/code&gt; while with yay it&amp;#39;s &lt;code&gt;yay -Ss
package&lt;/code&gt; then &lt;code&gt;yay -S package&lt;/code&gt;. It&amp;#39;s a little more nuanced but it
isn&amp;#39;t harder, just different.
&lt;/p&gt;
&lt;p&gt;
The other difference is that the Pinebook is set up with Manjaro
running KDE plasma which is a different interface but all common
windowing interfaces are fairly similar.
&lt;/p&gt;
&lt;p&gt;
A final point I want to mention is that the Pinebook Pro price of
$200 represents the cost of the unit. The Pine64 people don&amp;#39;t make any
money on this. It&amp;#39;s about getting the units out there and building a
community. First, this means that you won&amp;#39;t be able to go online and
order class sets of these (at least I don&amp;#39;t think you&amp;#39;d be able to do
so) and that if a device such as this were made by a tradional vendor
it would cost at least a bit more so that they could make a hopefully
fair profit. 
&lt;/p&gt;
&lt;p&gt;
That said, this is a very functional Linux laptop for around $200. It
proves what you can do and After a few days use I highly recommend it.
&lt;/p&gt;
&lt;p&gt;
$200
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pinebook Pro - an $200 Linux Laptop</title>
      <link>https://cestlaz.github.io/post/pinebook/</link>
      <pubDate>Sun, 07 Jun 2020 17:24:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pinebook/</guid>
      <description>&lt;p&gt;
I&amp;#39;m writing this on my new &lt;a href=&#34;https://www.pine64.org/pinebook-pro/&#34;&gt;Pinebook Pro&lt;/a&gt; - a $200 ARM based Linux
laptop. The Pinebook Pro comes from the &lt;a href=&#34;https://www.pine64.org/&#34;&gt;Pine64&lt;/a&gt; project. As you could
figure out, they do the Pine64 which is similar to a Raspberry Pi and
they&amp;#39;ve got some cool projects. In addition to the Pinebook pro
they&amp;#39;ve also got the Pine Tab and Pine Phone and more. Now, you&amp;#39;re not
going to be able to go to their site and say &amp;#34;I need 30 of these for
my class&amp;#34; - at least not for the Pinebook pro but it is a pretty cool
proof of concept and hobbyist machine and it shows that we could have
affordable devices for our schools and less afluent students. 
&lt;/p&gt;
&lt;p&gt;
I got the PbP out of curiousity and also to see if I could find a low
cost solution for Hunter College students. All of my honors students
get laptops but the rest of Hunter CS is on their own so a low cost
device is pretty attractive.
&lt;/p&gt;
&lt;p&gt;
The specs are pretty decent - 1080P 14&amp;#34; screen, 4GB of memory, 64GB
mmc (upgradeable), USB-C, long battery life and more. They claim that
it can drive an external 4k monitor but I haven&amp;#39;t tested this yet.
&lt;/p&gt;
&lt;p&gt;
So, does it deliver?
&lt;/p&gt;
&lt;p&gt;
Overall yes but with a few caveats. It&amp;#39;s still on the side of a
tinkerer/hobbyist device.
&lt;/p&gt;
&lt;p&gt;
Out of the box it seemed DOA - it wouldn&amp;#39;t boot. I found in the forums
that there&amp;#39;s an emmc enable switch inside that sometimes ended up in
the off position. I had to take out the eight screws from the bottom,
pop the case and flip the switch. Seems like that&amp;#39;s something that
could have been caught before they closed the cases but it wasn&amp;#39;t too
big of a deal. It is, however a deal breaker for a novice.
&lt;/p&gt;
&lt;p&gt;
From there it booted fine. Right into Manjaro Linux running
KDE. Everything seemed to work. Next I tried to boot of an SD card -
Debian this time. Worked like a charm though the distribution kept
dropping WIFI.
&lt;/p&gt;
&lt;p&gt;
Back to Manjaro. Being a Linuxmint user and having not used Manjaro in
about two years it took a bit of time to get the lay of the land but
just about everything worked. I installed syncthing which I use
instead of dropbox, zsh, and built Emacs from source. It took forever
but worked. Well, worked with some font problems. I ended up installing
Emacs 27 from the Manjaro repositories and everything went
seemelessly. Even though I ended up not using the source built Emacs
it did show that the G++ toolchain all worked well.
&lt;/p&gt;
&lt;p&gt;
I also tested Java and Clojure. No problems though starting Clojure
seemed to take a day and a half. 
&lt;/p&gt;
&lt;p&gt;
Other tests included installing the Cinnamon and Mate desktop
environments. The only thing I haven&amp;#39;t been able to install
succesfully has been a VPN. On the battery front, I haven&amp;#39;t used it
long enough in a sitting to put a dent in it.
&lt;/p&gt;
&lt;p&gt;
Now, at $200, this isn&amp;#39;t going to be a speed demon. My default config
does a bunch of things so even opening a terminal with zsh has some
lag. Once loaded though things are smooth. I would have loved more
memory but 4GB seems sufficient for day to day stuff and student work.
&lt;/p&gt;
&lt;p&gt;
Will his become my day to day laptop? I don&amp;#39;t know. I think if I can
slim down some of my config it might.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re looking for an innexpensive Linux laptop and are comfortable
tinkering and reading some forums check out the Pinebook. If it was an
option, I&amp;#39;d love to get these for my students instead of the
overpriced Dells we have to get them every year.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers and Police</title>
      <link>https://cestlaz.github.io/post/teachers-police/</link>
      <pubDate>Sun, 07 Jun 2020 10:56:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachers-police/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Teachers and Police 
&lt;/h2&gt;
&lt;p&gt;
It&amp;#39;s been an ugly few days but perhaps in some ways a hopeful few as
people have been making their voices heard like never before in my
lifetime. We&amp;#39;ve seen and endless stream of videos of peaceful protest
and far too many instances of police officers overstepping their
bounds. I keep hearing about violent protesters but those videos seem
to be avoiding my feeds as are the videos of law enforcement going
after the looters who are a separate group from the protestors.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not comfortable getting on a soapbox about race relations in this
country. I want and strive to be an ally but I think my place is to
listen and support not dictate.
&lt;/p&gt;
&lt;p&gt;
Even so, we keep hearing about police accountability on one side that
they need their protections on the other. I thought I&amp;#39;d look at that
and compare the job of a police officer to that of a teacher. 
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
My experience
&lt;/h3&gt;
&lt;p&gt;
On the one side, I&amp;#39;ve been a teacher for close to 30 years. On the
police side? I&amp;#39;ve never been a cop but I was an auxiliary cop for a
while. I stopped soon after I went in to teaching. I was able to do it
while on Wall Street but teaching is just so much harder and more
draining that I didn&amp;#39;t have the energy. As an auxiliary cop I got a
bit of an inside view. I didn&amp;#39;t patrol the bad parts of the precinct
much - Manhattan Valley,  but I did a bit. I also got to interact with
the police and was listening to police radio during my tours so knew
what was or wasn&amp;#39;t going on.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Key Requirements
&lt;/h3&gt;
&lt;h4 id=&#34;headline-4&#34;&gt;
Police
&lt;/h4&gt;
&lt;p&gt;
Sixty college credits or military experience, pass a written and
physical test, psychological test and then the Police Academy.
&lt;/p&gt;
&lt;h4 id=&#34;headline-5&#34;&gt;
Teachers
&lt;/h4&gt;
&lt;p&gt;
Masters degree, standardized tests, student teaching although the
quality ranges from rigorous preparation to fly by night TFA nonsense.
&lt;/p&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Perceptions
&lt;/h3&gt;
&lt;h4 id=&#34;headline-7&#34;&gt;
Police
&lt;/h4&gt;
&lt;p&gt;
On the one side you have police as heroes. This is probably to an
extend residual from 9/11 grouping them in with firefighters and
EMT. You&amp;#39;ll also hear that they face death every day and if there
weren&amp;#39;t protections like qualified immunity you&amp;#39;d never have anyone
sign up for the job. We also keep hearing that the &amp;#34;majority are good
cops&amp;#34; and &amp;#34;only a few bad apples.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
On the other side, ACAB.
&lt;/p&gt;
&lt;h4 id=&#34;headline-8&#34;&gt;
Teachers
&lt;/h4&gt;
&lt;p&gt;
On the one hand you&amp;#39;ll hear we&amp;#39;re the backbone of society and should
be paid more.
&lt;/p&gt;
&lt;p&gt;
On the other, we&amp;#39;re glorified babysitters who do nothing for pay and
pension. 
&lt;/p&gt;
&lt;h3 id=&#34;headline-9&#34;&gt;
Reality 
&lt;/h3&gt;
&lt;p&gt;
This post isn&amp;#39;t really about teaching so I&amp;#39;m not going to dwell on
that side other than as a comparison but education going remote has,
if nothing else, proven that teachers are anything but lazy
goodfornothings.
&lt;/p&gt;
&lt;p&gt;
On the police side, video evidence shows that a few bad apples do
indeed spoil the bunch and when both police commissioners and police
union chiefs and even mayors repeatedly lie, distort and omit you know
we need some real changes. I keep hearing about the police needing to
maintain order and acting reasonably but with all those body cameras
plus police officers specifically at protests to film and document I
haven&amp;#39;t seen anything backing the police line. 
&lt;/p&gt;
&lt;p&gt;
As to the police facing death every day? Yes, there&amp;#39;s always the
possibility of a bad encounter but in my time with the auxiliary I
can&amp;#39;t ever remember hearing a call for &amp;#34;officer needs assistance&amp;#34; nor
vary many intense situations. Most of the job was being in the
community. In fact, it turns out that most police officers go through
their entire careers &lt;a href=&#34;https://www.pewresearch.org/fact-tank/2017/02/08/a-closer-look-at-police-officers-who-have-fired-their-weapon-on-duty/&#34;&gt;never firing their weapon&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
At the same time, teachers in many schools face violence or the threat
of violence and are under no circumstances allowed to even touch a
student. We are supposed to deescalate. Is there a reason why police
can&amp;#39;t do the same? 
&lt;/p&gt;
&lt;h3 id=&#34;headline-10&#34;&gt;
On reform
&lt;/h3&gt;
&lt;p&gt;
Some people are calling for more training but I&amp;#39;m not one of
them. I&amp;#39;ve had corprorate, teacher, and city training. It&amp;#39;s all CYA
garbage. It doesn&amp;#39;t change behavior. Eric Garner was choked
in 2014. Chokeholds were banned by the NYPD in, I think around 1993
and you can bet that was in the &amp;#34;training&amp;#34; officers received. Training
reminds good people how to act. Training helps give you a tool if
you&amp;#39;re inclined to use it. Hire a thug and no training is going
to make them an angel. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m more on the defund side but that doesn&amp;#39;t just mean cut the
budget. Here are a few things I&amp;#39;d like to see:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Beat cops - this is something that David Dinkins did with
Commissioner Brown and they never get credit. They took the cop out
of the car and put them on the beat. On foot. Make them part of the
community they&amp;#39;re policing. Once they went back into the cars they
were out of the communities. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Better accountability - when the next contract comes around we need
our politicians to take a &lt;strong&gt;hard&lt;/strong&gt; line on accountability. Things like
community review boards, penalties for turned off cameras,
transparent records on police misconduct. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Make police accountable for bad behavior - while police need due
process, in the rare times there&amp;#39;s any accountability it&amp;#39;s usually
in terms of a payout to the public. This doesn&amp;#39;t affect the police
because it&amp;#39;s paid by the taxpayer. Let&amp;#39;s change that. The city
contributes to police pensions. Let&amp;#39;s reduce that as needed to pay
for settlements. If not, how about start with the police salary
scale and adjust it annually to pay for settlements. Make those
responsible feel it.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The sad thing is that unless the protests continue there might not be
change. I fear that we&amp;#39;ll get a few speeches and some surface changes
when we need fundamental change. The solutions aren&amp;#39;t hard but we
need people in power who will actually implement them. de Blasio came
to office claiming to be a progressive but he caved to the police
force at the first signs of resistance. We need to put up candidate
who will actually represent the people and make changes and then we
actually have to get out and vote them in.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Before condemning try walking in their shoes</title>
      <link>https://cestlaz.github.io/post/privilege/</link>
      <pubDate>Tue, 02 Jun 2020 19:20:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/privilege/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve got some CS Ed stuff I want to write but can&amp;#39;t bring myself to
writing about it today. I rarely post outside of my wheelhouse - CS,
Education and the intersection of the two.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t really think I&amp;#39;m qualified to say much about the current
crisis. The out of control police, racism, class warfare, a failed
government not only at the federal level but also in New York city and
state but maybe I can share something worthwhile from my narrow
experiences.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been seeing too many posts and tweets about the protests
condemning any rioting. I&amp;#39;ve never promoted violence but still I
thought I might have something to say.
&lt;/p&gt;
&lt;p&gt;
The important background piece is that for those of us who are white
and who grew up with some level if privilege, it&amp;#39;s hard for us to
really understand the what oppressed people suffer.  
&lt;/p&gt;
&lt;p&gt;
I started life in a somewhat well to do family, I attended private
school through first grade, then my parents pulled me and my
siblings out for public school - somethingn for which I&amp;#39;m now
grateful. Shortly after, my dad got sick, lost his job and later passed
away. That left my mom raising 3 kids on a teachers salary. On the one
hand we had the apartment, on the other I wore hand-me-downs. I worked
my way through school and payed &amp;#34;rent&amp;#34; living at home not because I
wanted to but because we needed me to. So, we weren&amp;#39;t well to do but
although I didn&amp;#39;t realize it at the time, I possessed great privilege
both in terms of my skin color and also in terms of what my mom was
willing and more importantly able to sacrifice of herself for her
children. 
&lt;/p&gt;
&lt;p&gt;
As I got older my schools, though public were less reflective of
society. Populations were pretty diverse but I was brought up in
something of an intellectual bubble and under the belief it was a
meritocracy.
&lt;/p&gt;
&lt;p&gt;
After school and a stint on Wall street, I went to teach at Seward
Park. What an awakening. It was my first exposure to kids and families
living under far harsher circumstances than I. When I was a kid I
volunteered at a soup kitchen. I couldn&amp;#39;t reconcile the family that on
the one hand had to come to the kitchen for food while the family all
wore really expensive sneakers (I was wearing the $10 Alexander&amp;#39;s
special). As I got more exposed to &amp;#34;how the other half lived&amp;#34; I
learned that it was more complex. 
&lt;/p&gt;
&lt;p&gt;
While I went into teaching on a whim, as my career progressed I
realized more and more how important public education was and the job
became more of a mission. At the same time, as I learned more and more
about the populations that I tried to serve so that I could support them
and try to really know their circumstances. I realized that it&amp;#39;s really
hard to &amp;#34;get it.&amp;#34; I also realized that the more removed you are, the
higher up you are on the ladder, the harder it is. That&amp;#39;s not to say
that there aren&amp;#39;t many well to do people with huge hearts trying to
and doing good it&amp;#39;s just that I feel that the further you are from the
ground floor the harder it is to really understand the issues that the
ground floor people have to live with.
&lt;/p&gt;
&lt;p&gt;
So, this brings us back to the protests and the rioting. 
&lt;/p&gt;
&lt;p&gt;
Separating out the protesters and rioters we really have 4 types of
rioters:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Criminals - people who are going to riot and loot whenever the
opportunity presents itself. Remember Philly after the Eagles won
the Superbowl?  These people are just criminals.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Riots resulting from police instigators - well, we should condemn
the police and not their victims and we&amp;#39;ve seen a bunch of video
evidence of this.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Riots resulting from white agitatos - same as the previous point. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Riots from within the protest group.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
That last group - group 4 are the only ones who are part of the
protest groups but let&amp;#39;s not be so fast to condemn them. It&amp;#39;s easy for
those of us of privilege to point fingers and say &amp;#34;shame on you,
protest peacefully&amp;#34; but where has that gotten them? We were talking
about this earlier and I was trying to remember an earlier victim of
police brutality. I was thinking of Rodney King 20 years ago but was
blanking on the name. Devorah rattled off names walking back the
years. Two decades, countless abuses and nothing changed with
peaceful protest. There comes a time when you feel you&amp;#39;re out of
options. It&amp;#39;s easy for us to point and condemn but very hard to
understand. 
&lt;/p&gt;
&lt;p&gt;
Am I promoting violence? No. I feel bad about innocents hurt and small
business owners who&amp;#39;s property has been damaged but what about the
lives that have been lost or destroyed due to police abuse and
government inaction and in fact government support?
&lt;/p&gt;
&lt;p&gt;
There are solutions. &lt;a href=&#34;https://www.joincampaignzero.org/#vision&#34;&gt;Campaign Zero&lt;/a&gt; has a lot of info on how to reform
policing. We also have to fully fund schools and actually deal with
poverty rather than make it a crime.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have any inspirational message here or any real answers. The
work goes on. I&amp;#39;ll continue my work in public education try to support
my students and understand them and their challenges more and more and
try to be a better ally to those less privileged than I. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pro Version Or Education Version</title>
      <link>https://cestlaz.github.io/post/pro-version-or-ed-version/</link>
      <pubDate>Fri, 29 May 2020 19:00:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pro-version-or-ed-version/</guid>
      <description>&lt;p&gt;
I woke up to this tweet by Mark Guzdial today:#pro-version-or
ed-version.org#
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;An indication
that CS Ed in US high schools is about vocational training: 2 (of 5)
recommended sessions at the &lt;a
href=&#34;https://twitter.com/csteachersorg?ref_src=twsrc%5Etfw&#34;&gt;@csteachersorg&lt;/a&gt;
conference are on Github and Agile. Is &lt;a
href=&#34;https://twitter.com/CSforALL?ref_src=twsrc%5Etfw&#34;&gt;@CSforAll&lt;/a&gt;
a Silicon Valley jobs program? &lt;a
href=&#34;https://t.co/n8ugnmTU84&#34;&gt;https://t.co/n8ugnmTU84&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Mark Guzdial (@guzdial) &lt;a
href=&#34;https://twitter.com/guzdial/status/1265986599952822272?ref_src=twsrc%5Etfw&#34;&gt;May
28, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
This led to a lively discussion throughout the day with lots of likes
and lots of comments. Two themes emerged. One wondered if the CSTA
conference should be highlighting these talks about professional
sensibilities and the other questioned the use of tools designed for
industry vs those designed for schools.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at the former first. For full disclosure JonAlf and I are
co-presenters of the GitHub session that was highlighted. Truth be
told I had no idea it was highlighted until I read Mark&amp;#39;s tweet
:-). CSTA is a conference for teachers, K12 teachers. Teachers go
to learn new practices. Sure there are sessions about advocacy and
the like but
it&amp;#39;s really more like a multi day professional development session on
steroids. That&amp;#39;s one of the things that makes it so wonderful. If a
session gives teachers something of value it&amp;#39;s worth presenting. It
can be what they teach, how they teach, or something ancillary to
teaching even things as mundane as gradebook management. If it helps
make a CS teacher better, it&amp;#39;s appropriate to include. 
&lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t say why any particular session was chosen for highlight
but it really isn&amp;#39;t a big deal. There are always sessions on specific lesson
ideas, cross curricular stuff, ethics, standards, equity, CS4All,
APCS, and lots lots more. 
&lt;/p&gt;
&lt;p&gt;
Now, what I&amp;#39;d like to see would be a banner on the conference page
where every time you go there it displays a random assortment of
sessions that are being offered. 
&lt;/p&gt;
&lt;p&gt;
What about the second point - professional tools or educational ones. First
let&amp;#39;s lump things together, git is a tool, so is GitHub. Same for
agile - it&amp;#39;s a tools as are programming languages. Now a great
craftsman is a great craftsman but their job is a whole lot easier
with a full chest of quality tools. 
&lt;/p&gt;
&lt;p&gt;
If a professional tool makes a teacher better it&amp;#39;s worth learning. 
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at agile. I&amp;#39;ve never used terms like scrum or sprint in my
class but pair programming comes out of agile and that&amp;#39;s become a
mainstay of CS classes. Same thing for the short development cycle and
all the testing. These are agile concepts that we take for granted as
education tools. Are we going to use everything about agile in every
CS class? No. Does it belong in CS when CS is embedded in other
subject areas? Who knows but if a teacher gets exposed to it at CSTA
then they can make an informed decision and use it when and as
appropriate. 
&lt;/p&gt;
&lt;p&gt;
What about git/GitHub? I wouldn&amp;#39;t teach using it when CS is embedded
but I might in a HS programming course and I certainly would in APCS-A
or beyond. I&amp;#39;ve found that there are many positives of using them and
I&amp;#39;ve written about it before on this blog. 
&lt;/p&gt;
&lt;p&gt;
The truth is that both git and agile provide ways of increasing
student communication and collaboration and these are good things.
&lt;/p&gt;
&lt;p&gt;
Even if I decided that my classes shouldn&amp;#39;t use git, I&amp;#39;d still use it
for my web presence and to distribute materials and that too makes it
worth learning.
&lt;/p&gt;
&lt;p&gt;
Just because a tool came from industry it&amp;#39;s not
necessarily bad and if it came fro education it&amp;#39;s not necessarily
good. 
&lt;/p&gt;
&lt;p&gt;
Thonny is a beginner Python IDE. It was designed specifically to be a
learner environment. It&amp;#39;s great for that. Eclipse is a professional
IDE and I hate it for education. Other people disagree with me on both
counts.
&lt;/p&gt;
&lt;p&gt;
On the other hand I&amp;#39;ve seen tools written by people in education that
are god awful.
&lt;/p&gt;
&lt;p&gt;
Then you also have well designed education tools but they fill a
narrow niche - they&amp;#39;re so specialize that a teacher and student can
only use them in a specific case. A teacher then needs to find
multiple tools for their multiple classes and students need to learn
even more.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s assume we have a bunch of these educational tools and their all
pretty well designed and help students get to whatever it is they&amp;#39;re
supposed to learn. Taken individually each tool seems great but taken
as a whole? Where&amp;#39;s the line? Is it better to have the teacher learn
and support a handful of these and students learn even more or should
they spend more time/efforn to learn one or two tools where the tool
will beuseful beyond the narrow scope of the specialized one.
&lt;/p&gt;
&lt;p&gt;
The answer is of course, it depends.
&lt;/p&gt;
&lt;p&gt;
I was part of a workshop this past summer and this came up. We were
looking at a pretty sweet specialized tool that worked really well for
one niche area. We also looked at Google Sheets which were less
intuitive but more versatile and universal. Which to use? We never
came up with a compelling answer either way. 
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s nothing inherently bad about industry tools and there&amp;#39;s
nothing inherently good about educational ones. It&amp;#39;s true that
industry tools are designed for industry but education tools are by
and large not designed by teachers. They might be designed by people
who teach as part of their job or who have taught but that&amp;#39;s not the
same thing. Sometimes they hit but sometimes they miss their mark.
&lt;/p&gt;
&lt;p&gt;
In math class we would typically draw arcs and circles on the board
with a giant chalk compass. It was specifically designed for
education. You know what works better? A shoelace.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Future consequences of today&#39;s grading policies</title>
      <link>https://cestlaz.github.io/post/grading-consequences/</link>
      <pubDate>Wed, 27 May 2020 07:08:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/grading-consequences/</guid>
      <description>&lt;p&gt;
How are we going to deal with grades? 
&lt;/p&gt;
&lt;p&gt;
This has garnered a lot of attention since COVID-19 struck.  Over on
the AP side people wonder if colleges will give credit? Do the tests
mean anything? What about the material they won&amp;#39;t be testing? We also
have had standardized tests canceled and a variety of grading
policies.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m going to stay away from AP this time around - you all know my
feelings about the college board. I will leave you with a couple of
good posts though that share many of my views (&lt;a href=&#34;https://www.insidehighered.com/admissions/views/2020/05/26/ap-courses-do-not-deserve-college-credit-opinion&#34;&gt;AP Courses don&amp;#39;t
deserve college credit&lt;/a&gt;,&lt;a href=&#34;https://jd2718.org/2020/05/18/retiring-advanced-placement/&#34;&gt; Retiring Advanced Placement&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
The bottom line is that student and teachers lives have been severely
disrupted  since early March. In NYC public schools that means three
to four months which is a considerable chunk of the semester. In
college the percent is slightly less but it&amp;#39;s still a good chunk. 
&lt;/p&gt;
&lt;p&gt;
Some students have done fine but many have had difficulty and I&amp;#39;d
venture a guess to say most won&amp;#39;t end the semester in the same place
they would have under normal circumstances.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been thinking about this as a result of Hunter&amp;#39;s policy and I
don&amp;#39;t really have a good answer. 
&lt;/p&gt;
&lt;p&gt;
Hunter decided that instructors would award grades as they normally
would. Each instructor would follow their own counsel on how to
grade. Should they be super lenient due to circumstances? Extra hard
because of perceived cheating (don&amp;#39;t get me started on this), same old
same old or some other method. Once grades were awarded, students have
the ability to change any or all classes to pass/fail. Normally if a
student takes a class pass/fail it can&amp;#39;t be used as a prerequisite or
to fill a major requirement but for this past semester, it can. 
&lt;/p&gt;
&lt;p&gt;
Overall I like this policy - it gives the students most of the control
and they don&amp;#39;t have to decide on anything until after the fact. The
bad part comes in though with the any passed class counting as a
prerequisite of for the major. 
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s say I have a student in CS1 who was doing well but really
struggled at the end after we went remote. Maybe that student was
doing A or B work up to the switch but basically got nothing out of
the rest of the semester. I wouldn&amp;#39;t want to fail the student. Under
normal circumstances, we make the false assumption that the grade is
entirely the result of the student and factors surrounding the
student&amp;#39;s environment. Even if that assumption were 100% true the Covid
Curve Ball was not the students fault and the negative impact to their
studies could not only be due to their circumstances but also due to
actions of the college or the way the instructor reacted to the
circumstances. 
&lt;/p&gt;
&lt;p&gt;
With Hunter&amp;#39;s policy, I could award any passing grade - even a D and
the student could convert it to a Pass and move on to CS2. 
&lt;/p&gt;
&lt;p&gt;
The danger here is that the student might not be prepared for CS2. We
cover memory pointers, memory management, and classes at the end of
CS1. So much of CS2 is built on pointer based programs that a student
who missed out on that in CS1 is going to struggle mightily. 
&lt;/p&gt;
&lt;p&gt;
You might say that the kid could have retaken CS1 but there&amp;#39;s a wrench
in the works. If the kid failed CS1 they could retake it. With a Pass
they can&amp;#39;t. 
&lt;/p&gt;
&lt;p&gt;
A student could, with the permission of some instructor audit the
missed parts of CS1 or self study but we know that won&amp;#39;t always
happen.
&lt;/p&gt;
&lt;p&gt;
The alternative is to award a failing grade to the student which would
then hurt their GPA and force them to retake the entire course.
&lt;/p&gt;
&lt;p&gt;
You might say that the school could just adjust the curricula for next
year but it&amp;#39;s not that simple. In high school most students progress
in lockstep. In college there&amp;#39;s more variation. Next semester&amp;#39;s CS2
will have students who completed CS1 this past semester under the
cloud of COVID-19, students who completed it on the Fall, some from
summer and some from other places. This is where curricular
consistency is somewhat more important.
&lt;/p&gt;
&lt;p&gt;
I do like Hunter&amp;#39;s policy and I do think it&amp;#39;s on the side of the
student but I&amp;#39;m not happy about this loophole.
&lt;/p&gt;
&lt;p&gt;
This probably won&amp;#39;t affect a huge number of students but some will
fall through the cracks. As I said, I don&amp;#39;t have a good answer but it
is something I&amp;#39;m really concerned about.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zoom alternatives that aren&#39;t from MicroGoogle</title>
      <link>https://cestlaz.github.io/post/bigbluebutton/</link>
      <pubDate>Mon, 25 May 2020 16:33:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/bigbluebutton/</guid>
      <description>&lt;p&gt;
As we scrambled to move online in March we used what we knew, what we
heard of and what we were allowed. This usually meant Zoom, Google
Meet, or Microsoft Teams.
&lt;/p&gt;
&lt;p&gt;
I settled on Zoom. It worked and worked pretty well. There were a few
things I felt they could improve on but given that Zoom wasn&amp;#39;t
designed as a teaching tool I&amp;#39;ve been pretty happy with it.
&lt;/p&gt;
&lt;p&gt;
Now that the emergency rush has passed we have time to see if there
are some better alternatives. First up is &lt;a href=&#34;https://bigbluebutton.org/&#34;&gt;BigBlueButton&lt;/a&gt;. I&amp;#39;ll write up
another cool platform that&amp;#39;s based on BigBlueButton in some future
post.
&lt;/p&gt;
&lt;p&gt;
To start, BBB is open source. That&amp;#39;s a big plus in my book. This means
we can self host it. Now, this can be a problem if installation and
maintenance is a pain but so far, it&amp;#39;s been carefree.
&lt;/p&gt;
&lt;p&gt;
Next, it has some nice features. It supports pretty much everything
that Zoom supports including: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
join passwords
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
waiting room
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Brady Bunch view 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
chat
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
reactions (raise hand etc.)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
a shared whiteboard
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
screen sharing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
breakout rooms
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
optional session recording. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
polling 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and adds a few:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
a shared note space
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
shared whiteboard is really a presentation that you can upload
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A simple html5 client 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
BBB is also based on &amp;#34;classrooms&amp;#34; rather than meetings which as
a teacher seems cleaner and makes more sense.
&lt;/p&gt;
&lt;p&gt;
If you want to try it out and I highly recommend you do, you can do so
on their web site.
&lt;/p&gt;
&lt;p&gt;
Hosting is also pretty easy. I was originally turned off by the
strangely specific requirement of Ubuntu 16.04 but since Digital
Ocean - my preferred cloud provider lets me directly install that or
many other versions it wasn&amp;#39;t a problem. You&amp;#39;ll also need a box with
4GB memory and 4 cores. 
&lt;/p&gt;
&lt;p&gt;
You can follow the install instructions on the BBB home page but it
was easier to follow &lt;a href=&#34;https://github.com/bigbluebutton/bbb-install&#34;&gt;these&lt;/a&gt; instructions. Here&amp;#39;s exactly what I did
(culled from the longer explanations on the bbb-install site I just
linked):
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Create the DO droplet or install an Ubuntu 16.04 mathine.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Log in and run &lt;code&gt;apt-get update&lt;/code&gt;, &lt;code&gt;apt-get dist-upgrade&lt;/code&gt; and
&lt;code&gt;apt-get upgrade&lt;/code&gt;.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Set up DNS for the box so you can get to it by name. To do this I
went to Google domains and added an entry for
bigbluebutton.huntercs.org.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
I ran (all one line):
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget -qO- https://ubuntu.bigbluebutton.org/bbb-install.sh | bash -s -- -v xenial-22 -s bbbtest.huntercs.org -e zamansky@gmail.com -g&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&amp;gt;}}
&lt;/p&gt;
&lt;p&gt;
    This downloads and installs BBB and also uses &lt;strong&gt;certbot&lt;/strong&gt; to set up
    ssl for secure connections.
&lt;/p&gt;
&lt;p&gt;
After this was done, I created an admin account:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd greenlight/
docker exec greenlight-v2 bundle exec rake admin:create&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&amp;gt;}}
&lt;/p&gt;
&lt;p&gt;
At this point I was up and running so I went to the host and logged in
using the admin credentials that the above command gave me.
&lt;/p&gt;
&lt;p&gt;
Next, log in, go to the user profile and change the admin account&amp;#39;s
login and password. I also went to the org site settings and changed
registration so that people had to be invited - this only affects who
can create classrooms. Anyone can join as long as the teacher lets the
in.
&lt;/p&gt;
&lt;p&gt;
As a last step you should remove the demos: &lt;code&gt;apt-get purge
bbb-demo&lt;/code&gt;. The home page and install web site has more info on those.
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;re now ready to go. Make classrooms, invite your students and
you&amp;#39;re off. 
&lt;/p&gt;
&lt;p&gt;
Check it out. so far, I&amp;#39;m liking it better than the non free non open
source alternatives offered by Zoom, Microsoft, and Google. 
&lt;/p&gt;
&lt;p&gt;
Next, well look at another platform  that&amp;#39;s based on BBB that adds
some very cool features for CS Teachers.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 72 - Customizing Elfeed</title>
      <link>https://cestlaz.github.io/post/using-emacs-72-customizing-elfeed/</link>
      <pubDate>Thu, 21 May 2020 14:47:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-72-customizing-elfeed/</guid>
      <description>&lt;p&gt;
I made this video write after I made the &lt;a href=&#34;https://cestlaz.github.io/post/using-emacs-71-openwith/&#34;&gt;openwith&lt;/a&gt; one so even though
I don&amp;#39;t mention anything in this video, I wanted to share some updates
on dired and openwith.
&lt;/p&gt;
&lt;p&gt;
I got a lot of suggestions on alternate ways to achieve the workflow I
was seeking - being able to open a file using an external viewer. One
person noted that under newer versions of Emacs, the &lt;code&gt;W&lt;/code&gt; key is bound
to the command &lt;code&gt;(browse-url-of-dired-file)&lt;/code&gt; which does exactly what I
wanted. Problem solved with no customizing or extra packages. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a good thing I got a solution when I did - I needed it. I&amp;#39;ve been
reviewing applications for my new Teacher Certification program. It&amp;#39;s
a 21 credit graduate program that results in participants receiving a
brand spanking new New York State Computer Science teaching
license. The applications consist of a bunch of files incuding PDFs,
images (photos), doc and text files and source code samples. I&amp;#39;ve got
all the applications in a Google drive which I&amp;#39;ve downloaded and now I
can just drop into dired and go through each directory, hit &lt;code&gt;enter&lt;/code&gt; for
source code and it&amp;#39;s loaded in an Emacs buffer and &lt;code&gt;W&lt;/code&gt; for everything
else.
&lt;/p&gt;
&lt;p&gt;
Now for today&amp;#39;s video. It&amp;#39;s about a small customization I made to the
elfeed RSS reader. It&amp;#39;s also about the advantages and limitations of
Emacs built in documentation. I&amp;#39;m not particularly strong in elisp -
I&amp;#39;m a dabbler at best but even so, using Emac&amp;#39;s built in help I was
able to get to elisp code that was very close to what I wanted to do
and then customize it. It also looks at the limitations - there still
some code that I looked at that I have no clue as to what it does.
&lt;/p&gt;
&lt;p&gt;
Specifically, elfeed lets you open a link in an external brower by
hitting &lt;code&gt;b&lt;/code&gt;. That&amp;#39;s how I like reading most of my feeds. I&amp;#39;ll scroll
up and down and hit &lt;code&gt;b&lt;/code&gt; for what I want to read. The trouble is that
when you hit &lt;code&gt;b&lt;/code&gt; focus goes to the browser and at the same time,
elfeed marks the entry as read and advances. I want it not to mark as
read. After I made the video, I decided I also didn&amp;#39;t want elfeed to
advance to the next story. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I did.
&lt;/p&gt;
&lt;p&gt;
I went in to elfeed and instead of typing &lt;code&gt;b&lt;/code&gt; on an entry, I ran
&lt;code&gt;(describe-key&lt;/code&gt;)~ which is bound to &lt;code&gt;C-h k&lt;/code&gt;. I then typed &lt;code&gt;b&lt;/code&gt; which
revealed that it ran &lt;code&gt;elfeed-search-browse-url&lt;/code&gt;. I followed the
hyperlinks in the help to open &lt;code&gt;elfeed-search.el&lt;/code&gt; and found the
function. From there I just copied it over to my Emacs config, tweaked
it and voila, problem solved.
&lt;/p&gt;
&lt;p&gt;
The video has all the details. Enjoy.
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;https://www.youtube.com/embed/G1NGNR40lB4&#34; frameborder=&#34;0&#34;
allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>More thoughts on debugging</title>
      <link>https://cestlaz.github.io/post/debug/</link>
      <pubDate>Thu, 21 May 2020 08:11:25 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/debug/</guid>
      <description>&lt;p&gt;
Yesterday&amp;#39;s post on &lt;a href=&#34;https://cestlaz.github.io/post/errors-are-hard-to-find/&#34;&gt;errors&lt;/a&gt; led to some interesting discussion over on
Facebook. Specifically on teaching students to use a debugger. 
&lt;/p&gt;
&lt;p&gt;
My contention is that while it&amp;#39;s easy to demonstrate a debugger it&amp;#39;s
hard to get student buy in. In my CS0, we start with &lt;a href=&#34;https://thonny.org/&#34;&gt;Thonny&lt;/a&gt; which has
a great integrated debugger. In my CS1 I also show and use
gdb. Regardless of my approach the subset of students who actively end
up using the debugger has remained both constant and small.
&lt;/p&gt;
&lt;p&gt;
A few students will use the debugger in the very early stages to help
understand basic constructs but fewer will go back to the tool later
when a real error occurs. One of the difficulties probably relates to
the fact that it&amp;#39;s hard to present a natural, organic example of using
a debugger. You either have to force an appropriate error situation or
you have to wait and hope for the right situation to present itself at
a good time.
&lt;/p&gt;
&lt;p&gt;
Truth be told, I don&amp;#39;t use debuggers all that much. Mostly, I&amp;#39;ll use
them in C or C++ to get in the ballpark of where my error is - usually
via postmortem debugging. 
&lt;/p&gt;
&lt;p&gt;
In any event, while the students should know of the existence and
power of debugging tools the real skill is how to think about your
craft.
&lt;/p&gt;
&lt;p&gt;
Whether one uses a debugger or print statements the questions are
really: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
what problem is the student trying to solve - do they understand it?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How are they solving it?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What specifically are they telling their program to do? 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
That last one is important. I always tell my students that &amp;#34;Computers
are really bad at doing what you want them to do but they&amp;#39;re really
good at what you tell them to do!&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
Here are some errors that I&amp;#39;ve seen stump kids time and time again:
&lt;/p&gt;
&lt;p&gt;
A typical intro to recursion problem is the Fibonacci numbers. The
recursive definition gives:
&lt;/p&gt;
&lt;p&gt;
\[
f(n) = \left\{
\begin{array}{ll}
1 &amp;amp; if x \leq 2 \\
f(n-1) + f(n-2) &amp;amp; otherwise
\end{array}
\right.
\]
&lt;/p&gt;
&lt;p&gt;
This translates directly to code
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
See the problem?
&lt;/p&gt;
&lt;p&gt;
I see this at least a couple of times a year. 
&lt;/p&gt;
&lt;p&gt;
The student writes &lt;code&gt;(n-1) + (n-2)&lt;/code&gt; instead of &lt;code&gt;f(n-1) + f(n-2)&lt;/code&gt;. In
fact, when they read off their code they&amp;#39;re more likely than not to
say it correctly - the brain autocorrects. It&amp;#39;s just when you read an
essay with a glaring mistake over and over. A debugger might bring
attention to this but then so can careful code tracing. This is a time
that rubber duck debugging can also be effective. Another good
strategy would be to just take a break and come back with fresh eyes.
&lt;/p&gt;
&lt;p&gt;
Another one is when students are starting to work with loops and
arrays. I&amp;#39;ve seen all sorts of variations on the error so will only
share one. Suppose the students are looking for the largest in a data
set. I might see code like this:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Once again, the student will usually describe the algorithm correctly
but their code is comparing adjacent elements not each element against
a &amp;#34;source of truth.&amp;#34; The computer is doing what they told it to do not
what they want it to do.
&lt;/p&gt;
&lt;p&gt;
A debugger would probably be more helpful here but again, it all comes
down to careful analysis of the code. 
&lt;/p&gt;
&lt;p&gt;
In the previous two examples, a debugger could help but the real
requirement is careful code tracing be it via tool, print statements
or by hand. Here&amp;#39;s an example where a debugger can really shed some
light for a beginner. This time in C++:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
What causes the error isn&amp;#39;t important. What happens is that students
start to add print statements and ultimately get to the point where a
print is the very first line of the program and it still outputs
nothing.
&lt;/p&gt;
&lt;p&gt;
The culprit here is output buffering. &lt;code&gt;cout&lt;/code&gt; is the same as
 &lt;code&gt;System.out.print&lt;/code&gt; - no newline. The output buffers and won&amp;#39;t actually
appear until you send a &lt;code&gt;\n&lt;/code&gt;. If your program crashes before then you
won&amp;#39;t see anything. This is why we have &lt;code&gt;cerr&lt;/code&gt; in C++,  &lt;code&gt;stderr&lt;/code&gt; for C
and &lt;code&gt;System.err&lt;/code&gt; in Java. The error streams are unbuffered and will
 output immediately. Not as good but still effective would be adding a
 newline to the original print statement. 
&lt;/p&gt;
&lt;p&gt;
In any event, this is a case where stepping through with a debugger
can be truly enlightening. 
&lt;/p&gt;
&lt;p&gt;
Now with all of this, the real key is to carefully consider what
you&amp;#39;re trying to do and how you end up communicating it in
program. I&amp;#39;d love to find a way to convince more students of the
utility of a good toolset that includes debuggers but I&amp;#39;d also just
love to be more effective in getting them to carefully read and
analyze their code.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Errors Are Hard To Find</title>
      <link>https://cestlaz.github.io/post/errors-are-hard-to-find/</link>
      <pubDate>Wed, 20 May 2020 08:10:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/errors-are-hard-to-find/</guid>
      <description>&lt;p&gt;
Programming is amazing. You get the thrill of victory and &lt;a href=&#34;https://www.youtube.com/watch?v=Asxr5v9arH4&#34;&gt;the agony of
defeat&lt;/a&gt;. It&amp;#39;s a great feeling when you write something and it works -
even it it&amp;#39;s small and simple. It also feels good to hunt down,
discover and eliminate subtle bugs in our code. On the other hand,
I&amp;#39;ll frequently feel like a bozo when I pour over my code for days
only to find a super silly error. Unfortunately, that&amp;#39;s the most kind
of error. It helps if you can laugh at yourself. It&amp;#39;s something I&amp;#39;ve
written about &lt;a href=&#34;https://cestlaz.github.io/posts/2015-12-17-im-an-idiot.html/&#34;&gt;before&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As a teacher it&amp;#39;s something I try to convey to my students. When they
don&amp;#39;t see a bug, it&amp;#39;s probably not them. It&amp;#39;s like when they read an
essay over and over and don&amp;#39;t see their mistake because their brain
autocorrects.
&lt;/p&gt;
&lt;p&gt;
So, what had me kicking myself this time?
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m going to be teaching a CS topics course as part of our teacher
certification program this summer. I already have a lot of possible
topics to choose form:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
WebDev via Flask
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
3D Graphics / transformations
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Ray Tracing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data mining
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Machine Learning
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
NLP
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
and more
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I had never quite grokked &lt;strong&gt;Blockchain&lt;/strong&gt; - specifically its use as a
platform so I thought I&amp;#39;d see about that as a topic. I started
playing, exploring and building but when I got to signing transactions
that led me to add &lt;strong&gt;Public Key Encryption&lt;/strong&gt; as another topic.
&lt;/p&gt;
&lt;p&gt;
Traditional encryption requires a key to be used by both parties. This
means that both parties can both encrypt and decrypt so they must
trust each other. This leads to some issues:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Both parties have to share the key securely.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
All parties with the key can encrypt and decrypt. 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
On the other hand, public key encryption uses two keys. A public one
that everyone has access to is used to encrypt data and a private one
known only to the owner. This can be used to decrypt the data. This
means I can share my public key with the world and receive secure
transmissions that only I can decrypt. It also means that two parties
can share secure data with each other without both parties knowing the
others private key.
&lt;/p&gt;
&lt;p&gt;
I decided that it would be a good idea to get my head around all of
this.
&lt;/p&gt;
&lt;p&gt;
There are a bunch of good resources on the web but the basic idea is
that you take two primes - large primes, multiply them together, chant
some mystic incantations and come up with a private and a public
key. You can then use one key to encrypt a message and the other to
decrypt that encrypted message. 
&lt;/p&gt;
&lt;p&gt;
For this to work, you want to use large primes but to work through the
math and make sure I got it, I started with small numbers - 7
and 13. I went through all the math, everything worked and it made
sense.
&lt;/p&gt;
&lt;p&gt;
Now time to write some code.
&lt;/p&gt;
&lt;p&gt;
I wrote up a small program and things seemed to work and then decided
to set up a mock student application - something that would encrypt a
sentence. If I were writing this &amp;#34;for real&amp;#34; I would figure out some
reasonable way to chunk my data for encryption but for this test I
figured it would be easy to just take each character from the input
string and encrypt it.
&lt;/p&gt;
&lt;p&gt;
First few tests worked. I encrypted and decrypted &amp;#34;ABC.&amp;#34; Then I tried
the classic &amp;#34;Hello World!&amp;#34; and things went kablooey.
&lt;/p&gt;
&lt;p&gt;
I was getting weird results and couldn&amp;#39;t for the life of me figure out
why. Every time I did an individual test it seemed to work.
&lt;/p&gt;
&lt;p&gt;
Finally, it clicked - Duh, of course it wasn&amp;#39;t working.
&lt;/p&gt;
&lt;p&gt;
When you encrypt or decrypt a number, which in our case is a
character, it involves modulo arithmetic. Given a  number &lt;strong&gt;X&lt;/strong&gt; you
calculate \(X^e\  mod\  n\ \) where e is your key and n is the product of the
primes you selected. I chose 7 and 13 as my primes which made my
 &lt;strong&gt;n&lt;/strong&gt; 91. 
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;OF COURSE IT DIDN&amp;#34;T WORK!!!!!&lt;/strong&gt; It worked for A, B, and C because
they had ascii values of 65, 66, and 67 -  all less than 91. Once I
added lower case letters all was lost. The characeter &amp;#39;e&amp;#39; has an ascii
code of 101. There&amp;#39;s no way I can get some encoded value back to 101
if I&amp;#39;m modding by 91. 
&lt;/p&gt;
&lt;p&gt;
D&amp;#39;oh
&lt;/p&gt;
&lt;p&gt;
From there it was an easy fix - I just had to account for this. I
selected larger primes, derived new keys and everything worked. 
&lt;/p&gt;
&lt;p&gt;
I felt pretty stupid but on the other hand I got that surge of joy at
it finally working.
&lt;/p&gt;
&lt;p&gt;
Now I can confidently add both Public Key Encryption and Blockchain to
possible topics for my classes. It was also another reminder that
finding bugs is hard. That&amp;#39;s something not only important for us to
remember but also important that we convince our students of this.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter&#39;s first Honors CS Cohort</title>
      <link>https://cestlaz.github.io/post/first-daedalus-class/</link>
      <pubDate>Tue, 19 May 2020 07:41:29 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/first-daedalus-class/</guid>
      <description>&lt;p&gt;
Almost four and a half years ago I left Stuyvesant and joined Hunter
College. One of the initiatives I was charged with was the creation of
a computer science honors program - the Daedalus scholars. Now, a
little over four years later, our first cohort is graduating.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m super proud of that first cohort and what we&amp;#39;ve collectively been
building. 
&lt;/p&gt;
&lt;p&gt;
I joined Hunter at the end of January 2016 - a month after college
applications had closed. This meant that we had to build our first
cohort after the fact. Nobody applied to Hunter to be a part of the
Daedalus scholars because we didn&amp;#39;t exist. 
&lt;/p&gt;
&lt;p&gt;
Still, by looking at the students who had already applied to Hunter we
found a few that were interested and qualified. We lost a few along
the way - a student who really wanted an engineering program, one who
had already conditionally been accepted to another school but took our
money for the semester (I really hate it when people exploit a system
like this but that&amp;#39;s another story), one who really didn&amp;#39;t know what
CS was and ended up not liking the subject, and one who really wanted
to leave the city. 
&lt;/p&gt;
&lt;p&gt;
During our first semester, some Macaulay students found out about our
program and wanted to join so we padded our numbers with a small
number of them. Overall we ended up with a small group of 12.
&lt;/p&gt;
&lt;p&gt;
As I said, I&amp;#39;m proud of all of them for what they did at Hunter and
for what lies ahead.
&lt;/p&gt;
&lt;p&gt;
Now, four years later we get hundreds of applicants including a
growing number from outside the city and are taking in many more great
students. I don&amp;#39;t know the other colleges that our first cohort
members were accepted to but now we&amp;#39;re competing for students with
Stony Brook, NYU, RIT, and in some cases bigger &amp;#34;names.&amp;#34; My goal was
for us to become the best value CS and the best CS in NYC and we&amp;#39;re
well on our way. with the first cohort, we prototyped some activities
and events that have evolved into staples - tech mentoring, codefest,
interview prep and more. 
&lt;/p&gt;
&lt;p&gt;
Our first cohort led the way and I&amp;#39;m super proud of them. Now they&amp;#39;ll
become our first graduates and continue to be resource for both each
other and future Hunter CS students. This is now the start of another
endeavor - it took decades to create the StuyCS Mafia and now I get to
repeat the process with HunterCS  but this time, since I know what&amp;#39;s
to come I can enjoy the show as it unfolds.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 71 Openwith</title>
      <link>https://cestlaz.github.io/post/using-emacs-71-openwith/</link>
      <pubDate>Wed, 13 May 2020 11:45:39 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-71-openwith/</guid>
      <description>&lt;p&gt;
I spend most of my time in Emacs but still use the shell and browser
for some things. One of the things I use my shell for is to launch
libreoffice to view and edit docx files and spreadsheets, evince for
pdf files and imagemagick for image files. Yes, I know I can view all
of these in Emacs but there are a few limitations:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Emacs chokes on large files
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
I can&amp;#39;t edit the docx file or the image
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
So, I hop to the shell and launch the program I need on the files in
question. It&amp;#39;s fine but it does mean I end up with two windows for
each operation - the terminal from which I run, say, libreoffice and
libreoffice itself. I will also have my browser and one ore more Emacs
windows open so things can get a bit cluttered.
&lt;/p&gt;
&lt;p&gt;
Now, on the Emacs side, one tool that I still haven&amp;#39;t gotten myself to
regularly use is dired. I figured dired could be made to do what I
want - quickly and easily launch programs to view and edit my files.
&lt;/p&gt;
&lt;p&gt;
By default, dired opens files in a new Emacs buffer. That&amp;#39;s fine for
text files but not the behavior I want for docx and other files. It
turns out there are a number of good solutions. The one that I&amp;#39;ll
likely stick with is &lt;a href=&#34;https://github.com/jpkotta/openwith/tree/1dc89670822966fab6e656f6519fdd7f01e8301a&#34;&gt;openwith&lt;/a&gt; but there are other options as
well. Check out the video for more:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/_qjJ5UzInRI&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>My Covid-19 Journey (so far)</title>
      <link>https://cestlaz.github.io/post/covid/</link>
      <pubDate>Mon, 11 May 2020 07:59:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/covid/</guid>
      <description>&lt;p&gt;
I haven&amp;#39;t been posting much over the past couple of weeks and that&amp;#39;s
partly because we&amp;#39;ve been under the weather.
&lt;/p&gt;
&lt;p&gt;
Yep - Covid-19. 
&lt;/p&gt;
&lt;p&gt;
First things first - we&amp;#39;re all either recovered or well on the way. 
&lt;/p&gt;
&lt;p&gt;
I thought I&amp;#39;d write up our experience as it might be useful for
others who are going through similar. This disease is weird and seems
to affect people differently but three of us followed a similar path.
&lt;/p&gt;
&lt;p&gt;
In terms of our current status, I&amp;#39;ve been symptom free for a few
days. My sense of smell hasn&amp;#39;t fully returned but it&amp;#39;s starting to and
I&amp;#39;ve been fever free for around two weeks. I&amp;#39;ve been using a pulse
oximeter  and that&amp;#39;s been reading normal. I still feel a bit off in
the evenings, haven&amp;#39;t been sleeping well and get a bit of a headache
but I think that&amp;#39;s mostly my inner hypochondriac and the headaches
from the poor sleep. Besides, the headaches feel different than when I
was having symptoms.
&lt;/p&gt;
&lt;p&gt;
Batya and Devorah have been clear for a week longer than I&amp;#39;ve been and
Natan hasn&amp;#39;t yet shown any symptoms so hopefully he got it, built some
antibodies and is done.
&lt;/p&gt;
&lt;p&gt;
Batya got it first then Devorah then me. The symptoms were largely the
same. As they say - flu like. Fever, chills, low energy, head or chest
congestion and loss of smell and taste. I never fully lost my taste
(but then nobody would accuse me of having good taste anyway) but it
did dull. Batya and I also got headaches. They were a little weird -
kindof between a regular headache and a migraine. We never had bad
coughs, just occasional ones.
&lt;/p&gt;
&lt;p&gt;
The actual fever/chills part lasted for about 3 or 4 days each. Never
got as bad as a bad case of the flu and we never felt we had to rush
to the emergency room but we all essentially took some days off for
work. For me, it was mostly being lucky - my class days and important
meetings fell outside my sick zone and I was able to focus enough to
do the planning I had to albeit not optimally.
&lt;/p&gt;
&lt;p&gt;
We never relapsed but recovery was slow. After the fever passed, we
all went through the &amp;#34;I think I&amp;#39;m feeling better&amp;#34; stage where we still
had some congestion and were feeling &amp;#34;off&amp;#34; but we seemed to go in the
right direction. This seemed to last forever but at least for me, one
day a few days ago, I finally woke up feeling pretty good. 
&lt;/p&gt;
&lt;p&gt;
By all counts we&amp;#39;ve been lucky. Hopefully we&amp;#39;ll have some level of
immunity - we&amp;#39;re going to try to get antibody testing to see if we can
give plasma. 
&lt;/p&gt;
&lt;p&gt;
One of the things to watch out for if you do got through this is the
lethargy. I&amp;#39;ve been in a funk for most of the past month. I guess that&amp;#39;s
because of the difficulty in sustaining focus when actually sick and
the stress even when you&amp;#39;re feeling okay. Over this past weekend
when I was finally able to restart a number of projects is what&amp;#39;s
making me feel I&amp;#39;m really out of the woods. 
&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s been our Covid-19 journey. I hope posting this provides
another data point for people - what it&amp;#39;s like for those of us who are
getting it but have been lucky so as not to get it so bad. 
&lt;/p&gt;
&lt;p&gt;
Hoping you&amp;#39;re all staying safe and healthy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Heaps</title>
      <link>https://cestlaz.github.io/post/heaps/</link>
      <pubDate>Fri, 01 May 2020 13:53:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/heaps/</guid>
      <description>&lt;p&gt;
Continuing with the theme of alternate representations we just 
started &lt;a href=&#34;https://en.wikipedia.org/wiki/Heap_(data_structure)&#34;&gt;heaps&lt;/a&gt;. Specifically &lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_heap&#34;&gt;binary heaps&lt;/a&gt;. 
binary min and max heaps.
&lt;/p&gt;
&lt;p&gt;
Heaps are one of my favorite topics in CS2. If you&amp;#39;re not familiar
with them, a binary min heap is a complete binary tree that enforces
the heap property. By being complete we mean that every level except
possibly the last one is full - that is 2 children. The last level is
as filled left to right. 
&lt;/p&gt;
&lt;p&gt;
The heap property for a min heap is that the key value stored in any
node is less than the values in it&amp;#39;s children. Heaps are frequently
used as priority queues. There are plenty of great web sites and
videos that talk all about heaps - creating them, standard operations,
run time etc. 
&lt;/p&gt;
&lt;p&gt;
One of the things I love about them though is that they tie together
arrays and trees. Up until now, we&amp;#39;ve been using pointers to represent
trees. Our binary trees are represented by a class with a pointer to a
root node. Each node has pointers to left and right
children. Technically you could represent a heap in this way but with
a heap you have to be able to not only navigate easily from parent to
child but also from child to parent. This would make things a bit
unwieldy with additional parent pointers. 
&lt;/p&gt;
&lt;p&gt;
Instead consider the following tree:
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/heap/heap1.png&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve numbered each of the nodes with the root - node 0 holding a key
value of 10. We can easily store this tree in an array:#heaps.org#
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/heap/heap1-array.png&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
We have an easy relationship between parent and child. Given any node &lt;code&gt;n&lt;/code&gt;,
its children are located at &lt;code&gt;2n+1&lt;/code&gt; and &lt;code&gt;2n+2&lt;/code&gt;. Likewise we can use
integer division  &lt;code&gt;(n-1)/2&lt;/code&gt; to find a node&amp;#39;s parent. Easy peasy. This
is both easy and efficient and of course we can also go from an array
to a tree and in fact, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Heapsort&#34;&gt;heapsort&lt;/a&gt; algorithm takes an arrray and
rearranges the elements into a heap and then uses heap operations to
sort the array all in place and in O(nlgn) time.
&lt;/p&gt;
&lt;p&gt;
Here we have another cool representation. We can of course represent a
tree by explicitly creating classes for nodes with all the required
pointers but here we are implicitly creating a tree by using a mapping
to relate nodes.
&lt;/p&gt;
&lt;p&gt;
We could of course do this for any binary tree:
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/heap/heap2.png&#34;/&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/heap/heap2-array.png&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;NOTE:&lt;/strong&gt; Nodes 11 and 12 in the tree above should be 13 and 14. I messed up the
graphviz dot source for the diagram and am too lazy to
correct. Likewise there should be two extre cells in the array and the
32 and 50 should be in cells 13 and 14 respectively. 
&lt;/p&gt;
&lt;p&gt;
This is where the completeness comes in. The fact that a heap is
complete and the last level is filled in left to right means that
there aren&amp;#39;t any unused cells in the array. If we just had any old
binary tree like the one above, we&amp;#39;re going to waste space. It could
still at times be a useful representation.
&lt;/p&gt;
&lt;p&gt;
I like talking to my students about these types of data structures and
representations. Without considering cases like this you can get
programmers who adhere to the saying that &amp;#34;If your only tool is a
hammer then every problem looks like a nail.&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Alternate Representations</title>
      <link>https://cestlaz.github.io/post/alternate-representations/</link>
      <pubDate>Tue, 28 Apr 2020 12:54:05 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/alternate-representations/</guid>
      <description>&lt;p&gt;
There was a comment on my last post about &lt;a href=&#34;https://cestlaz.github.io/post/arbitrary-trees/&#34;&gt;arbitary trees&lt;/a&gt; on Reddit
talking about how this type of data structure was a hold over from the
old days when computer resources were more limited. Nowadays having a
list of children makes more sense. The comment was of course correct
but I still think it&amp;#39;s worth teaching representations like the one I
spoke of in my &lt;a href=&#34;https://cestlaz.github.io/post/arbitrary-trees/&#34;&gt;last post&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Looking at interesting and different ways of representing data and
modeling solutions is one of the things that separates programmers or
coders from computer scientists and software engineers. I&amp;#39;m not
talking about commonly accepted definitions or advanced classwork or
theory and mathy stuff. I&amp;#39;m talking about how you approach a problem. 
&lt;/p&gt;
&lt;p&gt;
To me, the coder or programmer is someone who has learned rudimentary
coding prowess but learned via rote example. This is typical of a code
school graduate or many self taught programmers. This is not to say
that people who learned this way are not computer scientists at heart
nor that they don&amp;#39;t have the ability to think deeply about problems
but rather that their training was superficial - usually to get them
to market quickly. 
&lt;/p&gt;
&lt;p&gt;
I know many people who started on their own following a book or mooc
or code school and grew beyond those basics but we&amp;#39;ve also seen many
&amp;#34;coders&amp;#34; who brute force using the same techniques regardless of
appropriateness. I can&amp;#39;t tell you how many times I&amp;#39;ve seen an SQL
database used inappropriately as a flat file store or forcing
relationships when not optimal in something like MongoDB. 
&lt;/p&gt;
&lt;p&gt;
We don&amp;#39;t want our students to merely parrot the solution that we went
over in class. We want them to consider the problem at hand and all
the tools in their tool belt and come up with what makes sense. 
&lt;/p&gt;
&lt;p&gt;
I like the arbitrary tree example as it uses the same internal
structure as a binary tree does: 
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
For a binary search tree pointer1 is left and pointer 2 is right. For
an arbitrary tree they represent first child and next sibling. The
same structure can also be used for a doubly linked list with previous
and next or a skip list. It&amp;#39;s all about creatively using the tools at
hand. 
&lt;/p&gt;
&lt;p&gt;
There are a number of lessons during which we can stretch our students
thinking in terms of data representations in our early classes. One is
when we can augment a data structure to avoid special cases. I wrote
about this when solving a maze or the &lt;a href=&#34;https://cestlaz.github.io/posts/2014-02-26-change-the-data/&#34;&gt;knight&amp;#39;s tour&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Those problems are also great place to talk about implicit data
structures. When we do our maze solver we talk about state space
search. The idea that there&amp;#39;s this huge graph where each node is the
a potential state of the maze and the edges represent how we can move
from state to state:#alternate-representations.org#
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/mazestates.png&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
The above graph can be considered an implicit data structure - it
never actually exists as a whole in our program. Our solver usually
uses a two dimensional array to represent a specific state of our
maze - that is, one node of the graph. We change the array as we make
and return from recursive calls. That recursion creates and destroys
nodes in our graph. At any point in time, each layer of stack in the
recursion holds one node in our graph with the top of the stack being
our current state but we never actually create or internally represent
the full graph. It&amp;#39;s an ephemeral implicit data structure.
&lt;/p&gt;
&lt;p&gt;
Finally, one very early opportunity to discuss these types of ideas
come when you use an array as a set of buckets where the index is the
value and the entry is the count. It&amp;#39;s pretty simple but a very
different way of using an array or list when all you&amp;#39;ve seen is using
it to store actual items. I like doing this in the context of a
&lt;a href=&#34;https://cestlaz.github.io/posts/2013-03-23-who_won_the_election-quadratic_to_linear_time/&#34;&gt;frequency&lt;/a&gt; lesson.
&lt;/p&gt;
&lt;p&gt;
In any event, it&amp;#39;s sometimes worthwhile to look at solutions that may
no longer be optimal - they can be great triggers of both student
thought and discussion.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arbitrary Trees</title>
      <link>https://cestlaz.github.io/post/arbitrary-trees/</link>
      <pubDate>Mon, 27 Apr 2020 18:45:50 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/arbitrary-trees/</guid>
      <description>&lt;p&gt;
It&amp;#39;s been 10 days from my last post. Not really a big break for me
historically but certainly a big one given how much I&amp;#39;ve been posting
this year. 
&lt;/p&gt;
&lt;p&gt;
Been under the weather for the past couple of weeks dealing with
COVID-19. Haven&amp;#39;t had super bad symptoms and as symptoms have been
getting fewer and less severe I&amp;#39;m hoping I&amp;#39;m close to a full recovery.
&lt;/p&gt;
&lt;p&gt;
In any event, I&amp;#39;m feeling good enough for a quick post.
&lt;/p&gt;
&lt;p&gt;
In my data structures class we&amp;#39;ve been working on binary trees. Most
of the unit is focused on &lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_search_tree&#34;&gt;Binary Search Trees&lt;/a&gt;. They used to be a big
part of the B part of the old APCS-AB and are still a mainstay of
college CS2 classes. 
&lt;/p&gt;
&lt;p&gt;
As usual, we covered all the basics. Creation, insertion, search,
traversal, and deletion. We discovered the run times and how a tree
structure can yield lgn behavior but can also degenerate to linear. We
also give a preview of more advanced data structures like red/back and
2-3 trees that address these issues (not to mention things like BTrees
and Splay trees).
&lt;/p&gt;
&lt;p&gt;
One side topic I always like talking about during this unit though are
arbitrary trees. That is, trees where each node can have an arbitrary
number of children. Students usually start by creating nodes with an
array of children and then sometimes a linked list of children but I
like discussing something simpler. A tree where in each node you hold
two pointers - a pointer to the first child and a pointer to the next
sibling. I like this because internally it&amp;#39;s the same as a binary
search tree where you also have two pointers in each node a left and a
right. Same &amp;#34;physical&amp;#34; representation but two very different
variations.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/arbtree.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The image on the left is the actual arbitrary tree and the one on the
right shows the internal representation.
&lt;/p&gt;
&lt;p&gt;
In terms of applications, the file system is a
great example of an arbitrary tree. Another one that I like even more
is the DOM representation of a web page. That&amp;#39;s nice because there are
Javascript functions to get the next sibling.
&lt;/p&gt;
&lt;p&gt;
I put a short video together for my class. Here it is in case anyone
is interested. It&amp;#39;s code agnostic so would be suitable for an APCS-A
class that also covers data structures.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/K1lR3ssgxLc&#34;&gt;https://www.youtube.com/embed/K1lR3ssgxLc&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Email or USPS</title>
      <link>https://cestlaz.github.io/post/email-or-usps/</link>
      <pubDate>Fri, 17 Apr 2020 14:00:41 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/email-or-usps/</guid>
      <description>&lt;p&gt;
USPS is in financial trouble. That&amp;#39;s been pretty well documented
recently. Most reasonable people will recognize that the USPS is both
an important service and while it receives no taxpayer support would
be profitable were it not for the GOP imposing &lt;a href=&#34;https://www.truthorfiction.com/is-usps-losing-money-because-of-a-2006-pension-law/&#34;&gt;unfair and unrealistic
pension funding requirements&lt;/a&gt; in 2006.
&lt;/p&gt;
&lt;p&gt;
Although I&amp;#39;m an ardent supporter of the post office and feel that
privatization of such an important intuition would be criminal today I
want to talk about some small repercussions of so many things going to
email rather than snail mail. Small in the greater sense but maybe
pretty big to the people affected.
&lt;/p&gt;
&lt;p&gt;
Back in the old days college acceptances went out via old fashioned
paper mail. It took a bit of time but it was super reliable no matter
where you lived. Nowadays I&amp;#39;m pretty sure college acceptances are
still sent out via USPS but you can also find out online. That&amp;#39;s
terrific. The potential issue comes up for opportunities that are only
announced via email. This is the case for my program and also for a
number of other college and university honors program that I&amp;#39;m aware
of. Part of this is certainly due to timing as the window from getting
applications to confirming participation is very small but it&amp;#39;s still
unfortunate.
&lt;/p&gt;
&lt;p&gt;
This past year, I&amp;#39;ve had a few cases of bad email addresses. For one
reason or another I had to reach out to a candidate only to get the
email bounced back. This isn&amp;#39;t really horrible as I&amp;#39;ve always been
able to hunt down a correct address either through Hunter or through
my friends teaching at the high schools. The real problem is that
students don&amp;#39;t always read or see all their emails. 
&lt;/p&gt;
&lt;p&gt;
I had a student who applied for my program with an active email but
their high school school somehow sent over to Hunter one that the student didn&amp;#39;t
use. Had I not caught it by chance that student who&amp;#39;s now with us and
doing great wouldn&amp;#39;t be. In another case I was talking to a student
who by chance new another student who we offered a seat but never took
it. It came up in conversation that this kid was very unhappy at the
college they ended up going to. I asked why they didn&amp;#39;t take our offer
to be in the Daedalus program. We later found out that the student
never saw the offer. It either went to a non-used address or a SPAM
filter or was just buried in the inbox. 
&lt;/p&gt;
&lt;p&gt;
This is a problem. Not so much for those of us running these
programs - we&amp;#39;re going to fill with qualified, deserving
students. Rather for qualified and deserving students who miss out on
the chance.
&lt;/p&gt;
&lt;p&gt;
When something goes out via USPS we can be fairly certain it will at
some point in the near future be in the hands of the intended
recipient. USPS is really good at that. With email, we can&amp;#39;t always be
sure.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Varying Remote Teaching</title>
      <link>https://cestlaz.github.io/post/varying-remote-teaching/</link>
      <pubDate>Wed, 15 Apr 2020 08:33:20 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/varying-remote-teaching/</guid>
      <description>&lt;p&gt;
When we first went remote I jumped on Zoom. I already new the
technology and it most simulated a live class. Basically, it was the
best combination if quick, easy, and effective and we were under the
gun to get something going and give our students some sense of
normalcy and continuity.
&lt;/p&gt;
&lt;p&gt;
As we settled in though, it made sense to try some different
things. One was the &amp;#34;lab packet.&amp;#34; A self contained document with
instructions and partial walkthroughs. One of my classes is already
set up to do a number of labs in this way so that was an easy thing to
try.  Basically it ended up being an asynchronous experience with me
being available using the usual suspects - Slack and email. 
&lt;/p&gt;
&lt;p&gt;
I tried something different this past Monday. It was synchronous with
me available on Slack but we didn&amp;#39;t use Zoom. I set up a series of
videos. Each video was fairly short and most had a small assignment at
the end. I asked the class to fill out a form after each
video/assignment. The topic was binary trees.
&lt;/p&gt;
&lt;p&gt;
The whole process seemed to go well but I&amp;#39;ll report back once I&amp;#39;ve
finished going over the feedback emails I&amp;#39;ve gotten from the class.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m particularly proud of this video that I made for the class, enjoy:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/OvwIyQJ-s40&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>John Conway</title>
      <link>https://cestlaz.github.io/post/conway/</link>
      <pubDate>Mon, 13 Apr 2020 17:21:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/conway/</guid>
      <description>&lt;p&gt;
We lost Mathematician &lt;a href=&#34;https://en.wikipedia.org/wiki/John_Horton_Conway&#34;&gt;John Conway&lt;/a&gt; to COVID-19 over the weekend. To
us non mathematicians Conway was most well known for his
&lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&#34;&gt;Game of Life&lt;/a&gt; - a particularly interesting cellular automaton. If you
poke around the web you can find all sorts of neat things relating to
the Game of Life including a &lt;a href=&#34;http://www.rendell-attic.org/gol/tm.htm&#34;&gt;Turing Machine&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Some times, I&amp;#39;d have classes explore the Game of Life and variants as
a whole unit though more often, I use it as a stepping stone to using
Cellular Automata to solve problems. I&amp;#39;ve written about some of this. 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/different-languages/&#34;&gt;On writing implementations of the Game of Life&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/posts/2016-01-15-shift-image.html/&#34;&gt;Cellular Automata and Maze Solving part 1&lt;/a&gt; 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/posts/2016-01-17-maze-ca.html/&#34;&gt;Cellular Automata and Maze Solving part 2&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I also saw this video over the weekend. It&amp;#39;s a short interview from
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s worth a watch.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/xOCe5HUObD4&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
I had the opportunity to meet Conway briefly  once about a decade ago. It was
an informal conversation at a puzzle conference. He was approachable
enough and nice enough but I didn&amp;#39;t have a chance to really get into
anything in depth. Still, it was pretty cool to talk with him.
&lt;/p&gt;
&lt;p&gt;
In the conversation he did mention &amp;#34;that F*ing Game of Life,&amp;#34; possibly
somewhat unhappy at it&amp;#39;s being what he&amp;#39;s so well known for  but to us
in the CS Teaching space it by itself was a gift worthy of a legacy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sherlock Holmes, consulting developer</title>
      <link>https://cestlaz.github.io/post/sherlock-holmes-dev/</link>
      <pubDate>Sun, 12 Apr 2020 08:34:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sherlock-holmes-dev/</guid>
      <description>&lt;p&gt;
Stuart Halloway is a name in the Clojure community. I was rewatching
one of his talks this morning and I thought some of you would enjoy
it. Lots of gems on approaching programming and development. 
&lt;/p&gt;
&lt;p&gt;
Nothing radical or new here but lots of good stuff very well presented.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/OUZZKtypink&#34;&gt;https://www.youtube.com/embed/OUZZKtypink&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It&#39;s okay, I Get It</title>
      <link>https://cestlaz.github.io/post/i-get-it/</link>
      <pubDate>Fri, 10 Apr 2020 14:13:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/i-get-it/</guid>
      <description>&lt;p&gt;
I was reading Mary Clair Wright&amp;#39;s new &lt;a href=&#34;https://computationalthinkinginroom112.com/&#34;&gt;blog&lt;/a&gt; the other day. It&amp;#39;s always
great to see another teacher sharing publicly online.
&lt;/p&gt;
&lt;p&gt;
One line caught my eye in her &lt;a href=&#34;https://computationalthinkinginroom112.com/2020/04/07/ap-csa-enrichment-gone-awry/&#34;&gt;latest post&lt;/a&gt; - 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;blockquote&amp;gt;
Remote instruction is weird, I can’t see them. I have to trust that they will message me with questions.
&amp;lt;/blockquote&amp;gt;
&lt;/p&gt;
&lt;p&gt;
This is a real problem. It&amp;#39;s hard enough in a regular class where we
can pick up an all sorts of cues and use all sorts formal and informal
assessments but when the students are on the other end of a
teleconference or even more challenging an email or chat it&amp;#39;s even
harder.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also a reminder of how important those non verbal clues and
student feedback can be.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s great if we can create an environment where our students will ask
for help if they don&amp;#39;t know something but even under normal
circumstances there&amp;#39;s the danger of students thinking they get
it. If a student is totally lost they&amp;#39;ll usually know they&amp;#39;re totally
lost but after that, it&amp;#39;s not so clear. 
&lt;/p&gt;
&lt;p&gt;
A student might think they get it if they can basically follow along
with what&amp;#39;s being presented. It&amp;#39;s pretty easy to watch another student
or a teacher go through explaining a solution step by step and think
you really know what&amp;#39;s going on. Similarly they can read through an
example in a text or on a web site and think they understand. A little
better is when they can do the first couple of problems in the book
but those frequently mimic the samples and don&amp;#39;t require any
additional insight. Even in a traditional class a student can go week
to week like this and really think they understand things and then
they get hit over the head on a test or right before a big assignment
is due. 
&lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t the student&amp;#39;s fault. It&amp;#39;s hard to know what you don&amp;#39;t know
and truth be told, we don&amp;#39;t really teach our students how to study and
self assess. It&amp;#39;s also really hard for teachers to assess this even in
person. Now that we&amp;#39;re all remote it&amp;#39;s yet another huge red flag to
look out for.
&lt;/p&gt;
&lt;p&gt;
No solutions here today and no suggestions just yet another concern as
we continue to work to do right by our kids.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Passover 2020</title>
      <link>https://cestlaz.github.io/post/passover-2020/</link>
      <pubDate>Thu, 09 Apr 2020 07:59:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/passover-2020/</guid>
      <description>&lt;p&gt;
Yesterday was the start of Passover and like many others we weren&amp;#39;t
able to physically gather with friends and family to
celebrate. Since the Talmud, unlike the NYC Dept of Education, doesn&amp;#39;t
seem to ban Zoom, like many others, we used Zoom to connect with
family.
&lt;/p&gt;
&lt;p&gt;
Tonight we&amp;#39;ll do it again.
&lt;/p&gt;
&lt;p&gt;
In the meantime, I thought I&amp;#39;d share this small bit of research Natan
did a couple of years ago on a traditional part of the seder: &lt;a href=&#34;http://seccorecit.blogspot.com/2018/04/a-historically-informed-echad-mi-yodea.html&#34;&gt;A
Historically Informed Echad Mi Yodea&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Enjoy
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>To Zoom or not to Zoom</title>
      <link>https://cestlaz.github.io/post/zoom-or-not/</link>
      <pubDate>Tue, 07 Apr 2020 14:03:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/zoom-or-not/</guid>
      <description>&lt;p&gt;
Zoom has been on a wild ride. As teachers scrambled to try to deliver
instruction from there homes to student homes Zoom quickly became a
favorite. It was easy, performed well, and had features that other
services seemed to lack. Features like being able to mute students and
for me a big one - breakout rooms. Now, these features weren&amp;#39;t
flawless as I mentioned &lt;a href=&#34;https://cestlaz.github.io/post/limitations-of-remote-teaching/&#34;&gt;in my last post&lt;/a&gt; but that&amp;#39;s okay. Zoom wasn&amp;#39;t
designed to be a virtual classroom and has worked remarkably well
given that it was designed as a tool for traditional business. 
&lt;/p&gt;
&lt;p&gt;
Soon though there was blowback. 
&lt;/p&gt;
&lt;p&gt;
Zoom has privacy issues.
&lt;/p&gt;
&lt;p&gt;
Zoom is sharing your data with Facbook.
&lt;/p&gt;
&lt;p&gt;
Zoom is insecure.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Zoombombing&#34;&gt;Zoombombing&lt;/a&gt; will destroy our kids.
&lt;/p&gt;
&lt;p&gt;
And the love affair was over.
&lt;/p&gt;
&lt;p&gt;
I quickly began noticing &amp;#34;Zoom shaming&amp;#34; on Twitter and Facbook. Public
figures and even other teachers shaming teachers for wanting to
continue with Zoom. 
&lt;/p&gt;
&lt;p&gt;
In NYC, the DOE quickly moved to ban the tool. Showing their usual
level of respect for teachers, they announced this at the very end of
the week and told them they had to figure out how to live without it
by Monday morning. Oh, by the way, technically teachers are hourly
employees. This came on top of them canceling spring break - a break
that many teachers were counting on to both catch their breath and
also to figure out this brave new world, after all they were given
pretty much zero lead time and zero training and have been doing all
this under the gun and yet still have done a yeoman&amp;#39;s job of caring
for their students.
&lt;/p&gt;
&lt;p&gt;
But I digress. I don&amp;#39;t really want to talk about the DOE and our
government&amp;#39;s shortcomings here. I want to specifically address Zoom.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s talk about the data sharing. Is that an issue? Sure. I don&amp;#39;t
know the extend of the data that they were sharing but users should
have control over their data and information. Forget about
regulations, just in terms of right and wrong this should all be
transparent and teachers, students, and parents should be able to opt
in or out and there should be no downside to opting out. What gets me
though is that the DOE is all of a sudden concerned about student
data!!! When did that happen. Seems hypocritical that now this is an
issue as opposed to, well, sharing data with the college board,
charter schools, and who knows how many other private entities. 
&lt;/p&gt;
&lt;p&gt;
Next up, zoombombing and the like. It seems that if you follow
best practices - having students use names and using a conference
password and waiting fooms that&amp;#39;s taken care of.
&lt;/p&gt;
&lt;p&gt;
Security? I keep hearing about Zoom&amp;#39;s lack of encryption. I&amp;#39;m not an
encryption expert but there is still transport level end to end
encryption. It&amp;#39;s just that Zoom isn&amp;#39;t encrypting data at the
endpoints. From what I understand this could still leave a conference
open to man in the middle attacks but I&amp;#39;m really not sure how great
the risk is. What I do know is I keep seeing posts and tweets by
people who I&amp;#39;m fairly sure no next to nothing about either encryption
or network security spouting off as experts.  
&lt;/p&gt;
&lt;p&gt;
The bottom line is that most teachers are going well above and beyond
to do the best they can for their students. I&amp;#39;ll also say that the DOE
and politicians care for students as a whole but teachers care for
them as individuals and that&amp;#39;s important to remember. Teaching is
already incredibly hard. Teaching a single class doesn&amp;#39;t just involve
standing and teaching for 40 minutes. It involves planning, then
teaching, then reflecting. A synchronous tool like Zoom best
approximates this. It might not be the best way to do things remotely
but it&amp;#39;s a quick way to connect with your students and to give them
something both in terms of content and normalcy while figuring out how
to do it better (hence the importance of that now erased spring
break). If a teacher has to go async or only do chatting async they
still have to do all the planning and reflecting but also might have
to make videos without the benefit of feedback, copious handouts or
who knows what. Maybe Zoom isn&amp;#39;t the best tool but for many teachers
it&amp;#39;s the best tool for right now.
&lt;/p&gt;
&lt;p&gt;
Teachers should be given access to all manner of tools and be trusted
to make the appropriate decision given the circumstances. Does Zoom
have issues? Sure. Might it violate policy or regulation? Sure but
these are not normal circumstances.
&lt;/p&gt;
&lt;p&gt;
When I was rounding up strays on 9/11, fleeing from Stuy as the towers
fell, ultimately taking them to my apartment in Chelsea only to later
deliver them home I&amp;#39;m sure I violated any number of DOE
regulations. In the days and weeks that followed I&amp;#39;m sure I violated
more as I attempted to work to connect students and families together
and then to deliver the best instruction I could under trying
circumstances. You know what - I bet those students and their parents
didn&amp;#39;t care that I violated any policies. Years later I heard from
parents - parents of kids that I didn&amp;#39;t even teach thanking me for
what I did for them and their children. When you&amp;#39;re in a crisis it&amp;#39;s
about the kids not about regulations. If Zoom is the best tool right
now for a teacher and their kids, let them use Zoom. If there are
issues, fix the issues or transition to something else but only by
giving them the time so that the students aren&amp;#39;t hurt by the process.
&lt;/p&gt;
&lt;p&gt;
Trust teachers to do the right thing. A former teacher, friend and
mentor of mine, &lt;a href=&#34;https://cestlaz.github.io/posts/2012-05-09-my-favorite-year-teacher.html/&#34;&gt;Herb Greenhut&lt;/a&gt; once said that it was easy to solve
the education problem: &amp;#34;Hire great teachers and get the F out of the
way.&amp;#34; We&amp;#39;ve got a lot of great teachers. The system should support
them but if they aren&amp;#39;t going to do that, at least &amp;#34;get the F out of
the way.&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Limitations Of Remote Teaching</title>
      <link>https://cestlaz.github.io/post/limitations-of-remote-teaching/</link>
      <pubDate>Mon, 30 Mar 2020 14:41:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/limitations-of-remote-teaching/</guid>
      <description>&lt;p&gt;
While tools like Zoom, Slack and others are a tremendous boon as we&amp;#39;re
forced to do all our teaching remotely the limitations become apparent
as we settle in and try to go beyond the basics of an offsite meeting.
&lt;/p&gt;
&lt;p&gt;
Today was &lt;a href=&#34;https://cestlaz.github.io/post/code-review-2/&#34;&gt;code review&lt;/a&gt; day in my CS1 class. It&amp;#39;s a lesson that I enjoy
teaching and I think my students get a lot out of it. Today we had to
do it remote. The mechanics were largely the same:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Pair off the kids.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Have them write out a commentary on their partners code without discussion
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
pair off again
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Have one review the others code but this time via discussion and
note taking.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Get everyone together and discuss
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Zoom supported all the basics. Splitting the class was pretty easy via
the breakout room interface and students were able to flag me when
they wanted to bring me in to their breakout. It was also pretty easy
to move newcomers into a room. There were some interface nits that
Zoom has to address like how when I entered and left a breakout room I
ended up losing part of the breakout window interface but I figured
out a workaround.
&lt;/p&gt;
&lt;p&gt;
The big difference and limitation was that I couldn&amp;#39;t just lurk. In
a live in person class, I get a top down view. I can basically see what all the
pairs are doing. I can&amp;#39;t get the details from a distance but I can
basically see what&amp;#39;s going on. I can also sidle over near a group to
see how they&amp;#39;re doing without being obtrusive. I can also see some of
the students screens and notebooks to get the gist of what&amp;#39;s going on
and focus in on individual conversations.
&lt;/p&gt;
&lt;p&gt;
You can&amp;#39;t do these things with Zoom and I daresay you can&amp;#39;t with any
remote conferencing platform. When I wasn&amp;#39;t in a breakout room I was
alone in the main room. When I was in a breakout room it was obvious I
joined and that in and of itself changed the room dynamic. I also
couldn&amp;#39;t see anything the kids were writing on paper or on screen
unless they explicitly shared it. 
&lt;/p&gt;
&lt;p&gt;
All of this changes the dynamic big time and limits my effectiveness
as a teacher. 
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t take this to mean I&amp;#39;m down on Zoom. I&amp;#39;m really loving the tool
and without it or similar products my students would be getting &lt;strong&gt;much&lt;/strong&gt; 
less during this crisis. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s just a reminder that teaching is a contact sport and as much as
some people will tell you otherwise the best instruction is in person
in a small class with a knowledgeable dynamic teacher. We&amp;#39;re not
getting back there this semester but here&amp;#39;s hoping that we get back by
Fall.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 70 Org Protocol</title>
      <link>https://cestlaz.github.io/post/using-emacs-70-org-protocol/</link>
      <pubDate>Fri, 27 Mar 2020 15:15:28 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-70-org-protocol/</guid>
      <description>&lt;p&gt;
I spent part of today cleaning up my Emacs workflow. Specifically, how
I capture emails and links into org-mode
&lt;/p&gt;
&lt;p&gt;
I already wrote about how I used org-capture (&lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-23-capture-1/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-24-capture-2/&#34;&gt;here&lt;/a&gt;). It&amp;#39;s
pretty clean and easy but there was one thing that always nagged at
me. When I capture from mu4e within Emacs by hitting &lt;code&gt;C-c m&lt;/code&gt; it&amp;#39;s set
up to automatically populate the capture template with a link to the
email labelled with the email&amp;#39;s subject. When I do it from Gmail or
to store a web link as a bookmark, I have to copy and paste the link
in manually.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s where &lt;a href=&#34;https://orgmode.org/worg/org-contrib/org-protocol.html&#34;&gt;org-protocol&lt;/a&gt; comes in. We can use org-protocol to link
between a browser and Emacs. 
&lt;/p&gt;
&lt;p&gt;
First you have to run Emacs as a server. You can start the Emacs
server using &lt;code&gt;(server-start)&lt;/code&gt; but I always run emacs using a shortcut
key bound to &lt;code&gt;emacsclient -c -a &amp;#34;&amp;#34;&lt;/code&gt;. This runs emacsclient and
connects to my running Emacs server but if the server isn&amp;#39;t running it
starts it. That meant that I only had to add &lt;code&gt;(require &amp;#39;org-protocol)&lt;/code&gt;
to my Emacs config file.
&lt;/p&gt;
&lt;p&gt;
I followed the instructions in the documentation by typing in these
lines:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gconftool-2 -s /desktop/gnome/url-handlers/org-protocol/command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/usr/local/bin/emacsclient %s&amp;#39;&lt;/span&gt; --type String

gconftool-2 -s /desktop/gnome/url-handlers/org-protocol/enabled --type Boolean true&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
but that didn&amp;#39;t seem to work.
&lt;/p&gt;
&lt;p&gt;
I ended up following the instructions I found in &lt;a href=&#34;https://stackoverflow.com/questions/7464951/how-to-make-org-protocol-work&#34;&gt;this post&lt;/a&gt; creating a
file named &lt;code&gt;org-protocol.desktop&lt;/code&gt; in the folder
 &lt;code&gt;~/.local/share/applications&lt;/code&gt; containing:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Desktop Entry&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
Name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;org-protocol
Exec&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;emacsclient %u
Type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Application
Terminal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false
Categories&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;System;
MimeType&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x-scheme-handler/org-protocol;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
and then running &lt;code&gt;update-desktop-database
~/.local/share/applications/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This seemed to do the trick. 
&lt;/p&gt;
&lt;p&gt;
I also modified my link capture template: 
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;l&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Link&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Sync/orgfiles/links.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Links&amp;#34;&lt;/span&gt;)
                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* %a %^g\n %?\n %T\n %i&amp;#34;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, to get things basically to work, I installed &lt;a href=&#34;https://github.com/sprig/org-capture-extension&#34;&gt;this&lt;/a&gt;
extension. I configured it to use my &amp;#34;l&amp;#34; or link capture
template. Once everything was installed I went to a web site and
clicked the plugin. I was popped into Emacs with the capture template
up and filled in. I did it again, this time marking text and hitting
the button and again everything worked.
&lt;/p&gt;
&lt;p&gt;
Looking at the template, the &lt;code&gt;%a&lt;/code&gt; is replaced by the web page link,
the &lt;code&gt;%i&lt;/code&gt; with the marked text, the &lt;code&gt;%T&lt;/code&gt; with the timestamp and the
cursor is left at the &lt;code&gt;%?&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I wanted to make one more change. I wanted to also use this for
storing Gmail links. The problem was that I wanted my links to be
sored in a file named &lt;code&gt;links.org&lt;/code&gt; while I wanted my Gmails stored
under my main org file &lt;code&gt;i.org&lt;/code&gt;. By reading the org-protocol page I
found that I could just create a bookmark.
&lt;/p&gt;
&lt;p&gt;
Copied mostly from the docs, I made a bookmark with this as the link
(all in one line):
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;javascript&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-protocol://capture://m/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      encodeURIComponent(&lt;span style=&#34;color:#a6e22e&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      encodeURIComponent(document.&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      encodeURIComponent(window.&lt;span style=&#34;color:#a6e22e&#34;&gt;getSelection&lt;/span&gt;())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
It worked perfectly. 
&lt;/p&gt;
&lt;p&gt;
This time I used this as the template:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;m&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mail To Do&amp;#34;&lt;/span&gt; entry (file+headline &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/Sync/orgfiles/i.org&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;To Do and Notes&amp;#34;&lt;/span&gt;)
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;* TODO %a\n %?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:prepend&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it. Now I can store emails in Emacs or Gmail as well as
bookmarks without any cut and paste. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a video with the walkthrough:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/FYKcVKg0OCU&#34;&gt;https://www.youtube.com/embed/FYKcVKg0OCU&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class Legends</title>
      <link>https://cestlaz.github.io/post/class-legends/</link>
      <pubDate>Wed, 25 Mar 2020 15:43:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/class-legends/</guid>
      <description>&lt;p&gt;
Let&amp;#39;s talk about something other than distance learning and COVID-19.
&lt;/p&gt;
&lt;p&gt;
You know you&amp;#39;ve been doing something a long time when you&amp;#39;ve got
legends.
&lt;/p&gt;
&lt;p&gt;
Over on my alumni mailing list JonAlf shared a web site showing off
what his current students were doing in their computer graphics
class. Somewhere in the thread, Con replied:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;blockquote&amp;gt;
Someone should put up a video of the fabulous and fantastically famous
hand animation called FINGER.MDL. It dates from a little before my
time, but stories elevated it to legendary status.
&amp;lt;/blockquote&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Indeed it had reached legendary status. Other projects over the years
including Larry&amp;#39;s anatomically correct robot had also risen to
infamy. 
&lt;/p&gt;
&lt;p&gt;
A little later in the thread the project&amp;#39;s author Josh chimed in and
shared his original source code. He still had it from May 1995. I&amp;#39;m
not entirely surprised - I had a copy of the code as well. The trouble
is it was written in Turbo-C on a DOS machine. Good luck compiling it
on a modern system. Fortunately, Josh was able to build and run the
project using an emulator. Check out the  marginally NSFW video at the
end of the post.
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s the legend? Well, in addition to being a pretty terrific
project - particularly when you remember the horsepower it was running
on and that it was written by a student who was concurrently finishing
APCS, there&amp;#39;s a story.
&lt;/p&gt;
&lt;p&gt;
It starts in one of my APCS classes. Students were working on final
projects. Tom was working on Tetris - an impressive project for APCS
done in Turbo Pascal. Tom wanted to add music to the project and had a
clever way of doing it. Back then you could get basic sounds by
turning on and off the speaker at certain frequencies. Tom had two
arrays, one with frequencies and one with durations.
&lt;/p&gt;
&lt;p&gt;
Something like: 
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;notes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;440&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;523&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;440&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;659&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]
durations&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Then for the game loop
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#+begin_src python&lt;/span&gt;

  current_note&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
  note &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; notes[current_note]
  duration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; durations[current_note]
  play(note) &lt;span style=&#34;color:#75715e&#34;&gt;# starts the note playing until you change or stop it&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; game_not_over:
      duration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; duration &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; duration &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
          current_note &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (current_note&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;length(notes)
          note &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; notes[current_note]
          duration &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; durations[current_note]
          play(note) &lt;span style=&#34;color:#75715e&#34;&gt;# starts the note playing until you change or stop it&lt;/span&gt;
      &lt;span style=&#34;color:#75715e&#34;&gt;# the rest of the game loop&lt;/span&gt;
  stop_playing() &lt;span style=&#34;color:#75715e&#34;&gt;# stop the speaker&lt;/span&gt;

    

&lt;span style=&#34;color:#75715e&#34;&gt;#+end_src&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Still, he had to figure out all the frequencies and durations for
&amp;#34;Korobeiniki,&amp;#34; the tetris song. The class was more than happy to help.
&lt;/p&gt;
&lt;p&gt;
Everyone&amp;#39;s working to help figure this out for Tom. It&amp;#39;s all pretty
cool when in walks Jinx Perullo - Stuy&amp;#39;s new principal along with the
President of the New York City Board of Education. The President&amp;#39;s jaw
drops as she hears a cacophony of Tetris music and screen after screen
of Tetris being played!!!!! 
&lt;/p&gt;
&lt;p&gt;
Jinx makes an abrupt about face and drags the dignitary out of the
room. 
&lt;/p&gt;
&lt;p&gt;
Fast forward a week or so. We&amp;#39;re in the graphics class at the end of
the day - it was held during an non-existent after school period so
that the students could attend. Josh&amp;#39;s working on his graphics program
at a computer by the door.
&lt;/p&gt;
&lt;p&gt;
Jinx walked in again. This time with the school&amp;#39;s chancelor to be
greeted by:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/Ca_8q3ct6J4&#34;&gt;https://www.youtube.com/embed/Ca_8q3ct6J4&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Once again, a quick about face.
&lt;/p&gt;
&lt;p&gt;
For some reason Jinx never brought important people to my classes
again.
&lt;/p&gt;
&lt;p&gt;
Those were indeed the good old days.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Necessity is the mother of invention</title>
      <link>https://cestlaz.github.io/post/mother-of-invention/</link>
      <pubDate>Mon, 23 Mar 2020 18:59:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/mother-of-invention/</guid>
      <description>&lt;p&gt;
I didn&amp;#39;t expect to read a Fred Wilson post on &lt;a href=&#34;https://avc.com/2020/03/teaching-online/&#34;&gt;teaching online&lt;/a&gt; but
that&amp;#39;s what I found when I visited &lt;a href=&#34;https://avc.com/&#34;&gt;his blog&lt;/a&gt; this morning. Don&amp;#39;t get me
wrong - I suspect that Fred has the makings of a great teacher, it&amp;#39;s
just not what I expected to find. There have been many posts about
education but I don&amp;#39;t recall any about teaching or more specifically
the art of teaching. I did find &lt;a href=&#34;https://avc.com/2011/07/teaching/&#34;&gt;this post&lt;/a&gt; though which actually speaks
to some of the thoughts today&amp;#39;s post got churning.
&lt;/p&gt;
&lt;p&gt;
Fred describes what sounds like a typical &amp;#34;lecture style&amp;#34; lesson he&amp;#39;s
delivered numerous times. This time, it would be delivered via
Zoom. Now, Zoom is great but it&amp;#39;s harder to do an interactive
lecture - ie active learning online than it is to do in person which
is what I&amp;#39;m guessing led him to set up some starter Google sheets and
use these shared documents for an active project based class.
&lt;/p&gt;
&lt;p&gt;
At the end of the post, now that he came up with what sounds like
a much stronger approach. Fred wonders if he&amp;#39;ll ever teach this class
any other way. 
&lt;/p&gt;
&lt;p&gt;
The first thing I thought was that this would be even better in
person. I don&amp;#39;t know the specifics but I could think of a number of
ways of running this. All in person with time to work on the
spreadsheets is one. Giving some pre-work and the sheets and then pick
up somewhere in the middle is another. In person gives the feel - the
live interaction where a teacher can read the class but there&amp;#39;s no
reason why we can&amp;#39;t also leverage tech tools like shared Google
sheets in a live classroom.
&lt;/p&gt;
&lt;p&gt;
Then I got thinking about necessity being the mother of
invention. Nothing stops us from changing things up, from trying
something in normal times but when the norm is disrupted sometimes it
spurs creativity or changes focus. I
try to continually evolve as a teacher but I&amp;#39;m no better than anyone
else and get caught in ruts. I force myself to try new
things. Sometimes they work and it&amp;#39;s great and sometimes &lt;a href=&#34;https://cestlaz.github.io/post/try-something-new/&#34;&gt;they
don&amp;#39;t&lt;/a&gt;. Live and learn. On the other hand, when all if a sudden you can&amp;#39;t do things the
usual way the brain works on alternatives. 
&lt;/p&gt;
&lt;p&gt;
One example was the lesson where I
&amp;#34;invented&amp;#34; live coding. It was a direct result of a forced change -
for some reason, and I don&amp;#39;t recall why, I couldn&amp;#39;t do things the way I
wanted that day so I winged it. Years later, I was chatting with a
former student and he, out of the blue mentioned that that lesson had
a profound influence on him. 
&lt;/p&gt;
&lt;p&gt;
Right now, I&amp;#39;m teaching using Zoom, slack, videos and email. Not being
in a room with my kids sucks. I feel less connected and it&amp;#39;s much
harder to read the class. What am I doing? On the one hand, I&amp;#39;m not
trying to change that much at once as I want my students to have some
stability in an uncertain time but I am working on new things. The
nice thing is that whatever I come up with I can share with my fellow
teachers here and take with me back into the classroom. 
&lt;/p&gt;
&lt;p&gt;
This was my big takeaway but the post also reminded me of why I turn
to teachers before I turn to &amp;#34;the research&amp;#34; or policy makers on how to
teach. Fred described the evolution of a lesson and a teaching
technique. What he essentially described is what teachers do every day
and we have to do it accounting for all the variables that the
research can&amp;#39;t. We teach multiple classes a day every day of the
week. We try things, assess the results, rinse and repeat. I get that
all teachers don&amp;#39;t do this but the good ones do.
&lt;/p&gt;
&lt;p&gt;
The final thought I had was with the reality that while coming up with
interesting active learning experiences is great it also takes a lot
of time and there&amp;#39;s not much time when you&amp;#39;re teaching five classes a
day five days a week to 150 kids along with grading, advising, and
everything else. This is why I tell young teachers that you always
want to evolve and improve but not every lesson is going to be a home
run and that&amp;#39;s okay.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s particularly important for teachers to remember this now as
across the nation they&amp;#39;re re-inventing their syllabi on the fly to
move from in person to online and they&amp;#39;re doing it without time,
training, and in some cases tools. 
&lt;/p&gt;
&lt;p&gt;
Do the best you can and continue to develop your toolset. Not every
new online experience will be great but if they&amp;#39;re sincere, your kids
will know. In the end we&amp;#39;ll all be okay and back to normal but with a
whole bunch of new tricks up our sleeves.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Guest Post - Missing out on a great opportunity in education</title>
      <link>https://cestlaz.github.io/post/guest-jonalf-dw/</link>
      <pubDate>Mon, 23 Mar 2020 06:53:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/guest-jonalf-dw/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Preamble
&lt;/h2&gt;
&lt;p&gt;
I&amp;#39;ve never accepted a guest post before but when my friend and long
time colleague JonAlf Dyrland-Weaver said he had something to say I
was all for it. 
&lt;/p&gt;
&lt;p&gt;
JonAlf&amp;#39;s one of the best teachers I know - he started at Brandeis HS and
has been at Stuy forever. Really sharp guy, great teacher, and really
perceptive. When he has something to say it&amp;#39;s 100% worth listening
to. 
&lt;/p&gt;
&lt;p&gt;
To JonAlf - since I know this is one of my blog posts you&amp;#39;ll actually
read - you should set up a blog of your own. The community would be
all the better for it.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Missing out on a great opportunity in education
&lt;/h2&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
By JonAlf Dyrland-Weaver
&lt;/h3&gt;
&lt;p&gt;
In the wake of the COVID-19 crisis, educators across the nation are
adapting to remote learning. I’ve watched my colleagues work hard
putting together plans on how to deliver content, engage students and
assess their learning. Some, like myself, are combining multiple tools
in order to achieve these goals while others are using a single
platform for it all. I count myself lucky that the administration in
my school has given its teachers the leeway to select their own tools
instead of forcing a single platform on us. Last week, as I was
thinking through what my plan was going to be, a particular thought
kept nagging at me:
&lt;/p&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
How much of this work will be seen?
&lt;/h3&gt;
&lt;p&gt;
We are facing an amazing opportunity in the world of education. Think
of how many lessons, worksheets, notes, examples, etc. are being put
out in some electronic form.
&lt;/p&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
How much of this work will be seen?
&lt;/h3&gt;
&lt;p&gt;
Students will (hopefully) have access to the materials for their
classes, and teachers in the same school may also be able to.
&lt;/p&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
How much of this work will never be seen?
&lt;/h3&gt;
&lt;p&gt;
What about the teacher three states away that’s struggling to find good resources or new problems?
&lt;/p&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
How much of this work will never be seen?
&lt;/h3&gt;
&lt;p&gt;
What about the student in a different district, perhaps one that has
shut down entirely, who just wants to learn and do some work in order
to help fill the days?
&lt;/p&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
How much of this work will never be seen?
&lt;/h3&gt;
&lt;p&gt;
The internet gives us the ability to put all of these resources out
there to the public, and it pains me to think about how much of this
work is going to be hidden behind one platform or another. So many of
the educational technologies make it very easy to post work for your
class and very hard, if not impossible, to share it with other people
(you’re school doesn’t also have a license for XYZ?, sorry).
&lt;/p&gt;
&lt;p&gt;
Of course, there are many teachers out there that have no choice, they
are being mandated to use whatever the school decrees. There are
others, perhaps the less technically savvy, that are going to use
whatever they can get trained on quickly. We’re all running a 2 minute
drill and working with what we have. I get that, and it is not a
teacher’s job to provide materials for everyone. That being said, If
you have the knowhow, or would like to learn, there are ways to make
your work publicly available. Last summer Mike and I ran a session at
the CSTA conference on using GitHub for just this purpose, and hope to
run a workshop on it this summer (For those interested, I made a brief
tutorial about how to do this.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/KzSE_H3rfMs&#34;&gt;https://www.youtube.com/embed/KzSE_H3rfMs&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
For my part, I’ll be putting everything on my class websites, if you
need any ideas for intro to cs in python here’s my class:
&lt;a href=&#34;https://www.stuycs.org/intro1-dw/&#34;&gt;&lt;a href=&#34;https://www.stuycs.org/intro1-dw/&#34;&gt;https://www.stuycs.org/intro1-dw/&lt;/a&gt;&lt;/a&gt;. If your’re looking for advanced cs,
I’ve got a computer graphics class here:
&lt;a href=&#34;https://www.stuycs.org/graphics-dw/&#34;&gt;&lt;a href=&#34;https://www.stuycs.org/graphics-dw/&#34;&gt;https://www.stuycs.org/graphics-dw/&lt;/a&gt;&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 69 Floobits</title>
      <link>https://cestlaz.github.io/post/using-emacs-69-floobits/</link>
      <pubDate>Sat, 21 Mar 2020 10:52:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-69-floobits/</guid>
      <description>&lt;p&gt;
Hunter, like most other schools has gone remote. I taught my first two
&lt;a href=&#34;https://cestlaz.github.io/post/teaching-online-day-01/&#34;&gt;online classes&lt;/a&gt; on Thursday. Currently, I&amp;#39;m using Zoom for synchronous
stuff and a mailing list and slack for async. 
&lt;/p&gt;
&lt;p&gt;
There are still some missing pieces. When we&amp;#39;re all together, it&amp;#39;s
easy to look at a student&amp;#39;s work and talk them through issues. It&amp;#39;s
also easy to get students to work together, at least to a point. With
everyone locked up in their own homes, real time collaboration is
harder. Sure, we can use tools like GitHub issues and pull requests
for async code commentary but what about live help and pairing? If
we want to use an online environment, &lt;a href=&#34;https://repl.it&#34;&gt;repl.it&lt;/a&gt;  - a platform I very
much like fits the bill. On the other hand, what do you use if you
want to work collaboratively in real time using a local editor. 
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s where &lt;a href=&#34;https://floobits.com&#34;&gt;Floobits&lt;/a&gt; comes in. Floobits is a platform that provides
for collaborative live editing. It works with Emacs, Neovim, Sublime
Text, Atom, and IntelliJ (and maybe all the Jetbrains IDEs). They
support a free tier which only has public workspaces but that&amp;#39;s fine,
as far as I&amp;#39;m concerned, for educational purposes. 
&lt;/p&gt;
&lt;p&gt;
Check out the video to see how I set it up:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/-0x4PV1EB5w&#34;&gt;https://www.youtube.com/embed/-0x4PV1EB5w&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Brazilian Carrot Cake</title>
      <link>https://cestlaz.github.io/post/carrot-cake/</link>
      <pubDate>Fri, 20 Mar 2020 15:55:03 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/carrot-cake/</guid>
      <description>
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/carrot-cake.jpg&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Not my normal post but these are not normal times. Besides, this isn&amp;#39;t
the first &lt;a href=&#34;https://cestlaz.github.io/posts/2010-05-02-flatbreads.html/&#34;&gt;recipe&lt;/a&gt; I&amp;#39;ve posted. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m one of those that will, as long as supplies allow, bake and cook
my way through our shelter in. Today I made Brazilian carrot
cake. It&amp;#39;s not quite the same as an American carrot cake as you&amp;#39;ll see
from the recipe below. 
&lt;/p&gt;
&lt;p&gt;
First, carrot cake rules:
&lt;/p&gt;
&lt;p&gt;
Obviously since it contains carrot which is a vegetable, it&amp;#39;s healthy.
&lt;/p&gt;
&lt;p&gt;
If you don&amp;#39;t ice it and serve it before evening, it&amp;#39;s carrot bread and
therefore a healthy option for breakfast, brunch, or snack.
&lt;/p&gt;
&lt;p&gt;
Only when you add the frosting or icing does it become carrot cake and
hence dessert. 
&lt;/p&gt;
&lt;p&gt;
This recipe is the family recipe of one of my daughter&amp;#39;s coworkers. I
can only imagine it&amp;#39;s from some Brazilian grandmother and hence the
measurement of &amp;#34;3 large carrots.&amp;#34; It makes me think of recipes that
I&amp;#39;d get from bubbe or my mothers bubbe - &amp;#34;add 2 cups of sugar.&amp;#34; Of
course she was talking about 2 empty yartzeit glasses of sugar. I have
a relative who followed around here grandmother an before she added
any ingredient for a recipe put it in a standard measure to 
convert the recipe to something that we could make sense of today.
&lt;/p&gt;
&lt;p&gt;
Okay, now on to the recipe:
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Ingredients
&lt;/h2&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Cake
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
3 carrots, peeled and sliced)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
3 eggs (large)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
1 cup oil
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
2 cups sugar
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
2 cups flour
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
1 tablespoon baking powder
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Brigadeiro sauce
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
1 can sweetened condensed milk
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
1 tablespoon butter
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
4 tablespoons of cocoa (or use some other chocolate and melt it in)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Buttermilk Glaze
&lt;/h3&gt;
&lt;p&gt;
I sometimes use this instead of the brigadeiro sauce
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
2/3 cups buttermilk
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
1 to 2 cups powdered sugar
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Directions
&lt;/h2&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Cake
&lt;/h3&gt;
&lt;p&gt;
Preheat oven to 350
Prepare pan (I line the bottom with parchment and grease)
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Mix sugar, flour, baking powder in a bowl
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Blend carrots in a blender
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Add oil and eggs to blender and blend all together
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Fold carrot mixture into dry ingredients
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
pour into prepared pan
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
bake for ~40 mintues
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
Bigadeiro sauce (if using) 
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
combine all ingredients in saucepan
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
cook, stirring until thickened (about 10 minutes) 
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll know it&amp;#39;s thick enough when you drag your spoon across the
pan and you can see the bottom. It will thicken up considerably when
it cools so better if it&amp;#39;s looser rather than thicker.
&lt;/p&gt;
&lt;p&gt;
spread on cake while warm.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
Buttermilk glaze (if using)
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
whisk together glaze ingredients until smooth.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
poke holes all over cake with a fork or knife
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
pour / spread glaze on cake
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Teaching Online -  Day 01</title>
      <link>https://cestlaz.github.io/post/teaching-online-day-01/</link>
      <pubDate>Thu, 19 Mar 2020 11:48:20 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teaching-online-day-01/</guid>
      <description>&lt;p&gt;
I taught my first two online classes this morning. The first one from
8:10 - 9:25 and the second from 9:45 - 11:00.
&lt;/p&gt;
&lt;p&gt;
Toolset:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Zoom meetings
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Emacs (yes, not just an editor)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
First up Zoom.
&lt;/p&gt;
&lt;p&gt;
I think I want a video camera on policy. All my students should have
laptops with working cameras. Some students might have issues with
showing even a small bit of what&amp;#39;s behind them so I don&amp;#39;t want to make
it required but I really wish they&amp;#39;d also have cameras on.
&lt;/p&gt;
&lt;p&gt;
Why?
&lt;/p&gt;
&lt;p&gt;
To get some level of visual feedback and interaction. Having made over
60 &lt;a href=&#34;https://cestlaz.github.io/stories/emacs/&#34;&gt;Emacs videos&lt;/a&gt; I&amp;#39;m used to talking to my own screen but when you know
you&amp;#39;ve got a live audience that you&amp;#39;re working with it&amp;#39;s different. If
I&amp;#39;m just talking to a bunch of black boxes with names in them I don&amp;#39;t
feel any connection with my students. If I see them I feel we&amp;#39;re
together.
&lt;/p&gt;
&lt;p&gt;
This was also an issue when I went to screen sharing. Now Zoom handled
the screen sharing terrifically.  You can share either one specific
window, a virtual whiteboard or your whole screen. When sharing,
though, instead of seeing a bunch of small windows with lots of people
in them you only see around four which isn&amp;#39;t representative of the
whole class. Better than nothing but I wish I had a long line of boxes
that could easily scroll.
&lt;/p&gt;
&lt;p&gt;
Another thing with the screen sharing - it worked great but this is
also where two monitors would be helpful. I went from two 30&amp;#34; monitors
to one 43&amp;#34; 4K monitor. I love my current setup but it seems with Zoom
you share all or nothing. I&amp;#39;m guessing with two monitors I could share
one monitor and use the other for notes and staging. With one big
monitor I can&amp;#39;t do this - I have to share the whole screen. Not a huge
problem but makes things a bit less smooth.
&lt;/p&gt;
&lt;p&gt;
This is where Emacs comes in.
&lt;/p&gt;
&lt;p&gt;
For a decent part of the lesson, I&amp;#39;d share my Emacs window. Since I
can split the window and quickly jump between buffers (screens) I
could bring up a variety of things. I had a shell in one buffer so I
could run terminal stuff, a source code buffer, one in org-mode for
outlines and table work and one in artist mode for rudimentary
diagramming. I think it worked reasonably well for a first shot.
&lt;/p&gt;
&lt;p&gt;
Finally, we also used the Zoom chat. Some students would mic on and
off to take part but more used the chat. It was a bit weird at
first. I&amp;#39;d talk, they&amp;#39;d write but both classes got into a pretty good
tempo after a while. I think it could work. Interesting though was
that my first class had a bunch of cross class chat in the general
(public) chat during the lesson. Silly remarks back and forth. Truth
be told, I liked it. My second class didn&amp;#39;t although there might have
been some of that in private chats.
&lt;/p&gt;
&lt;p&gt;
I asked the classes to share what their other instructors are doing
and using and I&amp;#39;m really interested in hearing. I&amp;#39;m also hoping that
they&amp;#39;re open with me in terms of what&amp;#39;s working and what isn&amp;#39;t. I want
this to be the best experience for them that we can create and I&amp;#39;m not
so proud as to think I know how to do it and that they don&amp;#39;t know
better.
&lt;/p&gt;
&lt;p&gt;
Now to plan for the next one.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching online - a test run</title>
      <link>https://cestlaz.github.io/post/online-testrun/</link>
      <pubDate>Mon, 16 Mar 2020 16:49:36 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/online-testrun/</guid>
      <description>&lt;p&gt;
Hunter&amp;#39;s classes are still on hiatus while we figure out how we&amp;#39;re
going to deliver instruction remotely. I have it easier than
most. First, my students all get laptops as being part of the Daedalus
program. This doesn&amp;#39;t mean they have great internet access or access
at all but it does mean they have a device that can run everything we
need them to run. I don&amp;#39;t yet know if they all have adequate internet
access but I&amp;#39;m hoping it&amp;#39;s either not an issue or one that we can
easily figure out.
&lt;/p&gt;
&lt;p&gt;
Next, software. Again, I&amp;#39;m lucky. Zoom seems to be the best of breed
for synchronous stuff and as faculty in the school of education, I
have an account. The rest of the CS faculty don&amp;#39;t. The rest of Hunter
has to use some combination of Blackboard based tools and freely
available stuff. 
&lt;/p&gt;
&lt;p&gt;
Today, we tested everything out. I had about 10 students volunteer. We
did a Zoom meeting and tried all the feature: 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
public and private chat
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
screen sharing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
whiteboards
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
breakout rooms
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The breakout rooms were the big thing I wanted to check out. They&amp;#39;re a
little clunky but overall pretty nice. It&amp;#39;s a bit kludgey when someone
joins the conference after breakout rooms are formed but overall it
worked well.
&lt;/p&gt;
&lt;p&gt;
For async stuff we&amp;#39;ll mostly stick with the same tools - email, GitHub
and GitHub classroom but I think we&amp;#39;ll also give Slack another go. My
problem with Slack is that it didn&amp;#39;t seem to work well within the
students day. It may work for a professional in front of their screen
most of the day but students are in and out of class and other
obligations. They&amp;#39;ll miss the real time flow and then have to navigate
through a muddy thread stream to catch up.
&lt;/p&gt;
&lt;p&gt;
Now with everyone working from home Slack might be a better fit. We&amp;#39;ll
see.
&lt;/p&gt;
&lt;p&gt;
Thursday I go live. 
&lt;/p&gt;
&lt;p&gt;
I think the lesson I&amp;#39;m planning for my CS1 translates pretty easily to
online but might have to work my CS2 plans. In any event we&amp;#39;ll see how
it goes.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m sure the rest of the semester will be challenging for all of us
but I also know it&amp;#39;s okay if we fumble through and make mistakes. &lt;a href=&#34;https://cestlaz.github.io/post/focus-to-feel-normal/&#34;&gt;It&amp;#39;s
not all about the content&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Would love to hear from my fellow teachers how it&amp;#39;s working with
them. Alfred Thompson has already been blogging about &lt;a href=&#34;http://blog.acthompson.net/2020/03/teaching-from-homeday-1.html&#34;&gt;his experiences&lt;/a&gt;
with going remote so we&amp;#39;re getting play by play from a rural private
(Catholic) high school. I&amp;#39;ll add the NYC public college
experience.
&lt;/p&gt;
&lt;p&gt;
If you want to share how it&amp;#39;s going for you but don&amp;#39;t blog, send it as
a long comment or do a guest post.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll all be more isolated physically over the next few weeks so let&amp;#39;s
share more in the digital world.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 68 - Tramp and org-publish</title>
      <link>https://cestlaz.github.io/post/using-emacs-68-tramp-org-publish/</link>
      <pubDate>Sat, 14 Mar 2020 20:57:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-68-tramp-org-publish/</guid>
      <description>&lt;p&gt;
I maintain a couple of small simple web sites. One provides
information about my undergraduate &lt;a href=&#34;http://info.huntercs.org/scholars/&#34;&gt;honors CS program&lt;/a&gt; and another that
isn&amp;#39;t live yet is a FAQ for my &lt;a href=&#34;http://info.huntercs.org/teacher_ed/faq.html&#34;&gt;CS teacher certification program&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Traditionally I would use ssh to connect to the host machine, fire up
Emacs and edit the html files to update the sites. I always forget
that with Emacs we can do better.
&lt;/p&gt;
&lt;p&gt;
One way is with &lt;a href=&#34;https://www.emacswiki.org/emacs/TrampMode&#34;&gt;Tramp Mode&lt;/a&gt;. I was reminded of this by JCS&amp;#39;s recent
&lt;a href=&#34;https://irreal.org/blog/?p=8705&#34;&gt;post&lt;/a&gt;. With Tramp, you can open a file on a remote host and edit it in
place. This means I get my full Emacs config but am editing the file
over there!!! It&amp;#39;s very slick but I always forget about it even though
I had already made &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-25-tramp/&#34;&gt;a video on it&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Tramp is cool but I was still editing the html directly. I figured it
would be easier to just use org-mode but that required figuring out
how to make the html produced by org-mode look nice. Fortunately, it&amp;#39;s
not hard.
&lt;/p&gt;
&lt;p&gt;
We can turn off the default CSS used by org-mode
using:
&lt;/p&gt;
&lt;div class=&#34;src src-org&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#+OPTIONS&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;: html-style:nil&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Or if we want add custom CSS using one or more of these:
&lt;/p&gt;
&lt;div class=&#34;src src-org&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-org&#34; data-lang=&#34;org&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#+HTML_HEAD&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;: &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; type=&amp;#34;text/css&amp;#34; href=&amp;#34;style1.css&amp;#34; /&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#+HTML_HEAD_EXTRA&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;: &amp;lt;link rel=&amp;#34;alternate stylesheet&amp;#34; type=&amp;#34;text/css&amp;#34; href=&amp;#34;style2.css&amp;#34; /&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
We can also embed html and custom CSS in our org-files.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://orgmode.org/manual/CSS-support.html&#34;&gt;This page&lt;/a&gt; from the org-mode documentation also lists many of the html
components that are styled by default. 
&lt;/p&gt;
&lt;p&gt;
Armed with custom CSS we can use the org-mode exporting facilities to
convert the file to a web page but the final step is to use
&lt;a href=&#34;https://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html&#34;&gt;org-publish&lt;/a&gt;. This lets us export one or more org-mode files and save
the result in some specified directory. You can also publish static
files like CSS files and images to go with the org to html
files. Finally by using the tramp syntax we can publish to a remote
host. 
&lt;/p&gt;
&lt;p&gt;
The goes through all of this. 
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/tlCOsigPjk8&#34;&gt;https://www.youtube.com/embed/tlCOsigPjk8&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Focus To Feel Normal</title>
      <link>https://cestlaz.github.io/post/focus-to-feel-normal/</link>
      <pubDate>Sat, 14 Mar 2020 17:46:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/focus-to-feel-normal/</guid>
      <description>&lt;p&gt;
Austin Cory Bart tweeted this a little while ago.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I don&amp;#39;t
always consider how much power I have as a faculty. Right now, I&amp;#39;d
really like to expend that power to make my students understand that I
don&amp;#39;t want them focused on my course during a global pandemic. Not
right now. Later, but not right now.&lt;/p&gt;&amp;mdash; Austin Cory Bart
(@AustinCorgiBart) &lt;a
href=&#34;https://twitter.com/AustinCorgiBart/status/1238565390575456262?ref_src=twsrc%5Etfw&#34;&gt;March
13, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
While Cory&amp;#39;s right about this it&amp;#39;s also good to remember that as
we&amp;#39;re all going remote, focusing on our courses can be important for
our students not merely due to content but in this time of uncertainty
to have something to focus on to remind us of community and remind us
of normal.
&lt;/p&gt;
&lt;p&gt;
While all our students are now home or being sent home they&amp;#39;re going
to be in semi isolation. Most will be with families but many will be
isolated from friends and classmates and without our courses, in a
limbo state left to obsess and stress over the current state of
affairs.
&lt;/p&gt;
&lt;p&gt;
Focusing on our class  - through synchronous onlinen classes and
mailing lists, working on assignments, and otherwise engaging in this
approximation of our students regular weeks we&amp;#39;re providing a valuable
distraction in addition to whatever actual course material we can
cover.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen it before. After 9/11 and to a lesser extent after
Sandy. After 9/11 we were closed for about a a week. Based on the
email list I was able to put together and the back and forths I had
between parents and students stress was high, information and outlets
low. We managed to set up one event that got a bunch of students
together and it was really needed. We restarted classes at Brooklyn
Tech and stayed for close to a month. Classes were half length
starting in the afteroon. I was teaching CS without any real computer
access, some classes shared rooms and in general it&amp;#39;s debatable how
much learning happened. What it did do though, is it gave the kids
something to focus on other than the 9/11 attacks and their
aftermath. It wasn&amp;#39;t normal but it was &amp;#34;normaler.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
In the years that followed, I&amp;#39;d hear from both parents and students -
a number of whom I never taught about how important it was giving them
something to do other than obsess about the events of the day.
&lt;/p&gt;
&lt;p&gt;
Same thing after Sandy. Some students weren&amp;#39;t all that affected but
others suffered tremendous losses. We set up virtual classes for a
couple of days while school wasn&amp;#39;t in session. Again, it gave them
something to focus on that wasn&amp;#39;t the superstorm.
&lt;/p&gt;
&lt;p&gt;
Same thing this time around. We all should be aware and alert to
everything happening but we also need community and things to focus
on. Our classes can be one of those things.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing to teach Online</title>
      <link>https://cestlaz.github.io/post/preparing-for-online/</link>
      <pubDate>Tue, 10 Mar 2020 23:54:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/preparing-for-online/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been seeing some tweets over the past couple of days about the
wonders of online teaching. How it&amp;#39;s at least as good or better than
in person or how we should have been doing it all along. 
&lt;/p&gt;
&lt;p&gt;
Rubbish.
&lt;/p&gt;
&lt;p&gt;
If you say that online is better than in person that says more about
the (low) quality of your teaching than it does about the quality of
online tech teaching resources.
&lt;/p&gt;
&lt;p&gt;
I mean, it&amp;#39;s pretty clear that anything you can do online you can do
in person since you can still avail yourselves of the same tech tools
while you can also do the in person live stuff. Online you&amp;#39;ve only got
online.
&lt;/p&gt;
&lt;p&gt;
Looking at it another way, is an online show, concert, or sporting
event (weather notwithstanding) ever better than the live thing?
There&amp;#39;s something about in person even when you take away the
connection between teacher and students and students and students that
makes it special.
&lt;/p&gt;
&lt;p&gt;
While online isn&amp;#39;t better there are times where it&amp;#39;s necessary or can
be used to complement or enhance in person. 
&lt;/p&gt;
&lt;p&gt;
Hunter hasn&amp;#39;t made any announcements about any closings due to COVID19
but it would be foolish not to prepare. I also want to figure out if
some of my CS Teacher Certification program can be offered remotely as
not all interested teachers can get to campus. For these reasons and a
few more, I think I&amp;#39;d like to try to do at least a couple of my
classes remotely over the next few of weeks (sooner if it&amp;#39;s forced
upon us).
&lt;/p&gt;
&lt;p&gt;
Technology shouldn&amp;#39;t be a problem - all my students get a laptop as
part of the Daedalus program. The only questions are will they have
sufficient bandwidth if they&amp;#39;re joining from home and if they have a
suitable location from where they can connect in.
&lt;/p&gt;
&lt;p&gt;
As part of Hunter&amp;#39;s School of Education I can use Zoom and that has
the video conferencing, chat, screen sharing and whiteboarding. The
only thing I have to workout  is how to use the breakout room features
for group work and to see if that can flow nicely in the class. I&amp;#39;ve
got a couple of lessons that should work pretty well as first time
experiments so overall it should be pretty easy to give it a go.
&lt;/p&gt;
&lt;p&gt;
Will it be as good as live? No. Will it be better than nothing?
Absolutely. Is it worth burning a live class to learn a bit about
online - to see what can be done without extensive training and class
prep and to see what can be leveraged in a pinch? I think so.
&lt;/p&gt;
&lt;p&gt;
If it happens, I&amp;#39;ll report back.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Try Something New - Quicksort</title>
      <link>https://cestlaz.github.io/post/try-something-new/</link>
      <pubDate>Mon, 09 Mar 2020 11:11:51 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/try-something-new/</guid>
      <description>&lt;p&gt;
Many teachers are reluctant to try new things. Sometimes it&amp;#39;s a bad
case of &amp;#34;I&amp;#39;vealwaysdoneitthisway-itis.&amp;#34; Sometimes it&amp;#39;s not being
comfortable with the new way or not having the time to develop
whatever happens to be needed for the lesson and sometimes it&amp;#39;s even
coming from a good place. 
&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s that good place? Concern - if I try this new way and it doesn&amp;#39;t
work I&amp;#39;m going to lose some students and never get them back. My
population is too at risk. 
&lt;/p&gt;
&lt;p&gt;
Ok, I buy that but I don&amp;#39;t agree with it.
&lt;/p&gt;
&lt;p&gt;
There will be a normal ebb and flow to your lessons anyway. Some days
will be great, some not so much. Some lessons will be amazing, some
will put the kids to sleep. Besides, you can almost always recover
from a bad experience the following week.
&lt;/p&gt;
&lt;p&gt;
Last week was Quicksort time. I&amp;#39;ve approached the problem in a variety
of ways over the years. I straight out presented the algorithm,
approached it from a &lt;a href=&#34;https://cestlaz.github.io/posts/2010-03-14-sorting-from-top-and-from-bottom.html/&#34;&gt;functional point of view&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/posts/quick-sort-starting/&#34;&gt;put a specific element
in place&lt;/a&gt;, approached it from a &lt;a href=&#34;https://cestlaz.github.io/posts/2014-03-12-select-to-sort.html/&#34;&gt;select the nth smallest&lt;/a&gt; item point of view
and probably a few others.
&lt;/p&gt;
&lt;p&gt;
This time, I thought I&amp;#39;d try code tracing. The motivation was that the
in place partition algorithm can be a little hairy. The idea is
actually pretty simple but first year CS2 students can find it
difficult. This time, I presented them with the code and some trial
runs for them to trace through. From there we developed the algorithm
&lt;/p&gt;
&lt;p&gt;
I won&amp;#39;t know if this approach was effective or not until next week but
my gut was telling me that it was a bit bumpy. I don&amp;#39;t think I was
effectively  able to connect from the code they worked through up to
the algorithm. Some of the other approaches I&amp;#39;ve tried over the years
left me equally unimpressed with myself but at the end of the day they
weren&amp;#39;t disasters so I&amp;#39;m guessing the class will ultimately prove to
have been alright. Right now, I think the approach I used a couple of
years ago of motivating quicksort by putting a specific element in
place works best for me and my classes. 
&lt;/p&gt;
&lt;p&gt;
The moral of the story? I tried something. I don&amp;#39;t think it worked
particularly well. That&amp;#39;s okay. I&amp;#39;ll probably rework it and try it
again in the future but as for today I know my kids will be
fine. Maybe I botched the quicksort a bit but I&amp;#39;ll fix that over the
next few classes.
&lt;/p&gt;
&lt;p&gt;
The real lesson of the day - Don&amp;#39;t be afraid to try something new. We
want our students to be unafraid of failure. We should be as
well. It&amp;#39;s rare the stakes are so high that we can&amp;#39;t stumble an bumble
a bit of a lesson and not recover. 
&lt;/p&gt;
&lt;p&gt;
When I was just starting out one of my mentors gave me some great
advice: &amp;#34;You can always fix it tomorrow.&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interesting Problems</title>
      <link>https://cestlaz.github.io/post/interesting-problems/</link>
      <pubDate>Sat, 07 Mar 2020 08:12:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/interesting-problems/</guid>
      <description>&lt;p&gt;
I organize a monthly professional development session for CS
teachers. It&amp;#39;s targeted at teachers who are beyond the beginner stage
and don&amp;#39;t want yet another hello world blinky arduino scratch
workshop. Don&amp;#39;t get me wrong, given the need for CS teachers we need
plenty of beginner workshops but we also need to take teachers to the
next level. I refer to my workshops as being for teachers of APCS-A,
similar, or beyond. Participants get three hours of CTLE credit and
thanks to our gracious hosts at &lt;a href=&#34;http://digitalocean.com&#34;&gt;Digital Ocean&lt;/a&gt; get to use a great space
and enjoy a free meal.
&lt;/p&gt;
&lt;p&gt;
I particularly enjoyed last weeks workshop for two reasons. One is
that we talked about &amp;#34;interesting problems.&amp;#34; This in itself is
interesting because different teachers find different things
interesting. For me, this time around, I was thinking of problems that
could be approached by beginners but had some interesting insight that
allowed them to look at the problem differently and solve it more
efficiently. 
&lt;/p&gt;
&lt;p&gt;
The second reason I liked this session is because I wasn&amp;#39;t the only
one presenting!!!
&lt;/p&gt;
&lt;p&gt;
I started the session talking about the Happy Ladybugs problem - a
Hackerrank problem I wrote about &lt;a href=&#34;https://cestlaz.github.io/posts/happy_ladybug/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I then passed off to Justin who talked about finding the &lt;a href=&#34;https://en.wikipedia.org/wiki/Convex_hull&#34;&gt;convex hull&lt;/a&gt;
bounding a set of points. Justin talked about how you can relate this
abstract geometry problem to real world problems like bounding
neighborhoods as well as how this can be graphically motivated and
then moved to discussing &lt;a href=&#34;https://en.wikipedia.org/wiki/Convex_hull_algorithms&#34;&gt;algorithms&lt;/a&gt;. Students can pretty easily come
up with a in inefficient O(n^4) solution and then Justin talked about
incrementally guiding them through alternate solutions ending with
something that runs in O(nlgn). At the end of the day we had a problem
that could be done in a variety of ways with students at different
levels of experience. 
&lt;/p&gt;
&lt;p&gt;
We then moved to Barry&amp;#39;s presentation of a &lt;a href=&#34;http://www.baphl.org/20/&#34;&gt;puzzle hunt&lt;/a&gt; problem he
adapted. It involved decoding, translation, number bases and Barry
uses it as a platform to work with stacks.
&lt;/p&gt;
&lt;p&gt;
I finished the evening talking about three problems but we didn&amp;#39;t look
at solutions. These were teasers for next time when we also hope to do a
SIGCSE recap.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Ed Podcast 3 -  Debugging</title>
      <link>https://cestlaz.github.io/post/cs-ed-podcast-3-debugging/</link>
      <pubDate>Fri, 06 Mar 2020 08:40:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-ed-podcast-3-debugging/</guid>
      <description>&lt;p&gt;
&amp;lt;blockquote&amp;gt;
Everyone knows that debugging is twice as hard as writing a
  program in the first place. So if you&amp;#39;re as clever as you can be
  when you write it, how will you ever debug it? 
&lt;/p&gt;
&lt;p&gt;
– Brian Kernighan
&amp;lt;/blockquote&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Debugging is what the &lt;a href=&#34;https://sites.duke.edu/csedpodcast/2020/01/07/episode-3-amy/#more-197&#34;&gt;third episode&lt;/a&gt; of the CS Ed Podcast was all
about. Kristin Stephens-Martinez of Duke University speaks with Amy Ko
of the University of Washington.
&lt;/p&gt;
&lt;p&gt;
The long and the short  of it is that debugging is hard, teaching is
hard, and teaching debugging is hard.
&lt;/p&gt;
&lt;p&gt;
Without even getting to the difficulties, one of the interesting
points discussed was that debugging is normally not the priority in CS
classes. Classes, lessons, and assignments are about learning to
program not how to debug programs. That makes debugging an add on and
an unpredictable one at that. Students will have to deal with bugs and
the time necessary not to mention the cognitive load isn&amp;#39;t really
factored in.
&lt;/p&gt;
&lt;p&gt;
This also got me thinking about designing debugging
experiences. That&amp;#39;s also really hard. It&amp;#39;s easy enough to insert
syntax errors but if students see them in an intelligent editor
they&amp;#39;ll be clued in to their locations. On paper, it&amp;#39;s trickier but
either are more cases of learning the syntax than debugging a
program. To debug I&amp;#39;m thinking you really have to create a program or
part of a program with the intent for it to do something and have it
fail or do something else.
&lt;/p&gt;
&lt;p&gt;
Teachers could also make code samples that don&amp;#39;t work as a result of
logic errors but those are also hard. They can be too obvious -
remember students are explicitly looking to fix them not discovering
an unintended error in their own code or they can be so convoluted
that in reality someone faced with the code would just rewrite it.
&lt;/p&gt;
&lt;p&gt;
So, what to do?
&lt;/p&gt;
&lt;p&gt;
Amy mentions that she asks students to write down what the program
should do. If they don&amp;#39;t understand what it should do it&amp;#39;s even harder
to understand what it&amp;#39;s doing wrong. When a student comes to me saying
&amp;#34;my program doesn&amp;#39;t work&amp;#34; I&amp;#39;ll frequently ask them what they want it
to do. We then segue to &amp;#34;what did you tell the computer to do.&amp;#34; I
frequently tell students that computers are really bad at doing what
you want them to do but really great at doing what you tell them to
do. This leads to a couple of techniques. One, described here in
another Brian Kernighan quote:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;blockquote&amp;gt;
Another effective [debugging] technique is to explain your code to
someone else. This will often cause you to explain the bug to
yourself. Sometimes it takes no more than a few sentences, followed by
an embarrassed &amp;#34;Never mind, I see what&amp;#39;s wrong. Sorry to bother you.&amp;#34;
This works remarkably well; you can even use non-programmers as
listeners. One university computer center kept a teddy bear near the
help desk. Students with mysterious bugs were required to explain them
to the bear before they could speak to a human counselor.
&amp;lt;/blockquote&amp;gt;
&lt;/p&gt;
&lt;p&gt;
This of course related directly to &lt;a href=&#34;https://en.wikipedia.org/wiki/Rubber_duck_debugging&#34;&gt;rubber duck debugging&lt;/a&gt;. Also code
tracing works well at this point. Rubber Duck Debugging is interesting
because it&amp;#39;s a example of convergent evolution having developed
independently in both industry and education. Code tracing is
interesting because it&amp;#39;s used both to teach an understanding of
programming and also as a debugging technique.
&lt;/p&gt;
&lt;p&gt;
Another point that came up is that as instructors we see the same
errors from each new crop of students. Now, what do we do about it? Is
it worth the students hitting that error wall and figuring out? Should
we scaffold or prepare them? How much? It&amp;#39;s an interesting point to
ponder and there&amp;#39;s no single right answer.
&lt;/p&gt;
&lt;p&gt;
A final point from the podcast related to CS culture as Amy pointed
out: 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;blockquote&amp;gt;
 I Think it also interacts a lot with–going back to the culture of
 computing–computer science, especially in higher education, is a
 place where people like to signal their intelligence, right? It’s not
 a place where we say, “You know, I had a hard time with this. I
 worked really hard to get to this level of understanding.” It’s a
 place where people say, “I figured it out because I’m smart and I’m
 clever. Look at this clever thing I did.” Right?
&amp;lt;/blockquote&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Over my career I&amp;#39;ve found this to be true and it&amp;#39;s something of a
contradiction to the fail early and openly dictum we hear so often. I
ray of light though is that at least at the more introductory levels
there are efforts to change this culture.
&lt;/p&gt;
&lt;p&gt;
So, if you haven&amp;#39;t listened to episode 3 take the time to do so. It&amp;#39;s
only about 25 minutes. 
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot more to talk about with debugging - using debuggers and
other tools, testing, code reviews and on and on but for now I&amp;#39;ll
leave you with one last though on debugging with another Brian
Kernighan quote:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;blockquote&amp;gt;
The most effective debugging tool is still careful thought, coupled with judiciously placed print statements.
&amp;lt;/blockquote&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Remote Classes</title>
      <link>https://cestlaz.github.io/post/remote-classes/</link>
      <pubDate>Tue, 03 Mar 2020 09:34:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/remote-classes/</guid>
      <description>&lt;p&gt;
Over at &lt;a href=&#34;https://avc.com&#34;&gt;AVC&lt;/a&gt; Fred Wilson just posted about &lt;a href=&#34;https://avc.com/2020/03/outschool-can-help-your-school-prepare-for-unexpected-closures/&#34;&gt;Outschool&amp;#39;s efforts&lt;/a&gt;
to support students and teachers in the event of school closures due
to the Coronavirus. All the details and relevant links are in the
post. 
&lt;/p&gt;
&lt;p&gt;
I looked a bit into Outschool when Fred first &lt;a href=&#34;https://avc.com/2019/05/outschooling/&#34;&gt;wrote about them&lt;/a&gt; but
never had a chance to do a deep dive.
&lt;/p&gt;
&lt;p&gt;
Now, internet based teaching is not going to be as effective as in
person teaching but I was thinking about how far things have come.
&lt;/p&gt;
&lt;p&gt;
After superstorm Sandy, Stuy was closed for about a week. Instead of
losing all the time my classes and I decided to try to do us some
internet schooling. We used Google tools and things went pretty well. 
&lt;/p&gt;
&lt;p&gt;
I wrote about what we did and some concluding thoughts &lt;a href=&#34;https://cestlaz.github.io/posts/2012-10-31-sandy-bridge.html/&#34;&gt;here&lt;/a&gt; and
&lt;a href=&#34;https://cestlaz.github.io/posts/2012-11-02-back-to-work/&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Back then - 2012 - the technology was close but not quite there. Now,
with tools like &lt;a href=&#34;https://zoom.us&#34;&gt;Zoom&lt;/a&gt; and I&amp;#39;m guessing &lt;a href=&#34;https://outschool.com/&#34;&gt;Outschool&lt;/a&gt;, which is probably
more fine tuned for education rather than meetings you have some nice
all in one or at least most in one solutions. I had to use a YouTube
broadcast and separate documents and chats. Today&amp;#39;s tools tie all of
those together along with screen sharing. Maybe Outschool even has a
shared virtual blackboard - that would be pretty cool. Add in
something like Trello and GitHub and we&amp;#39;re really cooking.
&lt;/p&gt;
&lt;p&gt;
It really reminds me that &lt;a href=&#34;https://en.wikipedia.org/wiki/Apache_Wave&#34;&gt;Google Wave&lt;/a&gt; was really a product ahead of
it&amp;#39;s time. 
&lt;/p&gt;
&lt;p&gt;
As I said above, internet teaching will not be as effective as
live. It&amp;#39;s more of a show and do rather than an interactive class and
I go through some of the other issues in the my two posts linked above
but we&amp;#39;re getting better. Certainly way better than closing a school
and doing nothing. 
&lt;/p&gt;
&lt;p&gt;
Hats off to Outschool for providing their services to the community. I
hope few have to use them but am thankful they&amp;#39;re there.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter Launches CS Teacher Certification Programs</title>
      <link>https://cestlaz.github.io/post/cs-ed-programs/</link>
      <pubDate>Wed, 26 Feb 2020 18:50:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-ed-programs/</guid>
      <description>&lt;p&gt;
It took a while but we&amp;#39;re finally here. Hunter College is launching
it&amp;#39;s &lt;a href=&#34;https://education.hunter.cuny.edu/admissions/graduate-programs/computer-science/&#34;&gt;Computer Science Teacher Certification&lt;/a&gt; programs. This was the
second big initiative I&amp;#39;ve been working on at Hunter. The first was
the Daedalus undergraduate CS scholars program. The Daedalus program
started my first year and is now providing the best value (and in my
opinion best) undergraduate CS opportunity in New York. 
&lt;/p&gt;
&lt;p&gt;
CS Certification took longer. I had to design the programs, they had to
make it through the whole CUNY governance process which even under
ideal circumstances takes around a year and then up through NYSED. Oh,
and we had to convince the state to create a certification area in the
meantime.
&lt;/p&gt;
&lt;p&gt;
In any event, we&amp;#39;re live and will kick off our certificate program
this summer. That&amp;#39;s the program designed for teachers already
certified in another subject area seeking to add the CS credential.
&lt;/p&gt;
&lt;p&gt;
So, what does the program look like? 
&lt;/p&gt;
&lt;p&gt;
It combines content and pedagogy. It was designed to give teachers the
CS they need and the knowledge of how to teach it. 
&lt;/p&gt;
&lt;p&gt;
In terms of content, you need some depth. In my opinion, that depth
should be at least a class beyond what you&amp;#39;d normally expect to
teach. For example a math teacher&amp;#39;s classes would max out with BC Calc
so I&amp;#39;d want a math teacher to have a math class beuond that. Since we
max out with APCS-A, my program takes teachers through data
structures - APCS-AB or CS2. 
&lt;/p&gt;
&lt;p&gt;
Teachers also need breadth. They don&amp;#39;t need to have a full course in
AI or a full class in Graphics etc. but a course that gives them
exposure to a number of fields. Enough to teach a unit, mentor a
precocious student, or learn more on their own to develop new
courses. We have a topics course for that.
&lt;/p&gt;
&lt;p&gt;
To round out the CS part of the program we have a programming heavy
ethics course. While ethics are woven throughout all the courses - CS
and CS Ed we felt that this standalone course also adds great value to
our program.
&lt;/p&gt;
&lt;p&gt;
This is a far cry from what I&amp;#39;ve seen in many other CS Ed programs
which follow the &amp;#34;you take it you teach it&amp;#34; philosophy. Basically
teachers take Exploring CS, APCS-P, and APCS-A and viola, you&amp;#39;ve got
CS teachers. Not in my book.
&lt;/p&gt;
&lt;p&gt;
Then we mix in the CS Ed. Two methods course where we introduce
additional content and how to teach it and also a curriculum design
course. The methods courses are based on current best practices and on
what I&amp;#39;ve learned helping teachers develop over the years but I&amp;#39;m
particularly excited about the curriculum design course. Over the
years I had to take three curriculum design courses and didn&amp;#39;t learn a
thing about curriculum design in any of them. I swore that if I ever
created an education course it would be a curriculum design course
that was good. Over the years, I
developed units, classes and full programs and learned a few
tricks. That in turn developed into the course. Teachers will study
existing curricula and develop their own and since the course
integrates fieldwork, they&amp;#39;ll deliver it as well.
&lt;/p&gt;
&lt;p&gt;
While I had internal help at Hunter, I want to send a special thanks
to JonAlf, Sam, and Topher - three of the best teachers I know who
provided feedback, assistance, and inspiration (sometimes without
knowing it) along with other friends in education, academia, and
industry throughout New York State who made sure I designed a program
that would work for teachers across New York State.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re looking to become certified to teach CS in New York schools,
check us out. You can find more info &lt;a href=&#34;https://education.hunter.cuny.edu/admissions/graduate-programs/computer-science/&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSEvents.nyc</title>
      <link>https://cestlaz.github.io/post/csevents-nyc/</link>
      <pubDate>Mon, 24 Feb 2020 18:52:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csevents-nyc/</guid>
      <description>&lt;p&gt;
A couple of weeks ago, a handful of CS Ed folks got together. One
issue we discussed was that of finding CS related events both for
students and teachers. 
&lt;/p&gt;
&lt;p&gt;
One of our conveners, Dan Fenjves of &lt;a href=&#34;https://www.upperlinecode.com/&#34;&gt;UPPERLINE CODE&lt;/a&gt; talked about
possibly hosting a central site. Today, Dan announced
&lt;a href=&#34;http://csevents.nyc/.&#34;&gt;http://csevents.nyc/.&lt;/a&gt; A site where organizers can submit and students
and teachers can find upcoming events. Right now it&amp;#39;s NY centric but
it does list some events beyond the city.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re planning an event or CS Educational opportunity, submit it,
if you&amp;#39;re looking for one, check it out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 67 - Emacs vs Vi a rant with some historical perspective</title>
      <link>https://cestlaz.github.io/post/using-emacs-67-emacs-rant/</link>
      <pubDate>Sun, 23 Feb 2020 07:57:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-67-emacs-rant/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been meaning to do my version of the Emacs VI rant for a while. A
few years ago I staged out a video showing what it would be like for a
beginner to start with Emacs, Vim, Atom, and Sublime Text but decided
it would be long, unwieldy and clunky to present - particularly when
it came to customization. 
&lt;/p&gt;
&lt;p&gt;
I tabled it for a while but recently have been seeing a bunch of
threads, videos and posts talking about Emacs and Vim. Some are really
well done, balanced and sensible like Derek Taylor&amp;#39;s over on
&lt;a href=&#34;https://www.youtube.com/watch?v=VaBdlcYaZLQ&#34;&gt;DistroTube&lt;/a&gt;. On the other hand, I saw plenty of what makes me
nuts. People claiming things like style is objectively better than
the other or was created with speed or ergonomics in mind so is
superior and the like.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my take. I think it&amp;#39;s a little different than some of the other
rants because I look a bit at history and evolution and also at the
day to day reality of editing. Hope you enjoy it.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/0M6erlK57go&#34;&gt;https://www.youtube.com/embed/0M6erlK57go&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The CS Education Subreddit</title>
      <link>https://cestlaz.github.io/post/cseducation-subreddit/</link>
      <pubDate>Sat, 22 Feb 2020 07:37:20 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cseducation-subreddit/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://twitter.com/amyjko?ref_src=twsrc%255Etfw%257Ctwcamp%255Etweetembed%257Ctwterm%255E1230982366706860032&amp;amp;ref_url=https%253A%252F%252Fpublish.twitter.com%252F%253Fquery%253Dhttps%25253A%25252F%25252Ftwitter.com%25252Famyjko%25252Fstatus%25252F1230982366706860032%2526widget%253DTweet&#34;&gt;Amy Ko&lt;/a&gt; posted this yesterday:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;CSEd people:
many have struggled to use Twitter for discussion. How about Twitter
for broadcasting, but when replies turn to discussion, we use &lt;a
href=&#34;https://t.co/2oivuriOoU&#34;&gt;https://t.co/2oivuriOoU&lt;/a&gt;? It&amp;#39;s a
better (albeit imperfect) platform for civil discourse. Subreddit mods
&lt;a
href=&#34;https://twitter.com/AustinCorgiBart?ref_src=twsrc%5Etfw&#34;&gt;@AustinCorgiBart&lt;/a&gt;
&lt;a
href=&#34;https://twitter.com/zamansky?ref_src=twsrc%5Etfw&#34;&gt;@zamansky&lt;/a&gt;?&lt;/p&gt;&amp;mdash;
Amy J. Ko (@amyjko) &lt;a
href=&#34;https://twitter.com/amyjko/status/1230982366706860032?ref_src=twsrc%5Etfw&#34;&gt;February
21, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I&amp;#39;d love to see more traffic &lt;a href=&#34;https://reddit.com/r/CSEducation&#34;&gt;there&lt;/a&gt;. For full disclosure, I&amp;#39;m one of
the moderators but in my defense, I&amp;#39;m not much of a moderator and as
&lt;a href=&#34;https://twitter.com/AustinCorgiBart/status/1230992957467168768&#34;&gt;Cory&lt;/a&gt; said, I too am happy to either keep moderating or to step aside.
&lt;/p&gt;
&lt;p&gt;
Twitter is nice for broadcasting but not great for
meaty discussions. The character limit does make you think out what
you&amp;#39;re saying but it&amp;#39;s also a headache and tweet storms are an
inelegant solution at best. Once you start mixing in replies threads
become hard to follow. 
&lt;/p&gt;
&lt;p&gt;
An interesting case study of Twitter conversation is over at &lt;a href=&#34;https://twitter.com/home&#34;&gt;Fred
Wilson&lt;/a&gt;&amp;#39;s blog  &lt;a href=&#34;https://avc.com&#34;&gt;AVC&lt;/a&gt;. Fred recently rebooted his long standing blog and
is now using Twitter for comments whereas he previously used &lt;a href=&#34;https://disqus.com&#34;&gt;Disqus&lt;/a&gt;.
I haven&amp;#39;t done an in depth analysis but there appears to be far fewer
comments and less in depth conversation than in his blogs past
incarnations. This could just be my perceptions but given the large
readership, it might be an interesting thing to analyze.
&lt;/p&gt;
&lt;p&gt;
As to other communication tools, I&amp;#39;ve written about them with respect
to classroom communications &lt;a href=&#34;https://cestlaz.github.io/posts/class-communications/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cestlaz.github.io/post/communicating-with_students/&#34;&gt;here&lt;/a&gt;. Many of the same issues
exist for using these tools as a professional community.
&lt;/p&gt;
&lt;p&gt;
Facebook groups are private, undiscoverable, hard to search, and
scattered. They also exist in the Facebook silo. Data goes in but it
never comes out. I also can&amp;#39;t access those Facebook groups using
anything other than Facebook.
&lt;/p&gt;
&lt;p&gt;
Email is a great default. Nowhere else to go - things just show up in
your inbox. I&amp;#39;m on the APCS mailing list as well as SIGCSE. One
problem is the no quoting policy which makes threads hard to follow
and discoverability and long term searchability are a problem.
&lt;/p&gt;
&lt;p&gt;
Slack? Just no.
&lt;/p&gt;
&lt;p&gt;
So let&amp;#39;s think about reddit. 
&lt;/p&gt;
&lt;p&gt;
You can go to the site to read it but you can also subscribe using an
RSS/Atom reader like Feedly. If you post a comment you get replies via
email and an alert in reddit. It&amp;#39;s discoverable, public, and
searchable. It even appears to support chats and a wiki.  Hits all the
buttons for me.
&lt;/p&gt;
&lt;p&gt;
We could do a better job with the subreddit - add resource links to
the sidebar for instance - I just started to do that now. 
&lt;/p&gt;
&lt;p&gt;
My friend &lt;a href=&#34;https://twitter.com/cscheerleader/status/1231177418708267008&#34;&gt;Ria&lt;/a&gt; commented on how she wasn&amp;#39;t happy that people could post
anonymously. I tend to agree with her - I&amp;#39;ve always used my real
identity in forums and would prefer others do the same but that&amp;#39;s not
a dealbreaker to me. I&amp;#39;d rather an open community with anonymous
posting allowed than Zuck&amp;#39;s world.
&lt;/p&gt;
&lt;p&gt;
Another issue that is sure to be raised is openness. Some teachers
don&amp;#39;t want their discussions public where students can find
them. Sometimes this is to separate class from life and sometimes
because class related issues are being discussed. I&amp;#39;ve never had an
issue with this. Having spent close to 30 years in the classroom I&amp;#39;ve
always been pretty open and public. Sure, sometimes a student can find
an old assignment or blog post going over something but so what, maybe
they&amp;#39;ll learn something. The only time I see this as really being an
issue is that you don&amp;#39;t want to talk about specific student issues in
a public forum to protect the students privacy. It&amp;#39;s harder to ask
your colleagues for help with some specific student related problem.
&lt;/p&gt;
&lt;p&gt;
Now, much of what I&amp;#39;m guessing Amy was talking about was the CS
Educator type discourse that doesn&amp;#39;t get into those weeds but I see
these communities as for all educators (which I&amp;#39;m sure Amy does as
well, just separating my read on her specific tweet).
&lt;/p&gt;
&lt;p&gt;
So, please do join us over in &lt;a href=&#34;https://www.reddit.com/r/CSEducation/&#34;&gt;CSEducation&lt;/a&gt; over on Reddit. If you want
to subscribe via an rss or atom reader just use this link:
&lt;a href=&#34;https://reddit.com/r/CSEducation.rss&#34;&gt;https://reddit.com/r/CSEducation.rss&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Github Org Explorer - now with oauth</title>
      <link>https://cestlaz.github.io/post/github-org-explorer-oauth/</link>
      <pubDate>Sun, 16 Feb 2020 12:53:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-org-explorer-oauth/</guid>
      <description>&lt;p&gt;
A while ago I wrote about a small side project - &lt;a href=&#34;https://cestlaz.github.io/post/github-org-explorer/&#34;&gt;GitHub Org Explorer&lt;/a&gt; -
a small tool to make it easier to manager GitHub repositories based on
organization. I&amp;#39;m using it as a replacement for the GitHub provided
Classroom Assistant. I find it more flexible in terms of exporting
assignments to my own machine and it allows me to delete repos en
masse which is critical after the semester is over.
&lt;/p&gt;
&lt;p&gt;
Shortly after I released it I found that GitHub was going to sunset
the basic authentication I was using so I had to convert the
application to support oauth.
&lt;/p&gt;
&lt;p&gt;
So, here it is. 
&lt;/p&gt;
&lt;p&gt;
Along the way I had a few headaches. I wrote about them &lt;a href=&#34;https://cestlaz.github.io/post/my-code-works/&#34;&gt;here&lt;/a&gt;. Mostly
versioning issues surrounding the node ecosystem. I still haven&amp;#39;t
figured it all out but I think I&amp;#39;ve gotten everything working
alright. 
&lt;/p&gt;
&lt;p&gt;
If you want to check it out, you can grab it off GitHub. Here&amp;#39;s the
repo: &lt;a href=&#34;https://github.com/zamansky/github-org-explorer&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/github-org-explorer&#34;&gt;https://github.com/zamansky/github-org-explorer&lt;/a&gt;&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the short runthrough video I made. Logging in looks different
but everything operates the same way:
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;https://www.youtube.com/embed/e-gNzuBG3mU&#34; frameborder=&#34;0&#34;
allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>CS Ed Podcast 2 - Dan Garcia on test creation</title>
      <link>https://cestlaz.github.io/post/cs-ed-podcast-2/</link>
      <pubDate>Thu, 13 Feb 2020 08:41:21 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-ed-podcast-2/</guid>
      <description>
&lt;p&gt;
Episode 2 of the &lt;a href=&#34;https://sites.duke.edu/csedpodcast/&#34;&gt;CS Ed podcast&lt;/a&gt; had Dan Garcia talk about
exam creation. 
&lt;/p&gt;
&lt;p&gt;
This wasn&amp;#39;t a podcast about the value of exams - in class, high stakes
or otherwise. In fact Dan says in the podcast it would be great to &amp;#34;get grades out of
the equation. Grades are gonna be an impediment to learning.&amp;#34; But
recognizes that we have not say in this most of the time (and I&amp;#39;ll add
that though I agree grades can and do perform a function) so we should
be creative in terms of assessment.
&lt;/p&gt;
&lt;p&gt;
Dan hit on a lot of important points and there&amp;#39;s no way
I can weave them into a sensible narrative so I&amp;#39;ll just hit a bunch of
points and riff from there.
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
Multiple choice.
&lt;/h3&gt;
&lt;p&gt;
Dan started right out front saying that he&amp;#39;s come around to being ok
or maybe even liking multiple choice  having referenced the ability
top make &amp;#34;good distractors.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
This is something that I think I&amp;#39;ll never agree with. On the one hand,
there is the idea of multiple guess but what really gets me is that
multiple choice questions, by definition, are gotcha questions. You&amp;#39;re
supposed to have distractors to pull you away from the right path. To
make a mistaken answer seem ok. I hate gotcha questions. Besides,
halfway decent multiple choice questions are really hard to write. 
&lt;/p&gt;
&lt;p&gt;
To me, MC questions are really a sometimes necessary tool to make up
for the fact that teachers are overworked and never have enough time
to grade. This might make them a necessary evil but it doesn&amp;#39;t make
them good. We might have to resort to them if we&amp;#39;re &amp;#34;teaching&amp;#34; a class
of hundreds or perhaps thousands  but we shouldn&amp;#39;t have classes
anywhere near that size. 
&lt;/p&gt;
&lt;p&gt;
Another problem with MC is that multiple choice tests seem to
frequently test speed rather than knowledge. APCS-A is a good example
of this. You have 90 minutes to answer 40 questions. That&amp;#39;s a bit over
2 minutes per question. That&amp;#39;s a race not an assessment. 
&lt;/p&gt;
&lt;p&gt;
Finally, I find multiple choice questions hard to write and time
consuming to typeset and format. I guess if I were better at the
distractors this might not be the case but a short
answer version of a MC question is always easier for me to write and
not much harder to grade.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Test creation
&lt;/h2&gt;
&lt;p&gt;
Half a day. Twelve hours. That&amp;#39;s how long Dan says it takes him to
make a test. That sounds about right. There&amp;#39;s no two ways about
it. Creating a good exam is hard work. Creating a bad one is easy and
quick but that&amp;#39;s not a good answer.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s think about this for a minute. A college professor might teach
one or two classes a semester. A college lecturer three, maybe 4. A
high school teacher teaches 5 classes. Typically two or three
different subjects. They basically get 40 minutes at work a day to
prep and that includes EVERYTHING - lesson planning, grading, test
creation, working with students. The whole kit and caboodle. Even with
two preps rather than three that&amp;#39;s an additional 24 hours just to
create those two tests. More since you&amp;#39;ll need multiple versions of
each. 
&lt;/p&gt;
&lt;p&gt;
Of course we can mitigate this a it by reusing and modifying questions
from old exams and sharing with colleagues but writing exams is a bear. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s no wonder teachers turn to multiple choice test banks.
&lt;/p&gt;
&lt;p&gt;
Really glad Dan spent time on this as teachers have to realize that
it&amp;#39;s not just them.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
How long is too long?
&lt;/h2&gt;
&lt;p&gt;
I frequently struggle with test duration. It sounds like it&amp;#39;s a common
problem. Dan has his TAs test the tests hoping they can do it in one
sixth the students time. He found, though that his slowest TAs might
take one third of the allocated time.
&lt;/p&gt;
&lt;p&gt;
When I started, I heard ratios from math teachers ranging from
students take twice the time I would on my exams up to five times
longer. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s hard to get it right but it&amp;#39;s important that tests are tests of
knowledge and ability not speed. At Stuy where class periods were 43
minutes I&amp;#39;d try for tests that took the typical student 33 - 35
minutes. Just enough time to go over the exam. You might ace the exam,
you might fail but time wouldn&amp;#39;t be the issue.
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Content
&lt;/h2&gt;
&lt;p&gt;
This was a big one. Dan talks about students expectations - are tests
cumulative or just since the last unit. Making sure test content is
proportional to lesson content. Watching out for test morale - letting
kids know hard questions are hard, test flow and much more. Not too
much to say here other than if you haven&amp;#39;t listen to the podcast.
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Backstory
&lt;/h2&gt;
&lt;p&gt;
One content point that I do want to drill down on is Dan&amp;#39;s stating
that we sometimes give too much backstory on questions. &amp;#34;If you want
them to sort a list, make them sort a list! You don’t have to tell a
story about the list….&amp;#34; Too often tests are races and even when they
aren&amp;#39;t a student has to first read the question, understand it, make
sure there are no gotchas, formulate and write down a solution. Giving
a complex backstory from which the students have to glean the real
question in a timed high pressure environment is just too much. There
are other places where you can ask a general question with a big back
story and have students solve the poblem.
&lt;/p&gt;
&lt;p&gt;
This made me think of technical interviews which are all
backstory. The truth though is that most kids solve them by pattern
matching. They prep by doing similar problems and look for key
phrases. Have unlimited memory and need fast access - there&amp;#39;s probably
a hash table involved. Something have an easy solution but it&amp;#39;s too
slow - think recurison. Recursion is obvious but too slow - dynamic
programming. It&amp;#39;s a &amp;#34;have I seen this question before&amp;#34; more so than a
real test of a potential employees ability.
&lt;/p&gt;
&lt;p&gt;
The other thing it made me think is that while I very much agree with
Dan, it flies  in the face of what teachers have been forced to deal
with in the last couple of decades. It&amp;#39;s all about the word problem
where the kid must sleuth out the question. So many high stakes exams
are as much reading exams as they are content exams. I&amp;#39;m not even
going to get into how this affects non English speakers but let&amp;#39;s just
say this is a real issue.
&lt;/p&gt;
&lt;h2 id=&#34;headline-6&#34;&gt;
Tests on computers and other test taking formats
&lt;/h2&gt;
&lt;p&gt;
Towards the end, Dan talks about having an on-computer part of an
exam. I like having the students do live on computer exams but they
also have their issues. I&amp;#39;m not so concerned about cheating. I give
them the resources they can use and truth be told, the end results
don&amp;#39;t differ much from when I&amp;#39;ve used paper exams or other
assessments. I am always concerned about a computer breaking but
fortunately that hasn&amp;#39;t really been a problem.
&lt;/p&gt;
&lt;p&gt;
What has been a problem however is the fact that speed can become an
issue. Some kids know how to type others don&amp;#39;t. This can be a HUGE
advantage in a CS0 or CS1 class. When you&amp;#39;re thinking about what
letter to type you&amp;#39;re not thinking about the problem and in general
beginners are very slow. I always tell my second year students to look
at what they can do as an overnight assignment. They realize that
what&amp;#39;s now overnight was a large semester project back in their first
year. This all means that you really have to be careful about the
length of a computer based test. 
&lt;/p&gt;
&lt;p&gt;
Another thing Dan mentioned was giving group tests. Students would
work in teams. He noted that in the group, The collective score was
always higher than the top individual score. I get the idea and it&amp;#39;s
probably true trend wise but can&amp;#39;t be universally true if your tests
are actually compatible. Given a fair test, surely some students can
ace it in which case the group can only equal the top scorer.
&lt;/p&gt;
&lt;p&gt;
This group test reminded me of cooperative learning which was all the
rage back in the day. Of course cooperative learning is no longer &amp;#34;it&amp;#34;
but while it never was the silver bullet it is notable that it had
some good ideas and it sounds like Dan is implementing some of them
albeit without the same name.
&lt;/p&gt;
&lt;h2 id=&#34;headline-7&#34;&gt;
Thoughts on grading
&lt;/h2&gt;
&lt;p&gt;
I&amp;#39;ll disagree here with Dan&amp;#39;s contention that we should all use
Gradescope. I&amp;#39;ve come out against autograders before so I&amp;#39;ll just
summarize here. I&amp;#39;m not entirely against autograders. They&amp;#39;re great
for rudimentary answers and can also provide a level of instant
student feedback. The flip side is that in order to get to know your
students you have to look at their work. You might not learn much from
multiple choice answers but you will if you look at code they&amp;#39;ve
written out or other long form answers. I get that you can&amp;#39;t do this
with huge classes but again, I&amp;#39;ll say we shouldn&amp;#39;t have huge
classes. To use an autograder as a necessity is one thing but to say
it&amp;#39;s better rather than just a time save is another. Now, you can use
autograding tools effectively to cull and sort and draw your attention
to things to look at by hand and that&amp;#39;s a plus but I haven&amp;#39;t seen too
much of that in current tools.
&lt;/p&gt;
&lt;p&gt;
Rather than an autograder, I try to use testing frameworks on short
answers  and to provide instant feedback. Specifically I use &lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt;
for C++ and &lt;a href=&#34;https://docs.python.org/2/library/unittest.html&#34;&gt;unittest&lt;/a&gt; for Python. They provide students with instant
answer feedback while at the same time introducing them to practical
software engineering sensibilities.
&lt;/p&gt;
&lt;h2 id=&#34;headline-8&#34;&gt;
Some of my memorable tests
&lt;/h2&gt;
&lt;p&gt;
I thought here I&amp;#39;d share a few exams I&amp;#39;ve given that I found
memorable.
&lt;/p&gt;
&lt;p&gt;
First was a five question long answer exam. I gave it to my kids
telling them &amp;#34;Answer three of the five questions. You can select any
three but when grading, I will only grade quesitons 1, 2 and 4.&amp;#34; Some
students had some real issues with this. Led to an interesting
discussion as to about choice and consequences. I didn&amp;#39;t do this in
order to mess with the kids. It was back in the day when you had to
send exams to the central copy room to be copied and needed about a
weeks lead time. I didn&amp;#39;t know the direction the class would take so
wrote questions 3,4, and 5 to hedge my bets. By the time we got to the
test, question 4 made sense while 3 and 5 would have been really super
hard.
&lt;/p&gt;
&lt;p&gt;
A second test, well quiz I gave once was a single question that was
something like this: 
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
take the next 20 minutes to share with me your thoughts on cellular
automata. Consider why we studied it. Was it interesting? Why, why
not? What did you learn?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Some students absolutely loved it. Others loathed it. The freedom gave
some kids license to give me super creative interesting answers. Some
really needed more constraints and had tremendous difficulty.
&lt;/p&gt;
&lt;p&gt;
Finally, I once gave a semi-gag test. The instructions on the front
said that you had to proceed in order. You WERE NOT TO look ahead. It
was a mix of real CS questions and goof questions like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
sprint up to the blackboard, draw a smiley on the board, then return
to your seat and go on to the next question.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Stand up, do 10 jumping jacks, sit and proceed to the next question
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Stand up and raise your right hand. When you see someone else with
their hand raised, walk to them and give them a high five. Then
return to your seat nad proceed to the next question.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The last page had an answer key and instructed the students to grade
themselves before handing it in.
&lt;/p&gt;
&lt;p&gt;
Overall the class enjoyed the exam.
&lt;/p&gt;
&lt;p&gt;
What was interesting, was that after class a few student appoached me
either in person or via email saying that they felt really bad but
they looked at the end of the exam when it started so saw the
answers. They felt they cheated and wanted to let me know and
understood if they got  zeros (which of course, I didn&amp;#39;t give them). 
&lt;/p&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
Final thoughts
&lt;/h2&gt;
&lt;p&gt;
Wow. That was long but I said before that there was a lot to unpack. 
&lt;/p&gt;
&lt;p&gt;
I left a bunch out of this and it&amp;#39;s already a really long post. I
might write more on test creation and administration at some other
point but the takeaway from this is listen to the &lt;a href=&#34;https://sites.duke.edu/csedpodcast/&#34;&gt;podcast&lt;/a&gt; if you
haven&amp;#39;t already.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My code works -- and I have no idea why!!!</title>
      <link>https://cestlaz.github.io/post/my-code-works/</link>
      <pubDate>Sun, 09 Feb 2020 16:22:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/my-code-works/</guid>
      <description>&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT-4l2Bv_a85wYiS-5pWgYdfb6lb50CIwZ3GvjtNIwqVL1VruoL&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
One of my pet annoyances is how code ecosystems have gotten more and
more complex. Sometimes I think tool designers put together build
systems to show how clever they are rather than to solve dependency
problems as cleanly and simply as possible.
&lt;/p&gt;
&lt;p&gt;
Over the break I wrote &lt;a href=&#34;https://cestlaz.github.io/post/github-org-explorer/&#34;&gt;GitHub Org Explorer&lt;/a&gt; - a tool to help deal with
GitHub classroom repositories. It worked but was using &amp;#34;basic&amp;#34;
authentication where it sent a username and password with every
request. As GitHub was deprecating that from their API I started to
look at converting the application to use oauth. 
&lt;/p&gt;
&lt;p&gt;
First I threw together a little &lt;a href=&#34;https://github.com/zamansky/clojurescript-electron-oauth-test&#34;&gt;proof of concept app&lt;/a&gt; that just
authenticated with GitHub and then started to move that code into my
explorer app.
&lt;/p&gt;
&lt;p&gt;
First problem – the code that that worked in the proof of concept was
crashing out in my actual app. I ultimately did a line by line
analysis and couldn&amp;#39;t find a difference. Even the configuration files
appeared the same. 
&lt;/p&gt;
&lt;p&gt;
Finally, in a fit of desperation, I killed all the supporting
libraries that the build system installed and downloaded them again. 
&lt;/p&gt;
&lt;p&gt;
It worked!!!!!
&lt;/p&gt;
&lt;p&gt;
It didn&amp;#39;t inspire much confidence though.
&lt;/p&gt;
&lt;p&gt;
So, I went on and finished converting the app to oauth. All done,
right? Wrong.
&lt;/p&gt;
&lt;p&gt;
I tried to build everything on another system and it crashed
out. Weird. It worked on one machine but not another. 
&lt;/p&gt;
&lt;p&gt;
Solved that problem by wiping out the entire build system - node and
npm using nvm and shadow-cljs and it worked.
&lt;/p&gt;
&lt;p&gt;
But it didn&amp;#39;t. 
&lt;/p&gt;
&lt;p&gt;
There was one final hurdle. 
&lt;/p&gt;
&lt;p&gt;
When I used the build system to compile and run in &amp;#34;development&amp;#34; mode
everything worked. Compile for production? Not so much.
&lt;/p&gt;
&lt;p&gt;
What could it be?
&lt;/p&gt;
&lt;p&gt;
After about a day of fretting, I discovered  that for some reason,
when compiling for dev you get certain libraries including a string
formatting one I was using. When compiling for production you didn&amp;#39;t
get them. Why would anyone set up a build system that way???????
&lt;/p&gt;
&lt;p&gt;
Given that I&amp;#39;m using a bunch of tools that I&amp;#39;m new to - using
shadow-cljs to go from clojurescript to javascript all ending up with
a build for the electron platform - I just stopped using the library 
&lt;/p&gt;
&lt;p&gt;
Problem solved. 
&lt;/p&gt;
&lt;p&gt;
Well, sort of. 
&lt;/p&gt;
&lt;p&gt;
I can now run my app but I&amp;#39;m still not filled with confidence.
&lt;/p&gt;
&lt;p&gt;
Now, I&amp;#39;ve been at this game for a very long time. I&amp;#39;ve been
programming for around 40 years. Imagine what it&amp;#39;s like for student or
beginner.
&lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t tell you how many times I&amp;#39;ve seen a post on the learn
programming subreddit from some beginner who learned using an online
tool or in a class that had them develop in a sandbox and they left
with no clue how to write a real program outside of the classroom
environment. If they&amp;#39;re not prepared to merely write a program outside
of some courseware system they&amp;#39;ll have little chance going up against
webpack, lienengen, cmake and the like.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying that we should throw our beginners out into the wild
and start them with vi, C, and autotools but nobody&amp;#39;s paying attention
to the whole journey from Hello World to the real world.
&lt;/p&gt;
&lt;p&gt;
Somebody should.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 66 - an eshell switcher in elisp</title>
      <link>https://cestlaz.github.io/post/using-emacs-66-eshell-elisp/</link>
      <pubDate>Sat, 08 Feb 2020 08:12:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-66-eshell-elisp/</guid>
      <description>&lt;p&gt;
I thought it was time to give &lt;a href=&#34;https://masteringemacs.org/article/complete-guide-mastering-eshell&#34;&gt;eshell&lt;/a&gt; in Emacs another try. It has some
pretty cool features but for whatever reason, I&amp;#39;ve never really been
able to adopt Emacs as my go to shell.
&lt;/p&gt;
&lt;p&gt;
Eshell out of the box is pretty cool but could use some
enhancements. When launching at login it doesn&amp;#39;t know about the path
you set in your .bashrc or .zshrc in my case files. It just seemed to
have problems with paths in general but that was fixed with the
exce-path-from-shell package. The prompt also needed some fixing up
along with some other tweaks. 
&lt;/p&gt;
&lt;p&gt;
I found &lt;a href=&#34;https://github.com/manateelazycat/aweshell&#34;&gt;aweshell&lt;/a&gt; which looked promising but it wasn&amp;#39;t on melpa so I
had to clone it separately. I also noticed that it basically tied
together some packages I could download myself and added a shell
switcher but didn&amp;#39;t bind the keys.
&lt;/p&gt;
&lt;p&gt;
I thought I&amp;#39;d dive into elisp -something I haven&amp;#39;t done in a while to
write my own.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my current complete eshell config:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;(use-package exec-path-from-shell
  :ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
  :config
  (exec-path-from-shell-initialize))


    (use-package fish-completion
    :ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
    :config
    (global-fish-completion-mode))
  &lt;span style=&#34;color:#75715e&#34;&gt;;; (use-package eshell-prompt-extras &lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;;; :ensure t&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;;; :config&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;;; (setq epe-show-python-info nil)&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;;; )&lt;/span&gt;

  (use-package eshell-git-prompt
  :ensure &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
  :config
  (eshell-git-prompt-use-theme &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;git-radar&lt;/span&gt;)
  )&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
And here&amp;#39;s the code I ended up with for my shell switcher:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;+BEGIN_SRC emacs-lisp
  (require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cl-lib&lt;/span&gt;)
  (defun select-or-create (arg)
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Commentary ARG.&amp;#34;&lt;/span&gt;
    (if (string= arg &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;New eshell&amp;#34;&lt;/span&gt;)
        (eshell &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
      (switch-to-buffer arg)))
  (defun eshell-switcher (&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;optional&lt;/span&gt; arg)
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Commentary ARG.&amp;#34;&lt;/span&gt;
    (interactive)
    (let* (
           (buffers (cl-remove-if-not (lambda (n) (&lt;span style=&#34;color:#a6e22e&#34;&gt;eq&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;buffer-local-value&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;major-mode&lt;/span&gt; n) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eshell-mode&lt;/span&gt;)) (&lt;span style=&#34;color:#a6e22e&#34;&gt;buffer-list&lt;/span&gt;)) )
           (names (&lt;span style=&#34;color:#a6e22e&#34;&gt;mapcar&lt;/span&gt; (lambda (n) (&lt;span style=&#34;color:#a6e22e&#34;&gt;buffer-name&lt;/span&gt; n)) buffers))
           (num-buffers (&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; buffers) )
           (in-eshellp (&lt;span style=&#34;color:#a6e22e&#34;&gt;eq&lt;/span&gt; major-mode &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eshell-mode&lt;/span&gt;)))
      (cond ((&lt;span style=&#34;color:#a6e22e&#34;&gt;eq&lt;/span&gt; num-buffers &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) (eshell (or arg &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)))
            ((not in-eshellp) (switch-to-buffer (&lt;span style=&#34;color:#a6e22e&#34;&gt;car&lt;/span&gt; buffers)))
            (&lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; (select-or-create (&lt;span style=&#34;color:#a6e22e&#34;&gt;completing-read&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Select Shell:&amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;cons&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;New eshell&amp;#34;&lt;/span&gt; names)))))))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
I currently bound eshell-switcher to &lt;code&gt;CTRL-z e&lt;/code&gt;. 
&lt;/p&gt;
&lt;p&gt;
The video goes through the whole process:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/-dIjFZBDt64&#34;&gt;https://www.youtube.com/embed/-dIjFZBDt64&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Riffing on the CS Ed Podcast - Episode 1 - David Malan</title>
      <link>https://cestlaz.github.io/post/cs-ed-podcast-1/</link>
      <pubDate>Thu, 06 Feb 2020 16:42:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-ed-podcast-1/</guid>
      <description>
&lt;p&gt;
I saw a couple of posts the other day about the &lt;a href=&#34;https://sites.duke.edu/csedpodcast/&#34;&gt;CS Ed Podcast&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Kristin Stephens-Martinez of Duke interviewed (or will interview) six
CS educators on a variety of topics. There are four posted so far:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
David Malan
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Dan Garcia
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Amy Ko
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Mark Guzdial
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Before I started I thought I&amp;#39;d listen to a few and then share some
thoughts but I found so much to unpack  in the second episode where
Dan talks about testing that I decided to share my thoughts on the
first episode, then Dan&amp;#39;s and then see if find anything to comment on
in episodes three and beyond.
&lt;/p&gt;
&lt;p&gt;
All the podcasts are available via the link above and transcripts are
also provided - a nice touch for a number of reasons. It not only
increases accessibility, it also makes the episodes potentially more
discoverable via search engine and certainly more searchable. For me it was
helpful as I only listen to podcasts while working out - running or in
the gym so being able to search a text page to double check what I
thought I heard while struggling to finish mile six or seven was a
boon.
&lt;/p&gt;
&lt;p&gt;
In episode 1, Stephens-Martinez interviewed David Malan of CS50
fame. The interview was mostly about tools used in CS50.
&lt;/p&gt;
&lt;p&gt;
Even though I&amp;#39;m not going to comment on CS50 as it wasn&amp;#39;t the direct
topic of the interview I feel I should share my bias in case any comes
through. I&amp;#39;m not a fan of CS50. This is an opinion I formed by talking
to a number of my former students who have taken/TA&amp;#39;d CS50 and/or
courses that follow it combined with my own thoughts and beliefs about
CS Education. That said, I have no first hand exposure to Harvard&amp;#39;s
CS50 nor have I ever met Mr. Malan so I reserve the right to change my
point of view at some point in the future.
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
Summary stats
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Did I enjoy the podcast? Yes - I&amp;#39;d give it 4/5 on the making running
bearable scale. The interview flowed well and a lot of information
was shared. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Did I learn anything? Honestly, no. This was probably due to the
topic but more on that below.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Should you listen? Yes. Again, more below.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Thoughts
&lt;/h3&gt;
&lt;p&gt;
A theme of the podcast was that Malan wants his students to be exposed
to and end up using real tools but uses the CS50 tools to scaffold
their way. Not having a huge amount of exposure I won&amp;#39;t comment on how
well this works but it&amp;#39;s philosophically similar to my beliefs where I
start my beginners in a simplified environment like Thonny for Python
and have them &amp;#34;graduate&amp;#34; up to a more full featured yet less forgiving
editor. 
&lt;/p&gt;
&lt;p&gt;
One of the tools they talked about was &lt;a href=&#34;https://github.com/cs50/help50&#34;&gt;help50&lt;/a&gt; - a command line tool to
improve on error messages (there&amp;#39;s also a web interface
availabe). Instead of typing &lt;code&gt;gcc myfile.c&lt;/code&gt; students would type
&lt;code&gt;hepl50 gcc myfile.c&lt;/code&gt; and instead of getting just the cryptic error
message you&amp;#39;d also get an improved message. In my short time playing
with it I couldn&amp;#39;t actually get a better error but I only played with
it for a few minutes. 
&lt;/p&gt;
&lt;p&gt;
I like the idea of sharing both the original error message as well as
the improved one but can&amp;#39;t really comment further. What I would have
loved to hear, however was how they transition the kids first to use
the tool and then to grow out of it. I&amp;#39;d also be curious to see if
there were differences between adoption of  and graduation from the
tool as well as it&amp;#39;s effectiveness for the Harvard population where
everyone is pre-selected to be high performing in terms of class
performance vs an institution that takes all comers. 
&lt;/p&gt;
&lt;p&gt;
Another tool I liked was &lt;a href=&#34;https://cs50.readthedocs.io/style50/&#34;&gt;style50&lt;/a&gt; which tells you if and how your code
violates coding standards but doesn&amp;#39;t automatically fix it.
&lt;/p&gt;
&lt;p&gt;
This is something I show my classes just using our editors style
checkers. I have Emacs set up to give me a red tick when I violate
style but only says what&amp;#39;s wrong when I move the cursor over and it
doesn&amp;#39;t auto correct. 
&lt;/p&gt;
&lt;p&gt;
I like this as it raises student awareness but they actually have to
make the change and learn to either code in an approved style or make
a conscious decision to violate style.
&lt;/p&gt;
&lt;p&gt;
For me, the missing part of the interview was the &amp;#34;how.&amp;#34; How do you
get the students to adopt the tool and how do you get them to outgrow
them. 
&lt;/p&gt;
&lt;p&gt;
At the end, podcasts get to share something from tech that they find
cool and Mr. Malan shared containers - Docker images as an
example. The idea that you can package something for students and know
that they all get the same package with the same versions of all the
required tools. That seems to make sense but I think there&amp;#39;s another
side, a downside  to containers both in terms of using them in classes
and in terms of the direction we&amp;#39;re going with containers in tech. All
of that though is a topic for another day.
&lt;/p&gt;
&lt;p&gt;
The podcast also covered other tools and if you haven&amp;#39;t listened yet
you should. 
&lt;/p&gt;
&lt;p&gt;
As I found a lot of rich material in Dan&amp;#39;s interview I&amp;#39;ll almost
certainly write something about that. Also probably on Amy&amp;#39;s about
debugging. Spoiler alert - both are worth listening to. Dan&amp;#39;s runs
about 40 minutes and Amy&amp;#39;s 24. I haven&amp;#39;t listened to Mark&amp;#39;s yet but
expect that to be worth our time as well.
&lt;/p&gt;
&lt;p&gt;
One thing I do want to point out is that all six interviews for this
series are of college professors - no K12 teachers. Not sure why that
decision was made but I found it to be interesting. Anyone who knows
me is aware that I&amp;#39;m much more of a teacher as craftsman guy rather
than a &amp;#34;the research says&amp;#34; guy so I have my bias but regardless, I
think that interviewing a professor, a high school teacher, and an
early grade teacher could give some very interesting and contrasting
perspectives.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 65 - Live Python</title>
      <link>https://cestlaz.github.io/post/using-emacs-65-live-python/</link>
      <pubDate>Sun, 02 Feb 2020 13:13:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-65-live-python/</guid>
      <description>&lt;p&gt;
The other day I stumbled upon Emacs&amp;#39;s &lt;a href=&#34;https://github.com/donkirkby/live-py-plugin&#34;&gt;Live Coding&lt;/a&gt; plugin. It takes
interactive coding up to the next level. 
&lt;/p&gt;
&lt;p&gt;
Normally, when you code Python, if you&amp;#39;re working in a REPL, every
time you hit &amp;lt;Enter&amp;gt; the line you just typed is evaluated. When you&amp;#39;re
working ina source file, you&amp;#39;re just editing until you send the file
into a Python interpreter.
&lt;/p&gt;
&lt;p&gt;
With this module, your file is continually evaluated as you type and
it shows you the results in a side window. 
&lt;/p&gt;
&lt;p&gt;
If you type in:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(c&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;c)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
The live python window will display something like:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;
b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;
c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
If you change one of the variables, everything updates.
&lt;/p&gt;
&lt;p&gt;
It gets even cooler when you add loops, functions, and even recursion.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s also support for unit testing.
&lt;/p&gt;
&lt;p&gt;
It works, to varying degrees with Emacs, PyCharmm, Sublime Text and
there&amp;#39;s even a browser version. Emacs handles the basics and it seems
that the Sublime Text version adds support for some graphing. PyCharm
has that plus turtle graphics.
&lt;/p&gt;
&lt;p&gt;
While this is &lt;strong&gt;very&lt;/strong&gt; cool, to be honest, I don&amp;#39;t know how useful this
is going to be but I&amp;#39;m very excited to play with it in the Fall when
I&amp;#39;ll be teaching Python again.
&lt;/p&gt;
&lt;p&gt;
Check out this short video to see it in action:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/bYy90EUAh98&#34;&gt;https://www.youtube.com/embed/bYy90EUAh98&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter Codefest 2020</title>
      <link>https://cestlaz.github.io/post/codefest-2020/</link>
      <pubDate>Sat, 01 Feb 2020 13:41:03 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/codefest-2020/</guid>
      <description>&lt;p&gt;
Two of the challenges faced by young computer science students are
finding the time to build independent projects for their portfolios
and getting feedback from and networking with tech professionals.
&lt;/p&gt;
&lt;p&gt;
Enter Hunter Codefest 2020
&lt;/p&gt;
&lt;p&gt;
&amp;lt;style&amp;gt;
.flip {
    -webkit-transform: rotate(180deg);
    -moz-transform: rotate(180deg);
    -o-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    transform: rotate(180deg);
}
&amp;lt;/style&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left flip&#34;&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/codefest2020/codefest.jpg&#34; width=&#34;40%&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left flip&#34;&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/codefest2020/google.jpg&#34; width=&#34;40%&#34;/&gt; 
&lt;/figure&gt;

&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Hunter, like most colleges has a Fall semester that runs from late
August through the end of Decemeber and a Spring semester that starts
at the end of January and runs through late may. There&amp;#39;s generally
around a month between the two. Sometimes a student can take one of
the few courses offered during this &amp;#34;Winter semester&amp;#34; but more often
than not the time is wasted.
&lt;/p&gt;
&lt;p&gt;
At Hunter, students can do a number of things during this break. Some get short term
mini internships, others take part in our tech bootcamps. Now, they
can all participate in Codefest.
&lt;/p&gt;
&lt;p&gt;
We launched in late December at the end of finals. Students are given
a theme and form groups. They then have a month to build a
project. It&amp;#39;s a great opportunity to learn how to work on a team and
explore tools that you wouldn&amp;#39;t normally use in a regular CS class.
&lt;/p&gt;
&lt;p&gt;
Friday was the payoff. We all gathered at GoogleNYC for a big
celebration. Each group was set up at a table with professional
Software Engineers. Mostly Googlers but wa also invited some outside
guests. They&amp;#39;d then spend time with discussing the project. After a
while, the Googlers would rotate to another project.
&lt;/p&gt;
&lt;p&gt;
Rinse and repeat.
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/codefest2020/gil.jpg&#34;
         alt=&#34;Current Googler and Hunter CS grad Gil advising our current students.&#34; width=&#34;50%&#34;/&gt; &lt;figcaption&gt;
            &lt;p&gt;Current Googler and Hunter CS grad Gil advising our current students.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/codefest2020/sarah.jpg&#34;
         alt=&#34;My former Stuy student and current Googler Sarah doing the same.&#34; width=&#34;50%&#34;/&gt; &lt;figcaption&gt;
            &lt;p&gt;My former Stuy student and current Googler Sarah doing the same.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
Afterwards we had some demos and then a big networking session where
our Hunter CS students got to spend more time getting to know and
getting advice from a host of Googlers and other software engineers
while enjoying refreshments.
&lt;/p&gt;
&lt;p&gt;
Not everyone could make it due to class but we had a pretty strong
turnout.
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;flip&#34;&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/codefest2020/everyone.jpg&#34; width=&#34;75%&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
Our student organizers did most of the heavy lifting and made the
whole event work from start to finish. Here are Leo, Angela, Shariar,
and Tracey. Our two other organizers, Miguel and Kun couldn&amp;#39;t make it
as Miguel was travelling and Kun had an interview for an internship.
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/codefest2020/organizers.jpg&#34;
         alt=&#34;Our organizers&#34; width=&#34;50%&#34;/&gt; &lt;figcaption&gt;
            &lt;p&gt;Our organizers&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
Special thanks to Brendan and hist team of Googlers who helped make
this happen. I also want to say thanks to the dozen or so of my former
students currently at Google who stopped by to help.
&lt;/p&gt;
&lt;p&gt;
Everyone was super impressed with what the students produced. It was
a great event and it&amp;#39;ll be even better next year.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AI For All</title>
      <link>https://cestlaz.github.io/post/pd-ai-for-all/</link>
      <pubDate>Fri, 31 Jan 2020 07:00:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-ai-for-all/</guid>
      <description>&lt;p&gt;
Yesterday we had another Professional Development Workshop for High
School CS Teachers and as usual, I wnat to express my thanks to
&lt;a href=&#34;digitalocean.com&#34;&gt;Digital Ocean&lt;/a&gt; for continuing to provide space, food, and great overall support.
&lt;/p&gt;
&lt;p&gt;
This time though, instead of JonAlf and I having
to run the show we had a guest speaker. We were joined by &lt;a href=&#34;https://twitter.com/SarahEJudd&#34;&gt;Sarah Judd&lt;/a&gt;
of &lt;a href=&#34;http://ai-4-all.org/about/what-is-ai/&#34;&gt;AI4ALL&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Sarah gave an overview of what AI4ALL was up to and why but the core
of her presentation was taking us through some of the exercises 
they have been developing at AI4All. Specifically, they&amp;#39;re developing
what they call &lt;a href=&#34;http://ai-4-all.org/open-learning/&#34;&gt;AI4All Open Learning&lt;/a&gt; which consists of curricular
materials aimed at high school students. 
&lt;/p&gt;
&lt;p&gt;
As we only had a short time, Sarah took us on a whirlwind tour of what
they&amp;#39;re building from the baseline concepts of AI that she feels (and
I agree) that every students should know up to specific AI topics like
neural nets. Obviously you can&amp;#39;t cover even a single course in one
evening professional development session but Sarah did a great job
giving both a taste and an overview.
&lt;/p&gt;
&lt;p&gt;
The activities were all engaging and and covered both ethical/societal
issues as well as the technical/CS. I appreciated that the materials weren&amp;#39;t
presented as canned experiences but rather tools that a teacher would
use to deliver their own experiences. On the other hand I&amp;#39;m skeptical
of the website&amp;#39;s claims of &amp;#34;No AI or computer science experience
necessary.&amp;#34; I&amp;#39;m a firm believer that a CS teacher must know both CS
and how to teach it - maybe not at first due to necessity, but
ultimately. Regardless, Sarah has both real teaching experience and CS
knowledge and I put more faith in what she&amp;#39;s saying than a PR blurb on a
web site. 
&lt;/p&gt;
&lt;p&gt;
Now you&amp;#39;ll notice I haven&amp;#39;t said anything specific about Sarah&amp;#39;s
presentation or AI4All and that&amp;#39;s because Sarah will be giving a
variation of it at SIGCSE in March. If you teach high school and are
going to be at SIGCSE, I highly recommend you check out her session.
&lt;/p&gt;
&lt;p&gt;
If not, perhaps I&amp;#39;ll blog more specifics after the event.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sorting by hand or searching and inserting</title>
      <link>https://cestlaz.github.io/post/sorting-by-hand/</link>
      <pubDate>Sun, 26 Jan 2020 13:10:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sorting-by-hand/</guid>
      <description>&lt;script type=&#34;text/javascript&#34;
  src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;&gt;
&lt;/script&gt;
&lt;p&gt;
Natan commenting on work the  other day:
&lt;/p&gt;
&lt;blockquote&gt;

&#34;You have two lists. One is sorted, the other is not. Every item in
one list corresponds to an item in the other. Is it faster to sort the
unsorted list and then merge them, or simply go through the unsorted
list in order and pair each item with the item you can find in the
presorted list?&#34; is a question I asked today in the dressing room of
an off-Broadway theater. I&#39;ve used RegEx at my job before, but I never
thought Big O notation would become relevant!

Let this be submitted as evidence that a computer science education is
valuable no matter what field you go into. That, or I&#39;m just a
particular kind of crazy.
&lt;/blockquote&gt;
&lt;p&gt;
There&amp;#39;s clearly an unplugged activity here :-)
&lt;/p&gt;
&lt;p&gt;
As a programming exercise, it&amp;#39;s pretty easy to analyze. Since one list
is sorted, you can use a binary search for each insertion. That&amp;#39;s \( n \)
searches of \(lgn\) each yields an \( nlogn \)  run time. Of course,
if the sorted list is an array and you have to shift all the elements
down in linear time for each insert, that changes things.
&lt;/p&gt;
&lt;p&gt;
Sorting first is also \(nlogn\). Use an \(nlogn\) sort and then merge
the two lists which is linear. Here though, you will also either have
to ultimately do the shifting for insertions or use extra space by
making an new array or list for the two merged sets.
&lt;/p&gt;
&lt;p&gt;
The interesting discussion points here are the issues like in place
vs not and the extra time needed for the shifts.
&lt;/p&gt;
&lt;p&gt;
Unplugged though allows for even richer discussion.
&lt;/p&gt;
&lt;p&gt;
Having humans step through computer algorithms can be popular
activities at times and they can also be very instructive but as
humans, we&amp;#39;re not optimized the same ways computers are. While we
might perform some tasks using set algorithms and those algorithms
might be the same as on a computer, more often than not, they&amp;#39;re
different - at least at a higher thought level.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s take the insertion solution to our problem. Code wise, we&amp;#39;d use
a binary search. Humans however don&amp;#39;t use binary search. If we did, it
would actually be pretty inefficient.  We&amp;#39;d have to locate the exact
middle which would probably require specific counting and already
we&amp;#39;ve used linear time. Even if we guessed the first middle correctly,
each additional split would require we find a new middle and again,
realistically, each time we&amp;#39;d count - more linear components.
&lt;/p&gt;
&lt;p&gt;
In reality, we&amp;#39;d probably use a guided type search. The specific
problem involved inserting letters from an unsorted pile into
envelopes in a sorted pile so we&amp;#39;d jump down in the envelope pile by a
guess amount based on the letter we&amp;#39;re looking for - Last name Tucker,
we&amp;#39;d jump close to the end. For Davis, near the front. If we ended up
far off, we&amp;#39;d jump again, if not, we&amp;#39;d rifle through one by one for
the insertion point. There are similarities to a binary search but
it&amp;#39;s a very different algorithm. We couldn&amp;#39;t easily code up our guided
search as we have an intuitive instant ability to decide where to jump
to and when to jump but on the other hand we&amp;#39;re slower if we use the
proven \(logn\) binary search.
&lt;/p&gt;
&lt;p&gt;
Sorting is similar. On the computer we&amp;#39;d probably use our langauges
built in sort which would be \(nlogn\). By hand, we&amp;#39;d probably use
some sort of bucket sort with merging in the individual piles. Even if
we were sorting continuous values as opposed to discrete ones like
names, we&amp;#39;d probably use buckets. 
&lt;/p&gt;
&lt;p&gt;
All of this can lead to very rich discussion - how we do things vs how
the computer does and even more, how we decide how to do things. Maybe
with a small data set we don&amp;#39;t even do a bucket sort but more of an
insertion or selection type sort. How do we decide what our jumps our
when we&amp;#39;re searching by hand or our bucket demarcations when sorting?
&lt;/p&gt;
&lt;p&gt;
Lots of good stuff here, all because somebody at Natan&amp;#39;s job forgot to
sort the letters before they printed them out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Career Directions - how a sad day changed mine</title>
      <link>https://cestlaz.github.io/post/career-directions/</link>
      <pubDate>Fri, 24 Jan 2020 14:39:29 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/career-directions/</guid>
      <description>&lt;p&gt;
I was talking to a friend yesterday who had just started doing grad
work in school leadership. It got me thinking about my original career
plans and how you never know where you&amp;#39;re going to end up.
&lt;/p&gt;
&lt;p&gt;
Well, not my original original career plans. When I started on Wall
Street I had no idea what the future would bring. For all I knew, I
could have been a career professional programmer or even gone over to
the business side.
&lt;/p&gt;
&lt;p&gt;
When I started teaching, it was as a math teacher and back then, I
thought that if I were to do it for my career, it would probably be in
math with maybe a smattering of CS. I had reached out to DOE once
about a greater role for CS but this was in the very early 90s and was
summarily dismissed.
&lt;/p&gt;
&lt;p&gt;
What changed?
&lt;/p&gt;
&lt;p&gt;
It was September 1996. I had graduated my first class of CS students
having taught 4 sections of APCS-AB and one of Comptuer Graphics - a course I
created to get out of teaching Geometry. I had just started the
Systems course and given the culture of the school and the trends of
the times it looked like I&amp;#39;d be able to teach all CS for the
foreseeable future if I so desired.
&lt;/p&gt;
&lt;p&gt;
My friend and mentor Richie Rothenberg was the math chair. Richie, or
Doc as we sometimes called him started to talk to me about succession
plans. Richie was going to turn 50 that spring. In five years he&amp;#39;d
both hit retirement and his kids would be done with college. The plan
was to groom me as his replacement.
&lt;/p&gt;
&lt;p&gt;
Sounded like a good idea. I enrolled in Hunter&amp;#39;s school leadership
certificate program and we were on our way. 
&lt;/p&gt;
&lt;p&gt;
Early that spring, Richie called me in to his office and told me that
CS enrollment had skyrocketed. He was my boss but wanted to know if he
could be the other CS teacher, shadow me and follow my lead as the CS
guy. I was super psyched for this.
&lt;/p&gt;
&lt;p&gt;
If things went to plan, Richie and I would have split CS for the next
few years while I took on a larger administrative roll and then when
Richie retired, I&amp;#39;d take the reigns. 
&lt;/p&gt;
&lt;p&gt;
If that happened I probably wouldn&amp;#39;t have pushed for more CS and
history or at least my history would have been very different. 
&lt;/p&gt;
&lt;p&gt;
What happened?
&lt;/p&gt;
&lt;p&gt;
May 15 1997. 
&lt;/p&gt;
&lt;p&gt;
Richie, on his 50th birthday, driving home, suffered a heart attack,
crashed his car and passed away.
&lt;/p&gt;
&lt;p&gt;
It was devastating. For me and for the school. I wrote a bit about
more about Richie &lt;a href=&#34;https://cestlaz.github.io/posts/2012-05-09-my-favorite-year-teacher.html/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-07-rich-rich.html/&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t yet have my license and in any event wasn&amp;#39;t ready. The
principal chose Danny Jaye, another great friend and mentor for the
position. I&amp;#39;m pretty sure that up until then Danny had no real desire
to be department chair. He seemed happy ruling over his math reserach
domain and working int he dean&amp;#39;s office.  Danny would adopt the
moniker &amp;#34;doc&amp;#34; but we&amp;#39;d also refer to him as &amp;#34;The Maestro.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I would finish getting my supervisors certificate but would never use
it and ended up forging what has been my path in the CS Ed
space. Danny would not only take Stuy&amp;#39;s math department to new places
but also led revolutionary work in NY City and State in terms of math
education and their math teams.
&lt;/p&gt;
&lt;p&gt;
Had that tragedy not occurred on May 1997, for better or worse I
probably never get involved in the greater CS Ed movement and only a
select few at Stuy end up benefiting from Danny&amp;#39;s work (and Danny, as
a side note is an amazing teacher - back in the day, he got my brother
Steve to both understand calculus and enjoy calc class).
&lt;/p&gt;
&lt;p&gt;
Talking to JoAnn had me reminiscing about all of this. 
&lt;/p&gt;
&lt;p&gt;
I still miss Richie and  tear up when I think about him but that is
the past. That event was horrific for Richie, his family and friends
but also changed a number of life trajectories. Funny how that works.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers Pay Teachers - part 2 - the report</title>
      <link>https://cestlaz.github.io/post/teachers-pay-teachers-2/</link>
      <pubDate>Mon, 20 Jan 2020 10:03:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachers-pay-teachers-2/</guid>
      <description>&lt;p&gt;
Continuing from yesterday, what about the &lt;a href=&#34;https://www.govtech.com/computing/Report-Most-Teacher-Created-Online-English-Materials-Subpar.html&#34;&gt;article&lt;/a&gt; and &lt;a href=&#34;https://fordhaminstitute.org/national/research/supplemental-curriculum-bazaar&#34;&gt;report&lt;/a&gt; on pay
and free teacher resources.
&lt;/p&gt;
&lt;p&gt;
The report looked at three sources - one pay and two free. They came
up with a number of results but I think they largely missed the point.
&lt;/p&gt;
&lt;p&gt;
Their bottom line conclusion was that &amp;#39;Overall, reviewers rate most
of the materials as “mediocre” or “probably not worth using”.&amp;#39; They
also didn&amp;#39;t seem to find that neither the for profit or free sources
were universally better.
&lt;/p&gt;
&lt;p&gt;
The one thing I can agree with though is that a consistent rating
system for the types of resources found on these sites would be very
helpful.
&lt;/p&gt;
&lt;p&gt;
I think the main problem with the report has to do with what they were
looking for. They concluded things like the resources didn&amp;#39;t line up
well with standards, didn&amp;#39;t have good assessments, didn&amp;#39;t address
cultural diversity and a few other &amp;#34;didn&amp;#39;t dos,&amp;#34;  As I said, I think they
missed the point.
&lt;/p&gt;
&lt;p&gt;
It felt to me that the reviewers were looking for rote
experiences. Download a lesson and follow the script.
&lt;/p&gt;
&lt;p&gt;
In spite of what reformers would have you think, that isn&amp;#39;t
teaching. A teacher new to a class might start with a well worked out
curriculum and largely follow it verbatim but as they develop their
chops they&amp;#39;ll want the curriculum and all related materials to become
their own.
&lt;/p&gt;
&lt;p&gt;
A downloaded resource, taken as is, will likely not address a specific
classes cultural diversity, at least not more than in the general
sense because it was designed for the authors class and that&amp;#39;s a good
thing. It&amp;#39;s up to the person doing the downloading to take the
resource and then adapt it for their students in their situation. This
is why most of the items that the report considers bad to me are both
inevitable and fine. There is no universal lesson that you can cut and
paste to all schools. To expect it is rubbish.
&lt;/p&gt;
&lt;p&gt;
On the CS side, there&amp;#39;s a good amount of sharing of materials as well
as providers well, providing content. Some is free some not but there
is a lot available. Forgetting about whole curricula resources, three
lesson / experience sites  I&amp;#39;m
reasonably familiar with are the SIGCSE &lt;a href=&#34;http://nifty.stanford.edu/&#34;&gt;Nifty Assignments&lt;/a&gt; and now the
CSTA&amp;#39;s &lt;a href=&#34;https://sites.google.com/site/cstaniftyassignments/&#34;&gt;corresponding project&lt;/a&gt; along with &lt;a href=&#34;https://www.engage-csedu.org/&#34;&gt;Engage CS&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The biggest problem with the Nifty sites is that they&amp;#39;re arranged
chronologically by the conference year they were presented. There are
no tags nor easy way to search.  Engage CS gives you some level of
searching like for course level, keyword, resource type, and more.
&lt;/p&gt;
&lt;p&gt;
The sites present resources in a format that&amp;#39;s superficially
 consistent but the truth is, once you get past the headings they can
 be written up in radically different ways.
&lt;/p&gt;
&lt;p&gt;
To me, that&amp;#39;s not a problem. Each resource was written by some
educator with the intent of sharing but since each author is unique so
to will be the content they produce. 
&lt;/p&gt;
&lt;p&gt;
The real value of all these resources are to get ideas - lesson
motivations, code samples, project ideas etc.. Sure, I wish they were
more discoverable via search - better tagged and yes, even better
rated but the value is from reading what some other teacher has done
and then pulling out aspects that can work for you.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve rarely used a Nifty Assignment nor something from EngageCS
explicitly but I have gotten value from both sites (CSTA Nifty
assignments are newer and I&amp;#39;ve been at all the CSTA sessions so
haven&amp;#39;t actually used the site). 
&lt;/p&gt;
&lt;p&gt;
Would I ever use a resources &amp;#34;as published?&amp;#34; Perhaps - if
it was really well aligned with how I do things. 
&lt;/p&gt;
&lt;p&gt;
Would I pay? Probably not. I&amp;#39;m not against paying for resources from a
philosophical point of view. Charge a fair price and give a reasonable
assurance that what you&amp;#39;re selling has value and provide some value
beyond the free sites. I haven&amp;#39;t used Teachers Pay Teachers and
probably won&amp;#39;t look at Amazon&amp;#39;s thing when it&amp;#39;s launched but to me,
they would have to bring value in terms of curation and search. If
they do at a fair price, then they may be worth using.
&lt;/p&gt;
&lt;p&gt;
When I started teaching there was no public internet. None of this
existed. Teachers kept binders or books of lesson plans and if you
were lucky you could borrow from a friend or colleague. New York&amp;#39;s DOE
at one point had a few teachers in each subject area submit lesson
plans for &amp;#34;lesson books&amp;#34; which they published for each core
subject. My chairman wrote some of the math ones and those materials
largely got me through my first year. 
&lt;/p&gt;
&lt;p&gt;
Today we have an embarrassment of riches. That comes with the price
that we have to actually read and evaluate all of the materials we&amp;#39;re
presented with but I&amp;#39;ll take today&amp;#39;s resources over what I started with
any day.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teachers Pay Teachers  - part 1 - should they</title>
      <link>https://cestlaz.github.io/post/teachers-pay-teachers/</link>
      <pubDate>Mon, 20 Jan 2020 08:43:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teachers-pay-teachers/</guid>
      <description>&lt;p&gt;
There was a bit of buzz a couple of months ago when Amazon announced
an online marketplace for educational resources. It wasn&amp;#39;t a new
concept - on the pay side, &lt;a href=&#34;https://www.teacherspayteachers.com/?msclkid=a426c2c1625613061bc19ce4cdcb6a0a&amp;amp;utm_source=bing&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=Search%2520-%2520Branded%2520-%2520Desktop&amp;amp;utm_term=teachers%2520pay%2520teachers&amp;amp;utm_content=Brand%2520Name&#34;&gt;Teachers Pay Teachers&lt;/a&gt; has been around for a
while and in terms of free, there are many online resources but
they&amp;#39;re not necessarily well organized or curated. What was the buzz?
Should teachers be charging their peers for class materials or should
they be providing them for free.
&lt;/p&gt;
&lt;p&gt;
I was going to blog about it then but never got around to it The other
day, someone posted &lt;a href=&#34;https://www.govtech.com/computing/Report-Most-Teacher-Created-Online-English-Materials-Subpar.html&#34;&gt;this&lt;/a&gt; article which questioned the quality of both
free resources and pay ones. The article, based on &lt;a href=&#34;https://fordhaminstitute.org/national/research/supplemental-curriculum-bazaar&#34;&gt;this report&lt;/a&gt; by the
Fordham Institute looked at ELA resources. The report also only looked
at Teachers Pay Teachers and two free sites - ReadWriteThink and Share
My Lesson excluding many other teacher resources that could be, for
all we know, better curated and more discoverable. As an aside, I was
turned off by the reports referring to their evaluators as &amp;#34;experts&amp;#34;
which is a description I personally would question. Still, there&amp;#39;s
some good fodder for thought.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll get to the report in the next post but for now let&amp;#39;s tackle the
question that started the initial buzz - should teachers be charging
each other for materials?
&lt;/p&gt;
&lt;p&gt;
It depends. If you&amp;#39;re paid by a school to develop materials they
belong to the school. In NY you can take a sabbatical to build a
course so anything you build during that time would be DOE property
and therefore you couldn&amp;#39;t sell it. Same thing if you&amp;#39;re being paid
off hours to develop materials. The gray area comes when you&amp;#39;re lesson
planning. Most real planning and development happens outside of
school hours. In an typical school day teacher are typically
allocated around 40 minutes to do all their planing, grading,
and paperwork so realistically most materials as well as planing,
paperwork, and grading are done off hours. This being the case, I&amp;#39;m of
the belief that those materials belong to the teacher (although I&amp;#39;ve
met some DOE educrats who would disagree).
&lt;/p&gt;
&lt;p&gt;
So, should they sell it? Well, they have every right to. That said, my
personal feelings and practice is that if you&amp;#39;ve developed something
for yourself and have not spent extra time or effort to prepare it for
others then I think you should make it freely available to your
peers. On the other hand, if you spend extra time and effort to make
it useful for and usable by others then by all means charge if you&amp;#39;d
like.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll tackle the report in the next post and we&amp;#39;ll look at some of the
resources available on the CS side.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 64 - Notmuch</title>
      <link>https://cestlaz.github.io/post/using-emacs-64-notmuch/</link>
      <pubDate>Sat, 18 Jan 2020 08:52:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-64-notmuch/</guid>
      <description>
&lt;p&gt;
I&amp;#39;ve been using the gmail web interface for a long time. My first
email or at least the oldest one still in the system dates back to Oct
18, 2004 7:29am. It was a letter to a buddy about an indoor turkey
fryer and if he needed a lift to Fairway the following morning to
shop.
&lt;/p&gt;
&lt;p&gt;
Before that, I used my &lt;a href=&#34;http://panix.com&#34;&gt;Panix&lt;/a&gt; shell account - probably with &lt;a href=&#34;https://en.wikipedia.org/wiki/Pine_%2528email_client%2529&#34;&gt;PINE&lt;/a&gt;. Work
email was using my own servers at Stuy along with either PINE or Emacs
using VM mode which has long been deprecated.
&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t bitten the bullet and left gmail yet but I thought it was
time to move my personal email over to an Emacs client. I currently
use &lt;a href=&#34;https://www.djcbsoftware.nl/code/mu/&#34;&gt;MU4E&lt;/a&gt; and am pretty happy with it but figured I&amp;#39;d give another
contender a try - &lt;a href=&#34;https://notmuchmail.org/&#34;&gt;Notmuch&lt;/a&gt;. Both rely on some other backend to pull
email form an imap server. I&amp;#39;m currently using mbsync. I&amp;#39;m not
thrilled with it but then, I&amp;#39;m not thrilled with offlineimap which is,
as best I can figure the only other alternative.
&lt;/p&gt;
&lt;p&gt;
In the video I&amp;#39;ll show a bit about notmuch and how it comapres to
mu4e. Both are nice packages and I&amp;#39;d love one email client that
combined the best of both and maybe added a bit more shine.
&lt;/p&gt;
&lt;p&gt;
At their cores, both mu4e and notmuch are built on top of &lt;a href=&#34;https://xapian.org/&#34;&gt;xapain&lt;/a&gt; and
leverage search to manage your emails. Here are a few of the key
differences:
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
Mu4e
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Folder based
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Easier to handle separate email accounts (and keep them separate)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Better org-mode integration
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Automatically calls your IMAP sync program
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Changes things on the server (moves, deletes etc.)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Notmuch
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Tags based
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Doesn&amp;#39;t touch or change anything on the serer (doesn&amp;#39;t delete or
move things there, just tags locally)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Combines multiple accounts to appear as one
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Both have a nice search based interface.
&lt;/p&gt;
&lt;p&gt;
Right now, the fact that notmuch doesn&amp;#39;t seamlessly delete emails
from the server might be a deal breaker for me. I have a limited quota
at Hunter so I really do have to watch the overall amount of storage I
use.
&lt;/p&gt;
&lt;p&gt;
For now, I&amp;#39;m going to start pulling down my email and seeing how I
like mu4e for all my email needs. I&amp;#39;ll probably play a bit more with
notmuch as well and who knows….
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my post and video on setting up and using mu4e:
&lt;/p&gt;
&lt;p&gt;
https://cestlaz.github.io/posts/using-emacs-39-mu4e/
&lt;/p&gt;
&lt;p&gt;
And here&amp;#39;s the current one on notmuch:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/GlrsoIwJ-UM&#34;&gt;https://www.youtube.com/embed/GlrsoIwJ-UM&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Education is not a spectator sport</title>
      <link>https://cestlaz.github.io/post/education-not-spec-sport/</link>
      <pubDate>Fri, 17 Jan 2020 08:07:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/education-not-spec-sport/</guid>
      <description>&lt;p&gt;
As many of you know, the CS Education programs I designed here at
Hunter were finally approved by NY State late last year. We&amp;#39;re
planning to get started this summer. I&amp;#39;ve received many questions
about the program and will write up the details here sooner or later
but one question I frequently get is &amp;#34;will it be offered online?&amp;#34; This
is also something I&amp;#39;ve been asked more than once internal to Hunter.
&lt;/p&gt;
&lt;p&gt;
Some of these requests make sense - we&amp;#39;re in the heart of NYC so
someone out on Long Island or further afield upstate won&amp;#39;t be able to
take our courses in person. This is the advantage of online
education. You can partake, or probably more often, consume it from
anywhere. Leaving out completion rates, that makes things very
attractive. Online is also very popular with bean counters. With it
you can set up practically unlimited class sizes. Lots of potential
profits. 
&lt;/p&gt;
&lt;p&gt;
On the other hand, is it better?
&lt;/p&gt;
&lt;p&gt;
While there are certainly many things you can learn online, is it the
same? Some argue that if a professor is straight out lecturing you
might as well watch the video. Probably true but is a dynamic
professor lecturing online the same as in person?
&lt;/p&gt;
&lt;p&gt;
Is a recorded concert the same as attending live? What about a
Broadway show? Sporting event?
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll listen to music at home, watch a ballgame or even a recording of
a live show but it isn&amp;#39;t the same. Even when presenter-audience
interaction and audience-audience interaction is at a minimum - say a
classical concert, the live experience is both different, superior,
and more memorable than the memorex.
&lt;/p&gt;
&lt;p&gt;
Now, there&amp;#39;s certainly value added by augmenting classes with online
content but all too often it&amp;#39;s used for cost cutting or profit
making. See &lt;a href=&#34;https://dianeravitch.net/2019/07/18/oklahoma-legislator-questions-why-state-is-giving-millions-to-virtual-charter-school/&#34;&gt;Virtual&lt;/a&gt; or &lt;a href=&#34;https://dianeravitch.net/2019/08/14/ohio-gets-another-virtual-charter-school/&#34;&gt;Cyber&lt;/a&gt; Charter schools for details.
&lt;/p&gt;
&lt;p&gt;
At the end of the day education is not a spectator sport.
&lt;/p&gt;
&lt;p&gt;
 It&amp;#39;s built on the relationship between student, teacher, and
classmates. You can get some of that online and online is great when
there are truly no other alternatives. If we can ever figure out
&lt;a href=&#34;https://cestlaz.github.io/post/communicating-with_students/&#34;&gt;online engagement&lt;/a&gt;, then technology will be even better at augmenting
(not replacing) good, live instruction. I&amp;#39;m certainly going to look
into offering parts of my classes remotely specifically for people
outside of NY City but we&amp;#39;re a long way from remote education being
even close to as good as in person.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Clojurescript - building a simple router</title>
      <link>https://cestlaz.github.io/post/clojurescript-router/</link>
      <pubDate>Wed, 15 Jan 2020 09:37:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/clojurescript-router/</guid>
      <description>&lt;p&gt;
In this video we&amp;#39;ll look at creating a small router. 
&lt;/p&gt;
&lt;p&gt;
I originally looked at using one of the available libraries to set up
routing. I considered &lt;a href=&#34;https://github.com/metosin/reitit&#34;&gt;reitit&lt;/a&gt; and &lt;a href=&#34;https://github.com/juxt/bidi&#34;&gt;bidi&lt;/a&gt; but in the end decided to figure
out how to do it myself. 
&lt;/p&gt;
&lt;p&gt;
It turns out that whenever you change the hash part of a url -
everything following a # at the end of a url you get a &lt;code&gt;hashchange&lt;/code&gt;
event. You can handle that with
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;.addEventListener&lt;/span&gt; js/window &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hashchange&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;handleroutes&lt;/span&gt; routes %))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
where &lt;code&gt;handleroutes&lt;/code&gt; is your function to actually handle the routes.
&lt;/p&gt;
&lt;p&gt;
You can then get the actual value of that last hash part of the url
with:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;.-location.hash&lt;/span&gt; js/window)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Once you map that to whatever function you want you update the history
and mount the new page:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;   (&lt;span style=&#34;color:#a6e22e&#34;&gt;.history.replaceState&lt;/span&gt; js/window {} nil loc)
   (&lt;span style=&#34;color:#a6e22e&#34;&gt;mount&lt;/span&gt; newpage) &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
All the code is up on GitHub: &lt;a href=&#34;https://github.com/zamansky/shadow-cljs-demo&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/shadow-cljs-demo&#34;&gt;https://github.com/zamansky/shadow-cljs-demo&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are still things I need to figure out. Specifically, how can I
route without the #. That is, I can do it, but the page reloads every
time rather than just remounting the component I want. 
&lt;/p&gt;
&lt;p&gt;
The video goes through the entire process. Enjoy.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/mbUHkfH6B9g&#34;&gt;https://www.youtube.com/embed/mbUHkfH6B9g&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teacher Centric Teaching</title>
      <link>https://cestlaz.github.io/post/teacher-centric-teaching/</link>
      <pubDate>Tue, 14 Jan 2020 08:27:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teacher-centric-teaching/</guid>
      <description>&lt;p&gt;
Every few years the experts give us some new magic bullet, some new
 &lt;del&gt;teaching fad&lt;/del&gt; research based pedagogical technique. Teachers are
 trained in it, forced to use it - frequently as a one size fits
 all. If we do, we&amp;#39;re good teachers, if we don&amp;#39;t we get the dreaded
 ineffective on our annual ratings.
&lt;/p&gt;
&lt;p&gt;
I was reminded of this when reading &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt;&amp;#39;s recent blog post on
&lt;a href=&#34;https://computinged.wordpress.com/2020/01/13/computing-education-lessons-learned-from-the-2010s-what-i-got-wrong/&#34;&gt;things he got wrong&lt;/a&gt; in Computing Education. It&amp;#39;s a really great
post. Mark mentioned &lt;a href=&#34;https://en.wikipedia.org/wiki/Constructivism_(philosophy_of_education)&#34;&gt;constructivism&lt;/a&gt; and it made me think of a few
years ago when constructivism was all the rage. If you didn&amp;#39;t set your
class up for &lt;a href=&#34;https://en.wikipedia.org/wiki/Discovery_learning&#34;&gt;discovery learning&lt;/a&gt; all the time you were clearly a bad
teacher. I&amp;#39;d sit on on CS PD sessions, listen to principals and
supervisors talk about what they wanted to see in classes and on and
on.
&lt;/p&gt;
&lt;p&gt;
If you weren&amp;#39;t a constructivist educator you weren&amp;#39;t a good educator.
&lt;/p&gt;
&lt;p&gt;
Of course a few years earlier it was something else.
&lt;/p&gt;
&lt;p&gt;
Back when I started it was cooperative learning and
cooperative learning isn&amp;#39;t just group work - you had to follow the
formula. Each student in a group had a role, there were specific
stages of work and everything had to be just so.
&lt;/p&gt;
&lt;p&gt;
There were other fads along the way. 
&lt;/p&gt;
&lt;p&gt;
If you were lucky and had a good supervisor you didn&amp;#39;t have to worry
about the fads, the research, the nonsense. You could focus on your
development as a teacher. They might work with you on questioning, for
instance - regardless of the flavor of the month, a teacher will ask
questions and facilitate discussion and they will surely insulate you
from whatever nonsense the bean counters want to see as long as you&amp;#39;re
doing right by your students. On the other hand, a bad supervisor
would mean stressful set up observations.
&lt;/p&gt;
&lt;p&gt;
Even without Mark&amp;#39;s post, I&amp;#39;ve been thinking about this a lot since
we&amp;#39;re about to launch our CS Teacher Certification programs at
Hunter so I&amp;#39;ve been thinking about these fads from a teacher
preparation point of view. 
&lt;/p&gt;
&lt;p&gt;
Many of these fads have some value - they&amp;#39;re tools in the toolbelt to
be used as needed. The problem is that supervisors, and in my
experience, professional development and teacher preparation programs
make teaching 100% about the student. While the student is in fact the
customer and who&amp;#39;s development is the goal of our work, you can&amp;#39;t
ignore other factors. Environment and resources are two of these other
factors and a big one is the teachers individual strengths,
weaknesses, and tendencies.
&lt;/p&gt;
&lt;p&gt;
Cooperative Learning never really worked for me - at least not whole
hog. As a &amp;#34;Cooperative Learning teacher&amp;#34; I&amp;#39;d be meh at best. On the
other hand, I&amp;#39;ve taken plays from the cooperative learning playbook
and applied them as I&amp;#39;ve seen useful. Sometimes it didn&amp;#39;t work,
sometimes to great effect.
&lt;/p&gt;
&lt;p&gt;
As a teacher, I always took the advice of one of my early fencing
mentors. I was receiving conflicting advice from multiple well
respected coaches and more experienced fencers. My mentor said &amp;#34;listen
to what they all have to say, think about it, figure out what best
will work for you and do that.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
As to running my teacher prep programs, I&amp;#39;m going to do my best to
make sure that we do recognize that teachers bring different things to
the table and it will my job to help them maximize their
effectiveness. This means that we can&amp;#39;t blindly follow the favored
teaching techniques du jour but rather we have to look at all sorts of
methods and combine them with our teachers strengths, abilities, and
tendencies, and their specific classroom situations.
&lt;/p&gt;
&lt;p&gt;
It should be fun.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Clojurescript Components</title>
      <link>https://cestlaz.github.io/post/clojurescript-components/</link>
      <pubDate>Sun, 12 Jan 2020 12:19:00 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/clojurescript-components/</guid>
      <description>&lt;p&gt;
I got some positive feedback from my first Clojurescript &lt;a href=&#34;https://cestlaz.github.io/post/using-emacs-63-clojurescript/&#34;&gt;post and
video&lt;/a&gt; so I thought I&amp;#39;d continue with the series.
&lt;/p&gt;
&lt;p&gt;
Here we&amp;#39;ll continue to build a simple
Clojurescript/Shadow-cljs/Reagent/Tailwindcss application by creating
some reusable components. It&amp;#39;s one of the things that make
Clojurescript so nice for web development. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a link to the GitHub repo with the code:
&lt;a href=&#34;https://github.com/zamansky/shadow-cljs-demo&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/shadow-cljs-demo&#34;&gt;https://github.com/zamansky/shadow-cljs-demo&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/_CTTbC6owS0&#34;&gt;https://www.youtube.com/embed/_CTTbC6owS0&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>APCS Statistics</title>
      <link>https://cestlaz.github.io/post/code-beyond-apcs/</link>
      <pubDate>Fri, 10 Jan 2020 17:51:14 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/code-beyond-apcs/</guid>
      <description>&lt;p&gt;
Yesterday was, I think the fourth, To Code and Beyond conference hosted by
&lt;a href=&#34;https://twitter.com/diane_levitt&#34;&gt;Diane Levitt&lt;/a&gt; at Cornell Technion. I might blog about a few of the
talks but for today let&amp;#39;s start with one.
&lt;/p&gt;
&lt;p&gt;
In spite of my anti College Board bias, I really enjoyed Barbara
Ericson&amp;#39;s talk on APCS statistics. Barbara&amp;#39;s been breaking down the
APCS numbers for years - how many took the exam(s), how many passed
them. By state, gender, etc. It&amp;#39;s all up on her &lt;a href=&#34;https://cs4all.home.blog/&#34;&gt;blog&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
While Barb had earlier provided the data online, in her talk, she 
did a great job drawing out and highlighting important and interesting
points. 
&lt;/p&gt;
&lt;p&gt;
The TL;DR summary takeaways from the talk were:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
There has been some progress.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
We can do better.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
We have to do better.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The numbers are sometimes so low that it wouldn&amp;#39;t take much to do
 better.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
That isn&amp;#39;t enough.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
One point of comparison that came up was that while the number of APCS
exams is growing they still pale in comparison to the AP English and
AP Calc numbers. This makes sense though. Calc is generally percieved
as &amp;#34;the next math class&amp;#34; so students who finish precalc prior to
senior year will normally move on to calc. Even more so now than in
the past with more and more schools implementing a 4 year math
requirement. AP English is also a special case since it basically
replaces a regular English class so it might not even add anything to
a students day depending on the workload of AP vs their school&amp;#39;s
regular English class.
&lt;/p&gt;
&lt;p&gt;
Personally, I don&amp;#39;t care how many APCS exams are given but I&amp;#39;d love to
see a quality year of CS Education required in high schools across the
country.
&lt;/p&gt;
&lt;p&gt;
All of Barbara&amp;#39;s analysis is based on the public data that the College
Board releases. I got to thinking about all the factors we can&amp;#39;t
account for since the data either isn&amp;#39;t released by the College Board
or isn&amp;#39;t available at all.
&lt;/p&gt;
&lt;p&gt;
First, the data is on the state level. How many states are small
enough and homogeneous enough that we can treat them as a unit?
Certainly not NY. I&amp;#39;d love to see the AP data broken down by NYC vs
the rest of the state. It would also be great to be able to run stats
that looked at school factors. All this data could be made available.
&lt;/p&gt;
&lt;p&gt;
If we had more data to play with we might learn or at least be able to
explore some interesting things.
&lt;/p&gt;
&lt;p&gt;
Take APCS-P. In 2019 7553 exams were given in New York State with 5239
passing. Now, it turns out that Brooklyn Tech decided to require
APCS-P of all of its students. Tech has a population of over 6000 so
figure about 1500 APCS-P tests or around 20% of the state. That&amp;#39;s from
JUST ONE SCHOOL!!!!!!  It&amp;#39;s also a test school. Just about every Stuy
student who takes APCS-A passes the exam so I&amp;#39;d guess the vast
majority of Tech APCS-P test takers do the same. Take out 1500 passing
exams and see what that does to the pass rate. Once again we have a
HUGE influence by one school.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m don&amp;#39;t know if this means anything one way or another but it is
interesting.
&lt;/p&gt;
&lt;p&gt;
Going further, it would be great to know how schools are making
decisions as to what to offer and to whom. Is APCS-P required? Are the
students in the class(es) required to take the exam? Required classes
and requiring exams generally up the participation rates but lower pass
rates. How much elective room do students have? The questions go on
and on. I&amp;#39;m of the belief that two of the reasons for APCS-P&amp;#39;s rapid
growth and adoption are that it&amp;#39;s low hanging fruit. Schools want to
do some CS and this checks the box. Also, schools can move up in those
BS school ratings by having their kids take more AP exams and having a
relatively easy AP exam that can be passed by 9th and 10th graders is
an easy way to build your reputation.
&lt;/p&gt;
&lt;p&gt;
Of course, the ratings game doesn&amp;#39;t always serve students. I once
heard a talk given by the principal of the highly lauded school
P-Tech. He proudly proclaimed that in his previous school BETA (he was
principal of the Bronx Engineering and Tech Academy prior to P-Tech)
he took kids that came in far behind in math and they all passed the
Honors APCS Calc exam. I later checked - BETA students took 228 AP exams
during the year in question and only 10 passed. The principal parlayed
these wonderful results into a much higher profile principalship of a
school so highly regarded it was mentioned by name at a State of the
Union address but I think it&amp;#39;s horribly cruel to set students up to
fail so. 
&lt;/p&gt;
&lt;p&gt;
Getting back to Barbara&amp;#39;s talk - even with the limited granularity of
the data provided by the college board we can learn some interesting
things. Given the newness of APCS-P and in fact the newness of the CS
For All push it will be years before we can really figure anything out
but it&amp;#39;s all food for thought. 
&lt;/p&gt;
&lt;p&gt;
Thanks to Barbara for continuing on what she described as &amp;#34;an unpaid
job for life&amp;#34; as we&amp;#39;re all the beneficiaries of her work.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 63 ClojureScript</title>
      <link>https://cestlaz.github.io/post/using-emacs-63-clojurescript/</link>
      <pubDate>Thu, 09 Jan 2020 08:11:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-63-clojurescript/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been playing with ClojureScipt for my web projects recently and
really like it. Much more fun than any of the JavaScript frameworks
I&amp;#39;ve used. 
&lt;/p&gt;
&lt;p&gt;
Still, getting started was somewhat difficult due to the number of
options in tooling and uneven documentation and learning resources.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a video that shows how I use Emacs for ClojureScript
development but the focus of the video is on how to get started with
ClojureScript and Emacs takes a back seat other than an example of my
workflow.
&lt;/p&gt;
&lt;p&gt;
On the Clojurscript side I&amp;#39;m using &lt;a href=&#34;https://shadow-cljs.org/&#34;&gt;shadow-cljs&lt;/a&gt; which I like very much
along with &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;tailwindcss&lt;/a&gt; for styling. I also mention &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;NVM&lt;/a&gt; for managing
node/npm etc. which you&amp;#39;ll also need. 
&lt;/p&gt;
&lt;p&gt;
On the Emacs side you&amp;#39;ll see a bit of &lt;a href=&#34;https://github.com/clojure-emacs/cider&#34;&gt;cider&lt;/a&gt; along with &lt;a href=&#34;https://github.com/Fuco1/smartparens&#34;&gt;smartparens&lt;/a&gt; and
you can find my full config at &lt;a href=&#34;https://github.com/zamansky/dot-emacs.&#34;&gt;https://github.com/zamansky/dot-emacs.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I was thinking about also making the following ClojureScript videos if
the communities find value in them and I have time:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
How to create reusable components like an input field with label.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Creating a simple Electron app using shadow-cljs.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Creating something with both  server side and client side.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Also open to suggestions
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I don&amp;#39;t pretend to be a cljs or webdev master so please let me know if
I&amp;#39;m doing anything horribly wrong and let me know if you want more.
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/BZNJi5pP8fU&#34;&gt;https://www.youtube.com/embed/BZNJi5pP8fU&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Org Explorer</title>
      <link>https://cestlaz.github.io/post/github-org-explorer/</link>
      <pubDate>Fri, 03 Jan 2020 14:40:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-org-explorer/</guid>
      <description>&lt;p&gt;
I&amp;#39;m a big fan of &lt;a href=&#34;https://classroom.github.com&#34;&gt;GitHub Classroom&lt;/a&gt; and use it for all of my class
assignments. It&amp;#39;s great for organizing, distributing, and collecting
assignments and gets the kids used to using real world tools at the
same time. I&amp;#39;ve written a bunch of posts on how I use it:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/github-classroom/&#34;&gt;How I use GitHub Classroom&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/communicating-with_students/&#34;&gt;Communicating with Students - meybe GitHub to the rescue&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4/&#34;&gt;GitHub as a tool for education&lt;/a&gt; (part of a 4 part series)
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
As well as a couple of others.
&lt;/p&gt;
&lt;p&gt;
Since I like doing things on the command line I&amp;#39;ve been using GitHub&amp;#39;s
&lt;a href=&#34;https://github.com/education/classroom-assistant&#34;&gt;Classroom Assistant&lt;/a&gt; to download repos. It&amp;#39;s a nice tool - I can
download any or all repos for any given assignment at once.
&lt;/p&gt;
&lt;p&gt;
Still, this leaves me wanting in three areas. 
&lt;/p&gt;
&lt;p&gt;
First is roster integration. They have some rudimentary work done on
this but it&amp;#39;s not quite there yet.
&lt;/p&gt;
&lt;p&gt;
Second is being able to download repos based on other criteria. For
example, downloading all of the assignments from a single student.
&lt;/p&gt;
&lt;p&gt;
Third is deleting repos. GitHub Classroom uses GitHub organizations to
store submissions. You get one per student (or group) per
assignment. This gets really big really fast and it pollutes your
GitHub account with lots of repos that, quite frankly, I don&amp;#39;t want
once the semesters done.
&lt;/p&gt;
&lt;p&gt;
If only there was a way to address this….
&lt;/p&gt;
&lt;p&gt;
Well, given that the good people at GitHub publish their &lt;a href=&#34;https://developer.github.com/&#34;&gt;APIs&lt;/a&gt; one can
write their own applications to use with or integrate with GitHub. 
&lt;/p&gt;
&lt;p&gt;
I wrote a small app, still experimental but functional. It&amp;#39;s an
&lt;a href=&#34;https://electronjs.org&#34;&gt;Electron&lt;/a&gt; app (another thanks to GitHub) written in Clojurescript. I
might write about creating it later but for now, I just wanted to
share the app in case it&amp;#39;s useful to anybody.
&lt;/p&gt;
&lt;p&gt;
Once you log in you can go to any of your GitHub organizations. Since
GitHub Classrooms are based on organizations this will present you
with all the repos for a given one. Then you can filter via regular
expressions and then either export or delete them. For me it&amp;#39;s the
missing piece. I plan to add roster support some time in the future.
&lt;/p&gt;
&lt;p&gt;
If anyone&amp;#39;s interested, here&amp;#39;s the GitHub repo: &lt;a href=&#34; https://github.com/zamansky/github-org-explorer&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/github-org-explorer&#34;&gt;https://github.com/zamansky/github-org-explorer&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And a short video walkthrough of how it works.
&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34;
src=&#34;https://www.youtube.com/embed/e-gNzuBG3mU&#34; frameborder=&#34;0&#34;
allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Pushback To CS for All</title>
      <link>https://cestlaz.github.io/post/pushback-to-csforall/</link>
      <pubDate>Thu, 02 Jan 2020 08:27:20 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pushback-to-csforall/</guid>
      <description>&lt;p&gt;
On the last day of 2019, &lt;a href=&#34;https://twitter.com/audreywatters&#34;&gt;Audrey Waters&lt;/a&gt; wrote a great piece on &lt;a href=&#34;https://hackeducation.com/2019/12/31/what-a-shitshow&#34;&gt;The 100
Worst Ed-Tech Debacles of the Decade&lt;/a&gt;. I agree with most of them but
felt it was worth looking at a one in particular. Specifically number 6 -
&amp;#34;Everyone Should earn to Code.&amp;#34;  I might dive in to some others later
but we&amp;#39;ll stick with number 6 for today.
&lt;/p&gt;
&lt;p&gt;
I read over these right after reading two recent posts by Alina Adam&amp;#39;s
son Gregory - a sophomore at Stuyvesant High School over on Alina&amp;#39;s blog
&lt;a href=&#34;https://newyorkschooltalk.org/2019/12/what-is-computer-science-the-doe-doesnt-know-cs4all-part-2/&#34;&gt;questioning NYC&amp;#39;s CS For All initiative&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Audrey made some very good points on CS for All (or everyone should
learn to code). It&amp;#39;s industry driven - giving them more of an outsized
influence over education and she questions the tech job crisis. I&amp;#39;ll
personally add that it&amp;#39;s problematic that so much of the emphasis -
particularly in the public schools is CS for jobs. I get it - a well
paying job is a ticket up the economic ladder and this can be a huge
deal for low income families. That said, it&amp;#39;s problematic at best when
the attitude is education for jobs for the poor and well rounded
education for life for  the rich.
&lt;/p&gt;
&lt;p&gt;
While Audrey wrote on 100 items a few paragraphs each, Gregory wrote two
posts on CS for All in NYC and pushed back hard. One line that
resonated with me was his response to the DOE&amp;#39;s claim that &amp;#34; “Students
with computer science degrees are some of the highest-paid college
graduates”  responding with:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;#34;You know what else is a very useful skill for jobs and graduating
college? Reading comprehension and basic mathematics skills.&amp;#34; 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was a sticking point with me that got me in trouble with DOE on
the AFSE project. They insisted the high school would create industry
ready software engineers our of high school in spite of them coming in
well below grade level. They were wrong. CS is not a substitute for
other important subjects. I personally do think CS for All is &lt;strong&gt;very&lt;/strong&gt; 
important and I&amp;#39;ll address that shortly but I view it as one more
fundamental - in addition to reading and writing not at the expense
of.
&lt;/p&gt;
&lt;p&gt;
Now let me push back on the pushback.
&lt;/p&gt;
&lt;p&gt;
CS as a K12 academic discipline is very young. In NYC, things didn&amp;#39;t
really get rolling until &lt;a href=&#34;https://twitter.com/fredwilson&#34;&gt;Fred Wilson&lt;/a&gt; (from industry) started to push
things around 10 years go. There were some other small efforts at individual
schools and regions around the country. The national movement, in
spite of the CSTA being in existence for twenty years or more  didn&amp;#39;t
gain any real traction until code.org came onto the scene - also driven by
industry. While I agree very much with Audrey and other&amp;#39;s concerns
about industry&amp;#39;s outsized influence and have publicly criticized
code.org and others on it without Fred, CS Ed doesn&amp;#39;t happen in NYC
and without Hadi Partovi I&amp;#39;d guess that there wouldn&amp;#39;t be the national
push either.
&lt;/p&gt;
&lt;p&gt;
This is all to say that the field is young so addressing what I think
are Gregory&amp;#39;s core points, depending on the teacher, a student&amp;#39;s CS
experience can be a total waste of time or it can be life changing in
a good way. This is also true of other subject areas. A bad teacher
can destroy a kid in any subject area as much as good one can
uplift. This will be more of a problem in CS until the system starts
to produce properly prepared teachers - teachers who know both the CS
content and how to teach it. That will take some time and we&amp;#39;re
starting to do that at Hunter. On the other hand, we&amp;#39;ll never get
there unless we start. In the long run, CS teachers should be of
comparable quality to teachers of other disciplines which is, of
course, another can of worms to dig into.
&lt;/p&gt;
&lt;p&gt;
Putting that aside, I&amp;#39;ll also push back on the pushback that teaching
CS isn&amp;#39;t valuable for everyone and I&amp;#39;ll do that on two fronts. The
first is in response to Gregory&amp;#39;s contention that &amp;#34;Computer science will
have very few applications for most people later in life.&amp;#34; While most
people won&amp;#39;t become professional programmers or software engineers
many (most?) people will work with data. It could be some deep
analysis or it could be merely managing company or personal
contacts. A rudimentary background in programming allows one to
automate data processing and focus on the core task. A much simpler
example of this is typing when writing. If you can type, you can focus
fully on the content you&amp;#39;re producing. If you can&amp;#39;t your focus is
split - part on the content and part on the keys. 
&lt;/p&gt;
&lt;p&gt;
We teach a variety of subjects. We teach languages in spite of the
fact that we don&amp;#39;t require students learn them to fluency. Everyone
has to take some classes in the arts, multiple sciences, economics,
math - some of which makes sense and some maybe not so much, English
and more. Is CS any less important than taking a smattering of French?
How about Algebra 2 and Trig?  A year of bio, chem, and physics?
Students should be exposed to many fields and I think it would be hard
for an honest person to say that CS is less important that every
single one of the other required classes we force upon our
students.
&lt;/p&gt;
&lt;p&gt;
When students are struggling with fundamentals - math/English some
want to put more resources into them - usually at the expense of the
arts - there are many people, myself included that feel that this is a
 &lt;strong&gt;huge&lt;/strong&gt; mistake. All our students should be entitled to a well rounded
education. They should take art and music, and have the opportunity to
learn an instrument. They should be exposed to a myriad of subjects,
ways of thinking, and yes, things that will lead to possible career
paths. 
&lt;/p&gt;
&lt;p&gt;
CS is one of these subjects. It&amp;#39;s just the new kid on the block. This is
the other reason why CS for All (beyond &amp;#34;Eveveryone should program&amp;#34;)
is so important. It&amp;#39;s not that CS should replace art or music or
another important subject but that our students deserve to be exposed
to it. 
&lt;/p&gt;
&lt;p&gt;
Some will quibble that there&amp;#39;s no room but, at least in NY State
there is - I looked over the requirements and in fact, you can have 3
years of CS in High School along with all the requirements plus a
couple of other electives but I&amp;#39;m not advocating for that. I&amp;#39;m also
not sure that NY&amp;#39;s plan to have CS at every &amp;#34;grade band&amp;#34; is the right
way to go. I think that if you have the right experience you can do
right by the kids in a one year, single period high school
introduction to CS that includes programming (and I&amp;#39;m not talking
APCS-P). 
&lt;/p&gt;
&lt;p&gt;
So, there it is. CS For All or programming for everyone might end up a
debacle and NYC&amp;#39;s CS For All might turn out to be a waste in spite of
the hard work of many strong educators but if that&amp;#39;s the case it&amp;#39;s
going to be due to implementation, politics, and influence not because
all our students won&amp;#39;t benefit from learning CS.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What I&#39;m looking forward to in 2020</title>
      <link>https://cestlaz.github.io/post/looking-forward-2020/</link>
      <pubDate>Wed, 01 Jan 2020 12:45:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/looking-forward-2020/</guid>
      <description>&lt;p&gt;
Happy new year to everyone.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been reading some prediction posts this morning on blogs and
social media. Big national and world level stuff. I&amp;#39;ve never been much
for predictions so I thought I&amp;#39;d share some more local and personal
things I&amp;#39;m looking forward to in the coming year.
&lt;/p&gt;
&lt;p&gt;
First a couple of big ones. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m just about to complete my fourth year at Hunter. Time really does
fly. It&amp;#39;s been a long road but late in 2019 NY State finally approved
our CS Teacher Certification programs!!!!  That&amp;#39;s big news. Some day
I&amp;#39;ll go into the frustrations and ridiculousness that caused a year
plus delay but now that&amp;#39;s all in the past and we&amp;#39;re good to go. We&amp;#39;ve
got a Masters program for aspiring teachers and a certificate program
for teachers who are already licensed in another subject area.
&lt;/p&gt;
&lt;p&gt;
The plan is to run a summer intensive in July and have our first
cohort through the program by the end of 2020. We have a real
opportunity here to get ahead of things and build a group of certified
master CS teachers in and for NYC. This can be relly big and is very
exciting.
&lt;/p&gt;
&lt;p&gt;
The other big thing for me has to do with the other big initiative I
started at Hunter - the Daedalus CS Scholars program. The program has
been growing each year both in terms of students and in terms of
programs and student opportunities. The exciting thing for me is that
we&amp;#39;re about to have our first graduates. The Daedalus program didn&amp;#39;t
exist four years ago and now it&amp;#39;s a big part of Hunter CS and soon it
will be sending graduates out into the world. I&amp;#39;m super happy and
proud of what the students have done and continue to do.
&lt;/p&gt;
&lt;p&gt;
Both of these really excite me. When I started, I figured it would be
about five years to get things running smoothly so to have both in
existence in 4 is super cool. 
&lt;/p&gt;
&lt;p&gt;
Other things I&amp;#39;m looking forward to? I&amp;#39;ll be giving a talk at SIGCSE2020
in a couple of months on how to take your students from GitHub
neophytes to pull request masters and then a full workshop version at
CSTA2020. I&amp;#39;m stoked about going to both conferences and also to help
Devorah once again run her  &lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;Blanket Statement&lt;/a&gt; project at CSTA.  If I can get the
funding there are also a couple of other conferences I&amp;#39;d love to
attend. 
&lt;/p&gt;
&lt;p&gt;
I also looked over the list of speakers for CSTA2020 (harder to
navigate for SIGCSE) and am really  excited to see many friends
present. Also noticed Mark Emry will be presenting and really hope to
see Mark in person after something like over a dozen years.
&lt;/p&gt;
&lt;p&gt;
On the personal side of things, Batya moved into her own apartment
just before the new year and Devorah&amp;#39;s setting up Batya&amp;#39;s room as a
fiber studio so we&amp;#39;ll have some adjustments on the home front but all
good and all exciting.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m sure there are other exciting things to come in 2020 but that&amp;#39;s
enough for now.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>10 years blogging</title>
      <link>https://cestlaz.github.io/post/10-years-blogging/</link>
      <pubDate>Mon, 30 Dec 2019 09:06:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/10-years-blogging/</guid>
      <description>&lt;p&gt;
I read &lt;a href=&#34;https://twitter.com/dougpete&#34;&gt;Doug Peterson&lt;/a&gt;&amp;#39;s post this moirning on his &lt;a href=&#34;https://dougpete.wordpress.com/2019/12/30/10-years-ago-2/&#34;&gt;10 years blogging&lt;/a&gt;. I
realized that I&amp;#39;m also finishing off my 10th year of doing the same. I
also noticed that for a second year in a row, I&amp;#39;ve eclipsed 100
posts. That&amp;#39;s an average of a bit under 2 posts a week which is more
than I thought particularly when it feels like I go through multi
weeks stretches without writing anything.
&lt;/p&gt;
&lt;p&gt;
I thought it would be interesting though to do a slightly deeper dive
into my posting habits. My &lt;a href=&#34;https://cestlaz.github.io/archive/&#34;&gt;blog archive&lt;/a&gt; tells me how many posts I
wrote each year. 
&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Year:&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2010&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2011&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2012&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2013&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2014&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2015&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2016&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2017&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2018&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Posts:&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;26&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;18&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;32&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;55&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;47&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;86&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;87&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;103&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;101&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Two things pop out. First is in 2011 I only wrote 4 posts. The second
is that there was a big increase from 2016 on. That could due to my
moving from Stuy to Hunter but I think it&amp;#39;s more than that. While it
is true that my time is much more flexible than it was as a high
school teacher, I&amp;#39;ve also gotten busier and busier at Hunter and yeat
I&amp;#39;ve still upped my blog output as my Hunter life got more hectic. I&amp;#39;m
guessing it&amp;#39;s more due to the fact that I made a concerted effort to
blog more with the life change and it&amp;#39;s stuck. 
&lt;/p&gt;
&lt;p&gt;
Still, I wanted to drill down deeper but how to do it easily? I
thought about writing a program that would read in the top matter from
all my posts, parse the dates and go from there but that was way too
much work.
&lt;/p&gt;
&lt;p&gt;
Shell scripting to the rescue!!!!!!!
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been recently using &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt; as a tool for searching and
navigating code. It&amp;#39;s a combination of &lt;code&gt;grep&lt;/code&gt;, which lets you search for
text patterns in a file and &lt;code&gt;find&lt;/code&gt; which traverses directory trees to
find files. Ripgrep finds files across a directory tree and looks for
patterns in them. It has loads of options and is really fast.
&lt;/p&gt;
&lt;p&gt;
If I wanted to find out how many posts I wrote in Oct, 2017 I would do
this:
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rg -t org &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date:.*2017-10&amp;#34;&lt;/span&gt; | wc -l&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The &lt;code&gt;-t org&lt;/code&gt; says to look at all the &lt;strong&gt;.org&lt;/strong&gt; files in the directory
tree and match files with lines matching the regular expression I
specified. Then &lt;code&gt;wc -l&lt;/code&gt; tells me how many lines which is the number of
files.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I used to get monthly totals 
&lt;/p&gt;
&lt;div class=&#34;src src-bash&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; YEAR in &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2010,2011,2012,2013,2014,2015,2016,2017,2018,2019&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; MONTH in &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;01,02,03,04,05,06,07,08,09,10,11,12&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
	t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;rg -t org -t md  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date:.*&lt;/span&gt;$YEAR&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;$MONTH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
	emacs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;rg -t org &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date:.*&lt;/span&gt;$YEAR&lt;span style=&#34;color:#e6db74&#34;&gt;-&lt;/span&gt;$MONTH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | grep emacs  | wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
	echo $YEAR , $MONTH, $t, $emacs
    &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Note that I specified &lt;code&gt;-t org -t md&lt;/code&gt; since my older blog posts are
markdown not org files and I also pulled out all my &lt;strong&gt;Using Emacs&lt;/strong&gt;
post counts.
&lt;/p&gt;
&lt;p&gt;
Here are the results (sans emacs separation):
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2010&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2011&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2012&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2013&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2014&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2015&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2016&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2017&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2018&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2019&lt;/th&gt;
&lt;th&gt;Total&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Jan&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;9&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;11&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;51&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Feb&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;9&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;11&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;42&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Mar&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;8&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;14&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;42&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Apr&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;15&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;8&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;42&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;May&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;14&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;34&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Jun&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;12&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;9&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;11&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;47&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Jul&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;10&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;10&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;12&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;50&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Aug&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;11&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;39&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Sep&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;11&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;41&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Oct&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;9&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;11&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;9&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;11&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;9&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;60&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Nov&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;12&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;12&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;62&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Dec&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;10&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;11&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;9&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;49&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;26&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;18&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;32&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;55&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;47&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;86&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;87&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;103&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;&lt;strong&gt;101&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;559&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Looking at the data I learned a few things. May and June of 2016 stuck
out as big posting months but it turned out that I started my &lt;a href=&#34;https://cestlaz.github.io/stories/emacs/&#34;&gt;Using
Emacs&lt;/a&gt; series in May 2016 so it seems I had a burst of video posts at
the time. I also noticed that once I got started for real in 2013
there doesn&amp;#39;t really seem to be a pattern to my posting frequency.
&lt;/p&gt;
&lt;p&gt;
I thought that the summer months would be sparser and August seems so
but July not so much - that&amp;#39;s probably due to CSTA conference related
posts. 
&lt;/p&gt;
&lt;p&gt;
I decided not to dive in to a content analysis since I&amp;#39;m pretty
inconsistent with tags but maybe I&amp;#39;ll try that at some other point.
&lt;/p&gt;
&lt;p&gt;
In any event, I&amp;#39;m glad I&amp;#39;m blogging more rather than less but wish
more CS Educators would join in the party.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keeping Current Between Semesters</title>
      <link>https://cestlaz.github.io/post/keeping-current-between-semesters/</link>
      <pubDate>Fri, 27 Dec 2019 11:56:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/keeping-current-between-semesters/</guid>
      <description>
&lt;p&gt;
People say that one of the impossible problems for CS teachers is
keeping current - they say the field is constantly changing, how can a
teacher keep up with all the new things going on.
&lt;/p&gt;
&lt;p&gt;
Well, on the one hand it isn&amp;#39;t true - most of the core of CS is the
same. We still teach roughly the same programming constructs, data
structures and algorithms. 
&lt;/p&gt;
&lt;p&gt;
On the other hand, it is true. When I was in college, OOP was just
starting to pick up steam and now an established and one might argue,
dominant paradigm. Functional programming has been around forever but
is only recently making inroads into the mainstream. Some fields have
radically changed. Just look at AI and related fields now that data is
so abundant. I remember looking over a Natural Language Processing
text in the mid 90s and it was all about programs with tons of if
statements. A later edition read more like a statistics text book.
&lt;/p&gt;
&lt;p&gt;
Then there are the changing technologies - the web and how we program
it, new languages, embedded systems are more accesible and much more.
&lt;/p&gt;
&lt;p&gt;
So the field both changes and stays the same.
&lt;/p&gt;
&lt;p&gt;
One of the ways I try to stay on top of things is with my own personal
projects. We encourage our students to write side projects
to scratch itches so why shouldn&amp;#39;t we do the same.
&lt;/p&gt;
&lt;p&gt;
This might be taking a course like when I did the Stanford online AI
and ML courses or it might be writing something like when I wanted to
figure out that &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; thing that was all the rage a couple of years
ago but ended up diving more deeply into  &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; as I felt it made
more sense.
&lt;/p&gt;
&lt;p&gt;
Now that we&amp;#39;re between semesters at Hunter I thought I&amp;#39;d scratch an
itch related to &lt;a href=&#34;https://classroom.github.com/classrooms&#34;&gt;GitHub Classroom&lt;/a&gt;. I love the tool but it has two pain
points. First, you end up accumulating a HUGE number of repositories
(one per student per assignment) and deleting them is a bear of a
task. The second is that while you can download all the submissions
for a given assignment, there&amp;#39;s no easy way to download all the
assignments for a given student. There are also some issues mapping
student names to GitHub accounts but I&amp;#39;ve pretty much worked that one
out.
&lt;/p&gt;
&lt;p&gt;
So, I figured I&amp;#39;d spend some time this December and January learning
some new technologies adn writing something to make those pain points
go away.
&lt;/p&gt;
&lt;p&gt;
So, what will I be learning about?
&lt;/p&gt;
&lt;h5 id=&#34;headline-1&#34;&gt;
The GitHub API
&lt;/h5&gt;
&lt;p&gt;
I&amp;#39;ve worked with APIs before and even messed around with &lt;a href=&#34;https://developer.github.com/&#34;&gt;GitHub&amp;#39;s&lt;/a&gt;. The
change is that their &lt;a href=&#34;https://developer.github.com/v4/&#34;&gt;latest&lt;/a&gt; version uses GraphQL which brings me to my
first brand new technology:
&lt;/p&gt;
&lt;h5 id=&#34;headline-2&#34;&gt;
GraphQL
&lt;/h5&gt;
&lt;p&gt;
&lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; is a query language developed by Facebook for APIs. In spite
of the name, it has nothing to do with databases. The idea is instead
of a bunch of random REST endpoints with every API call being
different you have one endpoint. You put together a query describing
what you want and the services responds with your content. 
&lt;/p&gt;
&lt;p&gt;
It looks pretty neat but we&amp;#39;ll see.
&lt;/p&gt;
&lt;h5 id=&#34;headline-3&#34;&gt;
Reagent / Clojurescript
&lt;/h5&gt;
&lt;p&gt;
The next thing I&amp;#39;ll be playing with is &lt;a href=&#34;https://clojurescript.org/&#34;&gt;Clojurescript&lt;/a&gt; and &lt;a href=&#34;https://reagent-project.github.io/&#34;&gt;Reagent&lt;/a&gt;. I&amp;#39;ve
been playing on and off with Clojure for a while ahd Clojurescript
transpiles Clojure to Javascript instead of compiling for the
JVM. I&amp;#39;ve  already made a few &lt;a href=&#34;https://github.com/zamansky/clojure-life&#34;&gt;small&lt;/a&gt; &lt;a href=&#34;https://github.com/zamansky/clojure-breakout&#34;&gt;projects&lt;/a&gt; &lt;a href=&#34;https://github.com/zamansky/clojure-snake&#34;&gt;using&lt;/a&gt; it and like it much
better for the web than Javascript. &lt;a href=&#34;https://www.learnreagent.com/&#34;&gt;Reagent&lt;/a&gt; is essentially React for
Clojurescript.
&lt;/p&gt;
&lt;h6 id=&#34;headline-4&#34;&gt;
Electron
&lt;/h6&gt;
&lt;p&gt;
I thought for a while about doing this as a command line tool since
that&amp;#39;s how I usually work but decided that if I do finish it something
GUI based might be useful to more people. I then considered a web
applicaiton but realized that wouldn&amp;#39;t do since there isn&amp;#39;t a way to
clone GitHub repos from a web application due to security issues. 
&lt;/p&gt;
&lt;p&gt;
I then briefly considered doing a Clojure based GUI which would
basically be something like a Java Swing application but then decided
to explore &lt;a href=&#34;https://electronjs.org/&#34;&gt;Electron&lt;/a&gt;. An Electron appication is essentially a locally
run web application. You write it in a similar manner to a web app -
HTML/CSS/JS or in my case Clojurescript but then it&amp;#39;s run locally on a
platfomr based on the open source Chromium browser. Since it&amp;#39;s running
locally it has access to the local filesystem and resources.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already started to play with things and already learned a
lot. Looking forward to coming out of this with a bunch of new
technologies and tools in the toolbelt and maybe an application that
will solve a couple of annoyances with what&amp;#39;s overall a great product.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multi Stage Assignments - the good and the bad - Advent of Code</title>
      <link>https://cestlaz.github.io/post/multi-stage-assignments/</link>
      <pubDate>Thu, 12 Dec 2019 17:19:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/multi-stage-assignments/</guid>
      <description>&lt;p&gt;
In the real world you&amp;#39;re usually not building your own projects from
scratch. Much more frequently you&amp;#39;re working on a team and you and
other players come and go over time. 
&lt;/p&gt;
&lt;p&gt;
This is in stark contrast to most CS educational experiences where
students typically complete relatively small assignments from
beginning to end. One of my biggest fears way back when as I was about
to graduate college was when I woke up one night in a cold sweath &amp;#34;oh
crap - in a couple of weeks I&amp;#39;m going to have to actually produce good
code. Not just code good enough to get by the grader.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
So, as a general rule,  having students build a project and then later
extend it or, even better, having them extend another student&amp;#39;s project
can be a very good experience. On the other hand, it can also be a
very bad one.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a great feeling when you leverage a previous project to create
something new. On the other hand, there can be tremendous frustration
if the original project forms a faulty foundation and you have to go
back and rebuild and even then you&amp;#39;re never 100% sure that you&amp;#39;re
building on a solid base.
&lt;/p&gt;
&lt;p&gt;
Building on a previous project has been big in this years &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of
Code&lt;/a&gt;. It started with &lt;a href=&#34;https://adventofcode.com/2019/day/2&#34;&gt;day 2&lt;/a&gt; when we were asked to write a simple
computer that ran &amp;#34;intcode programs.&amp;#34; Not a bad little challenge. It
then returned in &lt;a href=&#34;https://adventofcode.com/2019/day/5&#34;&gt;day 5&lt;/a&gt; where we had to add a number of features to our
intcode machines. This too was a nice assignment. It had to be built
on a correct and complete day 2 solution but as far as I could tell,
regardless of how you completed day 2 there was a straightforward way
to extend it to integrate the requirements for day 5.
&lt;/p&gt;
&lt;p&gt;
Things got interesting in &lt;a href=&#34;https://adventofcode.com/2019/day/7&#34;&gt;day 7&lt;/a&gt; and this is where a teacher, or
competition designer for that matter has to start being careful. Day 5
had us modify and build on day 2 but day 7 had us &lt;strong&gt;use&lt;/strong&gt; what we
created in days 2 and 5. From a teacher who&amp;#39;s building assignments
point of view, this changes the equation. Day 2 and 5 had you build
something that took some input and produced some output. Now, in day 7
you had to do something on top of your intcode machine, feed it into
it (or them as it turned out) and get an output. Depending on the
assumptions you made in building your intcode machine you would either
have an easy time with day 7 or you&amp;#39;d have to go back and redo day 2
and/or 5 - much less fun. As part 2 of day 7 had us running multiple
intcode machines &amp;#34;simultaneously,&amp;#34; my set up didn&amp;#39;t work. I still have
to go back and finish that problem.
&lt;/p&gt;
&lt;p&gt;
Herein lies a big problem with multi part assignments. Unless you
really lay out the parameters of the early assignment students can,
and frequently will make assumptions you never dreamed of. Those
assumptions can make their lives easier in parts 2 and beyond but it
can also leave them with an impossible task. This on top of any
student that doesn&amp;#39;t finish the early version to begin with.
&lt;/p&gt;
&lt;p&gt;
Moving on, &lt;a href=&#34;https://adventofcode.com/2019/day/9&#34;&gt;day 9&lt;/a&gt; added some more features to the intcode machine and
since then, days &lt;a href=&#34;https://adventofcode.com/2019/day/11&#34;&gt;11&lt;/a&gt;, &lt;a href=&#34;https://adventofcode.com/2019/day/13&#34;&gt;13&lt;/a&gt;, &lt;a href=&#34;https://adventofcode.com/2019/day/15&#34;&gt;15&lt;/a&gt;, &lt;a href=&#34;https://adventofcode.com/2019/day/17&#34;&gt;17&lt;/a&gt;, and &lt;a href=&#34;https://adventofcode.com/2019/day/19&#34;&gt;19&lt;/a&gt; have all used our intcode
machine. I&amp;#39;ve had issues with my machine for days 11 and 13 and have
to fix my intcode machine&amp;#39;s input/output handling to finish those
challenges but my machine worked well enough to complete days 15, 17,
and 19.
&lt;/p&gt;
&lt;p&gt;
So, at the end of the day building on a previous project can be very
cool and for a student very rewarding but it can also be really
challenging. On top of the issue I&amp;#39;ve already talked about this can
also leave students in a very uneasy state when extending a project by
using it rather than building on it. Did they write the early parts
fully correctly or just enough to get by the early test cases? It can
be very unsettling to work on an uncertain foundation. What&amp;#39;s more,
while a teacher can even provide base code, this might only be useful
to help check results as now having a student use provided code adds
yet another challenge (albeit one that provides many useful lesosns).
&lt;/p&gt;
&lt;p&gt;
As to doing this in Advent of Code? I doubt &lt;a href=&#34;https://twitter.com/ericwastl&#34;&gt;Eric Wastl&lt;/a&gt; and the other
organizers will read this but in case they do, this isn&amp;#39;t a complaint
about Advent of Code. I love the event and we can all quibble about
details we like or don&amp;#39;t like. Advent of Code also isn&amp;#39;t a class with
a grade and if I never finish, let&amp;#39;s say, day 11, there are no
consequences - unlike if a student doesn&amp;#39;t finish part 2 of a graded
project. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m writing this because I think there are some interesting parallels
between creating an event like Advent of Code and designing projects
and lessons for students and more interestingly , where those //s
diverge.
&lt;/p&gt;
&lt;p&gt;
Now to get to grading. Hoping to get done to spend at least a few
minutes on &lt;a href=&#34;https://adventofcode.com/2019/day/20&#34;&gt;day 20&lt;/a&gt;. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2019 Day 8 - addendum - generating inputs</title>
      <link>https://cestlaz.github.io/post/advent-2019-day8-part2/</link>
      <pubDate>Sun, 08 Dec 2019 17:04:30 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2019-day8-part2/</guid>
      <description>&lt;p&gt;
As I sad in my &lt;a href=&#34;https://cestlaz.github.io/post/advent-2019-day8/&#34;&gt;last post&lt;/a&gt;, &lt;a href=&#34;https://adventofcode.com/2019/day/8&#34;&gt;day 8&lt;/a&gt; would be a nice project or lesson in
an APCS-A or college CS1 class. Another nice problem would be to
write a program to generate an image in the format required by the
question. Alternatively, a teacher doing day 8 with their classes
might want to generate a bunch of images for the students to test
their decoders on. 
&lt;/p&gt;
&lt;p&gt;
I thought I&amp;#39;d write one to see how appropriate it would be for the
students. I tried to do it without anything fancy or advanced.
&lt;/p&gt;
&lt;p&gt;
To start, you&amp;#39;ll need a way to generate the block text for the
images. I found &lt;a href=&#34;http://www.patorjk.com/software/taag/#p=display&amp;amp;f=Banner3&amp;amp;t=Hello&#34;&gt;this&lt;/a&gt; site and used the &lt;strong&gt;Banner3&lt;/strong&gt; font. I generated
some text and saved it in a file. The important thing for our purposes
is that any space will count as white and any character as black.
&lt;/p&gt;
&lt;p&gt;
The encoded image is a N * Width * Height sequence of digits  where
each Width * Height sequence of digits represents one layer. See the
&lt;a href=&#34;https://adventofcode.com/2019/day/8&#34;&gt;problem text&lt;/a&gt; for details.
&lt;/p&gt;
&lt;p&gt;
You can follow along with the code &lt;a href=&#34;https://github.com/zamansky/advent2019/blob/master/day08-generator.py&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
So, here&amp;#39;s how the program works:
&lt;/p&gt;
&lt;p&gt;
The top 51 lines of the program consist of a routine which I&amp;#39;ll
describe later and code to handle command line argument (to set the
number of layers).
&lt;/p&gt;
&lt;p&gt;
Then, on line 55 I erad  in the file with the source image (from stdin). 
&lt;/p&gt;
&lt;p&gt;
In line 57 through 63, I loop over the data and changed each non space
or newline to a star character. I really don&amp;#39;t have to do this but I
wanted to see what the image looked like in just &amp;#34;black and white.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Line 65 through 67 is where I split on the newlines. Now I could take
the length of any line to get the image width and the number of lines
the height.
&lt;/p&gt;
&lt;p&gt;
70 through 79 creates a long list for the image. At each location, I
generate a list of values. Each list has one entry per layer. The
actual pixel value (1 or 0) is stored at a random location. Everything
before that is a random choice between the real color and transparent
and everything after is just random. Details for that step are in the
&lt;code&gt;genpixel&lt;/code&gt; routine.
&lt;/p&gt;
&lt;p&gt;
Finally, in 83 through 89 I loop over each layer and for each layer
the image and and output all the values into a single string. 
&lt;/p&gt;
&lt;p&gt;
This is then output to stdout while the dimensions go to stderr.
&lt;/p&gt;
&lt;p&gt;
If I had a source image in a file named &amp;#34;hello.dat&amp;#34; I&amp;#39;d convert it to
source input for day 8 by typing &lt;code&gt;cat hello.dat | python3 day08-generator.py
-l 10 &amp;gt; day08-input.dat&lt;/code&gt;. This would create a 10 layer input.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s it. Once again, the code is all &lt;a href=&#34;https://github.com/zamansky/advent2019/blob/master/day08-generator.py&#34;&gt;here&lt;/a&gt;. It would make for another
nice student assignment or for a teacher to prepare inputs for the
class.
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2019 Day - 8</title>
      <link>https://cestlaz.github.io/post/advent-2019-day8/</link>
      <pubDate>Sun, 08 Dec 2019 08:42:32 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2019-day8/</guid>
      <description>&lt;p&gt;
I spent most of last week up in Albany working on the NY State K12 CS
Standards so fell a bit behind. I had to go back to complete &lt;a href=&#34;https://adventofcode.com/2019/day/5&#34;&gt;day 5&lt;/a&gt; but
still haven&amp;#39;t finished &lt;a href=&#34;https://adventofcode.com/2019/day/7&#34;&gt;day 7&lt;/a&gt; which builds on day 5 which in turn
builds on &lt;a href=&#34;https://adventofcode.com/2019/day/2&#34;&gt;day 2&lt;/a&gt;. I might not get to finishing 7 for a while but it
looks like a good chance to play with &lt;a href=&#34;https://www.braveclojure.com/core-async/&#34;&gt;core.async&lt;/a&gt; - Clojure&amp;#39;s
facilities for concurrency. I also want to write up &lt;a href=&#34;https://adventofcode.com/2019/day/6&#34;&gt;day 6&lt;/a&gt; but today
let&amp;#39;s look at &lt;a href=&#34;https://adventofcode.com/2019/day/8&#34;&gt;day 8&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Day 8 is image processing problem so it fits nicely into an APCS-A
type class. You&amp;#39;re given the height and width of the image and you&amp;#39;re
told that the image comes in layers. The input is a long string of
digits. So, if you&amp;#39;re told that the width is 5 and height is 3 you
might get this as your input representing an image with 3 layers:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;100210120100120001102020112100000121002110102&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Adding commas and spaces:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;10021,01201,00120   00110,20201,12100   00012,10021,10102&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
The first part of the task is to find the layer with the most 0s and
return the number of 1s multiplied with the number of 2s.
&lt;/p&gt;
&lt;p&gt;
This is just a nice little data parsing problem. You have to break the
input into &lt;code&gt;width*height&lt;/code&gt; chunks, see which has the most zeros, count
the ones and the twos and return the result. 
&lt;/p&gt;
&lt;p&gt;
Part 2 is where the image stuff comes in. We&amp;#39;re told that a color
value of 0 is black, 1 is white, and 2 is transparent. We&amp;#39;re also told
that the image&amp;#39;s actual color is the first color it sees (black or
white) when going through the layers. Depending on how you read in
your data, this could be easy or hard. You have to scan down the
layers and keep the first non-transparent color. 
&lt;/p&gt;
&lt;p&gt;
For part 1, I read my data into a list of lists where each item was a
layer. I did this in Clojure, but the Python representation of the
sample image above might look something like this:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;[ [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],
  [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],
  [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
There was no reason to subdivide each layer into rows and columns.
&lt;/p&gt;
&lt;p&gt;
For part 1, I wanted to have lists where each list was all the values
of each pixel across the layers. This meant &lt;a href=&#34;https://en.wikipedia.org/wiki/Transpose&#34;&gt;transposing&lt;/a&gt; the matrix -
tat is, if you look at the above list of lists as a matrix, switching
the rows and columns. This was pretty easy to do in Clojure using
&lt;code&gt;(apply mapv vector matrix)&lt;/code&gt; but it shouldn&amp;#39;t be too hard in other
languages.
&lt;/p&gt;
&lt;p&gt;
Next, we have to keep the first non-transparent color we see in each
list.
&lt;/p&gt;
&lt;p&gt;
The final fun part is then taking the colors and printing out the
final image.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s what I got:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;XXX  XXXX  XX   XX  X  X 
X  X X    X  X X  X X X  
X  X XXX  X    X  X XX   
XXX  X    X    XXXX X X  
X    X    X  X X  X X X  
X    X     XX  X  X X  X &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s nice about this problem from a teacher&amp;#39;s point of view? First,
it&amp;#39;s the puzzle aspect of finding the hidden text. Second, it&amp;#39;s an
image problem which in APCS-A usually means 2D arrays but you can also
solve it without any 2D matrices. My solution involved a bunch of
filtering of data and the matrix transpose. Both interesting concepts
to bring to your classes.
&lt;/p&gt;
&lt;p&gt;
If you want to see my Clojure solution, you can find it &lt;a href=&#34;https://github.com/zamansky/advent2019/blob/master/day08.clj&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2019 Day 4</title>
      <link>https://cestlaz.github.io/post/advent-2019-day4/</link>
      <pubDate>Wed, 04 Dec 2019 19:32:34 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2019-day4/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://adventofcode.com/2019/day/4&#34;&gt;Day 4&lt;/a&gt;. Most of the day was spent working on the NY State CS standards
to I didn&amp;#39;t figure to have much time to work on the
problem. Fortunately, I was able to knock out part 1 before work
started and part 2 was a quick adjustment when I got back to it at the
start of lunch.
&lt;/p&gt;
&lt;p&gt;
Once again, it was a problem with a few interesting teacher side
aspects.
&lt;/p&gt;
&lt;p&gt;
I only wrote a &lt;a href=&#34;https://github.com/zamansky/advent2019/blob/master/day04.clj&#34;&gt;Clojure solution&lt;/a&gt; today so that&amp;#39;s what I&amp;#39;ll use for my
code examples.
&lt;/p&gt;
&lt;p&gt;
The gist was that you were going to use a 6 digit integer as a
password but only  subset of the numbers between a start and end
point. Only numbers in that range for which these two properties held:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
There were at least one repeated digit, that is 123445 is o since
we have two consecutive 4s but 124354 isn&amp;#39;t
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The digits are increasing. That is, given any digit, the digit to
its right has either the same or a greater value.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
You had to find the number of &amp;#34;valid passwords.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
At first read this sounds like a math problem but it really
isn&amp;#39;t. Looking at the first constraint, if you convert the number to a
string, looking to see that at least two consecutive characters are
the same is pretty easy - it&amp;#39;s just a simple loop. 
&lt;/p&gt;
&lt;p&gt;
It turns out that it&amp;#39;s even easier using &lt;a href=&#34;https://www.regular-expressions.info/&#34;&gt;Regular Expressions&lt;/a&gt;. Regular
expressions (regex) aren&amp;#39;t usually an explicit part of a CS sequence
but man are they useful. Basically they allow you to set up a pattern
that will match text. Some examples:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;pattern&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Matches&lt;/th&gt;
&lt;th&gt;doesn&amp;#39;t match&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;aa[0-9]bb&lt;/td&gt;
&lt;td&gt;Matches aa a digit than bb&lt;/td&gt;
&lt;td&gt;aa3bb&lt;/td&gt;
&lt;td&gt;ax3b, aacbb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a+bb[a-z]&lt;/td&gt;
&lt;td&gt;one or more of a then two b then an a-z&lt;/td&gt;
&lt;td&gt;aabbc&lt;/td&gt;
&lt;td&gt;aabcb&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
You can use parentheses to form a &amp;#34;match group&amp;#34; and then use &amp;#34;\1&amp;#34; to
match the group, so this regular expression:
&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;&lt;code class=&#34;language-regex&#34; data-lang=&#34;regex&#34;&gt;([0-9])\1&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
will match two any substring with two of digits, adjacent. Many regex
engines allow you to use &lt;strong&gt;\d&lt;/strong&gt; instead of &lt;strong&gt;[0-9]&lt;/strong&gt; as a shorthand for
match a single digit.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the line that will take a list of potential passwords in a
variable &lt;strong&gt;passwords&lt;/strong&gt; and return a list that only containsn the
passwords that meet the two consecutive of the same digit rule.
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(filter &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(re-seq &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(\d)\1&amp;#34;&lt;/span&gt; %) passwords)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
I knew that Python has a &lt;strong&gt;partition&lt;/strong&gt; function that would take a string
with a potential password (I convert the number to a string before
doing the regex test above). It would take a string &amp;#34;1245&amp;#34; and convert
it into something like this &lt;strong&gt;(1,2), (2,3), (3,4), (4,5)&lt;/strong&gt;. Here&amp;#39;s the instruction:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(map &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;partition&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; %) passwords)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Next we test each pair in the partition to see that the first value in
the pair is less than or equal to the second one:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(map &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;(every? (&lt;span style=&#34;color:#66d9ef&#34;&gt;fn &lt;/span&gt;[ [a b]] (&amp;lt;= (int a) (int b))) %) passwrods)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Pull out the ones where the above is true and count them:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(count (filter true?))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
And that&amp;#39;s part one.
&lt;/p&gt;
&lt;p&gt;
The Python equivalent would be easier to read for the non-lisper but
the idea is the same and pretty straightforward. 
&lt;/p&gt;
&lt;p&gt;
What I like is that we just solved a number problem without math, just
text processing.
&lt;/p&gt;
&lt;p&gt;
Part 2 is more of the same. This time we still need a pair of adjacent
same digits but runs of 3 or more didn&amp;#39;t count. Now, 122234 wouldn&amp;#39;t
be a valid password because the run is of 3 while 1222344 would
because while the repeated 2s don&amp;#39;t count the 4s would.
&lt;/p&gt;
&lt;p&gt;
Fortunately, this is just more text processing:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Check to make sure the sequence is increasing (as above)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Remove all the sequences of 3 or more repeats. This can also be
xdone using a regular expression search and replace. In Clojure
it&amp;#39;s:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;     cleaned (&lt;span style=&#34;color:#a6e22e&#34;&gt;string/replace&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;([0-9])\1\1+&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) 
     &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
The [0-9]\1\1+ says match any sequence of 3 or more of the same
digit and we replace it with an empty string.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
If the remaining string has a pair of adjacent same digits (as
above) its a valid password.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
And that&amp;#39;s it. Both parts solved as a text processing problem. What
I love here is that it seems to be a numeric problem but it has a text
based solution. Certainly something worth talking about.
&lt;/p&gt;
&lt;p&gt;
Another thing I thought about as a teacher but didn&amp;#39;t pay attention to
in my solution was efficiency. My range consisted of about 500,000
values to check. Not huge enough to make a time difference but it&amp;#39;s
worth noting that there are only about 500 that fulfill the
&amp;#34;increasing&amp;#34; requirement but almost 200,000 that have a double digit
subsequence. 
&lt;/p&gt;
&lt;p&gt;
This means it could be more efficient to look for increasing first and
throw away most of the data and then do the digit test. This type of
ordering can be a big deal for other problems so could be worth
discussing. 
&lt;/p&gt;
&lt;p&gt;
Another issue is pipelining. Are you looping over the entire (or even
culled) data set over and over or can you take each number and put it
through a sequence of tests and/or transformations - the pipeline
could also lead to a more efficient solution.
&lt;/p&gt;
&lt;p&gt;
Lots of good teacher fodder.
&lt;/p&gt;
&lt;p&gt;
In closing I&amp;#39;ll mention one last thought - not mine but rather a
suggestion I found while perusing the Advent of Code subreddit after I
had submitted my solutions 
&lt;/p&gt;
&lt;p&gt;
Someone noted that since a valid number has increasing digits, if
digits appear more than once they &lt;strong&gt;have&lt;/strong&gt; to be adjacent to each
other. If they weren&amp;#39;t they&amp;#39;d violate the increasing restriction. This
means that you could solve this problem more numerically by:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
do the &amp;#34;increasing&amp;#34; test
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Find the sum of the counts of each digit value (0 through 9)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Test to see if at least one digit appears twice.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Based on tomorrows schedule I doubt I&amp;#39;ll get to AoC day 5 but we&amp;#39;ll
see.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2019 Day 3</title>
      <link>https://cestlaz.github.io/post/advent-2019-day3/</link>
      <pubDate>Tue, 03 Dec 2019 19:01:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2019-day3/</guid>
      <description>&lt;p&gt;
Today&amp;#39;s &lt;a href=&#34;https://adventofcode.com/2019/day/3&#34;&gt;problem&lt;/a&gt; dealt with intersecting paths. You start with two
inputs, figure out the paths they represent and where they intersect
and then find the intersection that correctly answers the question.
&lt;/p&gt;
&lt;p&gt;
For part 1 you have to find the intersection closest to the
origin. From a teacher&amp;#39;s point of view, the interesting part here is
data representation. This problem deals with a two dimensional grid on
which the paths live. For most students, at least in my experience, if
they&amp;#39;re trained in a language like C++ or Java they go for the direct
representation - a 2D array. For many problems this makes a lot of
sense. For this one, however, it probably doesn&amp;#39;t. We start at a
specific point but can travel in any direction for any distance. This
means we might need a crazy large array and what&amp;#39;s more, it&amp;#39;s probably
going to be sparsely filled.
&lt;/p&gt;
&lt;p&gt;
A more practical solution involves maintaining a data structure with
just the individual points of interest - the points on the path. 
&lt;/p&gt;
&lt;p&gt;
I chose a dictionary (or hash-map or hash-table depending on language)
The key would be a tuple representing a point and the value would hold
whatever data was needed. For part one that would be a set of the
paths that went through the point. 
&lt;/p&gt;
&lt;p&gt;
So, if we had a path made up of 2 intersecting lines:
&lt;/p&gt;
&lt;div class=&#34;src src-ditaa&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-ditaa&#34; data-lang=&#34;ditaa&#34;&gt; |
-+-----
 |&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
We could use a 2D array to represent it (assume the lines have ID&amp;#39;s 1
and 2):
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;align-right&#34;&gt;&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;6&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;0&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;#{2}&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;td&gt;#{1 2}&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;#{2}&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;td&gt;nil&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
That&amp;#39;s already a good deal of wasted space. using a dictionarey we&amp;#39;d
have:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;key (row,col)&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;(0,1)&lt;/td&gt;
&lt;td&gt;#{2}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1,0)&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1,1)&lt;/td&gt;
&lt;td&gt;#{1 2}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1,2)&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1,3)&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1,4)&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1,5()&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(1,6)&lt;/td&gt;
&lt;td&gt;#{1}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;(2,1)&lt;/td&gt;
&lt;td&gt;#{2}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Which becomes much more space efficient once we go beyond the smallest
test cases.
&lt;/p&gt;
&lt;p&gt;
Once we have the representation, the problem becomes one of stepping
through the paths and adding them to the dictionary. After that we can
pull out the small number of entries in our dictionary that were
visited by both paths and then we can find the final answer.
&lt;/p&gt;
&lt;p&gt;
I coded this up in Clojure &lt;a href=&#34;https://github.com/zamansky/advent2019/blob/master/day03.clj&#34;&gt;(solution here)&lt;/a&gt; but forgot to account for the fact that
when a path repeats itself it shouldn&amp;#39;t count as an intersection for
the purpose of the problem. Oops. I fudged things to get the right
answer but then had to head off to Albany.
&lt;/p&gt;
&lt;p&gt;
When I arrived I fixed the code but was pretty zonked so decide to
code the second part in Python &lt;a href=&#34;https://github.com/zamansky/advent2019/blob/master/day03.py&#34;&gt;(solution here)&lt;/a&gt;. Both solutions are pretty similar but
as I&amp;#39;m more comfortable with Python it didn&amp;#39;t require too much focus
to get it right.
&lt;/p&gt;
&lt;p&gt;
Given the wording of this problem, I think that most people will steer
towards the type of dictionary representation I used rather than a 2D
array but this way of storing data is worth discussing with classes
when you might otherwise use a 2D array.
&lt;/p&gt;
&lt;p&gt;
When might you ask?
&lt;/p&gt;
&lt;p&gt;
How about something like Conway&amp;#39;s Game of Life. When this is done in a
CS1 class the world is usually represented as a 2D array. It&amp;#39;s simple
 and direct. Another approach would be to only store the live cells in
a list. You can check out a Clojurescript implementation that does
just that &lt;a href=&#34;https://github.com/zamansky/clojure-life/tree/master/src&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Another would be the N-Queens problem. Insead of a board, just store
the queens locations. 
&lt;/p&gt;
&lt;p&gt;
Image processing? Well, there probably not. When doing image work,
you actually use all the cells in the 2D array.
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s pretty much all I have to say about today&amp;#39;s problem. It got me
thinking about alternate ways of representing our data. That&amp;#39;s
something we usually don&amp;#39;t have too much of an opportunity to discuss
with our students. That&amp;#39;s unfortunate.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent 2019 Day 2</title>
      <link>https://cestlaz.github.io/post/advent-2019-day2/</link>
      <pubDate>Mon, 02 Dec 2019 17:11:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2019-day2/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://adventofcode.com/2019/day/2&#34;&gt;Day 2&lt;/a&gt; of Advent of Code 2019 was also pretty straightforward and once
again I wrote &lt;a href=&#34;https://github.com/zamansky/advent2019/blob/master/day02.clj&#34;&gt;my solution&lt;/a&gt; in Clojure but in order to talk about this
from a teacher&amp;#39;s point of view, we&amp;#39;ll look at a &lt;a href=&#34;https://github.com/zamansky/advent2019/blob/master/day02.py&#34;&gt;Python solution&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
At its core, this is a simulation problem - read the data into an
array or list and write a program to run through the steps. At first I
was hoping that the solution would consume the data - that is, once
you read past an instruction you don&amp;#39;t go back to it. If it was, I was
going to try to write some clever reduce. It wasn&amp;#39;t. In this problem,
any instruction could affect any part of the data set. This means you
have to keep the entire data set in memory and preferably in a random
access structure like an array. 
&lt;/p&gt;
&lt;p&gt;
Step 1 is to read in the data and convert it into a list of integers.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you don&amp;#39;t know comprehensions you can just do something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now we just have to run the simulation:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The most likely source of error here is forgetting to change the
values in &lt;code&gt;program[1]&lt;/code&gt; and &lt;code&gt;program[2]&lt;/code&gt; in lines 18 and 19 as
specified in the question. The other likely error is forgetting to do
the two level indirection in lines 7 and 8. That is writing
&lt;code&gt;program[ip+1]&lt;/code&gt; and &lt;code&gt;program[ip+2]&lt;/code&gt; by mistake. Truth be told, I made
both of these mistakes but I didn&amp;#39;t find them to be &amp;#34;interesting&amp;#34;
mistakes. 
&lt;/p&gt;
&lt;p&gt;
The interesting part of this program is part 2 where instead of
setting &lt;code&gt;program[1]&lt;/code&gt; to &lt;code&gt;12&lt;/code&gt; and &lt;code&gt;program[2]&lt;/code&gt; to &lt;code&gt;2&lt;/code&gt; you have to try
values between 0 and 99 inclusive for each entry until you find a
specific answer. 
&lt;/p&gt;
&lt;p&gt;
This is a great platform to talk about memory. The problem refers to
the values you put into &lt;code&gt;program[1]&lt;/code&gt; as &lt;strong&gt;nouns&lt;/strong&gt; and &lt;code&gt;program[2]&lt;/code&gt; as
&lt;strong&gt;verbs&lt;/strong&gt;. The issue is that every time you run your program for a
specific &lt;strong&gt;noun verb&lt;/strong&gt; combination you change the array (list)
representing your program. If you don&amp;#39;t reset the array to its
original contents before the next run, the next run will be working
off of new values and therefore give you incorrect results. 
&lt;/p&gt;
&lt;p&gt;
This is a great platform for discussion. Students usually start with
&lt;strong&gt;pass by value&lt;/strong&gt; semantics so passing a list to a function and then
having the list change can seem weird even though it can still be pass
by value:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Here&amp;#39;s a finished solution:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Note that in line 30 we copy over the original data for each noun,verb
combo. also note the list comprehension in line 35 to find the final
answer. 
&lt;/p&gt;
&lt;p&gt;
One last potential error point is notice that we had to add the array
copy in line 20. Otherwise part1 will change the data and if we run it
before part2 we won&amp;#39;t get the correct result.
&lt;/p&gt;
&lt;p&gt;
So there it is. Another nice problem and even though it&amp;#39;s a
straightforward problem, there&amp;#39;s still some interesting meat to
discuss with your students.
&lt;/p&gt;
&lt;p&gt;
Tomorrow, snowstorm notwithstanding, I&amp;#39;ll be heading up to Albany for
the remainder of the week so might not be able to get to day 3 and
beyond until Friday so who knows if I&amp;#39;ll post any more of these
write ups.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2019 Day 1</title>
      <link>https://cestlaz.github.io/post/advent-2019-day1/</link>
      <pubDate>Sun, 01 Dec 2019 14:23:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-2019-day1/</guid>
      <description>&lt;p&gt;
Like most programming challenges, &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; ramps out from
easier, more accessible problems to harder, more complex ones. As
such, a number of the early challenges are great problems for early CS
students. 
&lt;/p&gt;
&lt;p&gt;
I thought that while I watched my NY Giants play valiantly in their
attempt to get a high draft pick I&amp;#39;d talk about today&amp;#39;s &lt;a href=&#34;https://adventofcode.com/2019/day/1&#34;&gt;challenge&lt;/a&gt;
from a teacher&amp;#39;s point of view.
&lt;/p&gt;
&lt;p&gt;
The summary of part one is that you have a list of inputs (masses of
components) and for each one you have to perform a calculation (how
much fuel is needed). The answer will be the sum of the fuels.
&lt;/p&gt;
&lt;p&gt;
The most challenging part of this for a beginner might be reading in
the data but that&amp;#39;s not too much of a challenge:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now we can calculate part1:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Part 2 adds a twist. Now, you have to also consider the fuel needed
for the fuel you&amp;#39;ve added. Basically, you have to calculate how much
fuel you&amp;#39;ll need for a given item and then how much fuel you&amp;#39;ll need
for that fuel. You repeat this until the amount of fuel you need is
either 0 or negative. See &lt;a href=&#34;https://adventofcode.com/2019/day/1&#34;&gt;the challenge&lt;/a&gt; for more info on this. 
&lt;/p&gt;
&lt;p&gt;
This is our first &amp;#34;teaching moment.&amp;#34; This is going to be messy to work
into our part1 solution but if we had factored out the original fuel
calculation we could probably reused it and maybe more of our
solution:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Now we can just add an inner loop that repeatedly adds the fuel costs.
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
More &amp;#34;teachable moments.&amp;#34; We have to change up variables in our fuel
calculations (lines 8 and 11) and for a beginner, the loop within a
loop can be somewhat muddled. It&amp;#39;s more complex but it&amp;#39;s doing
something that &lt;strong&gt;is&lt;/strong&gt; more complex. It&amp;#39;s also good nested loop practice.
&lt;/p&gt;
&lt;p&gt;
For more advanced students, if they&amp;#39;re familiar with list
comprehensions you can really clean up part 1:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
#+END_SRC
&lt;/p&gt;
&lt;p&gt;
but I think part 2 either stay&amp;#39;s more or less as is.
&lt;/p&gt;
&lt;p&gt;
Personally, I wrote my solutions in Clojure:
&lt;/p&gt;
&lt;div class=&#34;src src-clojure&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;ns &lt;/span&gt;day01
  (&lt;span style=&#34;color:#e6db74&#34;&gt;:require&lt;/span&gt; [clojure.string &lt;span style=&#34;color:#e6db74&#34;&gt;:as&lt;/span&gt; string]
            [utils &lt;span style=&#34;color:#e6db74&#34;&gt;:as&lt;/span&gt; u]))


(&lt;span style=&#34;color:#66d9ef&#34;&gt;def &lt;/span&gt;test-masses [&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1969&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100756&lt;/span&gt;])

&lt;span style=&#34;color:#75715e&#34;&gt;;; load data&lt;/span&gt;
(&lt;span style=&#34;color:#66d9ef&#34;&gt;def &lt;/span&gt;masses (&lt;span style=&#34;color:#a6e22e&#34;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;
             (slurp &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;day01.dat&amp;#34;&lt;/span&gt;)
             string/split-lines
             (map u/parse-int)
             ))


(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;calc-mass-part1 [mass]
  (- (quot mass &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))

(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;part1 [masses]
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;calculate fuel for each mass then sum them all&amp;#34;&lt;/span&gt;
  (reduce + (map calc-mass-part1 masses)))



(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;calc-mass-part2
  ([mass] (&lt;span style=&#34;color:#a6e22e&#34;&gt;calc-mass-part2&lt;/span&gt; mass &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;))
  ([mass cost]
   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Same as part 1 but loop to calculate fuel for the fuel&amp;#34;&lt;/span&gt;
   (&lt;span style=&#34;color:#66d9ef&#34;&gt;let &lt;/span&gt;[fuel (&lt;span style=&#34;color:#a6e22e&#34;&gt;calc-mass-part1&lt;/span&gt; mass)]
     (&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(&amp;lt;= fuel &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
       cost
       (&lt;span style=&#34;color:#a6e22e&#34;&gt;recur&lt;/span&gt; fuel (+ cost fuel))))))
  
(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;part2 [masses]
  (reduce + (map calc-mass-part2 masses )))

(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;main []
(println (str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Part1: &amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;part1&lt;/span&gt; masses)))
(println (str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Part2: &amp;#34;&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;part2&lt;/span&gt; masses)))
)

(&lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
So that&amp;#39;s day 1. I don&amp;#39;t know if I&amp;#39;ll write up any more or, given my
travel and work schedule for the week,if I&amp;#39;ll even be able  to work
on more problems until next weekend. 
&lt;/p&gt;
&lt;p&gt;
In any event. If you&amp;#39;re teaching CS0 or CS1 students, you should
really check out Advent of Code.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent Of Code 2019</title>
      <link>https://cestlaz.github.io/post/advent-of-code-2019/</link>
      <pubDate>Fri, 29 Nov 2019 09:02:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/advent-of-code-2019/</guid>
      <description>&lt;p&gt;
It&amp;#39;s almost December which means it&amp;#39;s almost time for &lt;a href=&#34;http:/adventofcode.com&#34;&gt;Advent of Code
2019&lt;/a&gt;. Advent of code is an annual computer programming competition
created and ruyn by &lt;a href=&#34;https://twitter.com/ericwastl&#34;&gt;Eric Wastl&lt;/a&gt;. It&amp;#39;s been running since 2015. I&amp;#39;ve
written about it before, mostly from a teacher&amp;#39;s point of view (&lt;a href=&#34;https://cestlaz.github.io/post/solve-a-to-solve-b/&#34;&gt;Solve
A to Solve B&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/post/aoc-data-structures-hidden-complexity/&#34;&gt;Data structures and Hidden Complexity&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/posts/advent-2017-4-6/&#34;&gt;Tools can shape
how we think&lt;/a&gt; and a few others). 
&lt;/p&gt;
&lt;p&gt;
Basically, Eric releases one poblem a day at midnight from Dec 1
through Dec 25. Each problem has two parts with a correct solution to
part 1 unlocking part 2. Problems can be solved using any language as
each challenge just requires you to enter the correct result rather
than you submitting code. This allows you to use any language or even
no language at all.
&lt;/p&gt;
&lt;p&gt;
In terms of difficulty, some problems are certainly doable by students
in CS1 or even CS0. In fact, Eric takes great pains to keep from using
CSSpeak so as to make the problems approachable even if you aren&amp;#39;t a
CS major or professional.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re a CS Teacher you can find some great lesson and problem
ideas here. If you&amp;#39;re a student, they&amp;#39;re great interview prep and will
stretch your problem solving capabilities. If you&amp;#39;re just a techie,
they&amp;#39;re just fun challenges. 
&lt;/p&gt;
&lt;p&gt;
There aren&amp;#39;t any prizes so it&amp;#39;s all just for the fun of it. You can
also get help and see great discussions on the challenges over on the
Advent of Code &lt;a href=&#34;https://www.reddit.com/r/adventofcode/&#34;&gt;subreddit&lt;/a&gt;. Lots of people also put their solutions up
online. I&amp;#39;ve never finished but you can find a bunch of my old
solutions up on &lt;a href=&#34;https://github.com/zamansky?utf8=%25E2%259C%2593&amp;amp;tab=repositories&amp;amp;q=adve&amp;amp;type=&amp;amp;language=&#34;&gt;GitHub&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Finally, you can get to the challenges from previous years by just
adding the year to the url, that is:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://adventofcode/2019&#34;&gt;&lt;a href=&#34;http://adventofcode.com/2019&#34;&gt;http://adventofcode.com/2019&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://adventofcode.com/2018&#34;&gt;http://adventofcode.com/2018&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://adventofcode.com/2017&#34;&gt;http://adventofcode.com/2017&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://adventofcode.com/2016&#34;&gt;http://adventofcode.com/2016&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://adventofcode.com/2015&#34;&gt;http://adventofcode.com/2015&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Finally, here&amp;#39;s a really interesting video by Eric on the whole AoC
thing:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/bS9882S0ZHs&#34;&gt;https://www.youtube.com/embed/bS9882S0ZHs&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Presenting At CSTA 2020</title>
      <link>https://cestlaz.github.io/post/presenting-at-csta/</link>
      <pubDate>Tue, 26 Nov 2019 13:05:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/presenting-at-csta/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Presenting at CSTA 2020
&lt;/h2&gt;
&lt;p&gt;
I noticed a few tweets and posts from people announcing that they&amp;#39;d be
presenting at CSTA2020 - the big computer science teachers conference
held every July.
&lt;/p&gt;
&lt;p&gt;
A common thread in a few of these were trepidation&amp;#39;s
presenters. Excited to be doing this but nervous.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s interesting that teachers, myself included, sometimes get nervous
before presentations even though we present every day as part of our
jobs. I know it&amp;#39;s different as we have the same kids every day but
even day 1 jitters each semester aren&amp;#39;t the same as the presentation
anxiety that some of us face.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m certainly not a super master seasoned presenter. I&amp;#39;ve done it a
few times at CSTA and other venues and this year JonAlf and I will be
running a GitHub workshop but I thought I&amp;#39;d share some words of
encouragement anyway.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
You&amp;#39;re really just talking shop.
&lt;/h3&gt;
&lt;p&gt;
Basically, you&amp;#39;re a teacher talking about teaching and I think we all
love to do that. 
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
It&amp;#39;s an audience of friends
&lt;/h3&gt;
&lt;p&gt;
CSTA is a conference primarily of teachers - our colleague.s Everyone
coming to your session is already interested in your opinion and going
in as a supportive audience. They &lt;strong&gt;want&lt;/strong&gt; to hear from you.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll go back to the previous point - you&amp;#39;re basically talking shop
with friends. 
&lt;/p&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
CSTA still feels intimate
&lt;/h3&gt;
&lt;p&gt;
In spite of its rapid growth, the CSTA conference still feels
intimate. It&amp;#39;s not a huge conference where you can attend a talk or
meet someone at breakfast and never find them again. It&amp;#39;s big enough
so that you &lt;strong&gt;can&lt;/strong&gt; avoid anyone you want to dodge but you can pretty
much find time to spend with anyone you want to as well. This can turn
your talk more into a starting point for a longer convesation - how
cool is that.
&lt;/p&gt;
&lt;h3 id=&#34;headline-5&#34;&gt;
Don&amp;#39;t forget to enjoy it
&lt;/h3&gt;
&lt;p&gt;
I used  to get really nervous when giving LARGE talks - we&amp;#39;re talking
to an audience of one or two thousand. I&amp;#39;ve only done that a few
times. A couple of times at the New York Tech Meetup and once when I
was the faculty graduation speaker at Stuy when my best friend was the
guest speaker and my daughter was in the graduating class. 
&lt;/p&gt;
&lt;p&gt;
I was pretty nervous before I hit the stage at Stuy when a colleague
gave me some great advice - &amp;#34;take the time to enjoy the moment.&amp;#34; I
remembered that just as I said above - I was about to talk to
friends. Two thousand of them, but friends nonetheless. I was reminded
to slow down and take it in. Enjoy the moment. I&amp;#39;ve tried to do that
with any presentation I&amp;#39;ve given since. 
&lt;/p&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Final thoughts
&lt;/h3&gt;
&lt;p&gt;
As  a final thought I&amp;#39;ll leave you by paraphrasing something that I
think was said by Pinchas Zuckerman - the world class violist and
violinist (who I think also used to wear a shirt proclaiming &amp;#34;I
vibrato when I play baroque - Deal with it!!!!!).
&lt;/p&gt;
&lt;p&gt;
He said that you should always be smiling when you&amp;#39;re
performing. Either your performance is going well and you&amp;#39;re creating
beautiful music or it&amp;#39;s going horribly but it will be over soon. :-)
&lt;/p&gt;
&lt;p&gt;
Already looking forward to July.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working with texts part 3 - word chains</title>
      <link>https://cestlaz.github.io/post/word-chains/</link>
      <pubDate>Mon, 25 Nov 2019 05:45:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/word-chains/</guid>
      <description>&lt;p&gt;
At this point, we&amp;#39;ve done a fair amount of playing with text so it&amp;#39;s
time for a fun little project. We&amp;#39;re going to generate some text &amp;#34;in
the style&amp;#34; of a source text. The technique we&amp;#39;re going to use is
usually called a Markov Chain text generator. Basically a model where
the next state or word is based entirely on the current state. I don&amp;#39;t
dwell on the math under the hood but in case you&amp;#39;re interested, here
are a few links: &lt;a href=&#34;https://en.m.wikipedia.org/wiki/Markov_chain&#34;&gt;Wikipedia&lt;/a&gt;, &lt;a href=&#34;http://setosa.io/ev/markov-chains/&#34;&gt;Explained Visually&lt;/a&gt;, &lt;a href=&#34;https://www.math.ucdavis.edu/~daddel/linear_algebra_appl/Applications/MarkovChain/MarkovChain_9_18/MarkovChain_9_18.html&#34;&gt;UC Davis Math&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
You can motivate this lesson in a number of ways. One is to start by
showing some generated text - for this, a flowery, poetic text like
the Book of Psalms works well. You can generate text a bunch of times
until you get a good result. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the start of the Book of Psalms:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Blessed is the man that walketh not in the counsel of the
ungodly, nor standeth in the way of sinners, nor sitteth in
the seat of the scornful.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and here&amp;#39;s some generated text:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Blessed is the people that delight in war. Princes shall come out of
Zion,  the perfection of beauty god hath shined our god shall come and
shall declare thy mighty acts. I will speak of the glory of the lord
surely i will not lie unto David.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I added the punctuation as our generator strips it all and converts
the text to lower case.
&lt;/p&gt;
&lt;p&gt;
The generated text looks reasonable in some ways but is clearly wrong
in others.
&lt;/p&gt;
&lt;p&gt;
This leads to the conversation.
&lt;/p&gt;
&lt;p&gt;
If we look at the original text, it starts with &amp;#34;blessed&amp;#34; but if we
look at our bag of words we also can see that &amp;#34;blessed&amp;#34; appears 49
times. What&amp;#39;s interesting for generating text are the words the follow
&amp;#34;blessed&amp;#34; and the number of times they follow it. Here they are
(sorted for convenience):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Word&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;How many times it follows the word &amp;#34;blessed&amp;#34;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;are&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;art&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;be&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blessed&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;depart&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;for&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;his&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;in&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;is&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;of&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;that&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thee&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;thy&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;upon&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;wealth&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;you&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So we&amp;#39;ll have a lot of things like &amp;#34;blessed be the&amp;#34; &amp;#34;blessed be he&amp;#34;
etc. but only one occurrence of &amp;#34;blessed upon….&amp;#34; To generate text, we
can build a dictionary where the keys are the words and the values are
all the words that follow the key. We can build this with a variation
on our bag of words builder:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Note that we need a counting loop rather than just iterating over the
list since we need both the current item and the one after it in each
iteration.
&lt;/p&gt;
&lt;p&gt;
The (partial) value for the wordlists for the Book of Psalms would be:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
At this point, generating text is easy. 
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Start with a word
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Add the word to yoru story.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Look  it up in your wordlists dictionary.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
select a random word from that words dictionary entry (it&amp;#39;s list).
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
That becomes the word for the next iteration
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Repeat until you have enough words.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
This won&amp;#39;t add any punctuation and it will crash when it gets to the
last word in the original text (as it can&amp;#39;t find any &amp;#34;next words&amp;#34; but
basically it will work. Here&amp;#39;s the code:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
The &lt;code&gt;random.choice()&lt;/code&gt; randomly selects a word from a list. This is
perfect for us since words that follow our key more frequently will
have more entries in the list and thus appear more often. I decided to
build a list of words and then use the &lt;code&gt;&amp;#34; &amp;#34;.join()&lt;/code&gt; to turn it all
into a space separated string.
&lt;/p&gt;
&lt;p&gt;
This is pretty fun but the students will note that it really doesn&amp;#39;t
work that well. This can lead to increasing our sample. Instead of
using a single word as our key and having chain links based on two
words (key, random choice from value), we can use three word
links. Use a two word tuple for the key and the same list of words as
the value.
&lt;/p&gt;
&lt;p&gt;
For example, a partial dictionary based on this idea from Macbeth Act
1 Scene 1 could be:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This takes a bit more work to build and also a bit more work to
generate text but it&amp;#39;s eminently doable and the result is
better. What about three word keys? Four? These aren&amp;#39;t hard to write
and ambitious students can write a generic dicitonary builder and
story generator routine so as to be able to use any key lenght.
&lt;/p&gt;
&lt;p&gt;
Students will find that the longer the key, the better the resultant
story. They&amp;#39;ll also notice that at some point, all you&amp;#39;ll ever
generate is the original back again. This is a great time to talk
about over-training.
&lt;/p&gt;
&lt;p&gt;
This can be a fun unit and / or assignment. I used source materials
that I like but any text will work.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lesson and project inspiration from old BSD games</title>
      <link>https://cestlaz.github.io/post/bsdgames/</link>
      <pubDate>Fri, 22 Nov 2019 13:55:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/bsdgames/</guid>
      <description>&lt;p&gt;
When I was writing the &lt;a href=&#34;https://cestlaz.github.io/post/i-speak-jive/&#34;&gt;I Speak Jive&lt;/a&gt; post, the first thing I had to do
was find those old programs. It turned out to be harder than I
thought. I found online versions but it took a while to find &lt;a href=&#34;https://github.com/hyperrealm/talkfilters&#34;&gt;this&lt;/a&gt;
GitHub repo.
&lt;/p&gt;
&lt;p&gt;
On the way, I seemed to recall that these might be bundled with a
bunch of old &lt;a href=&#34;https://github.com/vattam/BSDGames&#34;&gt;BSD games&lt;/a&gt; so I took a look at the BSD games package for
Linux. While I didn&amp;#39;t find the filters, I found a whole bunch of old
programs that I hadn&amp;#39;t played with in years along with a few that I
never knew existed. To me it felt like an interesting project and
lesson treasure trove so I wanted to share.
&lt;/p&gt;
&lt;p&gt;
I think this makes more sense to do as a video so I can actually show
the programs as they run so check out the video at the end of this
post.
&lt;/p&gt;
&lt;p&gt;
In the video I talk about controlling the cursor on the screen so that
students can write programs like the ones I demo. That can be done in
a number of ways. You could use a library like &lt;a href=&#34;https://github.com/mabe02/lanterna&#34;&gt;lanterna&lt;/a&gt; for Java or
&lt;a href=&#34;https://en.wikipedia.org/wiki/Curses_%2528programming_library%2529&#34;&gt;curses&lt;/a&gt; or ncurses for C but you can also just use Ansi Escape
codes. Basically you print out &lt;a href=&#34;http://ascii-table.com/ansi-escape-sequences-vt-100.php&#34;&gt;special escape squences&lt;/a&gt; to move the
cursor, clear the screen and even set text and background colors. For
example, to move the cursor to the middle of the screen and print
&lt;strong&gt;Hello&lt;/strong&gt; you would use this: &lt;code&gt;System.out.print(&amp;#34;^[[12;40HHello&amp;#34;);&lt;/code&gt; The
first &lt;code&gt;^[&lt;/code&gt; is actually the ascii code for the escape character. I
enter it in Emacs by typing Control-q then hitting the escape
key. Other editors will have a way of doing the same.
&lt;/p&gt;
&lt;p&gt;
So here you go – old BSD games. I hope you get as many ideas out of
this as I did.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Uyvh1Q9SLbE&#34; frameborder=&#34;0&#34;
&lt;p&gt;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working with texts part 2 - bag of words</title>
      <link>https://cestlaz.github.io/post/bag-of-words/</link>
      <pubDate>Wed, 20 Nov 2019 08:15:41 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/bag-of-words/</guid>
      <description>&lt;p&gt;
Following up on a &lt;a href=&#34;https://cestlaz.github.io/post/cleaning-textx/&#34;&gt;previous post&lt;/a&gt;, we&amp;#39;re going to continue to talk about
playing with text. This time, building and working with a bag of words
from a text. 
&lt;/p&gt;
&lt;p&gt;
A bag of words is a simple language processing model where you just
consider individual words in a text. What they are and how many times
they occur. This is a pretty simple model but you can still have a
good bit of fun with your students with it.
&lt;/p&gt;
&lt;p&gt;
For example, if you take a text like this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
This land is your land
this land is my land
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once you clean the a data as per the previous post you get the
following bag:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;word&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;is&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;land&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;my&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;this&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;your&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Not too interesting but it gets more interesting on a larger text. We
used:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Act 1 Scene 1 from Macbeth (for testing - it&amp;#39;s only 13 lines)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Cyrano de Bergerac (because it&amp;#39;s my favorite play)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Moby Dick (chapter 1)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Moby Dick (full text)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The Book of Psalms
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Assuming a cleaned string with all the text, building the bag is
pretty easy:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;cleaned_text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a string with all the cleaned text&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;bag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cleaned_text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split():
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;  bag&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setdefault(word,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;  bag[word] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bag[word] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;setdefault&lt;/code&gt; in line three says that if &lt;code&gt;word&lt;/code&gt; isn&amp;#39;t a key in the
dictionary then insert it with a value of 0, otherwise, if &lt;code&gt;word&lt;/code&gt; &lt;strong&gt;is&lt;/strong&gt;
already a key in the dictionary do nothing. This saves us from
constructs like:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; bag:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;      bag[word]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;      bag[word] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bag[word] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Once we have our bag we can do some explorations. Take out all the
values using &lt;code&gt;bag.values()&lt;/code&gt; and sort them. Ask &amp;#34;what words are going
to occur most frequently?&amp;#34; It&amp;#39;s easy to guess that it will be words
like &lt;strong&gt;the&lt;/strong&gt;, &lt;strong&gt;of&lt;/strong&gt;, &lt;strong&gt;and&lt;/strong&gt; etc.. Words that don&amp;#39;t really tell us anything
about the text. It&amp;#39;s a fun puzzle to figure out where the
&amp;#34;interesting&amp;#34; words start and even the question of what might make a
word in a text &amp;#34;interesting.&amp;#34; Words like &lt;strong&gt;the&lt;/strong&gt;, *and&amp;#34;, etc. are known
as &lt;a href=&#34;http://xpo6.com/list-of-english-stop-words/&#34;&gt;stop words&lt;/a&gt;. Depending on the application, you might want ot remove
them. Then again, you might not.
&lt;/p&gt;
&lt;p&gt;
Usually we take a bit of time just to play with the bag, looking at
the types of words in various count ranges. Sometimes we&amp;#39;ll make bags
for different chapters of books and compare them. This is also when I
cover Python list comprehensions which make experimenting on bags of
words much cleaner. Say, for instance you want to find all the words
that occur between 50 and 100 times. Without list comprehensions you
might write:
&lt;/p&gt;
&lt;p&gt;
  &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;  result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; bag:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; bag[word] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; bag[word] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;          result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(word) &lt;span style=&#34;color:#75715e&#34;&gt;# or (word,count) or whatever&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
While with the comprehension it&amp;#39;s:
&lt;/p&gt;
&lt;p&gt;
  &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ word &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; bag &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; bag[word] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; bag[word] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;]
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Besides basic exploring, what else can you do? You can make word
vectors, that is a list or vector where an element is 1 if the word is
present and 0 otherwise. Then you can do simple document
comparisons. You can kick this up a notch if you calculate word
frequencies based on the bag counts and use these. 
&lt;/p&gt;
&lt;p&gt;
You can also do basic sentiment analysis. Download a list of
&amp;#34;positive&amp;#34; and &amp;#34;negative&amp;#34; words and then check bags against them. You
can check to see how many negative or positive words are in a bag or
you can work with frequencies. You can also use other categories. 
&lt;/p&gt;
&lt;p&gt;
While we were discussing this at our PD, some teachers thought that
their classes might ahve a hard time doing all of this  from scratch
but thought that they could provide either the cleaning code or the
bag building code and have the students build experiments off of the
base. I thought it was a great idea.
&lt;/p&gt;
&lt;p&gt;
At the end of our session we all agreed to think about how we might
build a lesson or unit out of this bag of words idea. I&amp;#39;ll leave you
all with some web sites that use these ideas in what I think are
interesting ways:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://davidamackenzie.com/tmbg_lyrics/&#34;&gt;They Might Be Giants Lyrics&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://blogs.sap.com/2014/01/07/measuring-word-use-frequency-in-rap-song-lyrics/&#34;&gt;Word use in rap lyrics&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://genius.com/Sameoldshawn-rap-stats-breaking-down-the-words-in-rap-lyrics-over-time-annotated&#34;&gt;Another analysis of rap lyrics&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://towardsdatascience.com/text-analysis-of-successful-song-lyrics-e41a4ccb26f5&#34;&gt;Analysis of succesful song lyrics&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Enjoy!
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 62 Magit Forge</title>
      <link>https://cestlaz.github.io/post/using-emacs-62-magit-forge/</link>
      <pubDate>Tue, 19 Nov 2019 12:25:58 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-62-magit-forge/</guid>
      <description>&lt;p&gt;
Ever since I started looking at Magit as a &amp;#34;git dashboard&amp;#34; instead of
as a &amp;#34;git interface&amp;#34; it&amp;#39;s been yet another Emacs killer app to me. I
just recently started playing with &lt;a href=&#34;https://github.com/magit/forge&#34;&gt;forge&lt;/a&gt; which allows &lt;a href=&#34;https://github.com/magit/magit&#34;&gt;Magit&lt;/a&gt; to
interface and interact with git &amp;#34;forges&amp;#34; like GitHub. This allows you
to work on issues and pull requests without ever leaving Emacs.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a video on how easy it is. The video doesn&amp;#39;t show this but the
first time you fire forge up it will prompt you for credentials. 
&lt;/p&gt;
&lt;p&gt;
Also, if you aren&amp;#39;t familiar with GitHub issues, check out the
post/video I made a few days ago (&lt;a href=&#34;https://cestlaz.github.io/post/git-issues/&#34;&gt;link&lt;/a&gt;) and you can check out my
earlier post/video on Magit as well (&lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-47-magit/&#34;&gt;link&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/wgI8r3Nx_BI&#34;&gt;https://www.youtube.com/embed/wgI8r3Nx_BI&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using GitHub issues for class communicatoin</title>
      <link>https://cestlaz.github.io/post/git-issues/</link>
      <pubDate>Sun, 17 Nov 2019 16:17:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/git-issues/</guid>
      <description>&lt;p&gt;
Last week I talked about using &lt;a href=&#34;https://cestlaz.github.io/post/communicating-with_students/&#34;&gt;GitHub issues&lt;/a&gt; as a mechanism for class
communication. I thought it might be helpful to follow up on it and
also felt that a video would be better than text.
&lt;/p&gt;
&lt;p&gt;
So, here it is, 16 minutes on how you can use GitHub issues for class
communication. I don&amp;#39;t show examples of everything like @ tagging but
I think it shows some of the power of using GitHub and GitHub
classroom beyond just a software repo and versioning.
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/SNsjMKYoLr8&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 61 - org-msg</title>
      <link>https://cestlaz.github.io/post/using-emacs-61-org-msg/</link>
      <pubDate>Sat, 16 Nov 2019 05:00:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-61-org-msg/</guid>
      <description>&lt;p&gt;
By living in Emacs I get a consistent interface across all sorts of
tasks - programming, lesson planning, making presentations, preparing
documents, and yes, even email. I&amp;#39;ve been using &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-39-mu4e/&#34;&gt;mu4e&lt;/a&gt; as my Emacs email
client for a while now. Currently, I&amp;#39;m using Emacs for my work email
and Gmail for personal. I&amp;#39;ve been thinking of going whole hog to mu4e
and possibly migrating from Gmail to a new email provider for the
personal stuff but there are still a few pain points with Emacs email:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
rich text emails (embedded links, images, etc)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
calendar integration
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
contacts 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
periodic Maildir sync problems with mbsync
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Calendar integration isn&amp;#39;t a make or break issue and contacts with
mu4e is good enough so that leaves two pain points. Formatted emails
which I think is now pretty much solved (see below) and the Maildir
stuff.
&lt;/p&gt;
&lt;p&gt;
On the Maildir side, I&amp;#39;m trying deal with my email across four
machines - work laptop, work desktop, home laptop, home desktop. I
originally synced each one separately and that worked but I was having
archive problems - it seems that I was only archiving on the local
machine so if I archived an email at work and I needed to get to it at
home, I was out of luck. 
&lt;/p&gt;
&lt;p&gt;
Then, I moved to sharing my Maildir using Syncthing - an opensource
Dropbox-alike. That mostly worked but if I wasn&amp;#39;t careful I&amp;#39;d get
syncing errors where I have to go into my Maildir directory and
manually rename or remove messages - a real pain.
&lt;/p&gt;
&lt;p&gt;
If anyone out there has a solution (and &lt;a href=&#34;http://pragmaticemacs.com/emacs/fixing-duplicate-uid-errors-when-using-mbsync-and-mu4e/&#34;&gt;this&lt;/a&gt; fix doesn&amp;#39;t fully work
for me), I&amp;#39;d love to hear about it.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s get back to the formatted email. I was already to create an
email in org mode using &lt;code&gt;org-mu4e-compose-org-mode&lt;/code&gt; which I think is
built in to either org-mode or mu4e but it&amp;#39;s limited. It formats
tables, outlines, and source blocks but I can&amp;#39;t easily make a source
block for something like &lt;strong&gt;dot&lt;/strong&gt; or &lt;strong&gt;ditaa&lt;/strong&gt; and embed the result. I
found a solution recently. It&amp;#39;s &lt;a href=&#34;https://github.com/jeremy-compostella/org-msg&#34;&gt;org-msg&lt;/a&gt; - a terrific package that lets
you compose an email in org-mode. It seems to have better support than
org-mu4e-compose-org-mode. It does the basic formatting, tables, etc
and also executes source blocks. The only thing that was missing for
me was LaTeX formatting but I use that so rarely I don&amp;#39;t really care.
&lt;/p&gt;
&lt;p&gt;
The package author, Jeremy Compostella, is also very responsive. When
I first installed org-msg it wasn&amp;#39;t integrating seamlessly with
mu4e. It was still workable but I had to manually insert some
configuration at the top of all my emails. I opened an issue on this
and within a day it was fixed.
&lt;/p&gt;
&lt;p&gt;
It also has a very cool preview mode so you can see what you&amp;#39;re
sending. On that, though, I did have an issue but I&amp;#39;m pretty sure it&amp;#39;s
an Emacs / org-mode issue and not an org-msg issue. On my desktop,
when I run the preview, it opens my browser with the email formatted
correctly. When I do the same on my laptop, it runs GitHub Classroom
Assistant - an application I installed and use for other
purposes. I&amp;#39;ve had this happen before with other emacs xdg things. If
anyone else has seen this and better has a solution, I&amp;#39;d love to hear
about that as well.
&lt;/p&gt;
&lt;p&gt;
Anyway, here&amp;#39;s a video that shows org-msg in action:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/cPZe0AGOUJU&#34;&gt;https://www.youtube.com/embed/cPZe0AGOUJU&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working with texts part 1 - cleaning the data</title>
      <link>https://cestlaz.github.io/post/cleaning-textx/</link>
      <pubDate>Fri, 15 Nov 2019 16:18:51 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cleaning-textx/</guid>
      <description>&lt;p&gt;
I run periodic professional development sessions here in New York with
my partner in crime JonAlf Dyrland-Weaver. I call them PD for &amp;#34;APCS-A,
similar or beyond&amp;#34; and they&amp;#39;re designed to fill a professional
development gap. We try to run them once a month but it&amp;#39;s a little
less frequent than that.
&lt;/p&gt;
&lt;p&gt;
The NYCDOE has taken on the monster task of CS for all and since
they&amp;#39;re trying to get to everyone they have to run a bazillion
sessions but all at an introductory level. Beyond that, most PD is
tied to a curriculum, program, or product. We decided to run sessions
for teachers who are ready for more both pedagogically and content
wise while not affiliating with any specific provider. We&amp;#39;re just
about the CS and the teaching of CS.
&lt;/p&gt;
&lt;p&gt;
Yesterday we had our first session of the year and the content topic
was text processing. Along the way, we used it as an opportunity to
highlight subgoal labeling as a teaching technique.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot you can do in both CS0 and CS1 with text and document
processing. By the end of yesterday&amp;#39;s session we had discussed a bunch
of possibilities based on the text processing technique known as a
&amp;#34;bag of words&amp;#34; which basically takes a text and just considers all the
words it contains. What are the words and how many times does each
word occurs. No consideration of order, grammar, or anything else. Just
words and counts. We also talked a bit about more advanced possibilities
like playing with an inverted index. I&amp;#39;ll talk about both of those in
a future post. 
&lt;/p&gt;
&lt;p&gt;
For today, let&amp;#39;s talk about what we have to do before we even begin -
preprocessing the data.
&lt;/p&gt;
&lt;p&gt;
We grabbed a bunch of texts from &lt;a href=&#34;https://www.gutenberg.org/&#34;&gt;Project Gutenberg&lt;/a&gt;. Specifically, &amp;#34;Moby
Dick&amp;#34;, a translation of my favorite play &amp;#34;Cyrano de Bergerac&amp;#34; and the
Book of Psalms from the Bible. I also made a copy of the first chapter
of &amp;#34;Moby Dick&amp;#34; so we had a shorter corpus to play with and typed up
the first scene of &amp;#34;Macbeth&amp;#34; - all thirteen lines of it.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s easy enough to read in the data in a language like Python:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cyrano.txt&amp;#34;&lt;/span&gt;)
raw_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
but if you&amp;#39;re using a bag of words you&amp;#39;ve got to do some cleaning.
&lt;/p&gt;
&lt;p&gt;
To start, all Project Gutenberg texts contain a whole bunch of front
and back matter with lots of words. If you don&amp;#39;t get rid of them
you&amp;#39;ll get extra words in your bag. I forgot to do this and was a bit
surprised to see phrases like &amp;#34;Pay a trademark license&amp;#34; in the Book of
Psalms.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s easy enough to just cut the tops and bottoms of each file off
with an editor and that&amp;#39;s when we can read our data into our program
and the fun begins.
&lt;/p&gt;
&lt;p&gt;
First we had to turn everything into lower case;
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;lower_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; raw_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
and then the big part - we want to get rid of all the punctuation. We
first tried something like this:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;stuff_to_remove &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.:;&amp;#39;0123456789&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;cleaned_letters &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lower_data &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stuff_to_remove]
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;cleaned_string &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(cleaned_letters)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
The second line is a list comprehension. It iterates through each
letter in lower_data and copies it into the resultant list only if the
letter is not in our stuff_to_remove list.
&lt;/p&gt;
&lt;p&gt;
For example, if we had &lt;code&gt;lower_data = &amp;#34;abc123def g&amp;#34;&lt;/code&gt; we&amp;#39;d get a result
of &lt;code&gt;[&amp;#34;a&amp;#34;,&amp;#34;b&amp;#34;,&amp;#34;c&amp;#34;,&amp;#34;d&amp;#34;,&amp;#34;e&amp;#34;,&amp;#34;f&amp;#34;,&amp;#34; &amp;#34;,&amp;#34;g&amp;#34;]&lt;/code&gt;. We then use the join in line 3
to turn it back into a string &lt;code&gt;&amp;#34;abcdef g&amp;#34;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This worked pretty well but we found that there were problems. There
were characters that we didn&amp;#39;t account for like long dashes that
connected words and we didn&amp;#39;t have an easy way to put them in our
removal string.
&lt;/p&gt;
&lt;p&gt;
This led to take 2. Instead of deciding what to throw away, let&amp;#39;s
decide what to keep;
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;stuff_to_keep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;abcdefghijklmnopqrstuvwxyz &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;cleaned_letters &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lower_data &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stuff_to_remove]
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;cleaned_string &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(cleaned_letters)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
This worked better (and yes, I know I could have used isalpha() but I
didn&amp;#39;t remember it at the time) but still had problems. We had words
that were formerly separated by punctuation with no spaces that were
now combined into new invalid words. We also had things like chapter
headings in our text and other stray words that we probably wanted to
get rid of.
&lt;/p&gt;
&lt;p&gt;
All of this led to rich conversation among the teachers present and
can do the same in class. What do you clean? What do you keep? Is it
worth the effort to write all sorts of cleaning code to get rid of a
couple of stray bits of bad data or can we get the results we want by
leaving it in? There&amp;#39;s no universally right answer and that&amp;#39;s part of
the beauty of doing things like this with a class - it&amp;#39;s something
that can make them think.
&lt;/p&gt;
&lt;p&gt;
Once we made our final cleaning decisions it&amp;#39;s a simple matter to
convert the long string of text into a list of words:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;wordlist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cleaned_string&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Now we&amp;#39;re ready to start building our bag of words but that&amp;#39;s a post
for another day.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Communicating With Students - maybe GitHub to the rescue</title>
      <link>https://cestlaz.github.io/post/communicating-with_students/</link>
      <pubDate>Wed, 13 Nov 2019 10:17:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/communicating-with_students/</guid>
      <description>&lt;p&gt;
Out of class student communication is always a challenge. There are
plenty of options:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Piazza
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Facebook group
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Slack, Discord, or other chat system
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Discourse, Vanilla or other discussion forum system
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Mailing list
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
but all have warts. 
&lt;/p&gt;
&lt;p&gt;
I shared my thoughts on a number of these options &lt;a href=&#34;https://cestlaz.github.io/posts/class-communications/&#34;&gt;a while ago&lt;/a&gt; but
thought I&amp;#39;d update them now.
&lt;/p&gt;
&lt;p&gt;
Most of my opinions hold form my earlier post. I was using and
continue to use a mailing list as I can be pretty sure that students
will get the email and they don&amp;#39;t have to go to any outside site or
application. Now, getting them to respond or just use it for general
class communication is another story.
&lt;/p&gt;
&lt;p&gt;
I also tried Slack again but it fared no better than my last attempt
with it. A couple of students used it but mostly, Slack was left to
die. I could have forced some engagement by posting assignments on
Slack but there wasn&amp;#39;t any real upside. 
&lt;/p&gt;
&lt;p&gt;
Earlier this semester some students said we should set up Discord -
&amp;#34;all the students use it!&amp;#34; was the line. Discord can be used as a chat
server similar to Slack but was created for gaming and also does voice
communication and other things. Personally, I prefer Slack. Funny
thing was that as I discussed this with my students I pointed out &amp;#34;you
know, we have a Slack channel set up and you all already have accounts
on it.&amp;#34; Most of them didn&amp;#39;t even remember. 
&lt;/p&gt;
&lt;p&gt;
So, we tried Discord and there was the usual burst of activity when we
first set it up but now it&amp;#39;s again, mostly dormant. A few students who
use Discord for personal use are usually online but I&amp;#39;d chalk it up as
another failure.
&lt;/p&gt;
&lt;p&gt;
So, what am I going to try next? GitHub. 
&lt;/p&gt;
&lt;p&gt;
GitHub doesn&amp;#39;t provide a general chat or email solution but it does
have what they call &amp;#34;issues.&amp;#34;  I got the idea from &lt;a href=&#34;https://twitter.com/ericdrosado&#34;&gt;Eric Rosado&lt;/a&gt; of
GitHub Education who clued me in on what issues can do.
&lt;/p&gt;
&lt;p&gt;
When you create a GitHub repository - something I do for class web
pages as well as assignments, you can also open issues. Issues are
associated with the project but also act as a lightweight forum. You
can go to a page and see all the issues (topics) and each one can have
a chain of messages (thread). You can tag them, filter them, and when
you&amp;#39;re done, close them (and reopen them later if needs be). The big
plusses are that:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
People who are subscribed to the repo (assignment, web page, etc.)
automatically get email alerts on the issues.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
You can explicitly tag people to force them to get alerts.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
You can directly reply via email so you don&amp;#39;t need to go to
GitHub.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Everything related to a given project or repo is self contained.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
If you&amp;#39;re using GitHub / GitHub classroom you can use issues to
create a logged communication with your students on specific assignments.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I haven&amp;#39;t used this class wide yet - just experimented a bit but I
plan to dive in much more deeply next semester.
&lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t an overall communication solution. I&amp;#39;m sticking with a
mailing list for that until I can find a better solution but I think
using GitHub issues will be a win for project and assignment related
discussion.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I Speak Jive</title>
      <link>https://cestlaz.github.io/post/i-speak-jive/</link>
      <pubDate>Fri, 08 Nov 2019 07:48:14 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/i-speak-jive/</guid>
      <description>&lt;p&gt;
When I wrote about the &lt;a href=&#34;https://cestlaz.github.io/post/highedweb2019/&#34;&gt;HighWebEd&lt;/a&gt; I mentioned &lt;a href=&#34;https://twitter.com/elfin_john&#34;&gt;John William&lt;/a&gt;&amp;#39;&amp;#39;s talk on
Agile. He spoke about how the movie Airplane! was filmed in an Agile
manner and gave as an example the development of the &amp;#34;jive&amp;#34; scenes. 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/zdCjbJ6NEfc&#34;&gt;https://www.youtube.com/embed/zdCjbJ6NEfc&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Apparently the creative team had a script but it wasn&amp;#39;t working. The
first pair that read for the role, Norman Gibbs and Al White had their
owned take. Not only dir the team cast them on the spot and follow
their creative lead (hence Agile) but they also apparently apologized
to the two actors as the original attempt was so bad compared t what
Gibbs and White brought to the table.
&lt;/p&gt;
&lt;p&gt;
Of course, I would be negligent if I didn&amp;#39;t mention that the third
person to really make the jive sequence was Barbara Billingsley of
Leave it to Beaver fame.
&lt;/p&gt;
&lt;p&gt;
So, coming home, I had the Airplane! and the jive scenes in the back
of my mind. The other day at home, somehow or other we were chatting
about that great American masterpiece, The Muppet Show and of course,
the Swedish Chef.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/OUU6Rt6bi1U&#34;&gt;https://www.youtube.com/embed/OUU6Rt6bi1U&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
This brought me back the the &lt;a href=&#34;https://muppet.fandom.com/wiki/Encheferizer\&#34;&gt;Encheferizer&lt;/a&gt; (live version &lt;a href=&#34;http://www.tuco.de/home/jschef.htm&#34;&gt;here&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
So how is jive from Airplane! related to The Swedish Chef?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Filters!!!!!!!!&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
A filter, in this context, is a program that takes data as input, in
this case a stream of text. Does some transformation to it and then
spits out the transformed text.
&lt;/p&gt;
&lt;p&gt;
Way back, Unix systems had a program called &lt;a href=&#34;https://en.wikipedia.org/wiki/Jive_filter&#34;&gt;jive&lt;/a&gt; that &amp;#34;translated&amp;#34;
text into Jive along with other filters including cockney and valspeak which
converted text to like, um, Valley Girl speak dontcha know. It was,
like, totally tubular. Of course one filter was named &lt;strong&gt;chef&lt;/strong&gt;, known as
the encheferizer which translated into Swedish Chef talk.
&lt;/p&gt;
&lt;p&gt;
Over time, the list of filters grew. Some were silly, some fun, and,
yes, some were kind of offensive.
&lt;/p&gt;
&lt;p&gt;
(side bar: as I write this bit of history, I just feel as though I&amp;#39;ve
been transported to Doug Peterson&amp;#39;s &lt;a href=&#34;https://dougpete.wordpress.com/2019/11/03/whatever-happened-to-183/&#34;&gt;Whatever happened to…&lt;/a&gt; posts and
feel as though I should write something like: Do you remember using
filters? Which ones did you use? etc.)
&lt;/p&gt;
&lt;p&gt;
Anyway, somewhere in here there&amp;#39;s the making of some nice class
projects but the challenge was how to do the translation. Some things
are easy. One filter was the Fudd filter which translated to &lt;a href=&#34;https://en.m.wikipedia.org/wiki/Elmer_Fudd&#34;&gt;Elmer
Fudd&lt;/a&gt; speak. It&amp;#39;s easy enough to substitute &lt;strong&gt;w&lt;/strong&gt; for &lt;strong&gt;l&lt;/strong&gt; in a word as
Elmer says &amp;#34;Hew wow&amp;#34; instead of &amp;#34;Hello&amp;#34; but it&amp;#39;s hard to know if you&amp;#39;ve
got enough translation rules so that your students text will change
enough to be entertaining.
&lt;/p&gt;
&lt;p&gt;
Fortunately, I found &lt;a href=&#34;- https://github.com/hyperrealm/talkfilters&#34;&gt;this&lt;/a&gt; repo. It&amp;#39;s an implementation of a whole
bunch of filters:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
austro (Think Ahhnolld), b1ff (a web newbie), brooklyn, butthead (as
in Beevis and), chef, cockney, drawl, dubya, fudd, funetak, jethro,
jive, kraut, newspeak, pansy, pirate, postmodern, redneck, valspeak, warez
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I couldn&amp;#39;t get the system to compile but was able to dive into the
source code to see the rules. They&amp;#39;re in the &lt;strong&gt;.l&lt;/strong&gt; files. All of those
files are source for the &lt;a href=&#34;https://en.wikipedia.org/wiki/Lex_%2528software%2529&#34;&gt;Lex&lt;/a&gt; parser generator but even if you aren&amp;#39;t
familiar with Lex you should be able to figure out most of the rules.
&lt;/p&gt;
&lt;p&gt;
Some of the translators rely mostly on simple letter
substitutions. Fudd is such a filter:
&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;&lt;code class=&#34;language-lex&#34; data-lang=&#34;lex&#34;&gt;&amp;#34;r&amp;#34;         gtf_printf(&amp;#34;w&amp;#34;);
&amp;#34;l&amp;#34;         gtf_printf(&amp;#34;w&amp;#34;);
&amp;#34;qu&amp;#34;        gtf_printf(&amp;#34;qw&amp;#34;);
&amp;#34;th &amp;#34;       gtf_printf(&amp;#34;f &amp;#34;);
&amp;#34;th&amp;#34;        gtf_printf(&amp;#34;d&amp;#34;);
&amp;#34;n.&amp;#34;        gtf_printf(&amp;#34;n, uh-hah-hah-hah. &amp;#34;);
&amp;#34;R&amp;#34;         gtf_printf(&amp;#34;W&amp;#34;);
&amp;#34;L&amp;#34;         gtf_printf(&amp;#34;W&amp;#34;);
&amp;#34;Qu&amp;#34;        gtf_printf(&amp;#34;Qw&amp;#34;);
&amp;#34;QU&amp;#34;        gtf_printf(&amp;#34;QW&amp;#34;);&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
Dubya, on the other hand goes more with word substitutions:
&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;&lt;code class=&#34;language-lex&#34; data-lang=&#34;lex&#34;&gt;[Tt]errorist		|
[Oo]sama		|
[Bb]in(-|{WB})[Ll]ad(e|i)n	{ switch(gtf_random(3))
				  {
				  case 0: gtf_puts_case(&amp;#34;bad guy&amp;#34;); break;
				  case 1: gtf_puts_case(&amp;#34;evildoer&amp;#34;); break;
				  case 2: gtf_puts_case(&amp;#34;terrier&amp;#34;); break;
				  }
				}
[Uu]njustified/{NW}	     gtf_puts_case(&amp;#34;pre-emptive&amp;#34;);
[Cc]ontra/{NW}		     gtf_puts_case(&amp;#34;freedom-fighter&amp;#34;);
[Un]nder		     gtf_puts_case(&amp;#34;misunder&amp;#34;); BEGIN(INW);
[Mm]isunderstand	     gtf_puts_case(&amp;#34;misunderestimate&amp;#34;); BEGIN(INW);
[Mm]isunderstood             gtf_puts_case(&amp;#34;misunderestimated&amp;#34;); BEGIN(INW);
[Kk]ill/{NW}		     gtf_puts_case(&amp;#34;oblitifry&amp;#34;);
[Kk]illed/{NW}		     gtf_puts_case(&amp;#34;oblitifried&amp;#34;);
[Dd]destroy/{NW}	     gtf_puts_case(&amp;#34;destructifry&amp;#34;);
[Dd]destroyed/{NW}	     gtf_puts_case(&amp;#34;destructifried&amp;#34;);
[Rr]esonat/{NW}		     gtf_puts_case(&amp;#34;resignat&amp;#34;);
[Ee]ven(-|{WB})[Hh]anded/{NW} gtf_puts_case(&amp;#34;foreign-handed&amp;#34;);
[Ee]mbitter		     gtf_puts_case(&amp;#34;embetter&amp;#34;); BEGIN(INW);
[Ff]allability/{NW}	     gtf_puts_case(&amp;#34;fallacy&amp;#34;);
[An]tidote/{NW}		     gtf_puts_case(&amp;#34;anecdote&amp;#34;);&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
Some, like chef, pirate, and aust do some of both:
&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;&lt;code class=&#34;language-lex&#34; data-lang=&#34;lex&#34;&gt;[Tt]h		gtf_puts_case(&amp;#34;z&amp;#34;);
w		gtf_puts(&amp;#34;v&amp;#34;);
ou		gtf_puts(&amp;#34;u&amp;#34;);
&amp;#34;de &amp;#34;		gtf_puts(&amp;#34;d &amp;#34;);
&amp;#34;le &amp;#34;		gtf_puts(&amp;#34;l &amp;#34;);
&amp;#34;me &amp;#34;		gtf_puts(&amp;#34;m &amp;#34;);
&amp;#34;ne &amp;#34;		gtf_puts(&amp;#34;n &amp;#34;);
&amp;#34;re &amp;#34;		gtf_puts(&amp;#34;r &amp;#34;);
&amp;#34;ve &amp;#34;		gtf_puts(&amp;#34;v &amp;#34;);
[Cc]		gtf_puts_case(&amp;#34;s&amp;#34;);
[Pp]ie		gtf_puts_case(&amp;#34;mozer&amp;#39;s pie&amp;#34;);
[Ss]teak        gtf_puts_case(&amp;#34;shnitzel&amp;#34;);
[Gg]overnor	gtf_puts_case(&amp;#34;govenator&amp;#34;);&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
Some also deal with more complex situations such as only substituting
letters if they&amp;#39;re at the end of words and the like.
&lt;/p&gt;
&lt;p&gt;
All of this is leading to a huge number lesson and project
possibilities from simple text replacements in an intro class to
something much more ambitious in a later class.
&lt;/p&gt;
&lt;p&gt;
I was looking to vary some of the things we do in Hunter and I think
I&amp;#39;ll add some language filters to the mix.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>School Visit Update 2019</title>
      <link>https://cestlaz.github.io/post/school-visit-update-2019/</link>
      <pubDate>Wed, 06 Nov 2019 12:25:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/school-visit-update-2019/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been spending a lot of time at area high schools this fall. Today
I was at &lt;a href=&#34;https://en.wikipedia.org/wiki/Franklin_Delano_Roosevelt_High_School_(New_York_City)&#34;&gt;FDR High School&lt;/a&gt; in Broooklyn.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/FDR_HS_20th_Av_jeh.jpg/330px-FDR_HS_20th_Av_jeh.jpg&#34; alt=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/FDR_HS_20th_Av_jeh.jpg/330px-FDR_HS_20th_Av_jeh.jpg&#34; title=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/FDR_HS_20th_Av_jeh.jpg/330px-FDR_HS_20th_Av_jeh.jpg&#34; /&gt;&amp;#34; width=&amp;#34;500px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
I only learned about FDR HS a little over a year ago when I met their
CS teacher &lt;a href=&#34;https://twitter.com/jhans404&#34;&gt;Josh Hans&lt;/a&gt; at a NYC PD event. I visit last fall and then
again today.
&lt;/p&gt;
&lt;p&gt;
Whenever I visit a school it&amp;#39;s a different experience. Sometimes I
speak to the CS classes, sometimes at an event like a CS Week
hackathon, once I even got to address an entire senior class in an
auditorium. 
&lt;/p&gt;
&lt;p&gt;
I really loved how Josh and FDR set things up for me today.
&lt;/p&gt;
&lt;p&gt;
Before I get to the arrangement, let&amp;#39;s talk about the talk.
&lt;/p&gt;
&lt;p&gt;
When I meet with a room of seniors, even a room full of CS students, I
know that only a few students are going to end up with me at
Hunter. A room of 30 seniors should probably end up in something like
25 different colleges. I also know that even in a CS class many of
the students will end up pursuing other majors.
&lt;/p&gt;
&lt;p&gt;
I really don&amp;#39;t think it&amp;#39;s right for me to take a full class period and
talk just about Hunter and my Daedalus program so instead I start by
talking about college choices. I try to share things that I&amp;#39;ve learned
over my career as a student, teacher, parent, and now someone reading
applications with my audiuence. Things I&amp;#39;ve learned from both my
experiences and through my relationships with former students. At the
end we talk about Hunter, Hunter CS and the Daedalus program.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been told that the approach has been really valuable to the
majority of students I&amp;#39;ve delivered it to.
&lt;/p&gt;
&lt;p&gt;
There were a few things that Josh set up today that made it a lot of
fun. First, we were in the auditorium. I had Josh&amp;#39;s APCS-A class but
he also invited a couple of others. I also had APCS-P students and
also a class of Calculus students. This was a big deal. Just like
everyone, I&amp;#39;m working hard to build a program with a diverse
population and sometimes outreach is difficult. Specifically, if a
school only allows me to speak with their APCS-A students, I
frequently end up with a pre-culled group. If a school, for example,
has a very low percentage of women in their APCS-A class and that&amp;#39;s
where I&amp;#39;m speaking, I&amp;#39;m not going to be able to convince many women to
look into what we&amp;#39;re offering. By having the calc sutdents in the
audience I had a more diverse audience and also almost certainly had
the chance to expose some students to CS in a new and different
way. Now, don&amp;#39;t get me wrong. Given the nature of my program, I really
love talking to APCS-A students and going with probability, they&amp;#39;re
the most likely the ones to want my program but I love casting the
wider net.
&lt;/p&gt;
&lt;p&gt;
The other think Josh did was he gave me two periods. My talk usually
takes most of a period with little time for discussion. It should take
less but I tend to go into yammer mode and start telling
stories. Sorry - it&amp;#39;s just what I do. With two periods we had plenty
of time for discussion afterwards. What&amp;#39;s more, after most of the
students left, I was left with about 6 students who wanted to continue
to talk. I really enjoyed that. 
&lt;/p&gt;
&lt;p&gt;
Once I was done I did what I usually do - went to the local bakery to
bring home some baked goods. I stopped at the &lt;a href=&#34;https://www.google.com/maps/place/18th+Avenue+Bakery/@40.6212881,-73.9847415,17z/data=!4m8!1m2!2m1!1sbakery!3m4!1s0x0:0xd4dca91422790dec!8m2!3d40.6217849!4d-73.9877902&#34;&gt;18th street Bakery&lt;/a&gt;. An
Italian place and got an assortment. Also had a great chat with the
lady at the counter. It reminded me of when I&amp;#39;d go to &lt;a href=&#34;https://www.yelp.com/biz/moishes-kosher-bakery-new-york&#34;&gt;Moishes Bakery&lt;/a&gt;
before they closed albeit Italian rather than Jewish. 
&lt;/p&gt;
&lt;p&gt;
I pointed to a pile of cookes and asked &amp;#34;what are these?&amp;#34; and she
merely said &amp;#34;No!!!!!&amp;#34; We joked back and forth and she explained that
they were on the older side and didn&amp;#39;t feel right selling them and was
going to throw the rest of the batch out. They&amp;#39;d bake new ones for
tomorrow. I was disappointed not to try a new cookie but glad that I
wasn&amp;#39;t sold stale goods. It was like at Moishes when I once asked
about the Babka and was told &amp;#34;that was made  on Wednesday, you don&amp;#39;t
want it. This is what&amp;#39;s fresh. New Babka tomorrow.
&lt;/p&gt;
&lt;p&gt;
So, then, on the way home, thinking about Moishes and realizing that
there were  also Jewish bakeries in the neighborhood I decided to see
if I could find &lt;a href=&#34;https://en.wikipedia.org/wiki/Kichel&#34;&gt;Kichel&lt;/a&gt; - one of Devorah&amp;#39;s favorite cookies. I
sometimes make them but haven&amp;#39;t in a while. I found some at &lt;a href=&#34;https://www.google.com/maps/place/Korn&amp;#39;s+Bakery/@40.630628,-73.9799457,17z/data=!4m9!1m3!2m2!1sbakery!6e5!3m4!1s0x0:0xf6f303e4b6cd6dfe!8m2!3d40.6308331!4d-73.9764149&#34;&gt;Korn&amp;#39;s&lt;/a&gt;
Bakery and then it was back into Manhattan.
&lt;/p&gt;
&lt;p&gt;
So, overall a succesful day. I got to talk to a bunch of great High
School cookies and got tasty neighborhood baked goods. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve hit a bunch of schools already this fall as I work to spread the
gospel about CS and about Hunter&amp;#39;s &lt;a href=&#34;http://info.huntercs.org&#34;&gt;Daedalus&lt;/a&gt; program and am still
looking to get more on the schedule so if you know a school that&amp;#39;s a
good fit a visit, hit me up.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 60 - Restclient</title>
      <link>https://cestlaz.github.io/post/using-emacs-60-restclient/</link>
      <pubDate>Fri, 25 Oct 2019 11:57:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-60-restclient/</guid>
      <description>&lt;p&gt;
I started to work on a web application the other day. It&amp;#39;s nothing
special but if I ever finish it, it will be a pretty complete
project. The backend will be a &lt;a href=&#34;https://restapitutorial.com/&#34;&gt;REST&lt;/a&gt; API and I&amp;#39;m planning on writing
the frontend in Clojurescript. 
&lt;/p&gt;
&lt;p&gt;
The problem with developing a web application like this is that you
can&amp;#39;t really write the front end until you have enough of the backend
to provide data. Also, writing the backend would be much easier if you
already had a front end to test it with. 
&lt;/p&gt;
&lt;p&gt;
Pretty annoying.
&lt;/p&gt;
&lt;p&gt;
What you basically have to do is use some system to make all the API
calls with all the required data. The most fundamental way to do this
is to use a command line tool like &lt;a href=&#34;https://curl.haxx.se/&#34;&gt;curl&lt;/a&gt;. For example, from a terminal
I might write something like this to make a login call:
&lt;/p&gt;
&lt;div class=&#34;src src-curl&#34;&gt;
&lt;pre&gt;&lt;code class=&#34;language-curl&#34; data-lang=&#34;curl&#34;&gt;curl --data &amp;#34;email=myemail&amp;amp;password=mypassword&amp;#34; https://localhost:8080/login&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
It works but is clunky and you end up using the mouse a lot to cut and
paste data.
&lt;/p&gt;
&lt;p&gt;
Web browsers like Firefox and Chrome also have extensions (&lt;a href=&#34;https://techbeacon.com/app-dev-testing/5-top-open-source-api-testing-tools-how-choose&#34;&gt;link&lt;/a&gt;, &lt;a href=&#34;https://www.guru99.com/testing-rest-api-manually.html&#34;&gt;link&lt;/a&gt;)
but I find them somewhat bulky with their mouse / form based
interfaces.
&lt;/p&gt;
&lt;p&gt;
Emacs to the rescue!!!!!!!!
&lt;/p&gt;
&lt;p&gt;
I discovered &lt;a href=&#34;https://github.com/pashky/restclient.el&#34;&gt;restclient&lt;/a&gt; for Emacs a couple of years ago but only now
am reaping the benefits. It&amp;#39;s really amazing. I can easily set up REST
querries, use all the editing power of Emacs, and even save the
queries for later.
&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t find this until after I made the video but you can even use
restclient in &lt;a href=&#34;https://github.com/alf/ob-restclient.el&#34;&gt;org-mode&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s all very cool.
&lt;/p&gt;
&lt;p&gt;
Details in the video:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/L7Jcoe3oHTs&#34;&gt;https://www.youtube.com/embed/L7Jcoe3oHTs&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What companies look for in a tech hire</title>
      <link>https://cestlaz.github.io/post/what-companies-look-for/</link>
      <pubDate>Sun, 20 Oct 2019 13:18:04 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/what-companies-look-for/</guid>
      <description>&lt;p&gt;
My friend Ria tweeted this earlier today:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;If you are a software developer/engineer, please reply with a trait (or traits) that you look for in hiring new engineers (new grads). This can be something you glean from a resume, technical interview, behavorial interview, or all of the above.&lt;/p&gt;&amp;mdash; Ria Galanos (@cscheerleader) &lt;a href=&#34;https://twitter.com/cscheerleader/status/1185937705689112577?ref_src=twsrc%5Etfw&#34;&gt;October 20, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I&amp;#39;m not hiring for a tech company but I thought I&amp;#39;d share some
thoughts anyway.
&lt;/p&gt;
&lt;p&gt;
A bunch of years ago, I was at a big meeting at the NYCDOE. It was
related to the creation of AFSE. The meeting was attended by a bunch
of NY Tech company heavyweights, DOE people, and me. At this point in
the project, the DOE was pushing the school as one that would produce
&amp;#34;Google ready&amp;#34; software engineers from high school. They were also
insisting on no academic screen so many students would be coming in
multiple years below grade level. 
&lt;/p&gt;
&lt;p&gt;
I contended that you could have a great school without a screen but it
was horribly unrealistic to expect to produce &amp;#34;Google ready&amp;#34; engineers
from an incoming class that&amp;#39;s starting far below grade level and it&amp;#39;s
wrong t say you will. Either don&amp;#39;t have a screen and don&amp;#39;t make such
ridiculous claims or if you really intend to deliver, have some manner
of screen.
&lt;/p&gt;
&lt;p&gt;
So, during the meeting, the DOE wanted to sell the idea that academic
performance wasn&amp;#39;t important to the tech community and this is where
this post meets Ria&amp;#39;s tweet. 
&lt;/p&gt;
&lt;p&gt;
One of the DOE reps asked the company &amp;#34;What do you look for in a
potential hire? Things like creativity, right?&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
The tech company took the bait. They responded as the DOE planned:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
creativity
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
teamwork
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
hard working
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
reliable
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and so on. A long list of soft skills and truth be told, I agreed that
these things were and are important.
&lt;/p&gt;
&lt;p&gt;
The DOE people thought that there point was made but I had other
plans. I asked a follow up question:
&lt;/p&gt;
&lt;p&gt;
&amp;#34;Where do you look for these kids?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
At which point the tech people responded:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Stanford
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
MIT
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
CMU
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;p&gt;
These companies recruited exclusively at institutions that already did
extreme academic prescreening. The soft skills are important but they
take on even more importance when you&amp;#39;ve already narrowed your search
down to &amp;#34;kids who made it in and through MIT.&amp;#34;  None of the
applicants they considered topped out barely passing 10th grade math.
&lt;/p&gt;
&lt;p&gt;
Some of the tech people at the meeting got the point. Some didn&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re only going to recruit from the &amp;#34;usual suspects&amp;#34; you&amp;#39;re never
going to expand the pool, never going to achieve a diverse talent
pool, and never really provide opportunities to a huge number of
terrific young people who don&amp;#39;t have the ivy league pedigree.
&lt;/p&gt;
&lt;p&gt;
I had a related conversation with a friend of mine recently where I tried to
further drive home the point. He was talking about how important it
was for a young student who wanted to break into tech to have side
projects - how that an extensive portfolio would always catch his
eye. I told him that this eliminates many terrific low income
students.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s easy to ask a well to do kid to spend free time on either a
portfolio, activity or project (and I&amp;#39;ll note that a non-tech project
or activity can be as or more impressive and important than a tech
one) but a low income kid probably has to work and their job is likely
not going to further their tech careers. Require the side project,
eliminate the poor kid.
&lt;/p&gt;
&lt;p&gt;
All of this is to say that it&amp;#39;s really hard to say that even when a
hiring agent looks for something, there&amp;#39;s a lot more going on behind
the scenes. It&amp;#39;s something I&amp;#39;ve become very aware of at Hunter and
something I&amp;#39;ve been trying to push the NY Tech community to
understand.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 59 - markdown</title>
      <link>https://cestlaz.github.io/post/using-emacs-59-markdown/</link>
      <pubDate>Fri, 18 Oct 2019 11:57:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-59-markdown/</guid>
      <description>&lt;p&gt;
Org-mode is my markup of choice. I spend the vast majority of my time working
on text files working in org-mode. Since GitHUb started rendering
org-mode files in their site I&amp;#39;ve also used org-mode for things like
Readme files in my projects. I even force it on my students at
times. When I make an assignment, I seed it with an org-mode file that
they have to modify - that is - fill in things like their names, group
members etc..
&lt;/p&gt;
&lt;p&gt;
That said, sometimes I have to work in plain old &lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;markdown&lt;/a&gt;. This is
almost always when I&amp;#39;m working on something collaboratively and more
often than not it&amp;#39;s documentation on a project living on GitHub.
&lt;/p&gt;
&lt;p&gt;
So, given that I have to work with Markdown, time to use some Emacs
magic to make it easy and fun.
&lt;/p&gt;
&lt;p&gt;
To start, Emacs has a &lt;a href=&#34;https://github.com/jrblevin/markdown-mode/tree/f3c54e34cc5228001af36a5301883325319f21d4&#34;&gt;markdown mode&lt;/a&gt; along with a bunch of previewing
and rendering modes. I settled on &lt;a href=&#34;https://github.com/seagle0128/grip-mode/tree/4c7014c8151e522b9dd94f878478087bf92ab10e&#34;&gt;grip mode&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
You can check out the video to see grip-mode along with some of the
other modes I tried here:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/IlhkYmUU-ns&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/ifram&gt;e
&lt;p&gt;
Enjoy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>High Ed Web 2019</title>
      <link>https://cestlaz.github.io/post/highedweb2019/</link>
      <pubDate>Wed, 16 Oct 2019 08:34:04 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/highedweb2019/</guid>
      <description>&lt;p&gt;
I spent the last few days in Milwuakee at &lt;a href=&#34;https://2019.highedweb.org/&#34;&gt;High Ed web 2019&lt;/a&gt;, a
conference for higher education web professionals. Most attendees were
college web developers or designers along people who run web
operations at colleges and universities and related vendors. Being a
CS teacher, I was a bit of an outsider but still got a lot out of the
conference. 
&lt;/p&gt;
&lt;p&gt;
It was our first time in Milwuakee so we had to see some sights.
&lt;/p&gt;
&lt;p&gt;
The Bronz Fonz on the riverwalk:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/highwebed/fonz.jpg&amp;#34; width=&amp;#34;200px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Then there was &lt;a href=&#34;https://duckduckgo.com/?q=Gertie+the+duck&amp;amp;t=lm&amp;amp;atb=v181-1&amp;amp;ia=web&#34;&gt;Gertie the duck&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/highwebed/gertie.jpg&amp;#34; width=&amp;#34;200px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
And then more ducks by the river:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/highwebed/ducks.jpg&amp;#34; width=&amp;#34;200px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Later, we had a transcendental meal at &lt;a href=&#34;http://www.oddduckrestaurant.com/&#34;&gt;The Odd Duck&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/highwebed/oddduck.jpg&amp;#34; width=&amp;#34;200px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Apparently, Milwaukee loves their ducks.
&lt;/p&gt;
&lt;p&gt;
We also hit the lakefront, &lt;a href=&#34;https://www.mpm.edu/&#34;&gt;Public&lt;/a&gt;,&lt;a href=&#34;https://mam.org/&#34;&gt; Art,&lt;/a&gt; &lt;a href=&#34;http://www.chudnowmuseum.org/&#34;&gt;Chudnow&lt;/a&gt;, and &lt;a href=&#34;https://www.msoe.edu/grohmann-museum/&#34;&gt;Grohmann&lt;/a&gt; museums,
public market and few other things. 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/highwebed/artmuseum.jpg&amp;#34;
         alt=&amp;#34;Art Museum on the lake&amp;#34; width=&amp;#34;200px&amp;#34;/&amp;gt; &amp;lt;figcaption&amp;gt;
            &amp;lt;p&amp;gt;Art Museum on the lake&amp;lt;/p&amp;gt;
        &amp;lt;/figcaption&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
All were cool but I&amp;#39;d say that the Grohmann was the standout - if
you&amp;#39;re in Milwaukee, make the time for it. 
&lt;/p&gt;
&lt;p&gt;
As to the conference itself I attended a few interesting sessions. One
talk was on &lt;a href=&#34;http://agilemanifesto.org&#34;&gt;Agile&lt;/a&gt; by &lt;a href=&#34;http://twitter.com/elfin_john&#34;&gt;John Wililams&lt;/a&gt; (no, not &lt;a href=&#34;https://en.wikipedia.org/wiki/John_Williams&#34;&gt;THAT&lt;/a&gt; John Williams). John
spoke about Agile as a mindset rather than a specific tech/development
thing and talked about how the classic comedy Airplane! was develped
as an Agile project. It made me think of how Computational Thinking
really isn&amp;#39;t &lt;a href=&#34;https://cestlaz.github.io/post/is-ct-new/&#34;&gt;anything new&lt;/a&gt; or how OOP design patterns were developed by
an &lt;a href=&#34;https://en.wikipedia.org/wiki/Christopher_Alexander&#34;&gt;architect&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Another talk by &lt;a href=&#34;http://twitter.com/svenhaas&#34;&gt;Sven Haas&lt;/a&gt; gave me a fresh perspective from the IT
manager&amp;#39;s point of view. We rail all the time in the CS education
forums about how hard it is to get our schools IT teams to install the
development environments and tools we want to use with our
Students. Sven reminded me that for every single request we make of
our infrastructure people, there are tons of ramification. Long
term software maintenance and versioning, security, legal
ramifications, and more. Sven also reminded me that all to often
parties, including teachers and students, talk across each other
rather than to each other - &amp;#34;I need this installed&amp;#34; rather than having
a conversation about needs and jointly developing solutions.
&lt;/p&gt;
&lt;p&gt;
There were also a couple of more technical talks I enjoyed. 
&lt;/p&gt;
&lt;p&gt;
The conference organizers also did a great job. Kudos to the Milwuakee
convention center for having their restrooms in order:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/highwebed/stalls.jpg&amp;#34; width=&amp;#34;200px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
And for the conference team on adding the signs for further
clarification.
&lt;/p&gt;
&lt;p&gt;
A big highlight for me was reconnecting with &lt;a href=&#34;https://twitter.com/maccabeelevine&#34;&gt;Maccabee&lt;/a&gt;. Mac was in my
class at Stuy way back around &amp;#39;95. We&amp;#39;ve been in touch but as his
career has took him out of NYC it&amp;#39;s been years since we&amp;#39;ve seen each
other in person. Always great to see an old friend.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/highwebed/mac.jpg&amp;#34; width=&amp;#34;200px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
I probably won&amp;#39;t be back to High Ed Web. While it&amp;#39;s a great
conference, I&amp;#39;m not really the intended audience. When you can only go
to so many things a year due to time and money you have to call your
shots. I will say though, if you&amp;#39;re in the higher ed web space, you should really check
it out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Classes Or After school programs - which is more important for female retention in CS?</title>
      <link>https://cestlaz.github.io/post/classes-or-afterschool/</link>
      <pubDate>Mon, 14 Oct 2019 21:47:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/classes-or-afterschool/</guid>
      <description>&lt;p&gt;
This morning Mark Guzdial tweeted on his latest post:
&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Results from
Longitudinal Study of Female Persistence in CS: AP CS matters,
After-school programs and Internships do not &lt;a
href=&#34;https://t.co/GOzp3045Hp&#34;&gt;https://t.co/GOzp3045Hp&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Mark Guzdial (@guzdial) &lt;a
href=&#34;https://twitter.com/guzdial/status/1183699009766121473?ref_src=twsrc%5Etfw&#34;&gt;October
14, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I&amp;#39;m glad Mark wrote about this as it&amp;#39;s something that&amp;#39;s important to
both research and publicize but it&amp;#39;s really not a surprise.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m going to start by dismissing the statement that &amp;#34;… participation in
the Aspirations awards program were teh best predictors of persistence
three years after the high school survey in both CS and other
technology-related majors.&amp;#34; To me, that&amp;#39;s a water is wet statement -
girls who apply for an award where they talk about their aspiriations
in computing are more likely to do more computing. 
&lt;/p&gt;
&lt;p&gt;
The other stuff merits more of a look. Classes and APCS-A in
particular vs after school programs. Since APCS-A is as far as I know
always an elective there&amp;#39;s probably some selection bias here. If a
girl elects to take a college level CS class, perhaps there&amp;#39;s already
some interest in pursuing CS in college. Further, and I really hate to
say this, given the male dominated aspects frequently present in our
CS classes, a girl who was interested in CS and survives APCS-A might
be more likely to continue on and succeed having weathered the storm. 
&lt;/p&gt;
&lt;p&gt;
Now let&amp;#39;s look at the out of school programs. There are a number of
issues here. Many don&amp;#39;t really cover CS or legit programming, many
allow one group member to basically carry the team, and many are
really entrepreneurship programs using the CS marketing hype. They
don&amp;#39;t really prepare students for what&amp;#39;s to come in CS. When a
student then takes a CS class in college they&amp;#39;re ill prepared and drop
the subject. I&amp;#39;ve seen it happen. Unfortunately, many of those after
school programs are masters of marketing and fundraising. Some get big
money from the Googles of the world but they&amp;#39;re never held accountable
for preparing kids to fail. Rather, they&amp;#39;re lauded and praised as
saviors of education. 
&lt;/p&gt;
&lt;p&gt;
Going further, after school programs are usually taught by volunteers,
not teachers. They don&amp;#39;t necessarily understand the nuances of
teaching and they don&amp;#39;t necessarily prepare you for your next CS
experience. You then end up in a college course of 300, are ill
prepared to succeed, fall through the cracks and drop out. Take APCS-A
in HS and you&amp;#39;re going to be in a class of 30 and in a much more
supportive, forgiving  environment. A much better place to prepare you
for what&amp;#39;s to come.
&lt;/p&gt;
&lt;p&gt;
All in all the idea that girls are more likely to follow a CS path
with a solid high school experience than with an outside club or
activity is hardly a surprise. What is more of a surprise to me is the
fact that it&amp;#39;s taken so long to start getting the word out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My test grading policy</title>
      <link>https://cestlaz.github.io/post/grading-policy/</link>
      <pubDate>Wed, 09 Oct 2019 17:13:24 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/grading-policy/</guid>
      <description>&lt;p&gt;
I was working on writing a midterm the other day so figured I&amp;#39;d talk a
bit about my test grading policy.
&lt;/p&gt;
&lt;p&gt;
Before getting to the specifics, let me set the stage. I spent most of
my career at Stuyvesant - a public magnet school in
NYC. There are many great students who are interested in learning but
there&amp;#39;s also a focus on grades. and this leads to a non-insignificant portion of
the student body that is grade obsessed and will do everything and
anything for every point possible. 
&lt;/p&gt;
&lt;p&gt;
We called it grade grubbing. 
&lt;/p&gt;
&lt;p&gt;
Grade grubbing goes beyond asking for points you think you deserve and
it comes in many forms. It&amp;#39;s when you BS your way through an essay or
paper and put in as many key phrases as possible and hope the teacher
only sees those when scanning through hundreds of papers. It&amp;#39;s taking
that same paper and only showing the key correct phrases during an
appeal and ignoring the contradictory key phrases a few lines
below. It&amp;#39;s when you write an answer in a somewhat ambiguous way that
if marked wrong allows for an appeal. It&amp;#39;s appealing a low grade
because &amp;#34;I always get over 95&amp;#34; and it even involves cheating
sometimes and changing answers after the fact.
&lt;/p&gt;
&lt;p&gt;
Now, this isn&amp;#39;t the majority of the class. It&amp;#39;s only a small percent
but it&amp;#39;s pretty annoying and it had a bit of influence on my testing
policy.
&lt;/p&gt;
&lt;p&gt;
So, what&amp;#39;s my policy? It&amp;#39;s pretty simple. 
&lt;/p&gt;
&lt;p&gt;
Rule 1 - once I return the test you can&amp;#39;t ask me anything about your
exam until either we go over the exam in class or if we don&amp;#39;t until
after I&amp;#39;ve shared the answer key with the class. If you do ask me
about the exam before we&amp;#39;ve gone over it you forfiet your right to ask
for any points back on any mismarked questions. 
&lt;/p&gt;
&lt;p&gt;
Rule 2 - If you appeal a question for points - that is come up and say
&amp;#34;I got this question right&amp;#34; and it turns out that you are correct, you
get your points. If, on the other hand, the quesiton is incorrect, I
reserve the right to take off the points deducted a second time. That
is, if you originally lost 5 points you could now lose up to 10.
&lt;/p&gt;
&lt;p&gt;
This might sound harsh and somewhat jerky but it really isn&amp;#39;t. Due to
the nature of CS exams students can always be 100% certain that their
answer is correct because they can always try it out on a
computer. That&amp;#39;s the point. If something is marked wrong, I want the
student to take the time to see what&amp;#39;s going on before appealing the
grade. Questions that can&amp;#39;t be absolutely tested are of course excempt
from this policy.
&lt;/p&gt;
&lt;p&gt;
If a student comes up to me and says &amp;#34;hey, i know this is wrong - I
tested it and I&amp;#39;m not asking for points, I just don&amp;#39;t understand
what&amp;#39;s going on&amp;#34; I would never deduct more points and in fact have
sometimes lowered deductions.
&lt;/p&gt;
&lt;p&gt;
As it turns out, I&amp;#39;ve never actually ended up taking off extra points.
&lt;/p&gt;
&lt;p&gt;
The whole idea is to stop the reflexive grade grubbing and get
students to think about the problems and solutions. It also helps in
keeping teacher harrassment to a minimum :-). 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>You Can&#39;t Win If You Don&#39;t Enter</title>
      <link>https://cestlaz.github.io/post/you-cant-win-if-you-dont-enter/</link>
      <pubDate>Tue, 08 Oct 2019 17:19:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/you-cant-win-if-you-dont-enter/</guid>
      <description>&lt;p&gt;
Or, as Wayne Gretzky said &amp;#34;You miss 100% of the shots you don&amp;#39;t take.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Why do I mention this? 
&lt;/p&gt;
&lt;p&gt;
Because I&amp;#39;ve been hearing way too often from young people who are too
quick to deny themselves opportunities and too often these are
from students who have come from less advantaged backgrounds.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s Fall and I&amp;#39;ve been making my rounds visiting local schools to
talk to seniors about colleges in general and Hunter CS in
particular. I end the talk going over my Daedalus program which is
Hunter&amp;#39;s honors CS scholarship program.
&lt;/p&gt;
&lt;p&gt;
Since starting my &amp;#34;Fall tour&amp;#34; I&amp;#39;ve hard from too many students both in
person and via email saying things like &amp;#34;I don&amp;#39;t think I have the grades for,&amp;#34; &amp;#34;I&amp;#39;ll
never make it in,&amp;#34; &amp;#34;It&amp;#39;s a waste of time for me to apply.&amp;#34; They might
be talking about my program or they might be talking about some other
college. Sometimes the students would indeed have less than a punchers
chance to get in to the program in question but other times their
academic profile would certainly get their foot in the door. In all
cases it made me sad that these students were denying themselves
possible opportunities. 
&lt;/p&gt;
&lt;p&gt;
As I talk to these students I share instances where people who have
not met the required &amp;#34;paper profile&amp;#34; had indeed made the cut. I make
sure to be honest with them - I don&amp;#39;t sell them a bill of goods. They
chances of acceptance might be small but in the greater scheme of
things the cost of an application is insignificant compared to the benefit
of possibly getting into the program you really want (or at least
think you want).
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen similar self doubt behaviour from college kids and young
adults. Some don&amp;#39;t apply for jobs because they dont&amp;#39; have every single
skill listed on a job requirements page or the company is too
lofty. Here I try to explain how these listings get made - how an HR
person adds every single possible skill. I don&amp;#39;t advocate lying on a
resume or job application but if they&amp;#39;ve got the core skills or domain
skills required for the job but not everything, apply - let the
company say no.
&lt;/p&gt;
&lt;p&gt;
As I mentioned at the top, too often I&amp;#39;ve been hearing things like
these from less advantaged kids. Kids that start with less and have to
fight for more.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s hard enough for young people on their journeys through life. I
wish they wouldn&amp;#39;t make it harder by denying themselves potential
opportunities by not applying.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 58 - lsp-mode</title>
      <link>https://cestlaz.github.io/post/using-emacs-58-lsp-mode/</link>
      <pubDate>Mon, 07 Oct 2019 11:57:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-58-lsp-mode/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been wanting to check out &lt;a href=&#34;https://github.com/emacs-lsp/lsp-mode&#34;&gt;lsp-mode&lt;/a&gt; under Emacs for a while
now. LSP stands for &lt;a href=&#34;https://langserver.org/&#34;&gt;Language Protocol Service&lt;/a&gt;. The idea is that you
have a standard interface between your editor and some language
server. If you program in multiple languages and each has an LSP
server you end up, in theory, with a simpler configuration and a
consistent interface.
&lt;/p&gt;
&lt;p&gt;
This certainly sounds more appealing than how we did it in the old
days where you have some ad hoc configuraiton for each language you
work in. At times I&amp;#39;m working or dabbling in a whole bunch of
languages. At times, my Emacs configuration has had separate sections
for each of the following languages:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Emacs Lisp
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Python
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Java
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
C and C++
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Clojure
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Processing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Scheme
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Haskell
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Rust
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
OCaml
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
and more. 
&lt;/p&gt;
&lt;p&gt;
This can get messy.
&lt;/p&gt;
&lt;p&gt;
So, LSP sounds cool but when I&amp;#39;ve tried to get it going in the past
I&amp;#39;ve always had troubles. This time, I tried a different approach. I
decided to declare .emacs.d bankruptcy. I cleared out my .emacs.d
directory and started fresh. Not really fresh - I copied over The
critical parts of my configuration to start with - Swiper, email and
org config and a few other things. Then I got lsp-mode working for
Python and C++. Now I&amp;#39;m going to migrate over more of my old
configuration as I discover I want, miss, or need things. We&amp;#39;ll see
how it goes.
&lt;/p&gt;
&lt;p&gt;
The new configuration can be found here:
&lt;a href=&#34;https://github.com/zamansky/dot-emacs&#34;&gt;&lt;a href=&#34;https://github.com/zamansky/dot-emacs&#34;&gt;https://github.com/zamansky/dot-emacs&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Check out the video to see the details:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/zg6JJI-kwhE&#34;&gt;https://www.youtube.com/embed/zg6JJI-kwhE&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA Awards 2020</title>
      <link>https://cestlaz.github.io/post/csta-awards-2020/</link>
      <pubDate>Tue, 01 Oct 2019 11:46:32 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-awards-2020/</guid>
      <description>
&lt;p&gt;
I&amp;#39;m guessing that pretty much everyone who stops by this blog knows
about the &lt;a href=&#34;https://csteachers.org/&#34;&gt;CSTA&lt;/a&gt; (Computer Science Teacher&amp;#39;s Association) and most of
you probably know about some awards they, well, award. Just in case, I
thought I&amp;#39;d share.
&lt;/p&gt;
&lt;p&gt;
Here are three awards, two of which are open for nominations /
applications now. If you know someone deserving, nominate them. I&amp;#39;m
guessing students don&amp;#39;t really know about the Cutler-Bell award so if
you have any deserving students, please share the info with them.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Champions of CS Awards
&lt;/h2&gt;
&lt;p&gt;
Tell us about a student, educator, administrator, or organization that
has achieved something in computer science this past year for the
opportunity to be recognized as a 2019 Champion of Computer Science.
&lt;/p&gt;
&lt;p&gt;
The Champions of Computer Science Awards identify and promote
students, teachers, administrators, and organizations who have made a
significant impact to improve access to and the quality of CS
education. These awards are presented by CSTA and Code.org.
&lt;/p&gt;
&lt;p&gt;
Nominations are due Oct. 21, 2019.
&lt;/p&gt;
&lt;p&gt;
Link to award site:
&lt;a href=&#34;https://www.cvent.com/c/abstracts/b2b495a4-4caf-4ed5-88b1-954d5a605b24&#34;&gt;&lt;a href=&#34;https://www.cvent.com/c/abstracts/b2b495a4-4caf-4ed5-88b1-954d5a605b24&#34;&gt;https://www.cvent.com/c/abstracts/b2b495a4-4caf-4ed5-88b1-954d5a605b24&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Cutler-Bell Prize
&lt;/h2&gt;
&lt;p&gt;
The ACM/CSTA Cutler-Bell Prize in High School Computing is a prize
designed to recognize talented high school students intending to
continue their higher education in the areas of computer science or
technology. The program seeks to promote and encourage the field of
computer science, as well as to empower young and aspiring learners to
pursue computing challenges outside of the traditional classroom
environment.
&lt;/p&gt;
&lt;p&gt;
Up to four winners will be selected annually and each will be awarded
a $10,000 prize which will be administered through the financial aid
department at the university the student will attend.
&lt;/p&gt;
&lt;p&gt;
Applications are due Jan. 12, 2020.
&lt;/p&gt;
&lt;p&gt;
Link to application / site:
&lt;a href=&#34;https://www.cvent.com/c/abstracts/e90beaf8-9035-4e10-862e-55a8a056f080&#34;&gt;&lt;a href=&#34;https://www.cvent.com/c/abstracts/e90beaf8-9035-4e10-862e-55a8a056f080&#34;&gt;https://www.cvent.com/c/abstracts/e90beaf8-9035-4e10-862e-55a8a056f080&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
CS Teaching Excellence Awards
&lt;/h2&gt;
&lt;p&gt;
The CS Teaching Excellence Awards, sponsored by CSTA and Infosys
Foundation USA, are designed to recognize outstanding teaching by K–12
computer science teachers. Winners demonstrate their excellent work
inspiring students to explore the computer science field; effectively
engage students in learning rigorous, standards-aligned, computer
science content; and a focus on broadening participation of
underrepresented students in computing.
&lt;/p&gt;
&lt;p&gt;
Applications open the spring of 2020.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cheating on CS projects</title>
      <link>https://cestlaz.github.io/post/cheating-on-projects/</link>
      <pubDate>Mon, 30 Sep 2019 17:33:02 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cheating-on-projects/</guid>
      <description>&lt;p&gt;
Alfred Thompson posted today about &lt;a href=&#34;http://blog.acthompson.net/2019/09/the-problem-of-cheating-on-programming.html&#34;&gt;cheating on CS class projects&lt;/a&gt;. It
was in response to Garth Flint&amp;#39;s post on &lt;a href=&#34;https://gflint.wordpress.com/2019/09/26/finding-cool-projects-for-programming-classes/&#34;&gt;finding interesting projects&lt;/a&gt;
which in turn referenced earlier posts by Alfred and me.
&lt;/p&gt;
&lt;p&gt;
Garth laments that it&amp;#39;s hard to find projects that are both
interesting and meaty but where solutions can&amp;#39;t easily be searched for
online. Alfred notes that cheating will happen and that it&amp;#39;s an ethics
issue. This is why I try to create a culture of sharing and
acknowledging credit (that is, citing sources) but I&amp;#39;m not naive
enough to believe there isn&amp;#39;t any cheating in my classes.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t go nuts looking out for cheating but there are a number of
things I do to try to help keep the students honest.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Class time. More often than not students have some time in class to
work on any given project. This lets me get a handle on what they
actually know since I can interact with the student or team and
observe them interacting with each other. Even if a particular
project is all done out of class, over the course of the semester
you can get a pretty good idea as to what a student will produce on
their own.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Project quizzes. For a big project, I&amp;#39;ll sometimes give a quiz on
the day it&amp;#39;s due. The quiz will be tied to the project - describe
a data structure or algorithm you used. If the student wrote the
project it&amp;#39;s free points, if not they&amp;#39;ll have problems. Of course,
this only requires that a student understands their project not
that they actually wrote it but at least that&amp;#39;s something.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Git logs. I get my students on GitHub early and that lets me look
at the commit logs for any given project. This usually can&amp;#39;t be
used to find cheating but it lets me see what was committed when. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Be reasonable in terms of workload and expectations. &lt;strong&gt;This is a
really important one&lt;/strong&gt;. Back at Stuy, it was made clear to me many
times that many students feel forced to cheat due to teachers
expecting far too much from them. If you&amp;#39;re take 6 classes a day
and each gives you two hours of homework somethings got to give.
&lt;/p&gt;
&lt;p&gt;
I always try to give a fair amount of work and only if I think it&amp;#39;s
necessary and makes sense and as long a a student is up front about
any issues that arise I&amp;#39;ll try to work with them on deadlines and
requirements.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I could use a code plagiarism tester like &lt;a href=&#34;https://theory.stanford.edu/~aiken/moss/&#34;&gt;Moss&lt;/a&gt; but I usually don&amp;#39;t
bother.
&lt;/p&gt;
&lt;p&gt;
I also try to keep things in perspective. Usually things come clean in
the end. Most classes have multiple measures - tests, homework,
projects, classwork and more. Even if a student copies a project and
gets away with it, it&amp;#39;s just one measure and it likely won&amp;#39;t move the
needle all that much. True, a kid who&amp;#39;s doing well might feel the need
to cheat on one assignment (see item 4 above) but that&amp;#39;s not a hill
I&amp;#39;m willing to die on.
&lt;/p&gt;
&lt;p&gt;
Even if a kid in a 10th grade intro CS class cheats their way through
they&amp;#39;ll unlikely take any more CS as they&amp;#39;ll be woefully
unprepared. In that case, the one higher grade they got on their
transcript due to cheating on CS projects probably won&amp;#39;t make much of
an overall difference and it certainly won&amp;#39;t hurt the kids who take
all your school&amp;#39;s CS courses and apply to college to be CS majors.
&lt;/p&gt;
&lt;p&gt;
None of this is to say that cheating doesn&amp;#39;t happen and I do believe
we should keep an eye out and address it if and when it rares its ugly
head. I&amp;#39;m just saying keep things in perspective. 
&lt;/p&gt;
&lt;p&gt;
When I pick projects I don&amp;#39;t pay much attention to if they can be
found online and I&amp;#39;m not the tightest screw when it comes to enforcing
the rules in my classes. I know that&amp;#39;s led to my being taken advantage
of over the years and yes, that does bother me but I&amp;#39;d rather put my
time and energy into the kids trying to do it right than those cutting
the corners.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching techniques - industry to classroom and classroom to industry</title>
      <link>https://cestlaz.github.io/post/industry-techniques-in-class/</link>
      <pubDate>Fri, 27 Sep 2019 12:34:04 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/industry-techniques-in-class/</guid>
      <description>&lt;p&gt;
There are things we do in school and there are things we do in
industry and they&amp;#39;re not always the same. In school we might use a
learning language or an IDE which gives additional support and at
times even take away language features while at work you might you
might make heavy use of continuous integration tools. 
&lt;/p&gt;
&lt;p&gt;
On the other hand, sometimes we use the same things. Java is used in
schools and in industry, StackOverflow consulted in both and many
schools use professional IDEs like Eclipse.
&lt;/p&gt;
&lt;p&gt;
While the things I mentioned above, whether the same or different are
on the tooling side, there are also things on the technique side that
are used both in school and in industry.
&lt;/p&gt;
&lt;p&gt;
The most well publicized concept is probably &lt;a href=&#34;https://en.wikipedia.org/wiki/Pair_programming&#34;&gt;Pair Programming&lt;/a&gt; - the
idea of having two programmers develop using a shared
computer. There&amp;#39;s more to it than that and tons of variations but
that&amp;#39;s the crux of the idea. Proponents claim it increases programmer
efficiency and lowers error rates but others would rather not follow
the practice. Some feel that it&amp;#39;s great in certain environments like
when onboarding a new team member.
&lt;/p&gt;
&lt;p&gt;
We hear CS Teachers talk about pairing in their classes all the time -
&amp;#34;It&amp;#39;s an industry technique&amp;#34; but to me the interesting thing is that I
think many teachers, particularly more senior ones came up with pair
programming independent of it as an industry technique. It came out of
not having enough computers. This invariably leads to kids pairing
up. Now, you&amp;#39;ll say &amp;#34;but pair programming isn&amp;#39;t just two kids sharing
a computer.&amp;#34; I agree but when good teachers do group work it isn&amp;#39;t
just kids left to their own devices working in a group. Over time,
teachers who &amp;#34;discover&amp;#34; pair programming come up with ways to make it
effective in their classrooms.
&lt;/p&gt;
&lt;p&gt;
The other interesting thing is that pair programming serves different
purposes at work vs in schoo. At work it&amp;#39;s supposed to increase
programming efficiency and help them develop better code more
quickly. In the classroom, besides addressing the lack of computers,
it&amp;#39;s used as a tool to provide feedback to students, have them support
each other, and create a cooperative supportive environment.
&lt;/p&gt;
&lt;p&gt;
Another technique CS teachers use is subgoal labeling. The gist here
is that you write down or label smaller goals within your
program. It&amp;#39;s an idea I used for years but only relatively recently
learned its name.
&lt;/p&gt;
&lt;p&gt;
The interesting thing here is that I used this idea as a professional
programming well before I ever taught and I don&amp;#39;t recall it ever being
used in any of my classes. 
&lt;/p&gt;
&lt;p&gt;
The idea just made sense. I&amp;#39;d write a function and pepper it with
comments indicating the parts s or subgoals I&amp;#39;d need to write code for
to complete the function. I don&amp;#39;t know if subgoal labelling is or ever
was a prevelent technique in professional programming but the related
idea of writing function stubs is. The idea here is that as you
develop your program write out an empty placeholder function, a stub,
when you realize you need it and fill it in later. This is something
of a subgoal but at the function level.
&lt;/p&gt;
&lt;p&gt;
So, here we have two practices. One that is certainly used in both
the classroom and in industry and one that likely is. The practices
seem to be examples of convergent evolution. Developed independently
but with similar albeit somewhat different benefits.
&lt;/p&gt;
&lt;p&gt;
There have to me more practices like this. If you know any, please
share.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pig Latin - a beginner lesson with some depth</title>
      <link>https://cestlaz.github.io/post/piglatin/</link>
      <pubDate>Wed, 25 Sep 2019 17:11:29 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/piglatin/</guid>
      <description>&lt;p&gt;
I recently did a unit where I had my students convert words into &lt;a href=&#34;https://en.wikipedia.org/wiki/Pig_Latin&#34;&gt;Pig
Latin&lt;/a&gt;. I like the problem because to start it only requires strings,
functions and if statements but there is some depth to the unit.
&lt;/p&gt;
&lt;p&gt;
We start with simplified rules:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
If the word starts with a vowel, add &amp;#34;ay&amp;#34; to the end of the word
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
If it starts with a consonant move the first latter to the end and
add &amp;#34;ay&amp;#34;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
don&amp;#39;t worry about anything else
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Students usually start with something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
as students realize it&amp;#39;s much easier to check for vowels rather than
consonants. 
&lt;/p&gt;
&lt;p&gt;
Some students discover that you can do any of the following instead of
the big compound &lt;strong&gt;or&lt;/strong&gt; :
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This allows us to talk a little about lists (and tuples if you like)
as well as now strings are similar to them in certain ways.
&lt;/p&gt;
&lt;p&gt;
By itself, this is a nice little beginner project but it gets better. 
&lt;/p&gt;
&lt;p&gt;
Since we talked a bit about lists and strings in the refinement, we
then talk about using python&amp;#39;s &lt;code&gt;split()&lt;/code&gt; method that parses a string
on whitespace. We also talk about the &lt;code&gt;for&lt;/code&gt; loop. Ultimately this
leads us to writing a function to convert a sentence into Pig Latin:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
But this doesn&amp;#39;t work with real sentences. Let&amp;#39;s focus on two
problems. The first is that it won&amp;#39;t handle the period at the end of
the sentence properly. It would take that last word, let&amp;#39;s say &lt;strong&gt;dog.&lt;/strong&gt; 
and convert it to &lt;strong&gt;og,day&lt;/strong&gt; rather than &lt;strong&gt;ogday.&lt;/strong&gt;. It also doesn&amp;#39;t
handle capital letters. There are other issues but they have similar
solutions to the ones we&amp;#39;ll use for these two.
&lt;/p&gt;
&lt;p&gt;
This is where things get fun. 
&lt;/p&gt;
&lt;p&gt;
To handle the period, students frequently jump to modifying the &lt;strong&gt;if&lt;/strong&gt; 
conditions in &lt;code&gt;piglatinify&lt;/code&gt; :
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
or something similar.
&lt;/p&gt;
&lt;p&gt;
This is a straighforward working solution but it&amp;#39;s also a great place to introduce the idea of changing the data
instead of using complex conditionals to handle special cases (earlier
posts &lt;a href=&#34;https://cestlaz.github.io/posts/2014-02-26-change-the-data/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cestlaz.github.io/posts/advent-of-code-2016-2/&#34;&gt;here&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
If we take out the period we can do our regular piglatinify and then
add it back in. This leads us to a solution like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
We can do something similar to deal with words that start with upper
case letters:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You can approach other special cases similarly.
&lt;/p&gt;
&lt;p&gt;
So, there you have it. A fun little problem that you can do with your students
early on in a CS0 with surprising depth.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advanced CS Early - Are they learning it or just using it?</title>
      <link>https://cestlaz.github.io/post/are-they-learning-or-jus-using/</link>
      <pubDate>Sat, 21 Sep 2019 17:41:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/are-they-learning-or-jus-using/</guid>
      <description>&lt;p&gt;
I recently took a look at the &lt;a href=&#34;https://cryptopals.com/&#34;&gt;Cryptopals Crypto Challenges&lt;/a&gt;. It&amp;#39;s a
series of challenges through which you can learn all about crypto and
crypto attacks. They say they&amp;#39;ll eventually have solutions but since
the site appears to be at least a few years old, who knows it they&amp;#39;ll
ever publish them.
&lt;/p&gt;
&lt;p&gt;
One interesting thing about the site is that it really doesn&amp;#39;t have a
lot of content to teach you the concepts around the challenges. At
least not for the first few, the only ones I&amp;#39;ve looked at. You get a
bit of sample input, the sample output, a short description and then
you&amp;#39;re off to the races.
&lt;/p&gt;
&lt;p&gt;
This means that you&amp;#39;re going to do some web searching to figure out
what the terms they use mean and how to approach the problems.
&lt;/p&gt;
&lt;p&gt;
The first challenge was to convert a string of hex digits into
base64.  I&amp;#39;d never done this so I figured I should look up what base64
was. I figured it was some encoding but exactly what was it?
&lt;/p&gt;
&lt;p&gt;
A quick search yielded a bunch of online encoder/decoders and also the
Wikipedia page: &amp;#34;…Base64 is a &lt;strong&gt;group&lt;/strong&gt; of binary-to-text encoding
schemes…&amp;#34; - a &lt;strong&gt;group&lt;/strong&gt;? Uh oh. Which scheme am I to use? It turned
out that I was able to use the conversion table on the Wikipedia page
but I digress.
&lt;/p&gt;
&lt;p&gt;
I decided to write the solution in Clojure and was about to do so but
decided to see if there was an idiomatic way to do this. I did a
search. Most if not all of the searches resulted in links either to a
Clojure library to encode and decode Base64 or example code that used
said library. 
&lt;/p&gt;
&lt;p&gt;
If I wanted to I could code up a complete solution and not really
learn anything about base64 encoding. I&amp;#39;m not talking about wholesale
copying a solution off of StackOverflow. I&amp;#39;m talking about using the
included Clojure (technically Java) Base64 conversion library. 
&lt;/p&gt;
&lt;p&gt;
This made me think about what I&amp;#39;m seeing some times in CS Ed and lots
of time in drop in / opt in programs. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d hear about classes where students are doing unbelievable
things. The kids made a neural network to do blah blah blah. I&amp;#39;d think
to myself &amp;#34;that&amp;#39;s upper level undergraduate work, how can they really
understand all the math and CS to build that stuff when they&amp;#39;re just
taking Algebra and their first CS class?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
It turns out, they weren&amp;#39;t. They&amp;#39;d basically glue together libraries
and use pre-existing tools. 
&lt;/p&gt;
&lt;p&gt;
This raises the question: &amp;#34;is this a good thing?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
Maybe and maybe not.
&lt;/p&gt;
&lt;p&gt;
If those kids mentioned above aren&amp;#39;t really studying AI but rather
intro programming and they&amp;#39;re using AI as part of the motivation, it
can be terrific. It could inspire them to study AI later and that&amp;#39;s
great.
&lt;/p&gt;
&lt;p&gt;
On the other hand, if they think they&amp;#39;re really learning AI, that&amp;#39;s not so good.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve met kids who were in either classes or programs on
cybersecurity. They were every confident in their knowledge and skills
but it turned out that they didn&amp;#39;t really learn anything in their
classes. It was just a curated canned experience. In these cases the
programs and classes weren&amp;#39;t really helping the kids. I&amp;#39;ve met
teachers who&amp;#39;ve told me about classes like these where the kids ended
up getting jobs but then promptly got fired because they didn&amp;#39;t really
know anything more than a superficial view of the subject.
&lt;/p&gt;
&lt;p&gt;
In this day and age students can&amp;#39;t write everything from scratch but
I&amp;#39;ve always believed that they should have some idea as to what&amp;#39;s
going on under the hood. A friend would always say &amp;#34;never use a tool
that you couldn&amp;#39;t&amp;#39; write yourself&amp;#34; I concur. He didn&amp;#39;t mean you have
to write every line yourself but you should have a basic idea as to
the underpinnings. 
&lt;/p&gt;
&lt;p&gt;
There are cool and interesting things at all levels of CS and CS
education. I know we live in a day and age where teachers brag about
how early they can cover some advanced topic with their kids but it&amp;#39;s
not a race. Let&amp;#39;s teach the kids what they need when they need
it. They don&amp;#39;t need to think they can write a deep learning platform
in year one. Right now I&amp;#39;m teaching college first year students. We
don&amp;#39;t cover the same things these kids will study in their 400 level
electives. I&amp;#39;m fine with that. I cover some topics that allude to
what&amp;#39;s to come and I set the stage for their futures.  Let&amp;#39;s design
and implement CS experiences that make sense for our kids rather than
giving them false experiences so that we can say that they&amp;#39;re doing
graduate level work in third grade.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What Is Good Teaching</title>
      <link>https://cestlaz.github.io/post/what-is-good-teaching/</link>
      <pubDate>Tue, 17 Sep 2019 17:13:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/what-is-good-teaching/</guid>
      <description>&lt;p&gt;
I had a conversation with my principal during my last year at
Stuy. She said &amp;#34;whenever the superintendent or high level education
people come and ask to see our best teachers I can never bring them to
Jim&amp;#39;s class.&amp;#34; Everyone knows that Jim is the best. I describe him as
&amp;#34;the teacher I aspire to be.&amp;#34;  What&amp;#39;s the problem? The problem is that
Jim didn&amp;#39;t teach the way the powers that be wanted him to teach. He
didn&amp;#39;t do discovery learning, kids didn&amp;#39;t work in groups, there&amp;#39;s
typically nothing that you could check off on the &amp;#34;best way to teach&amp;#34;
list. Jim&amp;#39;s an old school teacher. Teacher dominant. He leads the
discussion, asks questions, circulates while the kids work on
problems etc. Why does it work? A combination of things. He know his
math, charisma, force of personality, empathy, and a lot of other
factors. One could dismiss it as saying &amp;#34;it&amp;#39;s Stuy, it&amp;#39;s easy&amp;#34; but he
was the best at a high needs school before he was the best at Stuy.
&lt;/p&gt;
&lt;p&gt;
I was thinking about this for a few reasons. One is I watched &lt;a href=&#34;https://www.youtube.com/watch?v=g1ib43q3uXQ&amp;amp;list=WL&amp;amp;index=52&amp;amp;t=0s&#34;&gt;this&lt;/a&gt;
video by &lt;a href=&#34;https://twitter.com/Felienne&#34;&gt;Felienne Hermans&lt;/a&gt;. It&amp;#39;s a good video, many good points. I
particularly like when she talked about talking to a room of teachers
about a new &amp;#34;discovery&amp;#34; about learning only to find that teachers have
known it for decades. Basically, Felienne pushes back on the discovery
learning and let them play that&amp;#39;s dominated the CS Education
space. She talks about her success with direct instruction. Another is
that we&amp;#39;re starting to see more acceptance and voices for
direct instruction in the CS Ed space as a whole. 
&lt;/p&gt;
&lt;p&gt;
Personally, I think this is a good thing, after all, it&amp;#39;s more my
style. On the other hand, I don&amp;#39;t want the pendulum to swing too
far. I was talking to a history teacher at Stuy when they brought in
the Danielson &lt;del&gt;nonsense&lt;/del&gt; Framework. She&amp;#39;s a good teacher but she was
sheepish about Danielson. She said that Danielson worked for her - it
aligned with the way she taught and made her seem like the absolute
best. She was and is an excellent teacher but we all have holes in our
game. She didn&amp;#39;t want to be held  up as an exemplar of great teaching
where she knew that chances are there will be a successor to Danielson
and chances are something else will be in vogue and she won&amp;#39;t be so
officially terrific anymore. 
&lt;/p&gt;
&lt;p&gt;
Right now, direct instruction is coming back. Who knows if it will
become the darling of the policy makers but regardless, a teaching
style or technique&amp;#39;s value can&amp;#39;t be determined without considering
other factors. The teacher&amp;#39;s personal style, the students, the
resources, class time, and much more. 
&lt;/p&gt;
&lt;p&gt;
So, what is a teacher to do? Add all the tools to your toolbox. I&amp;#39;m
not big on cooperative learning but I&amp;#39;ve peppered it in now and
then. Sometimes, it&amp;#39;s best to have the students discover things,
something you&amp;#39;ve got to tell them. Sometimes they should work on
things solo, sometimes in teams. I&amp;#39;ve taught classes that were all
projects and classes that had limited projects. Acquire all the tools
and use them as YOU think best. It&amp;#39;s the teacher with the skin in the
game. Not the policy makers, thought leaders, researchers, and
influences. More importantly it&amp;#39;s the teacher that knows their
students best - where they are, what they need and how to do the best
they can given the limited resources they have. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m obviously not excusing teachers who do one side lectures or who
just phone it in but the majority of teachers work hard to do it right
and should be given the freedom to do just that.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Different languages, different techniques, different solutions</title>
      <link>https://cestlaz.github.io/post/different-languages/</link>
      <pubDate>Mon, 02 Sep 2019 17:33:51 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/different-languages/</guid>
      <description>&lt;p&gt;
I spent this weekend diving back into Clojure or more specifically,
Clojurescript. For those who don&amp;#39;t know, Clojure is a Lisp that runs
on the JVM. The solution it particularly seeks to &amp;#34;solve&amp;#34; is
immutability. Clojurescript is Clojure that compiles to Javascript for
web applications. Tooling aside, it&amp;#39;s all pretty neat.
&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t do anything earth shaking, just a quick implementation of
Conway&amp;#39;s game of life and Snake. While the code isn&amp;#39;t particularly
good, you can check them out here (&lt;a href=&#34;https://github.com/zamansky/clojure-snake&#34;&gt;Snake&lt;/a&gt;, &lt;a href=&#34;http://github.com/zamansky/clojure-life&#34;&gt;Life&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
The Life implementation got me thinking about the value of studying
different languages or more specifically, different paradigms. A
student who implements the game of life in Java will likely implement
something very similar in C++ as both languages are Object Oriented /
imperative. An implementation in Clojure or Haskell will likely look
very different.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look a little deeper.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%2527s_Game_of_Life&#34;&gt;Conway&amp;#39;s Game of LIfe&lt;/a&gt; is a Cellular Automaton and when teaching a CS
class in Java or C++ it&amp;#39;s a really nice application of 2D arrays. On
each turn, for each cell in the world, you calculate its living
neighbors. If the cell is alive and it has 2 or 3 living neighbors, it
stays alive to the next turn. If the cell isn&amp;#39;t alive but has 3 living
neighbors it will become alive. Otherwise the cell dies (or remains
dead).
&lt;/p&gt;
&lt;p&gt;
In a Java type language, given a 2D array &lt;code&gt;this_turn&lt;/code&gt; with the current
world and you might get something like:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s a really nice application of 2D arrays and I&amp;#39;ve done it with my
classes frequently over the years.
&lt;/p&gt;
&lt;p&gt;
Another language I&amp;#39;ve done &lt;strong&gt;life&lt;/strong&gt; in is NetLogo. In NetLogo, you have
a world represented by an x,y grid with each cell in the grid known as
a patch. You write a program and all the patches run it
independently. A life solution might look like this:
&lt;/p&gt;
&lt;div class=&#34;src src-text&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-netlogo&#34; data-lang=&#34;netlogo&#34;&gt;ask patches [ 
  set n count nieghbors with [color =  red] ;; red cells will be alive
  ifelse color = red 
    [ ifelse n=2 or n = 3
        [set nextcolor red]
        [set nextcolor black]
    ] 
    [
      ifelse n=3
        [ set nextcolor red ]
        [ set nextcolor black ]  
    ]
ask patches [set color nextcolor]&lt;/code&gt;&lt;/pre&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
My NetLogo is a little rusty so my syntax might be off but the idea is
to:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
have each patch count it&amp;#39;s living neighbors and figure out it&amp;#39;s
next state - alive (red) or dead (black)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
have each patch set its color to the new state
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
This is a very different solution. In NetLogo you never think about
looping over the cells. It&amp;#39;s much higher level. You think about each
location as it&amp;#39;s own entity whereas in the Java solution you&amp;#39;re
getting much more into the nitty gritty. 
&lt;/p&gt;
&lt;p&gt;
NetLogo and Java are very different languages and using them
encourages you to solve problems in different ways. you&amp;#39;d likely
never create a 2D array in NetLogo - you&amp;#39;d exploit the word as your
array. Likewise you&amp;#39;d exploit the patches to distribute the work. In
Java you&amp;#39;d probably wouldn&amp;#39;t create a class to represent each patch in
the array and then run each in a thread. That would be overkill for
the problem at hand.
&lt;/p&gt;
&lt;p&gt;
Well, what about Clojure?
&lt;/p&gt;
&lt;p&gt;
Clojure isn&amp;#39;t set up for 2D arrays, at least not as cleanly as a
language like C++ or Java. One could use Java Interop - that is, the
ability of Clojure to directly use Java but that would defeat the
purpose of using Clojure. Clojure is all about lists, vectors, and
maps. Instead of a 2D array of the world, I made a list (vector) where
each element contained the location of a living cell. This is
certainly more space efficient. It also let me operate on the world as
a sequence of transformations to the data:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Calculate all the possible next cells (the cells in the list plus
all their neighbors
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
For each possible next cell, count it&amp;#39;s living neighbors and
determine if the cell is alive in the next iteration
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Replace the list of cells with these new cells. 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;src src-clojure&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-clojure&#34; data-lang=&#34;clojure&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;defn &lt;/span&gt;generate [state]
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generate and return the next state&amp;#34;&lt;/span&gt;
  (&lt;span style=&#34;color:#66d9ef&#34;&gt;let &lt;/span&gt;[potential-cells (for [[x y] state [dx dy] cell-bloc-3x3]
                          [(+ x dx) (+ y dy)])
        next-state (for [cell potential-cells]
                     (&lt;span style=&#34;color:#66d9ef&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;alive?&lt;/span&gt; cell state) cell))]
    (into &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;{} (remove nil?(into &lt;span style=&#34;color:#f92672&#34;&gt;#&lt;/span&gt;{} next-state)))))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You can see the complete code &lt;a href=&#34;https://github.com/zamansky/clojure-life/blob/master/src/life.cljs&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
This again is a very different way of thinking about the problem. In
Java we looped over the world and made adjustments. Here we
transformed the current set of cells into the next generations set of
cells in a pipeline like fashion.
&lt;/p&gt;
&lt;p&gt;
Another feature of Clojure that results from its focus on immutability
is that in programs like these the computational part of the program
and the presentation part (the graphics) are totally separate. We
first transform the data and then the UI displays the current
data. Clojure does this very nicely and maybe I&amp;#39;ll write a post on
it but for now, I just want to point out that this is very different
from NetLogo. In fact, I completely finished the program for life
before I even thought about the interface. In NetLogo the interface is
an integral part of the language.
&lt;/p&gt;
&lt;p&gt;
The point of all of this is that languages designed around different
paradigms are worth exploring even if you never do real work in
them. Even if you don&amp;#39;t like or use Clojure you can take lessons from
it&amp;#39;s functional side and how it handles immutability and you can add
those techniques to your toolkit when using C++ or Java. It doesn&amp;#39;t
mean you should write Java to look like Clojure but having a complete
toolkit of paradigms to draw from and apply when appropriate can only
be good for us and for our students.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is Computation Thinking a new idea or a new opportunity</title>
      <link>https://cestlaz.github.io/post/is-ct-new/</link>
      <pubDate>Sun, 25 Aug 2019 16:32:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/is-ct-new/</guid>
      <description>&lt;p&gt;
Saw this earlier today.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Kind of
works, doesn’t it?&lt;br&gt;&lt;br&gt;Does every discipline do this — decide that
the way experts think in that discipline is a special kind of
“thinking” or “reasoning” or “literacy” that everyone really needs and
that we should be teaching to all our children? &lt;a
href=&#34;https://t.co/cvNvpOMjZZ&#34;&gt;pic.twitter.com/cvNvpOMjZZ&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Mark Guzdial (@guzdial) &lt;a
href=&#34;https://twitter.com/guzdial/status/1165624814759043073?ref_src=twsrc%5Etfw&#34;&gt;August
25, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;a href=&#34;https://pbs.twimg.com/media/EC0hlfKXsAIjlK9?format=jpg&amp;amp;amp;name=medium&#34;&gt;https://pbs.twimg.com/media/EC0hlfKXsAIjlK9?format=jpg&amp;amp;amp;name=medium&lt;/a&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
In a talk Mark gave last year, he also talked about &amp;#34;historical
thinking&amp;#34; and other &amp;#34;thinkings.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
This relates to something I&amp;#39;ve thought for a long time about CS and
computational thinking in the early grades. Computational Thinking,
whatever that actually is seems to be the route that CS is taking in
the early grades. Young students aren&amp;#39;t going to be coding up
quicksorts and many elementary schools don&amp;#39;t have the hardware
resources needed anyway. Still, by approaching things through the CT
lens maybe we can lay down a foundation for the future. Along the way,
maybe some of these CT ideas can support students as they explore
other subject areas. 
&lt;/p&gt;
&lt;p&gt;
This is all old ground for CT but what&amp;#39;s this new opportunity?
&lt;/p&gt;
&lt;p&gt;
Well, as it turns out, some of what we&amp;#39;d now consider computational
thinking has been going on in elementary schools for years. It&amp;#39;s been
going on under the guise of &amp;#34;logic,&amp;#34; &amp;#34;problem solving,&amp;#34; and other
headings. More often than not, teachers in better resourced schools
where there there is less standardized test pressure, teachers can
spend time on these. There are also CT concepts like pattern matching
and abstraction that are present in elementary school lessons but not
necessarily labeled as such.
&lt;/p&gt;
&lt;p&gt;
Maybe computational thinking isn&amp;#39;t all brand new. Maybe we&amp;#39;re
rebranding some ideas from other &amp;#34;thinkings.&amp;#34; Problem solving and
logic belong to many fields. This is all okay. All
those other &amp;#34;thinkings&amp;#34; are in established fields. The way we do
history, math, science, etc. in our schools is well established and
it&amp;#39;s left us, in many cases, with a tale of two cities. The haves and
the have nots.
&lt;/p&gt;
&lt;p&gt;
Now we have CS and CT and all the related buzz. Even if the CT we can
do in elementary schools isn&amp;#39;t new, even if it overlaps with
historical thinking or the others, we now have a new opportunity to
change up how we do things in the early grades and maybe we can reduce
the distance between those have and have nots. Let&amp;#39;s see if we can
take advantage of this opportunity.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Exploring Complex Projects</title>
      <link>https://cestlaz.github.io/post/exploring-complex-projects/</link>
      <pubDate>Wed, 07 Aug 2019 19:20:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/exploring-complex-projects/</guid>
      <description>
&lt;p&gt;
A couple of weeks ago there were some discussions about students
working on and in larger projects. Most CS educators think it&amp;#39;s a good
idea to expose students to large projects even if we don&amp;#39;t all agree
as to what the best time is.
&lt;/p&gt;
&lt;p&gt;
Regardless of when, figuring out a large project can be a bear and
that&amp;#39;s not just true for students. I saw this on my Tweetstream about
onboarding software engineers:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Leaving them alone with their laptop and telling them to look at the codebase. No purpose, directionless, no assistance or context or perspective. Show me a codebase that is documented exstensively enough to support that and I’ll be stunned. &lt;a href=&#34;https://twitter.com/hashtag/devdiscuss?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#devdiscuss&lt;/a&gt;&lt;/p&gt;&amp;mdash; Laurie (@laurieontech) &lt;a href=&#34;https://twitter.com/laurieontech/status/1158911795341529088?ref_src=twsrc%5Etfw&#34;&gt;August 7, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
If we&amp;#39;re lucky enough to use a large project specifically designed for
students there might be sufficient documentation but don&amp;#39;t count on
it so here are some suggestions and tools that might be helpful in
figuring out a complex project. 
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
Description and Documentation
&lt;/h3&gt;
&lt;p&gt;
Even if there isn&amp;#39;t a huge amount of documentation the project might
have a description or a Readme file. There also might be a build file -
something like a Makefile that could give some indication as to the
lay of the land. With a Readme or description you at least know what
the project is supposed to do and if the build file isn&amp;#39;t too complex
you might get some clue as to code organization. 
&lt;/p&gt;
&lt;p&gt;
Another thing to look at is if there&amp;#39;s consistent documentation. A
Java project might follow the &lt;a href=&#34;http://www.mcs.csueastbay.edu/~billard/se/cs3340/ex7/javadoctutorial.html&#34;&gt;Javadoc&lt;/a&gt; specification and if so, the
build system can probably build a web site that allows you to navigate
through all the classes. Other languages support similar tools. Check
out Doxygen which is like Javadoc but sypports a wide range of languages.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
Tests
&lt;/h3&gt;
&lt;p&gt;
Another thing to look for are a project&amp;#39;s unit tests. If they exist
they can give you some good insights into the project. You&amp;#39;ll see how
aspects of the code are used and also entry points to start looking at
the code. 
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
Logging
&lt;/h3&gt;
&lt;p&gt;
Next up - logging. You can add logging statements using your languages
logging facilities or just print to stderr or a file. Put in a bunch
of output statements along with time and location stamps and run the
program. Then use one of the tools mentioned below to help parse the
output. This can give an idea of what&amp;#39;s running when and can
eventually help you to understand the code. 
&lt;/p&gt;
&lt;h3 id=&#34;headline-4&#34;&gt;
Debugging 
&lt;/h3&gt;
&lt;p&gt;
Last up here is using a debugger. Load the project up in a debugger,
set a breakpoint somewhere and let-er-rip. When you hit the breakpoint
you can check the state of the application. Another idea is to set
watchpoints. When you set a watchpoint you tell the debugger to watch
until a variable is set to a particular value (or is greater or less
than) and it breaks your program when that happens. Set a watchpoint
and you can likewise check the programs state when your program
breaks.
&lt;/p&gt;
&lt;p&gt;
Another think to look at is the stack trace under the debugger when
you hit those watchpoint breaks. That will tell you the sequence of
function calls when the watchpoint tripped.
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Tools 
&lt;/h2&gt;
&lt;p&gt;
Most programming environments also have some tools to make all of the
above explorations a bit easier. Here are a few of my favorites.
&lt;/p&gt;
&lt;p&gt;
For the examples, we&amp;#39;ll work in small three file project I set up. A
small linked list in Java. It has three files:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Node.java
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
myLinkedList.java
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Driver.java
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
but it could have any number of files in any number of directories.
&lt;/p&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Ctags
&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Ctags&#34;&gt;Ctags&lt;/a&gt; goes way back. I first used ctags for C programs. Now there are
a bunch of implementations for a bunch of languages. The idea is you
run ctags (or etags or gtags etc.) and it creates an index if all your
functions, classes, methods or whatever. Your editor can then easily
jump from a call to a definition and back. Most editors support some
version of ctags and some don&amp;#39;t even need the ctags indexing
engine. Here&amp;#39;s an example of dumb-jump in Emacs which performs tag
like searching without the indexing. We move our cursor to the add
method, hit the magic key and we&amp;#39;re taken to the definition:
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/dumb-jump.gif&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
This can be HUGE in understanding code.
&lt;/p&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
Grep
&lt;/h3&gt;
&lt;p&gt;
Grep is a pretty ancient tool going back to the 1970s.
&lt;/p&gt;
 &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NTfOnGZUZDk&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;
Bascially, it can search through a file or files for text. Most
versions can use &lt;a href=&#34;https://www.janmeppe.com/blog/regex-for-noobs/&#34;&gt;Regular Expressions&lt;/a&gt; for wild card searches. 
&lt;/p&gt;
&lt;p&gt;
While ctags is great for navigating function and method calls
sometimes you&amp;#39;re just looking for a string. For example, if you&amp;#39;re
looking for the string &amp;#34;hello world&amp;#34; in your code  you can run &lt;code&gt;grep
&amp;#34;hello world&amp;#34; *java&lt;/code&gt;. The problem here is that it will only work in
one directory. That brings us to:
&lt;/p&gt;
&lt;h3 id=&#34;headline-8&#34;&gt;
Ripgrep
&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;Ripgrep&lt;/a&gt; is grep on steroids. There are a number of similar programs -
Silver Searcher, Ack, and Git Grep to name three. They all are much
faster than grep, can focus on files based on type, omit files based
on various criteria, and more. Currently I&amp;#39;ve been using Ripgrep.
&lt;/p&gt;
&lt;p&gt;
I wanted to find the code I used in my blog to embed an code sample
but couldn&amp;#39;t remember exactly how to do it. Here&amp;#39;s how I used ripgrep
to help:
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/rg.gif&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
First I typed &lt;code&gt;rg -t org python&lt;/code&gt;. This looks at all the .org files in
the project hierarchy for lines with the word &lt;code&gt;python&lt;/code&gt;. From there I
saw that what the highlight code started with so I ran ripgrep
again this time adding the &lt;code&gt;-A5&lt;/code&gt; which printed out 5 lines after each
match so I could see a complete example.
&lt;/p&gt;
&lt;p&gt;
This just scratches the surface but I&amp;#39;m hoping you get the idea. The
other cool thing is that most editors integrate in ripgrep/silver
searcher/ack functionality so you can do the search right in your
editor and jump right over to the code in question.
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/rg-emacs.gif&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;h2 id=&#34;headline-9&#34;&gt;
There&amp;#39;s more
&lt;/h2&gt;
&lt;p&gt;
I&amp;#39;m sure there are more tips out there but these are my go to
techniques. Hope some of you find them helpful either for your own
work of for your students.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Waterfalls - a trip report</title>
      <link>https://cestlaz.github.io/post/waterfalls/</link>
      <pubDate>Tue, 06 Aug 2019 19:18:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/waterfalls/</guid>
      <description>&lt;p&gt;
No, this post is not about the &lt;a href=&#34;https://en.wikipedia.org/wiki/Waterfall_model&#34;&gt;Waterfall development model&lt;/a&gt;. Devorah
and I had a chance to take a little vacation up north.
&lt;/p&gt;
&lt;p&gt;
First stop, Niagara Falls.
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/ZO1ALFs-adEiSXZiaHi7CTDl3GjdFr6x2D2zTzdW8__EeUH9TYp56pkcV4xeXqRk9E3bw0FcqJL_BpXgxKBR4GaOmqKhYffd-htNgIo7_IG4uQmKNzqyF4XHgb_B9iNKfson0P-uAnbVR9pmD7QlRRGfgAV6Ud9R39FvhB84n60y2RJCc5juo0iovB1qP7uuw6zjxP-7NfXWFmNk-8qdEqj0WNiwg8T-AeEwF3sdpLeD1IF9fWQGAky7akDvraG5fRnvM9REg9FuLSqlOBc1eX4J7HNE36FRILibiuxBQjFhBM9CKRS78-4eHD-EBsrpRxj7rJ0ds65txkq7_yubpd_yYyWYIWnIH81iDPdgw2K8TWHBVZuVmpgnKvkkFQ-wTzDthdilc1fyhWLyEms88K7JLloU3dLtIcGIZVi0TV0eLYjrJdK0ElgpolPJCpiDSU6Ic2roDXpJPyicuSgQ43N2XEsFStaJ2907pUvVkdZ1LzwmRkuOvTjLzfgcrVQbSiyfMAr9ftIPDylrv7xlvP-CxlhMjtAApLCSylizPXEmz2HozTQQFIbSFcX60GMXXSlES2lJG2rfezLCc4IfAmRxQ71ee3aEKznydjCwBpe9FICZkqwywykyUWgYrShuEclPsqKctU9cYZSx0qYpiRF8Y9S2qzJdkO0YZScY9h94RRqRA_JRr6xdmfBbHso9o1ylyrVQJ_NDIJjXdKSnOMwLJQ=w1495-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/-TOrr0_0Q98rMZniXAUfalKk-PoB5wc03jeP4M6GCcu-lVmNtSjq5CDX3XT7BzMpntm1wsCI6AFjwAg7ZD3JFrxehhNd0FPKWMesVPuisx6bf6jCskGbE16KbSY09BzrL_dyl9vJHg-TKWEfYwzlWRQ5cvsRlDSd4YRbY5D5zPAb5RQGJvMooPLt0GrPe8ecPBgFlpnlkLio_U4pkz6JH18jtl9CkvC2yZiXUHwi4g5j0zUdJ4wquoWWDoahG0MwizIjYcT3lBbKsSxCwG64647T7uRSvRcetDnWXUwUWYpwKa9cbVUBx4zi7IHXzA71fqkzyraY8YWgHIvfyFxjBWP9l8P5aONWtXcITqQoIVIWg5n-O-MlcfsVKU3YRUsnpwFX0-YpBKC_UpVqIXwRT9cEOEp359QpdKtcoJ9yUVOWpzf4M3owAcj4Q3cZmy1R0oZdcbpVH_YNcrjgWfr9PfhbyDyuzc4_NRLcME8xJYIPmCRbTis-I9KfKrRyGzdMnwjTR_bVzfuDgwmrPjZ_5HeJsev5-qBbvdfmvnEO3LgOwk2BsnbUFaNLUeJvWPPfhgwrLPcnagRUiDsDOvSewYY4VIc4XC_wmR7fmXJOlYPmoj6eQ-aQxKPDhq7eEMUzKJ7RLCEanYe9a1YKryvg12ySdTeA5YxR=w448-h336-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
We did the Canada side 9 years ago when we did our Erie Canal bike
trip (you can read about that by checking out some of my early &lt;a href=&#34;https://cestlaz.github.io/posts/2010-08-05-erie-canal-day-1.html/&#34;&gt;blog
posts&lt;/a&gt;). This time, the American side. My take is that the Canadian
side is more polished and all private attractions - think Times Square
or Disney. On the American side, the town itself is somewhat run down
but the attractions are all state park making them well maintained and
affordable. We did the &amp;#34;touristy stuff&amp;#34; - Maid of the Mist and Cave of
the winds, both of which were well worth it and also things like
&lt;a href=&#34;https://parks.ny.gov/parks/105/details.aspx&#34;&gt;Whirlpool State Park&lt;/a&gt; and the &lt;a href=&#34;https://www.nypa.gov/&#34;&gt;Niagara Power Project&lt;/a&gt; along with a few
other attractions. We got a nice dinner at the Niagara Culinary
Institute and an okay one in &lt;a href=&#34;https://www.tripadvisor.com/Restaurants-g48050-Lewiston_New_York.html&#34;&gt;Lewiston&lt;/a&gt;. There were a few things we
didn&amp;#39;t get to do and I&amp;#39;m not sure there&amp;#39;s enough to merit a return
trip but we really enjoyed the day and a half we spent at the falls.
&lt;/p&gt;
&lt;p&gt;
Next up was half a day at Old Fort Niagara about 25 minutes north of
the falls;
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/fe73nED0eFzSJX9Se32R4CHtPPhOLMn6-gfsnBVH1seeBx20IpnavPSiigUow1t4O94nONeDn-M53hD1iSBR_sjqQlazR9QAECAYfPSmHRS5llPebxl6OkbWPCNCWt_hIDKe07UtWvT5isdRWyo9S9u5vXq3n7vESKkihfdl83oksWuAZBA3noPJ1HYbXLcDWsbIHPi66FLbzZITw1NRdOjNymQamUop5F6r7jOE7m0xh-q_laEupotVu8x8rtPinrZ42kpAHsdgjbBe7wtcccd3xQiP8vTmuB4wGsnrdZhhN1qgSrg-WMUEXfDRfClNARZy5EBhwiQ_-tboWVjhsxjomRbDVoMnxhVjSXHRc7Ipmd4wtxcJCBMXs-fUttvqLWtpPzVV3YqVY0DrmpVxTRPGX-JrBAr9zHZuPvQ8tCTK9HVJCUQ7PoITo3XL8mtp-npj4DeBiuleor9sexUwAcUddSVdaT6a93BLS0vfYzjDJ9ED_GlD-PVrhSEbH_dVBt9rBzG1nw5MCvwZ-I1BCXddRZkL__4djy8MrdjqMRX4VEbLY3Z3jAsa_txrny1gp3jb-E7apYU4QuW_LikZP9X4PSvXuVt_Dbj2qOKbzWH8WdWd3cS0jroEgsL-diQQwAJDeeUlcQJyDoM2FAfgfzUwSTZJD1oL=w1495-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/P5eGSb8exZx2H74LF3UFNAMcA_Px8vb0AjNCInbXIASUyzni0UU5Ij3hWodUAKIfkZHNx9dgWounHvTTeqrI1nF0N92Y1eObkff5ablIobpaky_9i_DGeqFj0iT8pdlvQhie8q9YZvV8AoegUUA40gWZHeVgatdtgw076smv4vBC8nqG_0aB5K4wDkH0qC__8JLCNq_AVns0QNbAsVn1GmppA31ZRhCCyGq8Y6igWOa084lOppPXTQF7pA7ZwdnyWNEx6YUncJ3XuU1cuDcwbQmIO8uek5DWDNpFSCuQRECtTadt_oFPMscsa7uPIyLwUTThvfWuhLSs0eo7zy-z-UcXDGwyZT8SH4WmlsdFtl9UW2n62TleBUZB2Q_LGzmGpqABofrjWSaCTQY-qwMV2xVq5IvV5-I-9na9myVWbgDFJajKkiCj5yLkBDkeh48kV_3fC6WMdJo_8byCJEoQkn5rAx3SwyOsdf7gcjZmECI57VNr8p-SmklEWEQso3unRW_rhHcBLWV819Z8fh-S8AxPVAomlcM9yWzunjkBpCTj5Q8fgjsek9ijaXQqY_RZqLOFXKNaMcQ6qbC8BrY2nXM2L2EUgyYFhq9He0xAurxmhgSHJRJJW9cftBnFjSZ2jusHRgJ6Zj0JAijmbBhgcQK9tXx4oJJ7=w841-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Lots of cool history from both the war of 1812, revolution  and the French and
Indian war. We&amp;#39;re such a young nation so it was cool to see standing
structures from pre-colonial times.  
&lt;/p&gt;
&lt;p&gt;
From there we drove in to Canada. On &lt;a href=&#34;https://twitter.com/dougpete&#34;&gt;Doug Peterson&lt;/a&gt;&amp;#39;s suggestion we
stopped at the &lt;a href=&#34;https://en.wikipedia.org/wiki/Welland_Canal&#34;&gt;Welland Canal&lt;/a&gt; which connects Lake Ontario to Lake
Erie. It&amp;#39;s much wider than our own &lt;a href=&#34;https://en.wikipedia.org/wiki/Erie_Canal&#34;&gt;Erie Canal&lt;/a&gt; and ultimately connects
the midwest to the port of Montreal and beyond.
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/7TAtafilPV9NvwDsHgAywreQFofk3e-tuQRVKhM0nCXK_aW64Qh3T1_CMkHAW5xCe_us69b6IoNZUzSSgCOKmZDlvZCdAHElozy0HMfS8OHjLRwZaUbmklXPtn51MqYq2DxE5tDIwqyUiX_PRyLqwqz_jEPVXtI8A-RHmixd2K2mzqEWS1y40fabhTEaEoDFdPQQUDmOXi8XW3ZvFh0Dtx3Z8tUGoauqQneHsiY6Elrb5i6GjT2igsCuZQl9GCzagN0_Tb9f0Jo9E0zoDM2LshVtw74rF-i6iEngMs_-tt_3_iA87jlYc_dR8h5fiNNCxf6NdNhj0gmlNd9xhJYJrRhvvJJXytE0wFpeNvcW6JWlZqN-vi1y9HrSVv5-qK5e4GaPEx4Qip-isIkkhanYMOyjbmU4OzPrepp7TLD-iCbwvtaRY0lP20_pIPcWNMakvZ2kYno13oIQkMaKxNwQE8kYYEpqwiYVhjxFVhFZ211q4iQpSA7czWzs-HKDAHaiBvsO5QybzD5MCfmqJJmKsJjm8mnmey6NLcJH0Yw5V2nqwiMvQjUs8_cpiNniGR_pNiQ_pg9eWpW669CrrbKVJtQQfHIn3bo8b6LT2I6p8oMdFr6Zn6LYl3fkck4BzE0hnKzjRTTf3ZYLvVGQRpUxyNFQ7OUHgehK=w841-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/KE4LGNqZnGWVGWzJtOq-hsRDucc4oAXZqT1uW8Y4qSwLs6Wj2ZFsl1OdT8-3UzRXFdw0tIUxq3jzPaD-6P8iBBPbY-vPcyynCaqM7AgEbQLCxtQ1Ihvpit4Kj7f_7w6jXCscTHTTi0pmRwswHvRbpw6bHQ2wsMb4IDVd-s8OWaJKqa-VDx4GTBtSjPugmHNahTMB3DO76BLUCBdAQkbHBU3FknzPRXhT5xX2wwTlVeIsJL4DUZoaRmwXtaA2nzi-akv5YPRxom4b4ilhH3MybebtbGrlaCRFYLjEaQvVXUFCamhm5B2wkmSZ3bFto3QwMGfiI_G03TsOg5_vf3GY1gQCKM5hety8C2ZIV-IcQg8wtt_RQIpiSf-hHSNrgKDLsdPoJMB8Z_nf8-mSZAtCi0JJb1DB0ExRJLGysLayt6oiQyITjf-WZKCrLDVaoWehjZ1kkV3BcZZumiEbwshAwLqrzh_5UGDmvGEO8YSRzC7Srhp0M2R5XO2VfeWrKjkVAqiLIoc_tih_tOl8YFf59fjo_--BcauaZI0rKu2q1NGPu0asL2PLwZBCD0RgIdJQwHJkA5MOxNhT3ReMKJaZ5r_MP5SCWJs8ICTYtg4wEVMUgPj6Wpj0ZriRDFj7iKYWz1wIy56f1sIxd1J11S1SOfdNhRBttvZzcrqpjVePm62HjV2Lyw6g50KgP1akI7pVqNgaxmZUBjTZbiudntIix2yt_A=w1495-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The image on the left is the cement barge St. Mary&amp;#39;s Cement II being
pushed by the pusher tug The Sea Eagle II. Using &lt;a href=&#34;https://www.marinetraffic.com/&#34;&gt;this&lt;/a&gt; site I was able
to track it going over to Cleveland. That website is really cool - on
it you can track &lt;strong&gt;all&lt;/strong&gt; the boats. It also has an API so you can have
your students use it in class projects. 
&lt;/p&gt;
&lt;p&gt;
The image on the right is the same boat a couple of minutes later
after the lock emptied and lowered. Really cool. 
&lt;/p&gt;
&lt;p&gt;
We settled in that evening in Hamilton Onntario.
&lt;/p&gt;
&lt;p&gt;
Hamilton is known as the Waterfall Capital of the world.
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/lwrhZWCIFZfpSE2umVZZ970Soln9uv8pXztTajS_HL0cGDB_TWZy1TUVFpegO1t-_VgKXRPDn1xXl8A9XS2Y1kpPC0Zkwa0U4GL2zJsXgbebYkwv5OSzkdbd3vSCVPvBKg0tGp2q9ZSofLwQ14X6-r8wDV-qJaznFgy4kwDWFX2HDQCqgzToERtQNZwohM-_foWs4rFkuIlEp5JF_MnqDcRsJQvZIWIVQgMZ7C7zp4Na1Z73T_1h5IzZzEFZ3t2n7zjmVhNSL8mERoHjcMmsd1sEprre1uf5RTEoFWgAQCnoN4hDtyJPrO79zeCe_SKZGfH00m-Xn0gadFpm3r9msRaz4sI7Z1b8hvghxoN0ijeu39mQ9HhdTcuweJTioYmsFU35qNtjZuAWYxyEgQtiORVtzmzW9PFG27IiLFh7QuQcZK9FS5qsoXVcnU81-XdtiTgSrfqunfPk7zW7mc5NFhy8jxnt3-DcE0Pxi34BckLBme6wa-LsO1uyLQQ9KtPC174g9faDWQbHifEOiMcCG7VQGa1XBg7zlfdxi8b4Ts5NGzkQv3B1dMWXjP8CWEblxpMAMS_OQCNWwxLsOmZO-Z-7i3AZmaGat6d-tU0SevPv6P0ZDdxwIcvl5Zh8oswtuC3AMf6KDSbmCDsSVctRxUGURECXanyDW3wBMbYM6lqFKRYpcSCPzNknVDgrHYUboz3i6G9KHUbyx4lTJ46qrnypbg=w1495-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
It didn&amp;#39;t disappoint. We didn&amp;#39;t get to the two biggest falls - Webster
and Tews but we spent a long day of walking the trails and did get to
see six or seven of them including &lt;a href=&#34;https://tourismhamilton.com/devils-punchbowl&#34;&gt;the Devil&amp;#39;s Punchbowl&lt;/a&gt;, &lt;a href=&#34;https://tourismhamilton.com/albion-falls&#34;&gt;Albion
Falls&lt;/a&gt;, and &lt;a href=&#34;https://tourismhamilton.com/felkers-falls&#34;&gt;Felker&amp;#39;s Falls&lt;/a&gt;. It&amp;#39;s pretty cool that we&amp;#39;re still in the
city but are on these hiking trails. We could probably have done
another day or two just hiking the rest of the falls and another day
to see other local attractions like the botanical gardens.
&lt;/p&gt;
&lt;p&gt;
Our last stop was &lt;a href=&#34;https://parks.ny.gov/parks/79/details.aspx&#34;&gt;Letchworth State Park.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Letchworth is truly a hidden gem just as the Ithaca area state parks -
Treman, Buttermilk Falls, and Taughannock but more so.
&lt;/p&gt;
&lt;p&gt;
Beautiful waterfall and gorge views. You can go on a hardcore hike or
just drive from view to view. At the south end you&amp;#39;ve got the three
major waterfalls and at the north end the Mount Morris Dam. There&amp;#39;s
also some pretty good food at the Iris Inn which is at the south end
of the park. We didn&amp;#39;t stay there but if we go back, I think we will.
&lt;/p&gt;
&lt;p&gt;
If you haven&amp;#39;t been and get a chance, you won&amp;#39;t be
disappointed. There&amp;#39;s a reason Letchworth is called the Grand Canyon
of the East. Not nearly as big or majestic but just as beautiful in
it&amp;#39;s own right.
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/Cp6aZxzJNS5ZZCMMu_CtIQNAB4p_M2_9T9qlROh7keHxJnIIsHik1QaupzyqXHqPVdYUD_S-FaJ25yiRtOcgL-YtL3oQbBDXG1zsQUy4hJtBPh2gRlRgNNPHwrtuYHMhEwflks6nqpyiQZtohN2Fxaz6-w95-YJlzV8ob4JJshVzrkAf9xTk3G0C6NDTMC9N1tdIMSr8-z8Y4M2HbsC8-T0YucUmJS4UyTJML4FaA4X9rbrKQKA5_biATYnfo56PDYunG6fPskH7qyfDOnZ-olp9NPzg3jEub5BThS5W2rZZ-8kgE0fmGUXecjd-bJf6ncIY9wmgA-PKH1xu-S6JykjWohbN37ADnc_3U3Phc3Hp71-qe9rZOfSk2HnD54xwz11ybH2i0n0_enfLWZGkm8n2u3LwzOsR-XenSw6yEqrBvexAq9khmn4xLHgBlajuuzYsP6XOOpNNKaNvScpTUEw4kWyHhyQZJMP6UUqT5mmxoNJ2Rg801fh-5qil69Lc-A7fjh5lQ2Hn1HVS5VCGYXRSnBeY6t70vGCbStiwl298Bb8l0rYHj-_bO6YSoDN1KzztcoNWgm-Y10KFyac5688H9cimISGzGBUhWFLy-EKnPHoulMINVy6ZXEu1Fa7TJS42nmQ7_9-FO8t0M8yZvAbJB3RFoHBZKhkOHedJBQWmEnbXYWKKWpWH1mlBU6ptcSrIWhnM-9jMZCA7vSQrMeYDpQ=w1495-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/fucLzS0UWdKXMzMHe9nIoGuqtG6T_qP31GM7uOa5ShlHJOWFwuXkvVbhUOVICBKP-x8lAxpf5vgu7UlU4_WB2Ynk9UuAgokLuKlFxqUBAM_h8TPq1NrtVmmi0oHABcPTv4UPlr5FwsZ8o2BcZpxVUkINOvQzqR8jY81qXzKCTU1gsy2adrW06HBk2FBxNEBnuNu0gBfjF1Oq4jcEcs2O4VNlpaXf9IGsWnCziwXFfXcQNp6WkjNwskGxffymEseUfjGzYoQzXs80OwrbKsHC0VYvnpwkj7CdZGlNOL6JQWMVV4F5_lw8THDmwjNYX1xczn2qHb51sdSRGqrADU2FSq478vsRwX37PmMP4VWct8KDEdQx-_2oRgrYNWlfVqXRAANZ4uQK9T3WXN0v0UnEtQlYkaotyjRhX95aeoPbdEz8z2VpjKfuu9rIOiuGW38RBKMLeA4723uFXAWVrp8e0FgbVBVAnSAx4TqO7BylD-QjHTZoX16QAVW3wbbeFXRwLjJCXs-QOuZrpa4s8Ks18YVvJn8WRrlGfLJmqVid1HupMlnMfpdE2SkYhhC29mu4tJRJn83kJkP85nPgeTj9P1oQG2kw2seyRDGpGiGud-EVOyq9zoaIZKm1TrlKONHEEwanWb44E-uO2hULcp_pAf1GJJF46pMsE-XjwZ7f0iUUkFwIxv9qWnrszyCYv74m0xvCfvjbGTj9V9yHVnDNVkdAEQ=w1495-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/9aFZ-ftnDFvn2QuZrwFuwBJgetPNxhPQ7rrNcrCM2VeF3JUyuq6TL26Cfal8v_PgpDjsrNWEiW_Mp6ug9u0hyEQzvd-4ZfMxNS6MAiNuk0TpIjgkX_ahfVrlcl0NF5YOAKVVl6wuzlXQFN7m4806ohTHQcgAELfF8ha7PIIgd-L6M4fr1MeC9MWmYuFeIAM3jKpsCI-yInJNUYHSec_mqFnHv4HBkvrC6HEH-pAy9HR-Xun1EWJBch0GOpp6QS0hdn5Maz26RUOCxcW1O8IzBIpORu1w-8qVFNl6b_ESwQvqcHpTOBZZ1aRlxGSs8pamafDhtldeS-e2ZOZ6JHHyIeuMVv7tATz7Aiwoapb_Giy7gtJme9A4In3O2dSj5OQKYVFksGIFeZJdQK7MkmhR7EFEqGXgfo4NOXMYXQgkSdIoFdFNSkk35M3UkebX5iWeVRHd1iGryW-Su5rLGqo-e4P6ZdAqBZo1aCFzpFLOBAxty48ckKd6qb9ONsBYBnclKArpJCM-QmxZ1tuEg052vk2_8VF1Hp5jPle9Eg7qHRZmvhRp4FLLR3lxMCnv4UVj_hv8ATcWlOmv0pQKiBSU7uaBE4z2FmesgAKMIF8jgib6uLiImD7T93qQ1ribKYTsE7Wk2TYdIX9FrsUqyKU9lV1-RvJFB1C_8-ous4_uGe1jpUZajOWS8Fd4AhPfkUd1yng6eqgM6XJccUadZAEgTUOvVw=w1495-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/bMS7PphU4bf6S3tNZ9SCow8vzFXB7SgHd8YV6GlqvKSqs2sQSvbspwSGZdMXpfm35WxNCfr1Pmt9_GZEx2KXBS0UGZJhOJj11S_a1yDQOFG-C2usQLrAwTwAFPABjORmI02lMjgp8QgrW3QI7N7SjZEupZoXmjAi9Np4IeejivDCe0wLqUKEfZIpi6rTh0_MpkH9UK3LZEtqBOqnHaE2T5qPMSy7WIZZGqtmLJxsTwQpBDAuzMuRiXcgoSWOs4LoO692zaKGhO65PSqmy6lJZC_hmspWN5mbrKIAgqswvNublAVcA8UfLDa2EtOHGG-sULUc-ZMmjK93TL6AVyTiOeOrEYgCWgDBzohSHgBvQaW8vMBvnu2foJ42h6r3TF9fapKyhXe1FH2qi9vlTu3Bs44WHrZi5rPTUt7acpCD2pdatg2r_b_0CKKP1MO0l7I1cq-1q162GqVyCON4aMN0xzFQ75CMUL_YOWX0LtjYSxRaCh6OkhtqwCOQpdELeoVO_qyF57zyFZxJEggHAB3awX_VA_TpzE-eEcGF0URM4QjT7JyR3D1-KC_HxesReBkDUn91YRCD522o0alO4468mPL4s4eAN1E4-rYb6wRYj7n0o0bPgUT1lg8TlSQPxl8ehy8q55_zijFvloje44O5Q9eC6xhYpWTRvIlaSpou5BT6LArf6_e4zVbms90m2Qst91CFUHLg20d3ARz_dMQpywcveg=w841-h1121-no&#34; width=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll probably head through this way again we still haven&amp;#39;t but want
to get to Toronto. When we do we&amp;#39;ll probably spend additional time in
Hamilton and Letchworth. 
&lt;/p&gt;
&lt;p&gt;
Now it&amp;#39;s back home and try to get in a few more restful days before
the semester begins.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Computational Thinking  in Primary Grades</title>
      <link>https://cestlaz.github.io/post/ct-in-primary-grades/</link>
      <pubDate>Tue, 30 Jul 2019 17:54:21 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/ct-in-primary-grades/</guid>
      <description>&lt;p&gt;
Last week I spent a couple of days as part of a team running
professional development for a
group of pre and in service elementary school teachers. Two days
talking about computational thinking.
&lt;/p&gt;
&lt;p&gt;
Wait a minute - elementary school teachers? I&amp;#39;m a high school guy
pretending to be a college guy. My extensive experience with
elementary school education is that I raised two kids and I don&amp;#39;t
think I messed them up too much. I don&amp;#39;t know anything about
elementary education!!!!
&lt;/p&gt;
&lt;p&gt;
How&amp;#39;d I ever get myself into this???
&lt;/p&gt;
&lt;p&gt;
About a year ago my friend &lt;a href=&#34;https://twitter.com/diane_levitt&#34;&gt;Diane Levitt&lt;/a&gt; was encouraging me to apply for a grant to
explore computational thinking in elementary schools with the Robin Hood Foundation. I was
hesitant since elementary school is not my bag but since I also knew some
of the Robin Hood players I figured let&amp;#39;s see where things go.
&lt;/p&gt;
&lt;p&gt;
At the same time, coincidentally, I started talking to &lt;a href=&#34;https://twitter.com/yadavaman&#34;&gt;Aman Yadav&lt;/a&gt;. I had followed Aman
online for a number of years and was hoping to find an opportunity to
meet him somewhere down the line. Long story short, the two of us
decide to apply to for the Robin Hood Foundation grant together. I
felt much more comfortable than going solo since Aman had already done
some great CT work with Detroit teachers.
&lt;/p&gt;
&lt;p&gt;
As it turns out, in spite of my insistence of not knowing primary ed,
Robin Hood decided to support our efforts. Last week, Aman and I,
joined by &lt;a href=&#34;https://twitter.com/saraevogel&#34;&gt;Sarah Vogel&lt;/a&gt; who has also done some good work with CT in
primary grades and &lt;a href=&#34;https://twitter.com/CSEdPhil&#34;&gt;Phil Sands&lt;/a&gt; who is currently doing grad work with
Aman we ran two days of PD for 10 pre service and 10 in service
teachers. It was a mix of activities to explore concepts such as
debugging, decomposition, abstraction, and brainstorming on how the
teachers could bring these concepts to their classrooms in support of
core academic areas.
&lt;/p&gt;
&lt;p&gt;
Towards the end, I was sitting in on one group of teachers
energetically discussing how they could share what they learned with
their school. I then moved to another group where they were discussing
how core ideas from our exercises could be adapted to support teaching
writing. Really inspiring.
&lt;/p&gt;
&lt;p&gt;
Aman and I will be getting together with the pre and in service
teachers again in late August with the plan of developing concrete lessons
that both draw out CT concepts and support core subjects. I&amp;#39;m not
sure if Phil will be able to come out to join us but he&amp;#39;ll be involved
in the project for the long haul. We&amp;#39;re hoping Sara can also be as
involved moving forward but Sara&amp;#39;s very much in demand and very
busy so here&amp;#39;s hoping that her schedule permits it.
&lt;/p&gt;
&lt;p&gt;
In the end the plan is to make everything the teachers develop
available to the greater CS Education community but we&amp;#39;re going for a
bigger win. If all of this works, the plan is to get some of these
practices into Hunter&amp;#39;s required pre-service classes. Given the number
of teachers we prepare at Hunter, that could really move the needle.
&lt;/p&gt;
&lt;p&gt;
Working with elementary school teachers is new to me and I&amp;#39;m having
fun with all of this. Super appreciative to have partners like the
Robin Hood Foundation, Aman, Sara, and Phil as well as the teachers
who took time out of their summers to come down to Hunter and work on
this with us.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Alumni Anniversaries</title>
      <link>https://cestlaz.github.io/post/alumni-anniversaries/</link>
      <pubDate>Sun, 28 Jul 2019 07:32:02 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/alumni-anniversaries/</guid>
      <description>&lt;p&gt;
Two days ago, a teacher&amp;#39;s comment on a frustrating situation &lt;a href=&#34;https://cestlaz.github.io/post/outside-evaluators/&#34;&gt;made me
mad&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Yesterday, I got to be part of something that made me very happy. 
&lt;/p&gt;
&lt;p&gt;
Last night, Devorah and I ventured out to Coney Island to celebrate
the twentieth wedding anniversary of two former students. It&amp;#39;s such a
joy and an honor to be included in these types of life events and even
more so to count the couple and so many other former students and
friends. Devorah joked that she&amp;#39;d been to more weddings of my former
students than of her own friends. Truth be told, I can say the same. I
commented that nowadays I&amp;#39;m more in touch with friends that I&amp;#39;ve
taught than my own high school and college classmates. Our hosts joked that
it was the right call because my former students are younger and that
helps keep me young :-).
&lt;/p&gt;
&lt;p&gt;
What was also exciting was seeing the couple&amp;#39;s oldest daughter for the
first time in a year or so. She&amp;#39;ll be starting at Stuy next year. The
grow so fast. Almost makes me sad I&amp;#39;m no longer there. Missed my
chance to teach the offspring of my former students. Still, she&amp;#39;s in
great hands with the crew that&amp;#39;s still there.
&lt;/p&gt;
&lt;p&gt;
I also had a chance to catch up with some other friends and their
families. Loved seeing young Abe, another &amp;#34;grandstudent&amp;#34; who I haven&amp;#39;t
seen since his bris two year ago.
&lt;/p&gt;
&lt;p&gt;
For anyone out there just starting their teaching career - this is the
payoff. The relationships. I know it&amp;#39;s hokie but I say that as
teachers in a general sense we should strive to be a force of good in
our student&amp;#39;s lives. If we&amp;#39;re lucky we see it&amp;#39;s appreciated and we get
to see the results. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Outside Evaluators</title>
      <link>https://cestlaz.github.io/post/outside-evaluators/</link>
      <pubDate>Fri, 26 Jul 2019 19:23:32 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/outside-evaluators/</guid>
      <description>&lt;p&gt;
I was planning on writing up all the exciting CS Education work I got
to be involved in these past two days but I saw a post on one of the
CS discussion forums that got me riled. 
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a teacher (name withheld to protect the innocent) who wants to
create an advanced course for his students but his administration is
requesting an outside measure of accountability. This sounds
reasonable on the surface but I found it really insulting. 
&lt;/p&gt;
&lt;p&gt;
As teachers we&amp;#39;re hired as the professional - the specialists with the
responsibility to teach our students. Parents leave their children with us
all day every day with the understanding that we&amp;#39;ll do our best to do
right by our charges. 
&lt;/p&gt;
&lt;p&gt;
Yet here we are being told &amp;#34;you can&amp;#39;t be trusted to design a course
for you students and assess them. You need an outsider for that.&amp;#34; Now,
I&amp;#39;m not advocating that teachers operate without supervision - it is
indeed part of a school&amp;#39;s administration&amp;#39;s job to evaluate, support,
and improve its faculty. What I am saying is that teachers should be
trusted to teach and to assess. 
&lt;/p&gt;
&lt;p&gt;
Actually, we still do trust teachers in some areas. How many English
classes are free not only of standardized tests but tests
altogether. My kids were in band and chorus. The assessments were all
performance based and all designed and administered by their
teachers. Same with many art classes. It&amp;#39;s funny how students in
instrumental music and hands on art classes learn to love and
appreciate the arts. At the same time, at least at Stuy, students who
instead went through the paper and test based art and music
appreciation classes left, let us say, less enthusiastic about the
subject matter. 
&lt;/p&gt;
&lt;p&gt;
Even in more test based subjects - precalc is a great example here we
trust the teachers to assess. There&amp;#39;s no precalc regents or AP exam -
everything&amp;#39;s designed, implemented, and assessed in house.
&lt;/p&gt;
&lt;p&gt;
Just because CS is the new kid on the block doesn&amp;#39;t mean that CS
classes all need some external evaluator. If you don&amp;#39;t trust your
teachers to assess you shouldn&amp;#39;t teach them to teach. 
&lt;/p&gt;
&lt;p&gt;
Now, this is not to say that there aren&amp;#39;t time for external
assessments or engaging outside parties to help us design, deliver,
and assess educational experiences. High School CS teachers can use
higher Ed CS people and tech industry players to great effect but it&amp;#39;s
the teacher that should drive these relationships and partnerships.
&lt;/p&gt;
&lt;p&gt;
The bottom line question is &amp;#34;do you trust your teachers or not.&amp;#34; If
you do, you should empower them and support them to do their
thing. It&amp;#39;s like a former teacher of mine always said: &amp;#34;to solve the
education problem, hire great teachers and get the F out of the way!&amp;#34;
On the other hand, if you don&amp;#39;t trust your teachers, something&amp;#39;s
fundamentally wrong in your school.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Code And Case Studies</title>
      <link>https://cestlaz.github.io/post/big-code-and-case-studies/</link>
      <pubDate>Wed, 24 Jul 2019 11:22:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/big-code-and-case-studies/</guid>
      <description>&lt;p&gt;
I&amp;#39;m enjoying reading about Ria Galanos&amp;#39; new chapter on her blog. In
her &lt;a href=&#34;https://cscheerleader.com/putting-it-all-together&#34;&gt;most recent post&lt;/a&gt; Ria briefly talks about the fact that very few
professional developers start from scratch and most work in existing
large code bases. She wonders why the College Board got rid of the
APCS-A case study and talked about how it gave students an opportunity
to work on a multi-file complex system. Over the past few years others
have wondered if the College Board should bring it back.
&lt;/p&gt;
&lt;p&gt;
While I agree that students should learn to work in a large code base
at some point in time and there are a whole bunch of software
engineering skills that would better serve the vast majority of CS
students than what is taught in full undergraduate programs I have to
disagree that bringing back the APCS-A case study is the way to go.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not against case studies and large complex CS projects in APCS-A
per se but rather that tying a specific large project to the AP exam
forces teachers to teach in a way that might not suit them or their
students. The case study never worked for me. It never fit in with the
way I liked to develop my classes. As a result it was merely a time
sink. To be honest, most of the time I just paid it lip service with
minimal coverage. It never seemed to affect my student&amp;#39;s scores so it
wasn&amp;#39;t something I had to worry about. I also used to use a few texts
over the years that integrated a large project throughout their
chapters and since those also didn&amp;#39;t mesh with the class it made large
swaths of the books more difficult to work through when trying to use
them to understand core concepts.
&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t looked at all the newly released materials yet but I did
like the recent trend of making labs available that you could use to
cover core concepts but you didn&amp;#39;t have to. The same could be done for
case studies. Nothing stops the College Board or independent providers
from releasing things like Grid World or other case studies. Make them
available for teachers who&amp;#39;s classes are structured in ways that those
case studies support the class rather than are a forced add on.
&lt;/p&gt;
&lt;p&gt;
Beyond this, we also have the issue with exposing kids to larger
sometimes partially opaque code bases. This is pretty important but
many students don&amp;#39;t learn this until their on the job. 
&lt;/p&gt;
&lt;p&gt;
At Hunter, we do have a capstone project course where students do
indeed create some large team application using multiple technologies
but they do it largely on their own having not formally been prepared
in their earlier classes for development in the large. In my
experience, huge numbers of students from a wide array of well
respected institutions do little better at this. Many students do have
to work in a professors framework - write a &amp;#34;player&amp;#34; for the game and
such but that&amp;#39;s much more limited.
&lt;/p&gt;
&lt;p&gt;
So, we should be doing a better job at this but I&amp;#39;m also not sure if
APCS-A is the place. While it might work well at a TJ, where Ria
taught or Stuy where I spent most of my career, my gut tells me that
this is something for a course later in the undergraduate sequence.
&lt;/p&gt;
&lt;p&gt;
Regardless of when this is covered (if it&amp;#39;s covered at all) it&amp;#39;s
certainly worth teaching kids the common tooling to help them
along. Back in the day I used &lt;a href=&#34;https://en.wikipedia.org/wiki/Ctags&#34;&gt;Ctags&lt;/a&gt; to navigate large complex C code
bases. Ctags still exists in more modern forms and it and similar
tools work for a variety of languages. Coding standards like those
published by &lt;a href=&#34;https://google.github.io/styleguide/javaguide.html&#34;&gt;Google&lt;/a&gt; can make for an easier code based to understand
and tools like &lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html&#34;&gt;Javadoc&lt;/a&gt; and similar for other languages can create web
based documentation where students can click through complex
hierarchies and relationships. Tools like &lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;Ripgrep&lt;/a&gt; and &lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;Silver Searcher&lt;/a&gt;
can also be lifesavers in finding code across complex directory
structures. Most if not all of these tools are directly supported in
many editors and ides.
&lt;/p&gt;
&lt;p&gt;
So, where am I at on this. Let&amp;#39;s not require any specific case study
in APCS-A but let&amp;#39;s make things like them available. On the other
hand, it would be great if our students did indeed all have the
opportunity to learn how to work in large complex pre-existing code
bases but that&amp;#39;s an issue well beyond just APCS-A and high school.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Codeland 2019</title>
      <link>https://cestlaz.github.io/post/codeland-2019/</link>
      <pubDate>Mon, 22 Jul 2019 19:46:38 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/codeland-2019/</guid>
      <description>&lt;p&gt;
I spent today at &lt;a href=&#34;https://codelandconf.com/&#34;&gt;Codeland&lt;/a&gt;, a one day conference in NYC designed for
developers in the early stages of their careers. Just as at CSTA, I
was there with the GitHub contingent.
&lt;/p&gt;
&lt;p&gt;
Codeland had talks and a keynote in a common auditorium, smaller
breakout workshops and a couple of small vendor areas.
&lt;/p&gt;
&lt;p&gt;
I spent most of the morning upstairs in the GitHub lounge so I onl
caught part of one morning talk. Up in the lounge we, along with the
other vendors - IBM, Flatiron health, and Command Line Hero were
available to talk shop and hang out with conference goers. To be
honest, not too many people came by. I attribute that to the fact that
we were up on the ninth floor and the elevators didn&amp;#39;t work very
well. We were in a nice space with plenty of areas for conference
goers to relax, schmooze, get a snack and even play games but it was
too much of an effort to get to us.
&lt;/p&gt;
&lt;p&gt;
I also decided not to attend any of the workshops and stayed up in the
lounge. The workshops were targeted at new devs early in their career
so while some looked interesting to me, I didn&amp;#39;t want to take up a
seat from anyone who really could benefit from them,
&lt;/p&gt;
&lt;p&gt;
After lunch, I relocated to the downstairs vendor area. That was much
better. Since it was right near both the snacks and the main
auditorium there was much more foot traffic. I also got to hear and
see all the afternoon talks since audio and video were available right
near where I was set up. They were pretty cool. 
&lt;/p&gt;
&lt;p&gt;
For me, the best part of the conference was the ability to talk with
the conference attendees. On the one hand, I was there to talk GitHub
but I also had the chance to talk general tech with them. I got to
talk to people at all stages on their coding journeys. There were
undergraduate students studying CS, second career people either in
code schools or self learning, Former CS students who&amp;#39;s lives had gone
in other directions but now they&amp;#39;re looking to get back into tech and
more. I got to hear about the excitement of their adventures and tried
to give advice and encouragement to those having a hard time breaking
in to tech. Having shepherded so many people from neophytes to
professionals I&amp;#39;d like to think I could provide some guidance to some
of the people chatted with.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if there are any other conferences like Codeland but if
there aren&amp;#39;t there should be. It can be hard to break into tech and
Codeland created both a safe environment for tech newbies and also
provided really valuable content. I wasn&amp;#39;t familiar with &lt;a href=&#34;https://www.codenewbie.org/&#34;&gt;CodeNewbie&lt;/a&gt;,
the organization behind Codeland before but now I&amp;#39;ll have to see if I
can have a sit down with them to talk shop and tech ed.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Maze Solving (for real) and Code Tracing</title>
      <link>https://cestlaz.github.io/post/maze-solving-code-tracing/</link>
      <pubDate>Sat, 20 Jul 2019 16:40:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/maze-solving-code-tracing/</guid>
      <description>&lt;p&gt;
Every year for the past sixteen we venture down to Lancaster Pa. for a
weekend of car camping. Actually, there&amp;#39;s not much camping anymore. I
used to be a bit more hardcore having done a few sections of the
Appalachian Trail in my youth. Now, as I&amp;#39;ve gotten older I&amp;#39;ve come to
appreciate little things like air conditioning, showers, beds, and
toilets. So, nowadays we usually try to get a cabin at a camp site. I
get my amenities but we still get a campfire and s&amp;#39;mores.
&lt;/p&gt;
&lt;p&gt;
We mostly come down for &lt;a href=&#34;https://www.cherrycrestfarm.com/&#34;&gt;Cherry Crest Farm&lt;/a&gt;&amp;#39;s corn maze. We first did it
when the kid were little. It sounded a little hokie but everyone keeps
enjoying it so much we keep coming back. They&amp;#39;ve got a big maze - over
5 acres. Each year it&amp;#39;s a different theme. This year was in honor of
the moon landing. 
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;
    &lt;img src=&#34;https://bloximages.newyork1.vip.townnews.com/lancasteronline.com/content/tncms/assets/v3/editorial/d/de/dde02460-7aa5-11e6-a29b-2360b2195be3/57d991b552906.image.jpg&#34;
         alt=&#34;An older maze&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; &lt;figcaption&gt;
            &lt;p&gt;An older maze&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
The maze is split up into 15 sections in a 3 x 5
grid. When you start you get an empty game board. As you work your way
through the maze, you find these mailboxes each containing a section
of map. You can also see what the overall maze picture looks like and
how it&amp;#39;s sectioned off. The maze usually has a handful of major
graphical components and each is enclosed in colored tape. For
instance the moon might be surrounded by yellow tape and the astronaut
in black. In the image above, the wheels of the tractor might be taped
in one color and the cabin another.
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/57LXNOhdME_k1K03HpCtIi2MnyF3WEhEY84kuX9RO1fKwJ67j2o6xFRCsO_TpUfI7t91Jcy7f56xAU6eNtR_9kDQesz8yZhoKFvAJCj-MuwDXgrhGQYACDiyfIKhO3gWNEDy2_uMZL-0zvkTlW_t6S8QidBcf8cceulKXvX6Ix3rXkHyxIcC7O6u7fLGQgb6f4Bd1iymy7APyLjqDGf6TC6ejqmDQ8ThFTfyO6kABcA8NXH6P_XO82X65lmGwVEXFVZiuzYYGO_zfOT3B0QZW3giBexk7lSJgVpdRF9OnbYQrC0nEva_pFT_79uEAbdXFSEdH8uCAAuyse6gnyunpDI0xWSffdyAPtGZZ5V_7JJmN61PFUvckWuVJC8FzCnsK_sLmi015ZxwY4M9dhhXrCmAWzhzCj4tyFcNfiot22luXnrRiWXek5Rxa0F-7UBQVZYX-I-SY2Si1ZpQrTBW8Nzi2Fo16U4HFW1yK-zd1sBhxwwZtLkQS3PxbsoUL61M5dsCWSsbjNB9gjjYA9K7MaJUSFaRN4HAXuyiUuwpa4lMXYtAmnF6mZxWpL2QPYFD5qWiZq1XUrgpwWmL6HQ3kUI5zcd87YbHPpEtbjAOte8_NQAM0jTk3rwwyEsN6n59RvUm3hA2lwIeoP2hB8QQVeFctYpsPzlF=w1752-h1314-no&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; 
&lt;/figure&gt;
 
&lt;figure class=&#34;z_image_center&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/MUujLBf7vV4Pr4FiLMS8mpAL0JKmyrpRRCz3uJdB61MSC0y43FADSJL-qbd92iVUEDTlQmDh1urIjySMAomjZa2gM4nQIHpLDipV84YsKYIr4pnt2SGN1INsYSHoNULPomSG-d3C1M-gbNxnD1WB6fOjAM-2E_xqu8OObeLt5UtVxtYRsQ0AEWTH5YNk2O5RZ3O085SlTeQV5xFqIUblvEGTA700wCksy4ohH9kqmRBhXiuOKhwYPn_wCQhp1_lgM4wnrvt0DUCqMX8j8hQw7bGbOnE6P-itprrwrFRhwlnQ4XuQWfmQLPadCUcT7fQC_hy6xIvmB9HGoNBDTKsHyCr_-Vuh7FPdZ6FjL_Ks59LADO9D9hgyhKzH6lkBAuBjiXgTyVIu-oHeyEqTTV2lFhvZRbq3zGEkq8Lo64dSibNO2NzdNwLJyQlNQseBKlfTCIOx2m2Z3haoeXcYY9sqjbmOzdfL_1qL1yVqNNnkl9U_8SvYXO9yQFAmZrptfYVmlEtDBnpNkFnbPGKopdc3pksgK2mzgTn7rnLM-VsQbi2mSPsjmGevsMQt1-ERL5OOcrEb2v8hu2WeGZ5Dhe5oG7GFXBBx3Xzi6p478evz0YB2ZuIfvbc6K2sMFlEltJCZvgnjn3GeevI-yolHKlHDMPktG8kvLAk_=w1752-h1314-no&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
For the ultimate challenge you have to find all fifteen pieces, answer
a bunch of questions in a crossword (where the answers are strewn
throughout the maze) and find your way to the exit. It  usually takes
us about an hour and a half. There are also a bunch games, mini
activities, and even a cafe in the middle. 
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re a CS family we joke about how to solve the maze - left
hand rule, breadth first search, iterative deepening etc. At times, we
actually do use a mini breadth first routine. There are four of us,
when we get to an intersection, we split and explore down to the next
decision point. If two people made it to that decision point, we might
split again. I guess it&amp;#39;s a mini combo of breadth first and iterative
deepening since we never stray too far from our anchor point. 
&lt;/p&gt;
&lt;p&gt;
Over the years, I&amp;#39;ve also thought about how we handle solving the maze
in terms of approach and temperament - particularly as it gets hot
under the sun and we start to get hungry. The other week when I read
Cunningham, Ke, Guzdial, and Ericson&amp;#39;s article from ITiCSE 2019 about
&lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3319788&#34;&gt;sketching and tracing code&lt;/a&gt; I started thinking about some parallels,
most notably the idea in the paper that the novices questioned trace
for patterns and goals rather than strictly tracing programs all the
way through - that rather than &amp;#34;being the computer&amp;#34; they trace less
formally until they think they see the pattern and how it will lead to
a goal. The paper notes that this is in spite of the fact that this
type of tracing doesn&amp;#39;t seem to yield better results.
&lt;/p&gt;
&lt;p&gt;
When we start the maze we usually just wander. The logic is that no
path is going to be better than any other so we&amp;#39;ll probably run into a
mailbox or two. These are our explorations like an initial look at the
code. Then we get systematic. We look at the map piece we just found
and try to figure out which path to take next. If we hit an
intersection we try to logic which path is best. We use all our info -
map pieces, what the overall maze looks like, the sectioning tape,
other landmarks, and even any visible maze edges. This is like the
formal code trace where the student is still going through the trace
in detail.
&lt;/p&gt;
&lt;p&gt;
Then, our search degenerates. We get cocky - we know what the maze
looks like so we wing it. This is when the student thinks they know
the intent of the code so they can now figure out the
answer. Invariably, we&amp;#39;re wrong. 
&lt;/p&gt;
&lt;p&gt;
Ultimately, we get hot, tired, hungry and a little
grumpy. Fortunately, we now recognize this and it&amp;#39;s our sign to look
at our map and start being smart again - do the formal trace. 
&lt;/p&gt;
&lt;p&gt;
Once we get to this point we usually finish pretty quickly. We figure
out the best way to get o sections we haven&amp;#39;t visited, find those
pieces and then the exit. Once done, it&amp;#39;s off to &lt;a href=&#34;https://www.goodnplenty.com/&#34;&gt;Good&amp;#39;N Plenty&lt;/a&gt; to
re-hydrate and eat way too much food.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if any of this means anything but it&amp;#39;s some food for
thought. Maybe there is something to look at in human general problem
solving practices and not just classroom or computer science ones. Who
knows.
&lt;/p&gt;
&lt;p&gt;
In any event, get down to Lancaster PA if you can and check out the
maze. It might be hokie but it&amp;#39;s a lot of fun.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A 10X Student Story</title>
      <link>https://cestlaz.github.io/post/ten-x-student-story/</link>
      <pubDate>Wed, 17 Jul 2019 15:39:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/ten-x-student-story/</guid>
      <description>&lt;p&gt;
There were a bunch of threads on the 10X Developer recently. You
know - that mythical beast that&amp;#39;s 10 times more productive than the
regular software engineer. I didn&amp;#39;t see any of the original threads
but I&amp;#39;m guessing they started with &amp;#34;your startup needs them&amp;#34; and then
moved to the &amp;#34;they can&amp;#39;t work with anyone&amp;#34; along with tons of fun
tongue and cheek 1X engineer tweets.
&lt;/p&gt;
&lt;p&gt;
It got me thinking about 10X students. 
&lt;/p&gt;
&lt;p&gt;
Regardless of what you think about 10X developers, 10X people do
exist - at least to the way I&amp;#39;m thinking about them. There are people
who in any given dimension are &amp;#34;better,&amp;#34; however you define that, than
other people. In our society, if they&amp;#39;re 10X in popular sports we
treat them like demi-gods and frequently when achievements are group
efforts, we, as a society designate one individual as the 10X star and
laud them rather than the group.
&lt;/p&gt;
&lt;p&gt;
Regardless, there are 10X people. At Stuy, I&amp;#39;ve had a chance to work
with a number of them and I want to tell you a story about one and how
it affected the way I look at my students.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s go back to the early to mid 1990s. I was teaching my first crop
of CS students. Many were math team aces. One in particular, Alex was
a superstar. Alex would end up representing the US in the
International Math Olympiad where he scored a perfect paper. He ended
up going right from Stuy to grad school even though his friends, the
math chair and I were trying to encourage him to start as an
undergrad. Why were we pushing Alex not to skip undergrad? Because
Alex was wired differently. While he was truly a genius with respect
to mathematics and he did pretty well in his other classes by turning
everything into a math problem he was not good with people. 
&lt;/p&gt;
&lt;p&gt;
His friends spent years pulling him out of his shell and seemed to be
making progress but felt that if he ended up cloistered in grad school
all progress would be lost. 
&lt;/p&gt;
&lt;p&gt;
In the end, he went to grad school but this story is about a
programming competition.
&lt;/p&gt;
&lt;p&gt;
At some point, one of my students, Eliot, told me about the USACO and
that he and a few others wanted to participate. It would be one day at
Stuy - a Saturday I seem to recall. While Stuy was on the internet
back then, the competition wasn&amp;#39;t. We were working on IBM PS/2 machines
running DOS. The students would write the programs and run them, print
out their solutions and I would compare the solutions with the correct
answers. When all was said and done I either had to mail a disk with
the solutions or printouts, I forget which to Rob and Don in
Wisconsin. 
&lt;/p&gt;
&lt;p&gt;
Over the course of the day, participants would come up to me with
solutions and I&amp;#39;d check them off. At one point, Alex came up and said
he was done. I asked him to bring up his printout. I got a blank
stare. We went back and forth for a while with Alex seemingly being
recalcitrant about not bringing it up but he finally did.
&lt;/p&gt;
&lt;p&gt;
Meanwhile, the other participants started to notice.
&lt;/p&gt;
&lt;p&gt;
I started to look over Alex&amp;#39;s code. Lots of variables. Typically named
X, XX, XXX, XXXX etc. Maybe there is something to the 10X dev not
being able to write code well with others :-).
&lt;/p&gt;
&lt;p&gt;
I told Alex that I needed to see the printout with the input and
output. He looked at me quizzically. Again we had a few minutes of
back and forth and Alex went back to print out his results. 
&lt;/p&gt;
&lt;p&gt;
One again, the other students took note.
&lt;/p&gt;
&lt;p&gt;
Finally, Alex gave me the printout with the results and I started
comparing the answers to the desired output - the answers were REALLLY
LONG integers so I had to check digit by digit. All the while Alex
looked at me as though I was nuts.
&lt;/p&gt;
&lt;p&gt;
The competition concluded, we packed up and I took the stragglers out
for dinner at the local diner. 
&lt;/p&gt;
&lt;p&gt;
The next week, some students apologized for Alex&amp;#39;s behavior. They
thought it was rude. Not as bad as what another math ace would do to a
teacher a couple of years later which caused that years math team to
go west side story on him and almost beat their teammate up for
disrespecting a teacher but still they thought Alex was out of line in
the way he treated me during the competition.
&lt;/p&gt;
&lt;p&gt;
After thinking about Alex&amp;#39;s interactions with people, I had a
different take.
&lt;/p&gt;
&lt;p&gt;
My take was that Alex very much respected me. To him, at the start
when he said he was done, he felt that I was a smart guy so I saw how
trivial the problems would be for him to solve. He then understood
that rules said that he had to give me the printout of the programs. 
&lt;/p&gt;
&lt;p&gt;
Then, to Alex, again, I was a smart guy so clearly I could instantly
see that his printouts were correct so why was I insisting on the
output? Finally when I had to compare the digits, Alex was very
confused. &amp;#34;Z&amp;#39;s a smart guy, surely he can instantly see that my
answers are correct…&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
Alex wasn&amp;#39;t being disrespectful. He was showing me more respect than I
deserved. 
&lt;/p&gt;
&lt;p&gt;
My interactions with Alex through the rest of the year as well as
observing him with others confirmed this. This wasn&amp;#39;t a super smart
kid being a jerk and looking down on us mere mortals. Here was a kid
who saw the world differently and thought that the rest of us had his
gifts if not more.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had the opportunity to interact with a number of 10X
individuals. Some as students, some as peers and colleagues, and some
as friends. More often than not, in my experience,  they&amp;#39;re wonderful unassuming
people. They assume I bring as much if not more to the table than they
do and they value what I have to say. It&amp;#39;s my insecurity that makes me
uncomfortable if I don&amp;#39;t have my A game. 
&lt;/p&gt;
&lt;p&gt;
Sure, sometimes they&amp;#39;re jerks but most of the 10X people I&amp;#39;ve
encountered are anything but. The nice thing is that when I do meet a
10X who&amp;#39;s a jerk, I can remind myself that I know an 11X who isn&amp;#39;t so
I don&amp;#39;t have to waste my time on the 10X who is.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2019</title>
      <link>https://cestlaz.github.io/post/csta-2019/</link>
      <pubDate>Sun, 14 Jul 2019 11:23:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2019/</guid>
      <description>&lt;p&gt;
So, I got back from CSTA2019 and promptly got a summer cold which laid
me up for the past couple of days.
&lt;/p&gt;
&lt;p&gt;
Phoenix was beautiful even with it being unbearably hot at times and
it&amp;#39;s a place I think I&amp;#39;d like to visit again when it&amp;#39;s a bit cooler. 
&lt;/p&gt;
&lt;p&gt;
I said in an earlier post that for me, CSTA is typically more of a
person conference and less of a session conference and that held true
again. I missed a few sessions that I originally wanted to attend
because I was involved in really good conversations in the exhibit
hall and before I knew it, the session was over and done. I can&amp;#39;t say
that I regret sticking with the conversations.
&lt;/p&gt;
&lt;p&gt;
So, for the sessions, I don&amp;#39;t have much to say. I do wish it was easier
to glean information from the session descriptions. Even sessions with
lengthy descriptions left me with some question and given that
sessions were an hour long I wish some had more clarity. Specifically,
there were a good number of sessions on AI and ML but often was left
wondering if the sessions were more about doing cool problems with
some AI engine or api and real world data or if it was really about
learning about AI and ML and how to teach them.
&lt;/p&gt;
&lt;p&gt;
The last session I attended was &amp;#34;Nifty Assignments&amp;#34; and that was an
interesting contrast to the SIGCSE session of the same name. Most notably at SIGCSE
the assignments are generally for a college level CS1 or CS2 but these
spanned K12. You can check out all of the assignments &lt;a href=&#34;https://sites.google.com/site/cstaniftyassignments/&#34;&gt;here&lt;/a&gt;. The one
that I found particularly interesting was Dale Reed and Joe Hummel&amp;#39;s
&lt;a href=&#34;https://sites.google.com/site/cstaniftyassignments/home/2019/reed-hummel-letter-frequency&#34;&gt;lesson&lt;/a&gt; which, from a CS point of view is similar to a set of lessons
I&amp;#39;ve been doing for a few years (&lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/&#34;&gt;post&lt;/a&gt;). I think it&amp;#39;s worth looking at
both assignments to contrast how you can have very different
approaches and emphases with similar core material.
&lt;/p&gt;
&lt;p&gt;
I did a session with my partner in crime, JonAlf on using GitHub as a
web presence. I think this approach could be a good way to introduce
students and teachers to Git and GitHub in a low friction manner. It&amp;#39;s
a good first step to using GitHub for program development. You
can use the GitHub web page to update a web page time and again and
each time leave a little comment about what you&amp;#39;ve done. It turns out
this is just a commit message - just like &amp;#34;real&amp;#34; programming with git.
I can&amp;#39;t speak to how good the session was - you&amp;#39;ll have to ask the
attendees. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m thinking of proposing a full blown workshop for next year&amp;#39;s CSTA
conference that goes through both how I use GitHub and also models the
process I use to bring my students from novice to comfortable user.
&lt;/p&gt;
&lt;p&gt;
Moving from the sessions, this year CSTA added a poster
session. Unfortunately, the posters went up shortly before the session and came
down right after and since I couldn&amp;#39;t get to the posters during the
official session I couldn&amp;#39;t really take them in beyond a passing
glance. I&amp;#39;m hoping that next year the posters go up early and stay up
for the duration.
&lt;/p&gt;
&lt;p&gt;
Some notes on the vendors area - wow - it was a far cry from two years
ago where there were just a handful in a hall. I think I heard that
there were around 60. There were the usual suspects - Google and
Microsoft, curriculum providers like CodeHS, BJC,  and PLTW, lots of robotics
stuff and organizations like NCWIT and the College Board. I was there
with the GitHub contingent so I spent most of my time at the
booth. The nice thing is that while I was there to talk to people
about GitHub I was free to give the real deal - my experience - the
good parts and the pain points. Also had plenty of time to talk CS and
CS Education in general.  
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;d also like to mention Devorah&amp;#39;s &lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;Blanket Statement&lt;/a&gt;
project. Crowdsourcing knitting a blanket for a child in need. 
&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;And the total is ... 44 blocks crafted during &lt;a href=&#34;https://twitter.com/hashtag/CSTA2019?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CSTA2019&lt;/a&gt; . 3 are not pictured as I still have to finish them off. Look for the final, finished product early next week. If anyone still has blocks, message me for my snail mail. Thank you all! &lt;a href=&#34;https://t.co/ZLDcEEK9ig&#34;&gt;pic.twitter.com/ZLDcEEK9ig&lt;/a&gt;&lt;/p&gt;&amp;mdash; BlanketStatement (@BlanketStmtProj) &lt;a href=&#34;https://twitter.com/BlanketStmtProj/status/1149798258002280448?ref_src=twsrc%5Etfw&#34;&gt;July 12, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
Somewhere between 20 and 40 attendees spent time with
Devorah at the GitHub booth putting idle hands to good use. Devorah
and I are greatful to GitHub for hosting us and for the CSTA
conference organizers for allowing this added activity. We&amp;#39;re hoping
it can become a regular activity at the CSTA conference.
&lt;/p&gt;
&lt;p&gt;
So, that&amp;#39;s my conference summary. I&amp;#39;m already looking forward to next
year in Arlington Virginia.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New(ish) Blog - cscheerleader.com</title>
      <link>https://cestlaz.github.io/post/new-blog/</link>
      <pubDate>Sun, 14 Jul 2019 09:05:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/new-blog/</guid>
      <description>&lt;p&gt;
Many of us know &lt;a href=&#34;https://twitter.com/cscheerleader&#34;&gt;Ria Galanos&lt;/a&gt;. Ria - a longtime friend and longtime CS
teacher who has been very active in the APCS community has started a
new chapter as a software engineer at &lt;a href=&#34;https://www.yext.com/&#34;&gt;Yext&lt;/a&gt;. Ria&amp;#39;s also started
blogging about it.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know the direction the blog will take but I&amp;#39;m sure it will be
influenced by Ria&amp;#39;s years as an educator. I&amp;#39;m also sure it will be
worth reading.
&lt;/p&gt;
&lt;p&gt;
This morning, Ria added an RSS feed to the blog so you won&amp;#39;t miss a
post. You can us a reader service like &lt;a href=&#34;https://www.feedly.com&#34;&gt;Feedly&lt;/a&gt; or if you&amp;#39;re an Emacs
wonk like me, &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-31-elfeed-3/&#34;&gt;elfeed&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
You can find Ria&amp;#39;s blog at &lt;a href=&#34;https://cscheerleader.com/&#34;&gt;&lt;a href=&#34;https://cscheerleader.com/&#34;&gt;https://cscheerleader.com/&lt;/a&gt;&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Enjoy.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2019 Preconference</title>
      <link>https://cestlaz.github.io/post/csta-2019-preconference/</link>
      <pubDate>Mon, 08 Jul 2019 10:41:36 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2019-preconference/</guid>
      <description>&lt;p&gt;
It&amp;#39;s Monday morning, 7:45AM local time. Being on East Coast time,
Devorah and I have already been up for about 3 hours, hit the gym and
our first cups of our chosen caffeinated beverages.
&lt;/p&gt;
&lt;p&gt;
Since it&amp;#39;s not unbearably hot outside  - a cool and dry  80 in the
shade  - we&amp;#39;re sitting outside. Devorah&amp;#39;s knitting another square for
&lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;Blanket Statement&lt;/a&gt; so I figured I&amp;#39;d write a few words about  what we&amp;#39;ve
been doing here in Phoenix leading up to our starting with our
conference later today.
&lt;/p&gt;
&lt;p&gt;
Whenever we travel for &amp;#34;business&amp;#34;  I&amp;#39;ll try to tack on a day or so to
try to soak up at least a little local flavor and there&amp;#39;s plenty of
local flavor in Phoenix. 
&lt;/p&gt;
&lt;p&gt;
After checking in to the hotel we hit the &lt;a href=&#34;https://www.phoenix.gov/parks/arts-culture-history/pueblo-grande/&#34;&gt;Pueblo Grande&lt;/a&gt; museum. It&amp;#39;s a
pre-columbian archaeological site. You can learn about the &lt;a href=&#34;https://en.wikipedia.org/wiki/Hohokam&#34;&gt;Hohokam&lt;/a&gt; who
used to live - see a bit how they lived and the intricate canal
systems they created. The outside path that toured the ruins was about
a half mile walk in the 105 degree hot sun but it was worth it. Inside
there were galleries with a few exhibits and a lot of neat
history. Well worth the visit. We also walked around &lt;a href=&#34;https://heritagesquarephx.org/&#34;&gt;Heritage Square&lt;/a&gt;
which had some original Victorian buildings but I wasn&amp;#39;t really super
impressed - probably had something to do with having by that time been
out in the heat for most of the afternoon.
&lt;/p&gt;
&lt;p&gt;
Yesterday, it was up bright and early to check out the &lt;a href=&#34;https://www.dbg.org/&#34;&gt;Desert Botanical
Garden&lt;/a&gt;. Wow - this is a must see. 
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/xno986ieH-u7i-QttsABbOM1wIorM2YW6tdJGJhBStz6DwjESPqcKblTZyyw9s7Dv42HbFPrYMxtn1wOGVcO4ZZpe-EWisz6MmRi_NoL26mVwk3VSkVViQBjCpl0Bt78Bh09LEyBulB42bVRD3EjMtmHPLSlc5crmTRRC2QOId3yO9Uz5qrFXdV1tJ55DVt0lk7d0MTeZN6DYoQOHHePVAY5y7hxpzoyfdoGcVUVZWntDsrizwj7UAfWTq1P35bhCi1gsrRIeWGxqCbkkSDeIpATF68yyx6r5_pK1cnQAUcoMsAefB5ZfeC9iZAMmUmgC1T5o1zuw9iFXUDjbtQQydiRd4v5wAhSM2rjYq2flut17A-XIn-pdE9-_3OsaMFoso0p0ANHEVwjMjNf6iMcz3uryl-NbAPX3EXtEfb71UEWw8ZzlPsFEoWavlWnw3srxcVblygpaDpXKdw2zhJLEWQihUxSDR-GcPXQXyIeGEopfJJMcVcc3tJRp0um-vMcgEiZDk3-HhPwpRbJ8_8hFU9jYRtxItQLNI2vm-QkpgLxQAE_-0kf0xuRY61_5ruBhVSh-SHMzITmB4ho14Tfx5RnSBRnAPSjRSGt6yDmtFp3RhAkXjE-KCg9pQ04RYLL7E1yfxGKfuMz5Q_poRqBnDDN8K9-A8PK=w1716-h1286-no&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; 
&lt;/figure&gt;
 
&lt;figure class=&#34;z_image_center&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/BZ6dFN3m8hrA0k707sl0oVesBrVkY5LjSFhXnegkMA2UGkr9IdecaAiM3BJQ_7_H13B6RatGYAwBFrQzXWBzFrLQX6Ujp8OOkmOaZ4zv7fc__ZrEAYswMHeImLbcP-JH5Sw7Zo6pl4z7BsnweAiJkaW_0ez6og2xwH3QneZm8kVSuJAak5os0MwKeiF5jIC74BWR6DrXJZRCyV3YP9xjXHtYAEH3AaDgQNt_1PtytRH9N1Y2eeHEAM4VW6m9oT48L_esn2s1rAp_ZS_rNjQjiAFmAq_QfekBpM9v99m_GCFeivrzDintpN22XPWvzSej1RL0MCbw59qD51WOmVvR6JWEs1SLMUs8Wfzw-PhBJ-PFIgWqNnLbq0K4ggSH-dCVtKUjkV8NkgjFQkPl-p2qaeGm7mn8dsxE7DtFZuEHz3NxQre_ywp2XPMfYJ6LpfvrBahgRqMEvUhOLwj_beo9FRazHiCLEckJ4o5DCumP0zP0CZB_orbZrj27A7qDwWV1HEEYUQQeYgnB7snV3_2wCL_q29FeubAh-qnIY1OcY9GoGnxtu-UPqPJL4YaS3fLj-HqhRt--Y04zU1qcwvwmwJY6ivPbubbj33FQYNorrnFk7QeaL_MxNxt8i5wCjmWPuW5ku5UDQ6YnUzDlOs7R6ONHDsYiKBn0=w966-h1286-no&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/5_rLpviB7wjdnS5kY_z-kXLbOhZFbt9fsiXaCEFVXwKQx0HbUTQBLCu18Bt8nJD4OUTKZAeavAcV5I7JgOq9fuwrArYZtKaiQ2q9baeiUn32BgZ2vNTMqhv9geOpS6g3jGdXCRiVY8DooPgKBzvdjgByGWWaoWXEAyhNoblC4BsNa8XXHCIXEmXkQ5j6sc70t7vpIJsiG2KCmhJ3rgLPDI-7DqYB9ji3a48bPX6-jIwlGyIuB6F2onLBvz7XVb7iw6qkW_Cd_1mHEk3v-jWWG3i-kCc_g8-kbCkF115b-L8H7Ub-8c5LGW_OzvnG29X3RzdKwzcZflxC_4JsfiKVKF5BxJue-WVMyKraxe8gOvY8GBpxSGCIGTCzm-9HXRlstHhrVVwcTyHXajW6bVGOdBmcnNLnnGr0Y0V7P3X2NTfSrVrvWqIxDsxb2SPbjMz7al3iyipy41FmO9yjKMIav5bAf6Ue5zJTGYnQ4lhzxFxJvL-K27REzhh55XvZcrGALmF72utlDpZ1GE7eBLbbPimjkW9nmoIdG_o2CujHwkX3yt4X_n9xfN6q7WSKL9RBmO6c31KSTcXJ1lSRn4GysqQykWa8GN9Flf6pKSUni5eADkFM2NLeyHIwu4ZENoBxvlbWb-zpL59tpX05PB9eUFIqw6Fzxdwx=w284-h213-no&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; 
&lt;/figure&gt;
 
&lt;figure class=&#34;z_image_center&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/GOhGZJV2NqgaXzoon9-XVbf6S8OlBjCru2qC_lr906ccTvP6OOpKh2wnvY9xauP-ImD0_0FxcibNUOiTQRoxb7IUxwZ4iOPN_tMVUBkYwoq7-sSL43Pg6NYpm6TQcCs8UU76z5YFOaLAoFaYHdcLL8wEq67Hg_xrRN0vWbrbIbM3c2IyB6RzpgwWE0tdR6exWuZFvUlarxRZOrjeAFzPuwfnr1IkDdZX5qSDaMIVodUpGINE8Y9weG_UVF4X6rS7-3eonZSx5ZttXcApJB4fecI2dxnAvoWMyj0UpfRKWliJhCkHgy2T4QPSx1WX8MtoJ3kLM_nNxz2rvB_ACCAuP_VecNYszuio-8Nb5R3CCztKOL6t5C5j2WRanIpi0Gy5Z8AaGC3Rseo82Y1nc6kf1BGstzY6VPvZSn-4wXgOLgwtbijS5gVCDX2GqsjRjDnGu7d5WGWdXS1G4jFLaOWwukt79E1fczY6rdeNV-B05WvaSgn-RloghbKacI35-bwKncZivH214s3hwvcVcykOek6gsIfVJfLOyL3qlMENgnOlt0IvYNTs7FNZpyVAAqJTgYkTRwV6h1GnaqFcyFlTCrk6AEjZ3dT7Ur50UYYBYeTdbJekYuNMH0lHP-roggHEDt6N5EHJykWjfdfwYc3QRCjMQRM7CRHP=w1716-h1286-no&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Did I mention it was really hot out?
&lt;/p&gt;
&lt;p&gt;
When we started at 7:00am it wasn&amp;#39;t so bad out - about 85 and only a
touch humid but after a couple of hours we needed some AC. We
originally wanted to hike over to the &lt;a href=&#34;https://www.tripadvisor.com/Attraction_Review-g31310-d126770-Reviews-Hole_in_the_Rock-Phoenix_Arizona.html&#34;&gt;Hole in the Rock&lt;/a&gt; but were by
that time leery of the heat so we took a Lyft back into town for some
breakfast.  We chose a place but as we approached there was a long
line outside. Our driver said &amp;#34;I know a much better place&amp;#34; turned off
the meter, and took us to &lt;a href=&#34;http://hob-nobs.com/&#34;&gt;HobNobs&lt;/a&gt;. It was the right choice. Service
was a bit slow but good food in a comfortable environment.
&lt;/p&gt;
&lt;p&gt;
We weren&amp;#39;t sure what to do next when I noticed Sarah Judd tweed that
the Museum of Musical Instruments was free for teachers. It&amp;#39;s about 30
minutes out of the downtown but we took the trip. I was a little irked
that the web site said that &amp;#34;educators&amp;#34; were free during the month of
July but they didn&amp;#39;t accept my Hunter ID as a teacher. They were
limiting the free admission to K12 teachers. Still, the museum was
terrific. Gotta love a place that doesn&amp;#39;t take themselves too
seriously:
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/tiQyN-6h0nqoh2AZKKrJrj3xOdsm0Dx6AogCAbRd5uU8mtAcdB2E2ZOeL6BQmS0TTR2yyUyf7wG4x61Vyw8Wsl82h8d3ZPh3FVXBlK6wyjoqAxAbwJRZ3fBxZCRlehQy6oqR96tTEqsEyHejf_Bo811d8ha3uCOgSnAgQ8WaIBRNSe0sAj93RUvOSz_LIRq5vfaYNni0NN61_hKaVYxXgAu1LcrZ5Ad5MACqq61M6Tmw775cCOqQMpkSWBql3cgLo5sleCsd9UY0c5iwjf1ep58KAAof_URDfavmKVQYrsqgbsd_-pMsaf08cmXQBG3SKwNceHynzSQ0dUpsT9P0-TowrAZGMcY2DSwm8GUSn6igFQ4mm4tZKGxtMuz1V1b-sw_ASySCAVm0kKHlqbeeE0xDC15-mLlsjg-MNJq4rV1xQ17Mi3R-g11b-NCQjap6orZUN_k9mM2wW-yDnmGwnCbWNO41Gksv67TO3DrKAagwcXQWX1qnxc7AjBt_q8CSANemT0n0JCoKMYZB7vTkaBn-GHPmYbvQzCJwb6UsVsYdkwwJMDaSxPla-ZO054pYWP0cQbnCyyMmj4Xbujy6L679-A_RFd2t-KiGAxDXkMfurVRwor5KL_rFqeoUzv6zlTKW8B--VxlBggr6CfloKd6gzIT5CG6F=w966-h1286-no&#34;
         alt=&#34;air guitar&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; &lt;figcaption&gt;
            &lt;p&gt;air guitar&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&#34;z_image_left&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/Azvg1hbIPjQUShiw8iSHTNzoRtLxT5JuR-KqkNgefyOMmWL0qWo3aCMSqdnMtx4rubwDs6W868DrlAVe2Eu_RR22Ue1LmEok8w7ti1ssmW_j8D_WgAbzTMSHTVHfLPqePbuBxndlPWajZ6LkboJZNlDqQV-LC2Re92ZZpRr_UhMNqS-94O9fnkKmuwJjnIBki3OMkHrcTvle0Sg_FtRRlwj8-KHpuVJRlhwNr1b3ZZ3c339wx3VkHfsVdG92yOe3Jb2bNJCnTlg2xC1ZXQGquREJT1mKWOdPxq8QWuidb68mvC-q5ztNDcS0SjjyD82lk8juEUo4xh6acV7ND7iCL1B_GVkZaybKLaaApEOwvnHznJjWfvaKulgrl-WLVCj69qQhKc2vLzAOwNpGpeEQEY_gvzZ70fh26kRjR96jozDvBF7PdWFlWgLcCdKYRQ1QDCp-HlvNCkfLPxmhk2KG_UmyL2tV6HQ8Z06ZcHr9U5Oc38Iw1ck3jHzOSohrLbhKIT_d3IT1Wg5r_p19lyO2rmObjjP1boo2lQ9Eqmr9IhvXMfQciUfg8pKvEoDNkv6cohyOfXF-JIUJb-3L3QzszXnFRBGHsEJbPCUsduuugO7OrAQBYQqJKWNUtKuePQx_Lg2krgssxeESL03SIURpSC4EVxBb64nF=w966-h1286-no&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&amp;lt;br clear=&amp;#34;all&amp;#34;&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Exhibits on instruments and musicians. If it weren&amp;#39;t at the end of a
long touring day I think we could have spent another hour or two
there. 
&lt;/p&gt;
&lt;p&gt;
We ended up getting a locally made menorah for Natan before we left:
&lt;/p&gt;
&lt;p&gt;
&lt;figure class=&#34;z_image_center&#34;&gt;
    &lt;img src=&#34;https://lh3.googleusercontent.com/5wLUyLwvlQ-R_5v6gRRGHm9JpfA5JxlJYZhLuZ2PQKFjBfVAUYaL6TXqEswVw9pF0Us3i88f2_98QUx5D1bHfme6O4Z2M_RSfZgRMDx9lW6mSaTNhsqZMeqoq8yCpD-02qaKFcxu3lJbYF5ust9bC5ldYo1EE2pwVL3OcdDr-OsfvBGjM98wdcEV4qjQycQiPenlfej_7Whu04Gsex-z6195cdaJz4Zrf-_A8bteB60XIDuCIVtEdRVsv_2z39fa5eGQbHW1Ep92PVN-WNcofap4l3RzdJQgItI_JfPpNVcnqeEcZeYSNBh89e9t5sIhHqyZbTZaJlqOLFZySh1b8ks1KCNpvVMivDIZVo9XI8wjF_xn88vOtAIrI7pQa6AugKiIuFLKtwPtLMzdA82R5vfx7mIqyUq4RPoCtvIqP9zzKctGD5pXt8GdYIiTiPSYXiemSykZR-Z8CXRLCOyfewF6IkAZaaSOEcT-rzdDXW0Oi5XB6S7MJDNvp7tn55MwRcBGorBXJrKmtyBCAiZ6FlQlSB4EZA3vhkoPKizAua4-ae9GBVThdtaF8RHSGG9JRazLzOlpUfVH9c-bkqymZmcznCoxz8s0-kBActC1faM9qykxhcJSlkHInIjH0g0U-xr7n3z0WJFJy2OzTy3KLJOtvkm0Vc7B=w1716-h1286-no&#34; width=&#34;200&#34; height=&#34;200&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
Yesterday concluded at the GitHub for Education reception where I had
a great conversation with Nick Stoyas about his efforts in Chicago to
scale out their CS programs and thoughts on internship opportunities
for high school students. I hope to write more on that later. 
&lt;/p&gt;
&lt;p&gt;
In about 45 minutes we&amp;#39;ll head out to &lt;a href=&#34;https://heard.org/&#34;&gt;The Heard Museum&lt;/a&gt; which is all
about Native American art and culture.
&lt;/p&gt;
&lt;p&gt;
That should bring us to lunch today and then conference time!!!
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re reading this and at the CSTA2019 - hope you also get or got
to see some sites and swing by the Github booth to say hi. If not, if
you have a chance to get out to Phoenix, preferably in the cooler
months, I would certainly recommend it.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Planning For CSTA 2019</title>
      <link>https://cestlaz.github.io/post/planning-for-csta-2019/</link>
      <pubDate>Thu, 04 Jul 2019 17:26:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/planning-for-csta-2019/</guid>
      <description>&lt;p&gt;
Looking forward to flying out to Phoenix for CSTA-2019 Saturday
morning. The conference doesn&amp;#39;t officially start until Sunday, Monday
for me since I&amp;#39;m not doing any of the pre-conference workshops. We&amp;#39;ll
have most of Saturday as long as we&amp;#39;re up to it, Sunday, and Monday
morning. Actually, there is the GitHub reception on &lt;a href=&#34;https://csta-github-meetup.confetti.events/&#34;&gt;Sunday evening&lt;/a&gt; so
that&amp;#39;s kind of official conference stuff.
&lt;/p&gt;
&lt;p&gt;
As to the conference, I&amp;#39;m super looking forward to it. To me CSTA is
 a people conference. SIGCSE by contrast is more of a sessions
conference. SIGCSE is bigger and less intimate. I have a great time
there catching up with friends from across the country and when my asocial
self manages, making new ones but for me it&amp;#39;s more content/session
driven. There are always a bunch of sessions where I say to myself &amp;#34;I
really should go to that.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
CSTA is more intimate so it seems easier to meet and talk to new
people, even for asocial me. On the other hand, I find fewer &amp;#34;must
see&amp;#34; sessions. This makes sense though. I no longer
teach K12 and I had already designed and taught complete course
sequences going from beginner through college level before the first
CSTA conference.
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t get me wrong. There are lots of great sessions. It&amp;#39;s more that
many of the sessions I&amp;#39;m interested in are more &amp;#34;that looks cool&amp;#34; or
&amp;#34;interesting&amp;#34; rather than, &amp;#34;I really need to see that for what I&amp;#39;m
doing or where I&amp;#39;m at in my career.&amp;#34;  Maybe it&amp;#39;s just that it&amp;#39;s really
hard for the sessions to match the value added from CSTA&amp;#39;s &amp;#34;hallway
track&amp;#34; which I think is through the roof.
&lt;/p&gt;
&lt;p&gt;
Here are the sessions I&amp;#39;m zeroing in on:
&lt;/p&gt;
&lt;p&gt;
On Monday, the &amp;#34;Creativity in the K-12 Computing Classroom&amp;#34; BOF looks
interesting so I&amp;#39;ll probably try to hit it. On Saturday, I&amp;#39;m curious
about the &amp;#34;Advanced CS Concepts in High School: One Tool to Rule Them
All&amp;#34; session. Based on the description, I&amp;#39;m curious how much is about
advanced concepts and how much about tooling and resources that let
you get to interesting data and applications. The &amp;#34;How to teach AI
across K-12&amp;#34; session could also be interesting.
&lt;/p&gt;
&lt;p&gt;
JonAlf and I will be doing our session on using GitHub in the next
block so I pretty much have to be there :-).  In the afternoon, I&amp;#39;m
looking at the &amp;#34;You can teach Machine Learning to HS students&amp;#34; mostly
because I&amp;#39;m curious as to how the presenter&amp;#39;s thoughts on the subject
can add to what I&amp;#39;ve done in my classes. Actually, that&amp;#39;s also why I&amp;#39;m
interested in the earlier AI session. I&amp;#39;m also intrigued by Ed Campos&amp;#39;
Bootstrap Data talk but I won&amp;#39;t directly be going down that road in
any classes soon so have to prioritize. 
&lt;/p&gt;
&lt;p&gt;
For the last block, I&amp;#39;m intrigued by the Embroidery talk but Nifty
Assignments will probably win out.
&lt;/p&gt;
&lt;p&gt;
I haven&amp;#39;t looked over Wednesday&amp;#39;s schedule yet - I&amp;#39;ll leave that for
Tuesday evening. 
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t think I&amp;#39;ll be going to most of these sessions, I&amp;#39;ll probably
spend a good amount of time at the GitHub booth hopefully talking shop
with my fellow educators. 
&lt;/p&gt;
&lt;p&gt;
Besides, when I&amp;#39;m at the GitHub booth I also get to hang out with
Devorah (my wife). Did I mention, she&amp;#39;s doing a very cool
&lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;knitting/crocheting for charity&lt;/a&gt; project that you all should check out?
&lt;/p&gt;
&lt;p&gt;
Hope to see all my old friends and meet many new ones in a few
days!!!!
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Math isn&#39;t always fun but you can do fun things with math</title>
      <link>https://cestlaz.github.io/post/math-not-fun/</link>
      <pubDate>Mon, 01 Jul 2019 09:08:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/math-not-fun/</guid>
      <description>&lt;p&gt;
Garth Flint recently wrote another &lt;a href=&#34;https://gflint.wordpress.com/2019/06/25/programming-and-math-danger-will-robinson/&#34;&gt;post&lt;/a&gt; talking about some of the PD
going on in his neck of the woods. Garth talks about the disconnect
between the professors putting on the PD and what goes on in the K12
classrooms of the attending teachers. Here&amp;#39;s the money quote:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
“Why do all college CS profs think everyone loves math? Want to turn
kids off to programming? Throw math at them.”
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To a certain extend it makes sense - professors are content
specialists. Getting a doctorate and doing research are deep dives
into specific subject area specialties. What&amp;#39;s more, once you get
beyond teaching early for-major classes, you&amp;#39;re also teaching a
population that&amp;#39;s just as passionate about the subject as the
professor is. While it&amp;#39;s true that there are plenty of non-major
courses and non-majors who take higher level courses, college
educators live much more in a subject specific echo chamber than K12
educators.
&lt;/p&gt;
&lt;p&gt;
At the high school level, it&amp;#39;s very different. Years ago my principal
sat in on a lesson. I have no recollection of the lesson but
afterwards she commented that at one point I mentioned something that
I found cool. &amp;#34;So what&amp;#34; she said. How does that make it cool for the
kids. While it&amp;#39;s true that our passion can be infectious she was
right. It has to be cool for them.
&lt;/p&gt;
&lt;p&gt;
Since so many CS Profs and even HS CS teachers have strong math
backgrounds and really like math, that becomes a frequent fall
back. Truth be told, although I&amp;#39;m not a math guy, I&amp;#39;ve fallen back on
that myself. I&amp;#39;ve done the quadratic formula, correctly derided in
Garth&amp;#39;s post and the traditional mathy recursion problems.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m guilty of this but not apologetic. It&amp;#39;s ok to do some mathy stuff
becuase there isn&amp;#39;t a single magic bullet. Some kids will indeed love
math, some games, some text processing, some art, some music and some
other. There are a lot of domains in which we can apply programming
and CS solutions and it make sense for us to use as few or many as
necessary to best reach our kids.
&lt;/p&gt;
&lt;p&gt;
Math, though, is a little different than domains like games or
music. We don&amp;#39;t need games or music to program up solutions to
problems but we sometimes do need math.
&lt;/p&gt;
&lt;p&gt;
So, what do we do?
&lt;/p&gt;
&lt;p&gt;
At least we should try to use math when there&amp;#39;s a point to it. Maybe
it won&amp;#39;t be loved but at least there&amp;#39;s a chance at it being
appreciated.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at the quadratic formula:
&lt;/p&gt;
&lt;p&gt;
Given a quadratic equation in the form: \(ax^2+bx+c=0\)
&lt;/p&gt;
&lt;p&gt;
You can find the roots using the quadratic formula: 
&lt;/p&gt;
&lt;p&gt;
\begin{equation}
x = \frac{-b\pm \sqrt{b^2-4ac}}{2a}
\end{equation}
&lt;/p&gt;
&lt;p&gt;
What&amp;#39;s so cool about that? How about the discriminant? That&amp;#39;s the
\(b^2-4ac\) part. What&amp;#39;s the point?
&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t really appreciate either until much later when I studied
computer graphics. In computer graphics, there&amp;#39;s a technique called
&lt;a href=&#34;https://en.wikipedia.org/wiki/Ray_tracing_(graphics)&#34;&gt;Ray Tracing&lt;/a&gt;. It&amp;#39;s typically results in very shiny surfaces and
historically, ray traced images have included lots of spheres. When
you see an add with really smooth shiny stuff, particularly ones
with bright specular highlights, it&amp;#39;s probably ray traced. I believe the movie
&amp;#34;Cars&amp;#34; was the first movie that was entirely ray traced.
&lt;/p&gt;
&lt;p&gt;
I wouldn&amp;#39;t do ray tracing with a class until it had at least pre-calc
level math maturity but for an advanced group, it&amp;#39;s very
approachable. 
&lt;/p&gt;
&lt;p&gt;
The process involves tracing rays form the viewers eye through each
point on the screen and seeing what object it hits first. Once it
figures that out, it spawns rays from that point to each light source
and sees what light sources it hits. It also spawns rays for
reflection and refraction.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s say you have a 1000x1000 screen. That would be 1,000,000 rays
but since you might actually &amp;#34;supersample&amp;#34; - that is, subdivide each
pixel on the screen into 16 subpixels and trace each of those rays and
average the result. That&amp;#39;s a lot of rays to trace and it can be crazy
slow. I wrote my first ray tracer in the mid 90s. It didn&amp;#39;t super
sample and was pretty simple.  I started a render the night I finished
it. By the next morning, it had only completed three lines. 
&lt;/p&gt;
&lt;p&gt;
Since for each ray you have to figure out which object it hits first,
you&amp;#39;ve got to do a lot of math to figure out ray/object intersections. It
turns out that the easiet is probably the ray/sphere intersection. It
might seem that intersecting a box might be easier but intersecting a
box is actually a lot of work. You have to:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Note that a box is really 6 sides each being on an independent plane
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Figure out which plane the ray hit first
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Figure out if that intersection point is bounded by the four sides
of that face of the box.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
For a sphere, you have to go through a bunch of substitutions and
simplifications but you end up with a single simple equation to solve.
A quadratic equation and for this you can use the quadratic formula. 
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;re still left with a huge number of rays to compare
with a huge number of spheres. 
&lt;/p&gt;
&lt;p&gt;
This is where the discriminant comes into play. The discriminant tells
you the nature of the roots of the equation. For example, if the discriminant is
negative, you have complex roots. Geometrically, if the discriminant
is negative, it means the ray you&amp;#39;re testing misses the sphere
entirely. Here are the possibilities;
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Discriminant&lt;/th&gt;
&lt;th&gt;Means for a sphere / ray intersection&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt; 0&lt;/td&gt;
&lt;td&gt;Ray misses the sphere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;= 0&lt;/td&gt;
&lt;td&gt;Ray is tangental to the sphere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt; =&lt;/td&gt;
&lt;td&gt;Ray intersects the sphere at two points&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Since most rays will miss most spheres it means that instead of
solving a bagillion quadratic equations with the square root and the
division, you just do the discriminant and throw most of them away.
&lt;/p&gt;
&lt;p&gt;
Then, your solutions also tell you something useful:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Roots&lt;/th&gt;
&lt;th&gt;Means&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;double root&lt;/td&gt;
&lt;td&gt;Ray hits sphere at one point&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;both negative&lt;/td&gt;
&lt;td&gt;Ray is behind the viewers eye&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;both positive&lt;/td&gt;
&lt;td&gt;Ray is in line of sight - choose the smaller root for intersection point&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;one negative one positive&lt;/td&gt;
&lt;td&gt;Eye is inside the sphere&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
This was the first time I really &amp;#34;got&amp;#34; how useful something like both
the quadratic formula and the discriminant in particular could be. 
&lt;/p&gt;
&lt;p&gt;
While this isn&amp;#39;t a lesson for newbies, there are a number of areas
where we can do something neat that uses math rather than doing math
for it&amp;#39;s own sake.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve &lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/&#34;&gt;written&lt;/a&gt; about using the distance formula for recommendation
systems and an intro to decryption. Also using &lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-3/&#34;&gt;statistics&lt;/a&gt; for question
answering. Other approachable programming projects that can make math
more interesting would be clustering or a Bayes based classifier.
&lt;/p&gt;
&lt;p&gt;
If we look, we can find lots of places where teaching and using math
makes sense. This way, the math and the CS both support and reinforce
each other. Much better of a way to do it than merely because I
thought it was &amp;#34;cool.&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Crochet at CSTA</title>
      <link>https://cestlaz.github.io/post/crochet-at-csta/</link>
      <pubDate>Sat, 29 Jun 2019 05:03:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/crochet-at-csta/</guid>
      <description>&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;http://blanketstatementproject.com/img/yarn-logo.jpg&#34; alt=&#34;http://blanketstatementproject.com/img/yarn-logo.jpg&#34; title=&#34;http://blanketstatementproject.com/img/yarn-logo.jpg&#34; /&gt;&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Ok, probably more knitting but Crochet at CSTA was the line used in
the newsletter and it sounds better.
&lt;/p&gt;
&lt;p&gt;
As some of you know, my wife Devorah is all about the fiber
arts. Knitting, spinning, dying, weaving, the works. We&amp;#39;ve got a loom,
two spinning wheels, two bobbin lace pillows, and bins and bins of
deconstructed sheep, llamas, alpacas, and angora bunnies. I even got
her some straw once to spin into gold. I
figured as teachers it would be a good retirement plan.  That never
happened.
&lt;/p&gt;
&lt;p&gt;
At one point at a conference we attended, Devorah noted that she
wasn&amp;#39;t the only one knitting and an &lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;idea&lt;/a&gt; was born. She encouraged
knitters and crocheters to make 7x9 blocks and at the end of the
conference she put it together into a blanket a it was donated to
&lt;a href=&#34;https://www.projectlinus.org/&#34;&gt;Project Linus&lt;/a&gt; who got the blanket to a child in distress.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;http://blanketstatementproject.com/img/knitted-squares.jpg&#34; alt=&#34;http://blanketstatementproject.com/img/knitted-squares.jpg&#34; title=&#34;http://blanketstatementproject.com/img/knitted-squares.jpg&#34; /&gt;&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
You can read up about how this all went down &lt;a href=&#34;https://cestlaz.github.io/posts/knitting-tech-conference/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cestlaz.github.io/post/catskills-blanket-2018/&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Now, thanks to the CSTA and &lt;a href=&#34;https://twitter.com/jakebask&#34;&gt;Jake Baskin &lt;/a&gt;in particular along with the
&lt;a href=&#34;https://twitter.com/GitHubEducation&#34;&gt;GitHub Education&lt;/a&gt; team led by &lt;a href=&#34;https://twitter.com/mohardek&#34;&gt;Moira Hardek&lt;/a&gt; we&amp;#39;re bringing &lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;Blanket
Statement&lt;/a&gt; to CSTA-2019. 
&lt;/p&gt;
&lt;p&gt;
If you knit or crochet, swing by the GitHub booth, grab a ball of yarn and
some needles (or a crochet hook) and knit away. Bring completed blocks
back to Devorah at the booth. 
&lt;/p&gt;
&lt;p&gt;
Don&amp;#39;t know how to knit or crochet? No problem. Devorah will teach
you. She&amp;#39;ll be at the GitHub booth for the entire conference.
&lt;/p&gt;
&lt;p&gt;
In addition to all the amazing CS that were all going to do during the
conference, let&amp;#39;s go old school and knit a blanket or two for charity.
&lt;/p&gt;
&lt;p&gt;
For more details, check out the &lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;Blanket Statement&lt;/a&gt; home page or just
drop me a line.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSTA 2019 - Using GitHub as a CMS</title>
      <link>https://cestlaz.github.io/post/csta-2019-github/</link>
      <pubDate>Wed, 26 Jun 2019 12:09:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/csta-2019-github/</guid>
      <description>&lt;p&gt;
With ISTE ending, the next big event for CS treachers is the annual
&lt;a href=&#34;https://www.csteachers.org/page/2019conference&#34;&gt;CSTA Conference&lt;/a&gt;. I first attended two years ago in Baltimore. Last
year the conference, in Omaha was bigger and better in every way
imaginable. I expect this year to be the best yet.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t go to a lot of conferences so I don&amp;#39;t have much to compare
CSTA with but I like the fact that it&amp;#39;s is about half the size of
SIGCSE. At about 1000 attendees it still feels small enough to be
intimate but at the same time large enough so that there&amp;#39;s something
for everyone and plenty of people to learn and share from and with.
&lt;/p&gt;
&lt;p&gt;
Just like last year, I&amp;#39;ll be spending a lot of time at the GitHub
booth so if you want to talk about how to use GitHub to support your
students make sure to stop by and say hello.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll also be giving a session with my long time partner in crime
JonAlf. 
&lt;/p&gt;
&lt;p&gt;
Most of us know that Git is a version control system and that
GitHub is pretty much the industry standard platform for using
Git. Many of us also know that GitHub for Education has a great
toolset to support using GitHub with your classes. Tools that help
organize, distribute, collect, and assess assignments.
&lt;/p&gt;
&lt;p&gt;
Fewer people know that GitHub can be used to really easily create a
web presence and as a way to distribute class material and you don&amp;#39;t
even have to use the command line if you don&amp;#39;t want to. I use GitHub
as a lightweight CMS with my classes, to host full blown web sites,
and also to host this blog.
&lt;/p&gt;
&lt;p&gt;
Come join JonAlf and me on Tuesday at 11:15 in West 106C and we&amp;#39;ll
show you how you can use GitHub as a web presence as well.
&lt;/p&gt;
&lt;p&gt;
I also want to briefly mention that my better half, Devorah, is going
to be with us at the GitHub booth running a really cool
knitting/crocheting for  charity project (thanks to both CSTA and
GitHub for facilitating this). I&amp;#39;ll write more about it in a day or so
but if you&amp;#39;re going to be at CSTA2019 and you knit or crochet or want
to learn, you can check the project out here:
&lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;&lt;a href=&#34;http://blanketstatementproject.com/&#34;&gt;http://blanketstatementproject.com/&lt;/a&gt;&lt;/a&gt; (note that the site is hosted on
GitHub and the source is &lt;a href=&#34;https://github.com/blanketstatementproject/blanketstatementproject.github.io&#34;&gt;here&lt;/a&gt;). 
&lt;/p&gt;
&lt;p&gt;
GitHub is also holding a pre-conference reception on July 7 from
5:30 - 8:00. You can sign up &lt;a href=&#34;https://csta-github-meetup.confetti.events/&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Hope to see many of you in a couple of weeks in Phoenix.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proof By Authority</title>
      <link>https://cestlaz.github.io/post/proof-by-authority/</link>
      <pubDate>Tue, 25 Jun 2019 07:00:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/proof-by-authority/</guid>
      <description>&lt;p&gt;
No,I&amp;#39;m not talking about&lt;a href=&#34;https://en.wikipedia.org/wiki/Argument_from_authority&#34;&gt;Argument from Authority&lt;/a&gt; - something that very
much plagues CS Education and education in general where an annointed
few who may, or may not really know what they&amp;#39;re talking about are
given creedence because they&amp;#39;ve been there the longest, work for the
companies with the biggest names, have the economic backing  or
otherwise have been given the stage. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m talking about Proof by Authority which I fondly remember from
those silly &lt;a href=&#34;https://www.cs.hmc.edu/~fleck/proof.html&#34;&gt;Proof techniques&lt;/a&gt; lists that went around in the
day. Techniques like:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Technique&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Proof by Intimidation&lt;/td&gt;
&lt;td&gt;Trivial&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Proof by example&lt;/td&gt;
&lt;td&gt;The author solves for n - 2…&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Proof by funding&lt;/td&gt;
&lt;td&gt;How the Bill Gates Foundation be wrong&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
and many many more.
&lt;/p&gt;
&lt;p&gt;
Proof by authority was basically &amp;#34;I saw Dr. Gershon in the elevator
and she said….&amp;#34;
&lt;/p&gt;
&lt;p&gt;
What made me think og this was this Tweet by &lt;a href=&#34;https://twitter.com/b0rk&#34;&gt;Julia Evans&lt;/a&gt;:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;i&amp;#39;m not
sure if this advice is too obvious/basic but I really like to approach
confusing debugging situations by first looking at where my
understanding of the system is fuzzy, not by immediately trying to
tackle the bug&lt;/p&gt;&amp;mdash; 🔎Julia Evans🔍 (@b0rk) &lt;a
href=&#34;https://twitter.com/b0rk/status/1143313949640810498?ref_src=twsrc%5Etfw&#34;&gt;June
25, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I don&amp;#39;t know Julia personally, but we have mutual friends and I&amp;#39;ve been following
her online for a while. She makes cool &amp;#34;zines&amp;#34; and interesting blog
posts about a variety of tech type topics leaning towards the systems
side. Her latest post on &lt;a href=&#34;https://jvns.ca/blog/2019/06/23/a-few-debugging-resources/&#34;&gt;debugging&lt;/a&gt; is well worth a read.
&lt;/p&gt;
&lt;p&gt;
What caught my eye was &amp;#34;I&amp;#39;m not sure if this advice is too
obvious/basic…&amp;#34; It isn&amp;#39;t. As an educator I&amp;#39;ve found that to others,
what&amp;#39;s obvious to us is not always obvious or clear to others. What I
also got to thinking about was the fact that if a student follows Julia,
they&amp;#39;re, in many cases, more likely to listen to her rather than her
teacher because Julia&amp;#39;s a known and respected expert in the field and
a teacher is well, just a teacher. 
&lt;/p&gt;
&lt;p&gt;
This further reminded me of something that happened early on in my
career. I was a reasonably popular teacher but I didn&amp;#39;t have that much
of a reputation being fairly new. I would try to add real world  best practices to
my classes but I could tell that many of the students weren&amp;#39;t really
buying it. Mid semester, a friend came to town. He was a long time
Microsoft employee. He started right after college in the late 80&amp;#39;s
and had been there ever since. He gave a guest talk in my classes. 
&lt;/p&gt;
&lt;p&gt;
One of the things I remember Danny saying in the class was that &amp;#34;Stuy
wasn&amp;#39;t special because of the teachers, but rather because of the
students.&amp;#34; He was right, but I, um &amp;#34;Thanks, Danny, you know, I&amp;#39;m a
teacher and right here in the room :-)&amp;#34; On the other hand, in later
talks he always did say to listen to what I had to say. I guess during
the first talk he didn&amp;#39;t really know what I brought to the table as a
teahcer.
&lt;/p&gt;
&lt;p&gt;
The other thing is that Danny talked about a number of best practices
both in his talk and during Q&amp;amp;A. In all cases, what he said mirrored
what I had been telling my students all year and none of it was
planned.
&lt;/p&gt;
&lt;p&gt;
Not only did the kids pay more attention to what Danny had to say than
what I had previously tried to say but from that point on, they paid
more attention to my asides on what is done in the &amp;#34;real world.&amp;#34; I had
been authenticated by a top level Microsoft engineer. Proof by
Authority.
&lt;/p&gt;
&lt;p&gt;
Since those early days, I&amp;#39;ve developed my own reputation. My students
graduated and went on to success both in and outside of CS. They
both provided the information I needed to know how best to prepare my
students and also verified that I was doing it. Over time I needed
outside verification less and less but was able to get and rely on
outside information more and more.
&lt;/p&gt;
&lt;p&gt;
When I saw Julia&amp;#39;s tweet it made me think that having respected
industry people share their thoughts on what works for them in clear
concise ways is not only valuable directly but can also be of value
indirectly when used wisely by teachers.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MongoDB World 2019</title>
      <link>https://cestlaz.github.io/post/mongodb-world/</link>
      <pubDate>Tue, 18 Jun 2019 19:35:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/mongodb-world/</guid>
      <description>&lt;p&gt;
For those of you who don&amp;#39;t know, MongoDB is a very popular NoSQL
database. NoSQL  is an overarching term describing databases that
are not relational and don&amp;#39;t implement Structured Query Language
(SQL). In a relational database your data is stored in tables with
columns - think spreadsheet where each row of the table is a record in
the database. You link tables together via a common field or row
name. NoSQL databases work differently. 
&lt;/p&gt;
&lt;p&gt;
MongoDB is a document store. In MongoDB a document is a &lt;a href=&#34;https://json.org/&#34;&gt;JSON&lt;/a&gt;
object. Essentially a Javascript (or Python) dictionary. As a result
you do things differently. I plan to write up something more on the
differences between SQL and NoSQL in the near future.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been using MongoDB on and off for a number of years. I use it for
personal projects and also in the software development course I taught
at Stuy. The community edition is free and easy to install and it&amp;#39;s
very easy for a beginner to get started.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s say you wanted to store information about a students. You might
create this dictionary:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  student &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Last&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hugginkis&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;First&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Amanda&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ID&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;1245&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Homeroom&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;5A&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Schedule&amp;#39;&lt;/span&gt; : [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Eng&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Math&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Gym&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CS&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Lunch&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Physcis&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Band&amp;#34;&lt;/span&gt;]}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You add this to your database like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;students&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(students)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Later, you can query for all the students in Homeroom 5A:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;db&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;students&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Homeroom&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;5A&amp;#39;&lt;/span&gt;})&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Super quick and easy. It also comes with a nice REPL - essentially a
Javascript interpreter -  to play with.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve spent the last two days at MongoDB World 2019. A great conference
if you want to get up to speed on MongoDB. I left reminded of a number
of great MongoDB products that I hadn&amp;#39;t really used and a few new ones
they&amp;#39;re just launching:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Atlas
This is their DB as service. Don&amp;#39;t want to administer your own
installation? Just spin up an Atlas cluster. The free tier is plenty
generous and you and your students can get up and running in under
10 minutes.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Compass
Back in the day you either interacted with MongoDB pragmatically
using a language driver or used their REPL shell. Compass is a
complete fully functional GUI. It can connect to your database, a
remote one, or an Atlas cluster. A game changer for database
management
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Charts
This is really cool. You link MongoDB charts to an Atlas cluster and
then can interactively build dashboards and visualizations. You can
then embed the visualizations into your own web projects. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Field Level Encryption
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Encrypting passwords for storage and similar practices are important
but can be aslog. MongoDB now takes care of this for you. You can, for
instance, tell your database to encrypt the password fields and your
done. 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Data Lake
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
This blew me away. Basically, it can take your AWS storage and let you
query it as if it were a MongoDB database. It works with a variety of
file formst - JSON, XML, CSV and more. Basically it transparently
turns cloud storage into a database. 
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Stitch
This allows for the building of serverless apps. Similar to Firebase
but it looks to interact with all the other MongoDB goodness I&amp;#39;ve
mentioned. .
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
There were a few other neat things I learned about MongoDB and related
products but those were the highlights.
&lt;/p&gt;
&lt;p&gt;
As usual, I left the conference energized.
&lt;/p&gt;
&lt;p&gt;
If you don&amp;#39;t use MongoDB check it out for yourself and your
students. In addition to being a great product, it&amp;#39;s also a great
company.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Judging a  High School Hackathon - StuyHacks VIII</title>
      <link>https://cestlaz.github.io/post/judging-a-hackathon/</link>
      <pubDate>Sun, 16 Jun 2019 17:32:10 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/judging-a-hackathon/</guid>
      <description>&lt;p&gt;
Today I got to be a judge at &lt;a href=&#34;https://www.stuyhacks.com/&#34;&gt;StuyHacks VIII&lt;/a&gt;. This isn&amp;#39;t the first time
I&amp;#39;ve been a judge there, I&amp;#39;ve been doing it for a few years now. I&amp;#39;ve
also been lucky enought to have been asked to judge a handful of other
local hackathons over the years.
&lt;/p&gt;
&lt;p&gt;
StuyHacks is a high school hackathon organized and run by students at
Stuyvesant High School. Since it&amp;#39;s run by students, the cast of
organizers regularly changes. They run two events a year. One is a
morning to night hackathon hosted at the school and the other is an
overnight hackathon hosted externally. Recently &lt;a href=&#34;https://www.gakko.org/&#34;&gt;Gakko&lt;/a&gt; has been
gracious enough to host.
&lt;/p&gt;
&lt;p&gt;
While the largest group of participants are from Stuyvesant, the event
draws from all over NYC, Long Island and New Jersey. Most of the
participants are high schoolers but there are always enough younger
students to make it a comfortable event for middle schoolers as well.
&lt;/p&gt;
&lt;p&gt;
As usual, the participants did some great work. The winning project
was a medical diagnosis application and second place was a contraption
to sort garbage into recyclables and non recyclables. Both reminded me
of academic research that a friend of mine was doing around a decade
ago. It struck me that with current tools, libraries, and APIs,
something that was a really hard problem 10 years ago can at least be
explored by young programmers in a short period of time.
&lt;/p&gt;
&lt;p&gt;
There were also some very interesting games and a variety of neat
projects.
&lt;/p&gt;
&lt;p&gt;
I also started to think about the difficulty in judging projects. Over
the years I&amp;#39;ve worked with a large cadre of judges. All were involved
in tech but many weren&amp;#39;t programmers and many hadn&amp;#39;t had any
familiarity with the technologies used at a typical High School or
College Hackathon. There were a lot of very cool projects but while a
great idea well implemented does indeed make a great project it
doesn&amp;#39;t necessarily make one that shows great programming or software
architecture skills. I remember a few hackathons ago where a judge was
incredibly impressed with the implementation of a project where it was
merely glue and a little tweaking of example code.
&lt;/p&gt;
&lt;p&gt;
A few years ago when I saw a project that used a machine learning or
AI technique it meant the group coded it. The kids implemented a
classifier from scratch, coded up a regression, a clustering
algorithm, or whatever. Now, they don&amp;#39;t have to know anything about ML
or AI - merely how to use the IBM or Google APIs. It doesn&amp;#39;t mean they
don&amp;#39;t know these things but rather that they don&amp;#39;t have to. It also
means that since man students can now leverage other peoples tools
quickly and easily they&amp;#39;ll get much better results. 
&lt;/p&gt;
&lt;p&gt;
Today I saw a project that was pretty neat - it did a bunch of real
time image processing. It made extensive use of libraries and it was
indeed a very nice project. I saw a simpler similar project a few
years ago where those libraries weren&amp;#39;t available so the group had to
code simpler versions of the functionality by hand. It was also a cool
project but since it was all home grown it did less and was much less
polished. Which one was better? Who&amp;#39;s to say. Of course this makes
things hard when comparing projects - some kids know more about tools
and libraries than others. 
&lt;/p&gt;
&lt;p&gt;
None of this is to either add or take away from what hackathon
participatns can and do accomplish. I loved the projects from
hackathons past and I loved what I saw today. It&amp;#39;s just interesting to
see how things are evolving. 
&lt;/p&gt;
&lt;p&gt;
In any event, if you have a chance to go to a local High School
hackathon either as a judge, a mentor, or just as someone to look at
some youngsters projects and give some words of encouragement I highly
recommend doing so.
&lt;/p&gt;
&lt;p&gt;
StuyHacks VIII was a great event and I hope the organizers give me the
opportunity to continue to be part of it in the future.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Celebrating Perfect AP Exam Scores</title>
      <link>https://cestlaz.github.io/post/celebrating-perfect-scores/</link>
      <pubDate>Sat, 15 Jun 2019 12:24:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/celebrating-perfect-scores/</guid>
      <description>&lt;p&gt;
So, it turns out that there were 601 perfect scores on this years
APCS-A exam. Over on Facebook a great question was raised - what does
this mean and should we celebrate this?
&lt;/p&gt;
&lt;p&gt;
What does it mean? There&amp;#39;s no way to know. Maybe the number of perfect
scores is just scaling up linearly with test takers. Maybe More kids
are being exposed to CS prior to APCS-A and that&amp;#39;s leading to more
correct answers. Are teachers teaching to the test? Maybe the test was
just plain easier. 
&lt;/p&gt;
&lt;p&gt;
In spite of my normal anti college board leanings, I don&amp;#39;t really have
an opinion on the why. What I do have an opinion on is whether we
should celebrate these scores or not.
&lt;/p&gt;
&lt;p&gt;
Personally, I don&amp;#39;t think we should. 
&lt;/p&gt;
&lt;p&gt;
Does a perfect score really mean so much? Has a student who gets every
question correct really show that they know more or are a better
computer science student then another student who merely scores a
regular 5 (or an A on an in class assessment). 
&lt;/p&gt;
&lt;p&gt;
There have been countless times when I&amp;#39;ve looked over a test and found
a really clever, innovative solution to a problem. Something that
showed a much deeper understanding than the base solution I had in
mind. More often than not those tests got dinged a point here or there
for what I&amp;#39;d describe as minor errors. The students behind those tests
were much stronger than many &amp;#34;perfect paper&amp;#34; students so celebrating
the 100%s would be neither fair nor appropriate. More appropriate to
share out the interesting solution and hopefully enrich the entire
class.
&lt;/p&gt;
&lt;p&gt;
Celebrating perfect scores also encourages prepping for a perfect
score. That means prepping to do a lot of multiple choice questions in
a short period of time. That takes test specific drilling. I&amp;#39;d rather
my students know the material well enough to get the score they need
but would rather they not spend countless hours drilling for that
perfect score. That extra prep time could be better spent in countless
ways including something as simple as playing a game with some friends.
&lt;/p&gt;
&lt;p&gt;
A test - any test - is a limited, imperfect assessment.We should be
moving away from high stakes tests and simplistic numeric grades and
celebrating perfect scores in contrary to this. Celebrating a perfect
test score misses the mark. We should be celebrating how our students
work and progress not how they score on an imperfect testing implement
be it the AP exam or one of our in class tests.
&lt;/p&gt;
&lt;p&gt;
To close, I&amp;#39;ll leave you with a story. It&amp;#39;s about a college acceptance
but if you substitute perfect test score the gist is the same.
&lt;/p&gt;
&lt;p&gt;
I was talking to a friend of mine. His daughter went to Stuy and had
just gotten into her dream school. It also, coincidentally was the
school that her older brothers went to. I said to my friend &amp;#34;John, you
must be very proud of your daughter on getting into her dream school.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
&amp;#34;No,&amp;#34; John replied. &amp;#34;I&amp;#39;m not proud, I&amp;#39;m happy for her. I&amp;#39;m proud of her when she
helps somebody.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not the outside, imperfect validations we should be celebrating.
Rather we should be celebrating how our kids live, grow, and develop.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Back To Python</title>
      <link>https://cestlaz.github.io/post/back-to-python/</link>
      <pubDate>Fri, 14 Jun 2019 15:53:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/back-to-python/</guid>
      <description>&lt;p&gt;
With summer right around the corner I&amp;#39;m hoping to spend at least a
little time on some personal coding projects. There are a few work
related tools I&amp;#39;d love to develop and just some random areas of CS I&amp;#39;d
like to explore. If I finish them, the work projects will be web
based.
&lt;/p&gt;
&lt;p&gt;
I was thinking about using this as an opportunity to do a deeper dive
into Clojure having used it for some experiments and competitions like
&lt;a href=&#34;https://adventofcode.com/&#34;&gt;Advent of Code&lt;/a&gt; but at the end of the day I decided not
to. It&amp;#39;s not that Clojure wouldn&amp;#39;t be a good language for web apps. It
looks like it would be great. Rather, I&amp;#39;m finding the ecosystem and
build systems in particular to be more trouble than they&amp;#39;re worth for
a side project - particularly when I want to accomplish more than
becoming comfortable with the Clojure ecosystem. 
&lt;/p&gt;
&lt;p&gt;
Things were so much simpler in the old days. Way back when I was a
software engineer at Goldman Sachs I worked on a couple of large,
complex systems. All I had were a bunch of C files in a bunch of
directories and a Makefile to build everything. Simple and
straightforward. 
&lt;/p&gt;
&lt;p&gt;
If I&amp;#39;m working in C or C++ I can still do the same. 
&lt;/p&gt;
&lt;p&gt;
In Java I was always able to do the same since Make seemed to be
accepted in the community. Now there seems to be many more
options - Ant, Maven, and Gradle to name just three.
&lt;/p&gt;
&lt;p&gt;
Python was even easier - just set up your directory structure
and &lt;code&gt;__init__.py&lt;/code&gt; files and your good to go and by using a virtual
environment, which is pretty easy, you can keep the entire development
environment clean.
&lt;/p&gt;
&lt;p&gt;
Nowadays things are much more complex. Sure, I can create a simple
Clojure program and run it but anything bigger and you need a build
system. For a long time the tool was &lt;a href=&#34;https://leiningen.org/&#34;&gt;Leiningen&lt;/a&gt;. You define a project
file using it&amp;#39;s particular syntax and it can download dependencies,
manage builds etc.. It actually doesn&amp;#39;t look so bad if you&amp;#39;re living
in Clojure all the time but for a hobbyist like me I found myself
looking for other peoples templates and hoping for the best. Whenever
I needed my project to do things outside the norm I was pretty much
out of luck. 
&lt;/p&gt;
&lt;p&gt;
Then came &lt;a href=&#34;https://boot-clj.com/&#34;&gt;Boot&lt;/a&gt; as an alternative. Where Leiningen used a descriptive
configuration file, Boot used a configuration file that was basically
Clojure code. It was different but to me, it had the same problems -
documentation was lacking and too much magic going on behind the
scenes. Finally, Clojure started to come with &lt;a href=&#34;https://clojure.org/guides/deps_and_cli&#34;&gt;build system&lt;/a&gt;. I want to
like it but the documentation is even sparser and with three competing
build systems with varying levels of use and documentation it&amp;#39;s less
than ideal for a guy like me.
&lt;/p&gt;
&lt;p&gt;
Things get messier when you add in Clojurescript - Clojurescript
basically compiles Clojure code to Javascript. It has a great
development environment and handles state really nicely but for a
novice like me getting any of the build systems set up for Clojure and
Clojurescript in a way that makes sense is more than I want to
deal with right now.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t mean to be unfair to Clojure and its ecosystem. I still really
like the language and if I lived in it I&amp;#39;m sure I&amp;#39;d figure it all out
and be happy with it. It&amp;#39;s also no worse and arguably better than
ecosystems for other languages. 
&lt;/p&gt;
&lt;p&gt;
Javascript, for example makes you chose between gulp, grunt, webpack,
browserfity, parcel and maybe more. I think I finally got my head
aroudn webpack and parcel but it&amp;#39;s really the wild west. Of course
those are just the Javsacript build systems you then have to make
choices like VueJS or React or something else. 
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s really no easy answer. 
&lt;/p&gt;
&lt;p&gt;
Putting my teacher hat on for a second this is also an issue that our
students will have to deal with at some point. Are we helping them by
keeping them in web based language silos and simple IDEs or hurting
them? At what point do we transition them or do we leave it for them
to do on their own? I&amp;#39;m not taking any position on this here and now
but it&amp;#39;s something worth thinking about.
&lt;/p&gt;
&lt;p&gt;
Back to my side projects. 
&lt;/p&gt;
&lt;p&gt;
So, for the sake of getting things done I think I&amp;#39;m going to fall back
to Python. I don&amp;#39;t need to deal with any complex build systems, I can
write my web applications with Flask and it&amp;#39;s also a nice platform for
the other things I&amp;#39;d like to do.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll still probably play with Clojurescript for the web frontend ut if
that turns out to be proiblematics I&amp;#39;ll just go back to VueJS.
&lt;/p&gt;
&lt;p&gt;
Time to get to work.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Year in Review - the classes</title>
      <link>https://cestlaz.github.io/post/semester-review/</link>
      <pubDate>Wed, 12 Jun 2019 09:02:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/semester-review/</guid>
      <description>&lt;p&gt;
Now that the semester&amp;#39;s over I&amp;#39;ve had a chance to reflect a bit on my
teaching over the past year. 
&lt;/p&gt;
&lt;p&gt;
This year I taught two classes each semester so the load was a little
higher. First semester was one class of our CS0 and one of the
lab/enrichment component that goes with CS1. Nothing big to report
there as I&amp;#39;ve done them both before.
&lt;/p&gt;
&lt;p&gt;
The biggest difference was that I had to deal with two separate
classes even though they&amp;#39;re one cohort. I can&amp;#39;t say I did a
particularly good job with that - something to keep working on next
year.
&lt;/p&gt;
&lt;p&gt;
In the second semester the CS0 became the CS1 lab/enrichment and that
went pretty well overall. I was unhappy with some of the scheduling.
The students work on labs in class for a number of sessions and due to
circumstances beyond my control I had to finish out the class with a
number of consecutive lab classes whereas I would have much rather
spread those out with the enrichment lessons. Not happy about it but
there wasn&amp;#39;t much I could do.
&lt;/p&gt;
&lt;p&gt;
The other class was data structures. This was the first time I was
teaching it at Hunter, first time in C++ in well over a decade and
first time in around five years. I think the class went alright but
there was a lot of room for improvement. For one thing, C++ is not
Java. In Java things are pretty restricted - there&amp;#39;s pretty much one
way to deal with linked list and dynamic structures. C++ is a little
more complex. Do you do structs or classes? When do you introduce
smart pointers (if at all)? Separate compilation and if so when? What
about templates/generics - they&amp;#39;re much more cumbersome and complex in
C++. Also, don&amp;#39;t get me started on exceptions. Lots of decisions to be
made and once you make them it&amp;#39;s hard to change directions.
&lt;/p&gt;
&lt;p&gt;
I decided to go with all classes, separate compilation, did
templates/generics early but then constrained our data structures to a
fixed type. Did regular pointers and then smart pointers a ways in.
&lt;/p&gt;
&lt;p&gt;
Because of all of the changes, I also missed the chance to use a
number of my class motivations and tricks that I&amp;#39;ve used in the
past. I should be able to mix those in next time around. Things like
building  a linked list or studetns in class prior to studying them or
playing out a mergesort with a deck of cards.
&lt;/p&gt;
&lt;p&gt;
Another thing I had to deal with that was new was the range of student
backgrounds. I have a number of students in my program from NYCS&amp;#39;s
specialized schools and Stuy in particular. No surprise but the Stuy
students have much more experience than the rest both in terms of time
they&amp;#39;ve spent programming and in terms of what they&amp;#39;ve studied. All of
the Stuy students had done most if not all of the data structures in
Java and most had taken 3 years of CS and have completed many major
projects. There were other students who did APCS-A plus another year but
not the data structures and finally those who had just done
APCS-A. They&amp;#39;re all great kids and more experience doesn&amp;#39;t equate to
more ability but there&amp;#39;s a big difference in terms of what you can do
and how quickly you can do it after a year of APCS-A and a course or
three beyond it.
&lt;/p&gt;
&lt;p&gt;
That was a tricky juggling and balancing act adn I think I&amp;#39;ll handle
it better next year.
&lt;/p&gt;
&lt;p&gt;
I didn&amp;#39;t get to cover quite as much as I wanted in the Data Structures
class and I certainly didn&amp;#39;t cover it as well as I would have liked
but I don&amp;#39;t think I did a bad job. I&amp;#39;ve been in this racket long
enough to know the ebbs and flows.
&lt;/p&gt;
&lt;p&gt;
Overall I was happy with the year teaching wise but see a lot of
places where I want to do better and do more. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grokking Algorithms</title>
      <link>https://cestlaz.github.io/post/grokking-algorithms/</link>
      <pubDate>Tue, 11 Jun 2019 07:29:30 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/grokking-algorithms/</guid>
      <description>&lt;p&gt;
Someone mentioned &lt;a href=&#34;https://www.manning.com/books/grokking-algorithms&#34;&gt;Grokking Algorithms&lt;/a&gt; by Aditya Y. Bhargava in one of
the CS educator Facbeook groups. It looked interesting so I thought
I&amp;#39;d give it a once over.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s certainly an accessible book. Text mixed with cute line drawings,
&amp;#34;hand written&amp;#34; text, diagrams and picture.s It reminded me of one of
my favorite, most accessible  Calculus books &lt;a href=&#34;https://www.goodreads.com/book/show/706622.Who_Is_Fourier_a_Mathematical_Adventure&#34;&gt;Who Was Fourier&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Overall I enjoyed the book but I&amp;#39;m not sure what its best audience
is. If you look at the selection of topics, it&amp;#39;s a little
haphazard. It introduces Big-O notation, sescrion sort, and intro
recursion all of which are covered prior to an algorithms course. It
also introduces linked lists in what I felt was an early and arbitrary
place but then neither gave any more than a theoretical overview nor
came back to them later. On the other hand, when the author covers
QuickSort he at one point compares it to a MergeSort as if that were
covered as well. On the more advanced side, there are Hash Tables,
Dijkstra&amp;#39;s Aalgorithm, Dyanmic Programming, and a few teasers at the
end.
&lt;/p&gt;
&lt;p&gt;
The biggest downside of the book, to me, is that some of the topics
seem to be great explanations of things as long as you already know
them. The Linked List coverage is a great example of this. The author
does a nice job relating Linked Lists to memory and how they are
theoretically implemented under the hood. That said, unless you&amp;#39;ve
already studied linked lists it probably isn&amp;#39;t enough to go
anywhere. This might be fine if you are to assume that the reader has
already taken data structures but if that&amp;#39;s the case, the linked list
section is probably superflous.
&lt;/p&gt;
&lt;p&gt;
Another point I noted was that some of the coverage is pretty standard
but some is great. I wasn&amp;#39;t very impressed by the recursion chapter
nor the coverage of Dijkstra&amp;#39;s algorithm. They were fine but nothing
special. On the other hand, I very much liked the way Bhargava laid
out and discussed Dynamic Programming. To me, that section alone is probably
worth the book. I don&amp;#39;t think it&amp;#39;s enough for you to build a unit on
Dyanamic Programming but the author provides a great way of developing
and talking about the subject and gives some nice examples. I also
like the way it builds from Greedy Algorithms.
&lt;/p&gt;
&lt;p&gt;
To be fair, I read a couple of Amazon Reviews of the book and one
reviewer loved the coverage of  Dijkstra&amp;#39;s algorithm so there is a lot
of subjectivity here. 
&lt;/p&gt;
&lt;p&gt;
A couple of other minor points worth thinking about are math and
rigor. One of the quotes on the back of the book states:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
This book does the impossible: it makes math fun and easy!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I&amp;#39;ve got to disagree with this. The book doesn&amp;#39;t take any
traditionally difficult math and magically make it trivial. Rather the
book has some examples where basic math can be used to great
effect. In one section, Bhargava talks about classifiers and
similarity scores using the Distance Formula. It&amp;#39;s somewhat similar to
what I do &lt;a href=&#34;https://cestlaz.github.io/posts/2014-01-07-rot13-gateway/&#34;&gt;here&lt;/a&gt;. He&amp;#39;s not making hard math easy but rather he&amp;#39;s showing
that basic math can be amazingly useful and you can do cool and
powerful things with it. Nothing wrong with that. It&amp;#39;s a great thing
to do but it&amp;#39;s not making hard math easy. The author also refers the
reader to external references for more.
&lt;/p&gt;
&lt;p&gt;
The other point I want to mention is rigor - this is bound to come up
whenever a book tries to be accessible. While it&amp;#39;s true that the author
seems to fudge or simplify a definition here and there I didn&amp;#39;t find
any major problems and think that his choices in terms of langauge,
rigor, and fudge factor  are generally appropriate.
&lt;/p&gt;
&lt;p&gt;
So bottom line - who is this book for and should you get it?
&lt;/p&gt;
&lt;p&gt;
This is not a standalone algorithms book. You couldn&amp;#39;t use it for a
class by that name. The book mentions that it could be useful to a
code school graduate and given the lack of consistency in what&amp;#39;s
covered in code schools that&amp;#39;s probably a good recommendation. It
gives some feel and flavor on a number of subjects, does nothing
poorly and while it omits things that might be necessary, it does many
things well.
&lt;/p&gt;
&lt;p&gt;
To me, this is an ideal book as resource for a teacher looking to
stretch their APCS-A or APCS-AB class or possibly for an advanced
student.
&lt;/p&gt;
&lt;p&gt;
I enjoyed the book. You probably will too.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do It First</title>
      <link>https://cestlaz.github.io/post/do-it-first/</link>
      <pubDate>Mon, 10 Jun 2019 08:00:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/do-it-first/</guid>
      <description>&lt;p&gt;
Reading Garth Flint&amp;#39;s end of year &lt;a href=&#34;https://gflint.wordpress.com/2019/06/07/last-day-of-school-and-done-with-java/&#34;&gt;post&lt;/a&gt; and Alfred Thompson&amp;#39;s &lt;a href=&#34;http://blog.acthompson.net/2019/06/how-well-can-you-code-projects-you.html&#34;&gt;follow up&lt;/a&gt;
had me thinking about a couple of things. 
&lt;/p&gt;
&lt;p&gt;
One was spurred when Garth
wrote &amp;#34;They also have to figure out the math before they code.&amp;#34; This
made me think about all the details we sometimes &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-21-little-details.html/&#34;&gt;take for for
granted&lt;/a&gt;. Things that are hard for our students that we just know. It&amp;#39;s
frequently math that we might find trivial but it could also be much
simpler things.
&lt;/p&gt;
&lt;p&gt;
When I write Java code I have a snippet that provides most of my main
boilerplate. For a beginner, just typing in all the details and
getting them right might be a chore. Heck, even typing is something we
take for granted. Beginners who can type have a distinct
advantage. They can focus on the code rather than on the keys. That
boilerplate code might take ten minutes of typing alone and that&amp;#39;s not
adding in any typos or understanding errors. 
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t have anything to add here that I didn&amp;#39;t address in earlier
posts and Garth&amp;#39;s post has some great points so if you haven&amp;#39;t read it
yet, I recommend you take the few minutes to do so.
&lt;/p&gt;
&lt;p&gt;
The other thoughts were spurred from this part of Garth&amp;#39;s post:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
did only two of the six assignments myself.  With the others I saw
 the solution so did not code them up.  I should have coded them up
 just so I could answer questions better for the students.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Alfred expounded on this in his post and there was a good twitter
conversation around it as well.
&lt;/p&gt;
&lt;p&gt;
As a general rule as teachers we should have solved the problems
before we assign them and not just theoretically be able to solve
them. Actually writing up the solutions can also clue us in on some of
the difficulties that our students might face. Particularly if we
really try to look at the assignment using our student&amp;#39;s eyes. 
&lt;/p&gt;
&lt;p&gt;
Neal Plotnick tweeted: 
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The lack of
experience with coding for Ts combined with canned, cloud based
curricula has allowed classrooms to be created with Ts pushing
assignments out and relying on automated grades. I don’t have a CS
degree but I made sure to code my python assignments first.&lt;/p&gt;&amp;mdash;
neil plotnick (@NeilPlotnick) &lt;a
href=&#34;https://twitter.com/NeilPlotnick/status/1137340790554996736?ref_src=twsrc%5Etfw&#34;&gt;June
8, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
And this is a real concern for me. I get it - we&amp;#39;re building a plane
while flying it and that places teachers in situations where they have
to learn on the fly and at times they&amp;#39;ll  have to assign problems
before they have  solutions. Long term, however, this is a big problem
and I suspect it&amp;#39;s not going to go away. 
&lt;/p&gt;
&lt;p&gt;
On the other side of the coin though are times when it&amp;#39;s best not to
have a solution before the class. Sure, if you&amp;#39;re teaching a merge
sort or doing a unit on inheritance you probably should have your
ownb written solutions but there are a whole bunch of topics which
lend themselves to doing things on the fly:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
debugging
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
software engineering practices
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
how to approach &amp;#34;random&amp;#34; problems
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
practical &amp;#34;programming&amp;#34; techniques
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
can all benefit from an on the fly lesson. 
&lt;/p&gt;
&lt;p&gt;
Coding or teaching on the fly, when used appropriately allows the
teacher to model best practices in real situations. Of course this is
difficult to truly replicate if you teach the same class again later
in the day or if you revisit the class next year but it can be a
valuable tool. When you get a bug - a real bug not a planted one in
your code, you can really model techniques to solve the problem and
you can involve the class in finding that solution.
&lt;/p&gt;
&lt;p&gt;
This can all be pretty scary. You can end up going down the wrong path
and never finish building whatever you&amp;#39;re building but overall it can
be a very valuable experience for the students. 
&lt;/p&gt;
&lt;p&gt;
The other consideration is that you can teach a great lesson this way
but it would probably get a low rating on Danielson or whateve
nonsense rubric your district uses for teacher evaluation.
&lt;/p&gt;
&lt;p&gt;
None of this is to say that you don&amp;#39;t want to prepare. Most of the
time I&amp;#39;ll have solutions worked out or if not, I&amp;#39;ll have written
similar solutions countless times before but that said, there&amp;#39;s
sometimes value in exploring in the wild or as one of my early
supervisors put it &amp;#34;calling an audible.&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AP Classes, Placing Students, and First Topic Exposures</title>
      <link>https://cestlaz.github.io/post/placing-students/</link>
      <pubDate>Mon, 03 Jun 2019 13:27:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/placing-students/</guid>
      <description>&lt;p&gt;
Just like last year, I&amp;#39;m taking in two classes worth of students in to
my honors program. The challenge is that I can only teach two classes
and I&amp;#39;ve got to figure out what to teach  and then which students
belong in which class.
&lt;/p&gt;
&lt;p&gt;
It basically comes down to one of two courses, our CS0 (CSCI127) and
our CS1 (CSCI135). 
&lt;/p&gt;
&lt;p&gt;
CSCI127 is a first programming experience. The normal class is taught
as a large lecture with small recitation/labs. It&amp;#39;s Python based and
the kids do a bunch of small programs in a variety of domains. They
also cover a few &amp;#34;miscellaneous&amp;#34; topics including base conversions,
truth tables, simple circuits, a baby look at an Assembly language
and an intro to C++ at the end. My version also uses
Python but is much more of a deep dive and also brings in a few
Softwae Engineering practices. I don&amp;#39;t do the extras other than the
C++ intro.
&lt;/p&gt;
&lt;p&gt;
CSCI135 is most analogous to APCS-A with the biggest difference being
our core language is C++. That means memory management, references and
all that good stuff. We also sequence things a little differently than
AP. For instance, we don&amp;#39;t do sorting at all until the second semester
but do deal with pointers. I don&amp;#39;t actually teach CSCI135 at all. Most
Hunter students take a 1 credit programming lab (CSCI136) to go along
with CSCI135. I teach a 3 credit version of that where we do a bunch
of enrichment.
&lt;/p&gt;
&lt;p&gt;
On the student side, they come in with a range of CS experiences. Some
are 100% new to the subject, some are self taught, a few have taken
after school or summer programs like GWC, Technovation, or others and
a bunch have taken some CS in school with the largest numbers being
either APCS-A or APCS-Principles. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve found the quality of the outside experiences to be uneven at
best. More often than not kids who come from them and think they&amp;#39;re
experienced programmers and really haven&amp;#39;t learned anything. I&amp;#39;ve
got to be careful with them but placement is easy. They  go to
CSCI127. The same is true for kids coming in from APCS-P. APCS-P is
also very uneven in terms of what the kids come out with and it&amp;#39;s not
a direct replacement for our CSCI127.
&lt;/p&gt;
&lt;p&gt;
The big question is what to do with the APCS-A kids. APCS-A does give
students a decent programming background but it&amp;#39;s in a different
language. There&amp;#39;s also the memory management and reordering of
subjects. It&amp;#39;s clear that for most students, even with APCS-A, our
CSCI135 is the right place. That said, we do offer an in house exam to
place out of it. A few of my students have done that but still do my
enrichment/lab class so I can be confident that the student is up to
speed on C++ and related issues.
&lt;/p&gt;
&lt;p&gt;
All of this has led to some discussion in our department recently -
should APCS-A exempt students from our CS0? My argument is that it
should. While I&amp;#39;m no fan of AP or of the AP Exam, kids having finished
the class will have solved problems and built programs more complex
than those we require in our CS0 course. The counter argument relates
to those few non programming topics that are covered in CSCI12700,
specifically, number bases, truth tables, simple circuits, assembly,
and into C++. The argument against placing the kids out of CS0 is that
early exposure to those topics is valuable in preparing the students
for later courses such as those in our required  systems/architecture
track. 
&lt;/p&gt;
&lt;p&gt;
Does that early exposure really make a difference? In this case, I
don&amp;#39;t think it does. For some topics, specifically recursion, I&amp;#39;ve
found that early lightweight exposure does help later on. We introduced
recursion through Racket (nee Scheme) in Stuy&amp;#39;s intro course and then
later revisited it in ACPS-AB. While I never formally collected data,
the early introduction seemed to help. On the other hand, I never
found early exposure to truth tables, base conversions and circuits to
make a difference even though we did do some of that in some
experimental sections of Stuy&amp;#39;s intro course and then revisted them in
the senior systems course. 
&lt;/p&gt;
&lt;p&gt;
Why did it seem to make a difference for recursion and not for the
other topics? Probably because the other topics are mechanical and
don&amp;#39;t require new thinking or deep thinking. You see it, you got
it. Recursion on the other hand is a problem solving technique so
there&amp;#39;s more to understand so the early exposure seems to help.
&lt;/p&gt;
&lt;p&gt;
This also seems to be born out  at Hunter where my early cohorts
didn&amp;#39;t get those small extra topics but all did very well in the
courses that &amp;#34;required&amp;#34; that knowledge.
&lt;/p&gt;
&lt;p&gt;
In the Fall this discussion will continue.  I&amp;#39;m not concerned about my
kids as I have a fair amount of leeway in getting them into the
classes they need. The trick is how to make sure that we&amp;#39;re not
forcing other kids to take classes they don&amp;#39;t need. We need to get these
kids to where they can start to interview for internships sooner
rather than later. At the same time, we have to make sure we&amp;#39;re not
placing kids to far up the track and setting them up for failure. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Predicting Grades</title>
      <link>https://cestlaz.github.io/post/predicting-grades/</link>
      <pubDate>Sat, 18 May 2019 12:03:10 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/predicting-grades/</guid>
      <description>&lt;p&gt;
Just saw this:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Evaluation
metric idea: take snapshots of students&amp;#39; grades each week
(specifically, the grade they actually see in your LMS). How well do
these correlate with your final assigned grade? Were students getting
good estimates?&lt;/p&gt;&amp;mdash; Austin Cory Bart (@AustinCorgiBart) &lt;a
href=&#34;https://twitter.com/AustinCorgiBart/status/1129743671639838720?ref_src=twsrc%5Etfw&#34;&gt;May
18, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
It made me think of a couple of conversations I had with more senior
teachers early in my career.
&lt;/p&gt;
&lt;p&gt;
They&amp;#39;d tell me &amp;#34;by and large, you know what the kids are going to get
after a few week.&amp;#34; By and large they were right. Sure there were some
kids that would turn it on midway and raise end up earning a higher
grade and some who fell off a cliff but for the most part, you knew
pretty early. 
&lt;/p&gt;
&lt;p&gt;
This doesn&amp;#39;t mean that you don&amp;#39;t need assessments along the way - both
to inform the student on how they&amp;#39;re doing and to inform both teacher
and student on how to best proceed in order to benefit the student. Of
course, sometimes, even when you present some students will their dire
situations they can remain in denial for a remarkable period of time.
&lt;/p&gt;
&lt;p&gt;
At Stuy, the standing grading policy was 2 full period exams each marking
period - this meant at least 6 a semester. Add to that a final which
usually counted as two tests and we had more than enough to drop the
lowest grade - a practice followed by many teachers. Depending on
subject you&amp;#39;d also add in papers, projects, quizes, Homework,
participation and anything else you&amp;#39;d like weighted in a variety of ways.
&lt;/p&gt;
&lt;p&gt;
As an interesting aside, I was able to evaluate my senior classes at Stuy
entirely on projects - no tests but not my sophomore classes. Stuy
students were so conditioned on exams that they really needed them to
keep themselves honest. It took time to ween them off. 
&lt;/p&gt;
&lt;p&gt;
I started at Seward Park High School and that school had a similar policy. 
&lt;/p&gt;
&lt;p&gt;
In any event, those teachers that told me that you&amp;#39;d know the final
grades early on were pretty spot on. A number of times I tried an
experiment - for final grades, I&amp;#39;d first write down what I thought the
grades would be and then I ran all the assessments through the
weighted average formula. The &amp;#34;guesses&amp;#34; were almost always pretty spot
on.  I also compared the final grades to the second marking period
grades. I chose the second because the first marking period grades
were just letters - E for excellent, S satisfactory, N needs
improvement, and U. There was some movement but it was more from my
grading up or down due to the amrking period rather than a real
change. I would grade down in the second marking period and up in the
third.  
&lt;/p&gt;
&lt;p&gt;
This isn&amp;#39;t to say that Cory&amp;#39;s suggestion doesn&amp;#39;t make sense and it
also doesn&amp;#39;t mean that I or other teachers are fabulous estimators -
for all I know, I was biasing some subjective students grades based on
some preconceived notion I wasn&amp;#39;t aware of making the final grade a
self fulfilling prophecy. 
&lt;/p&gt;
&lt;p&gt;
In any event, I was able to do this when I was teaching in high school
but not so far in college. Maybe it&amp;#39;s because I&amp;#39;ve only been at Hunter
for three years and I developed my high school chops over
decades. Maybe it&amp;#39;s because I have far less contact time with the
students - 2 days a week for an hour fifteen vs five days a week for
43 minutes a shot. It could be that there were more opportunities for
assessment in high school due to more contact time. I&amp;#39;m really not
sure. Something to ponder further.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blog For Self Professional Devleopment</title>
      <link>https://cestlaz.github.io/post/blog-for-pd/</link>
      <pubDate>Thu, 16 May 2019 07:12:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/blog-for-pd/</guid>
      <description>&lt;p&gt;
Lat day of the 2019 &lt;a href=&#34;https://www.ncwit.org/summit/2019-ncwit-summit-women-and-it&#34;&gt;NCWIT Summmit&lt;/a&gt;. Got up crazy early, got back from
my run and saw this when I checked Twitter:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A1: CSTA,
Twitter chats like this one, &lt;a
href=&#34;https://twitter.com/guzdial?ref_src=twsrc%5Etfw&#34;&gt;@guzdial&lt;/a&gt;
and &lt;a
href=&#34;https://twitter.com/alfredtwo?ref_src=twsrc%5Etfw&#34;&gt;@alfredtwo&lt;/a&gt;&amp;#39;s
blogs among others. In all cases because those places start from
assuming I&amp;#39;m a CS teacher, rather than starting from assuming
I&amp;#39;m a teacher who is better at teaching something else. &lt;a
href=&#34;https://twitter.com/hashtag/csk8?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#csk8&lt;/a&gt;
&lt;a
href=&#34;https://t.co/6DO77fzq0j&#34;&gt;https://t.co/6DO77fzq0j&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Sarah Judd (@SarahEJudd) &lt;a
href=&#34;https://twitter.com/SarahEJudd/status/1128829652145979392?ref_src=twsrc%5Etfw&#34;&gt;May
16, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I don&amp;#39;t usually participate in Twitter chats. The format doesn&amp;#39;t
really work for me. I do frequently lurk though and while I didn&amp;#39;t see
this tweet until the morning after, another &lt;a href=&#34;https://twitter.com/Todd_Lash/status/1128816582048673793&#34;&gt;one&lt;/a&gt; by my &lt;a href=&#34;https://twitter.com/Todd_Lash&#34;&gt;Todd Lash&lt;/a&gt; caught
my eye and I&amp;#39;ll probably comment on that at some point in the near
future.
&lt;/p&gt;
&lt;p&gt;
On Sarah&amp;#39;s tweet I&amp;#39;ll say that CS teachers should certainly frequent
Alfred and Mark&amp;#39;s blogs. I subscribe to and enjoy both. I&amp;#39;ll add
something that I&amp;#39;ve said before and that is if you&amp;#39;re a CS teacher you
should also blog.
&lt;/p&gt;
&lt;p&gt;
I get it - it takes time, it&amp;#39;s hard to put yourself out there and if you&amp;#39;re a
relatively young teacher you might feel like you don&amp;#39;t have much to
say but I say so what.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been blogging on and off for nine years now. I have no reason to
believe I have anything more than a small readership but I do
periodically get surprised at a conference with a &amp;#34;hey, I love your
blog.&amp;#34; Comments are few and far between and from &amp;#34;the usual
suspects&amp;#34; but as I sad above, so what.
&lt;/p&gt;
&lt;p&gt;
Pick a lesson you just did and describe it. That&amp;#39;s all it takes. Try
something different a week later? Write it up. Rinse and repeat.
&lt;/p&gt;
&lt;p&gt;
Why have I found writing a blog to be good self-PD?
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Writing the experience or the lesson makes me think through it
again. What worked, what didn&amp;#39;t.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
When I do a similar lesson in the future, I can look back on what I
did. It helps in iterating towards becoming a better teacher.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
I get to see how I&amp;#39;ve evolved as a teacher over time. You don&amp;#39;t get
this immediately but blog for a few years and then reread some early
posts. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
You could get some comments. I don&amp;#39;t get a lot but the ones people
have left have proven useful to me. Some of the ones from people who
disagree have been the most useful.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
On top of this, some other new teacher might discover something you
wrote up and find inspiration from it. 
&lt;/p&gt;
&lt;p&gt;
So, jump in and try it. Blogging for self-PD. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Hunter Daedalus Fall 2019 recruiting class</title>
      <link>https://cestlaz.github.io/post/daedalus-class-2019/</link>
      <pubDate>Wed, 08 May 2019 08:25:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/daedalus-class-2019/</guid>
      <description>&lt;p&gt;
Now that high school seniors have all committed to their respective
colleges I though I&amp;#39;d share some information on Hunter&amp;#39;s incoming
Daedalus (honors CS) cohort.
&lt;/p&gt;
&lt;p&gt;
I joke about the first cohort saying that nobody applied to the
program. That&amp;#39;s kind of true. I jointed Hunter a little over three
years ago in late January. That was after high school seniors had
already applied to college and at that time the program didn&amp;#39;t
exist. We found the first cohort by looking at students who had
already applied to Hunter not expecting Daedalus to exist.
&lt;/p&gt;
&lt;p&gt;
It was 12 kids and we&amp;#39;ve lost a few since then. 
&lt;/p&gt;
&lt;p&gt;
The second cohort consisted of 24 students. We started adding
&lt;a href=&#34;https://en.wikipedia.org/wiki/William_E._Macaulay_Honors_College&#34;&gt;Macaulay&lt;/a&gt; students into the mix. Macaulay is a CUNY wide honors
scholarship program. Each campus has a cohort and it was part of an
effort to bring CUNY back to it&amp;#39;s &amp;#34;glory days&amp;#34; before open
enrollment. The Macaulay kids saw that Daedalus was the place to be
for CS in NYC and Hunter and wanted in. 
&lt;/p&gt;
&lt;p&gt;
Third year, we were up to 44 students. 
&lt;/p&gt;
&lt;p&gt;
Now, in our fourth year we&amp;#39;re up to 50 which is a little over
capacity - at least until I can find and hire a partner in crime  (and
I am looking).
&lt;/p&gt;
&lt;p&gt;
Some other stats:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Year:&lt;/th&gt;
&lt;th&gt;2016&lt;/th&gt;
&lt;th&gt;2017&lt;/th&gt;
&lt;th&gt;2018&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;2019&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Size:&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Daedalus / Macaulay:&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;75% / 25%&lt;/td&gt;
&lt;td&gt;75%/ 20%&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;80% / 20%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Approximate Applicants&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;~150&lt;/td&gt;
&lt;td&gt;~200&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;Over 320&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Gender M/F %&lt;/td&gt;
&lt;td&gt;80/20&lt;/td&gt;
&lt;td&gt;75/25&lt;/td&gt;
&lt;td&gt;50/50&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;75/25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Taken APCS / Beginner&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;N/A&lt;/td&gt;
&lt;td&gt;50/50&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;50/50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Number of high schools&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;# students from beyond NYC&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
I also have stats on grades and test scores as well as the number of
offers an the percent of acceptances. 
&lt;/p&gt;
&lt;p&gt;
Some thoughts on the stats:
&lt;/p&gt;
&lt;p&gt;
I try to spend as much time as I can doing outreach. This is horribly
inefficient but it&amp;#39;s slowly getting the word out. I might spend most
of a day trekking out into the boroughs to &lt;a href=&#34;https://cestlaz.github.io/post/fall-2018-tour-revisited/&#34;&gt;talk to a class&lt;/a&gt; or a few
classes at some school knowing that there will probably be very few
fits for my program. I think I&amp;#39;m bringing important information to all
of the kids but it&amp;#39;s a low yield activity. Right now our biggest
feeder schools are Stuyvesant, Brooklyn Tech, and Bronx Science. Next
is Midwood. This makes sense as they&amp;#39;re all &lt;strong&gt;large&lt;/strong&gt; schools and they
all have established CS classes. They&amp;#39;ll probably continue to be the
biggest feeders but I&amp;#39;m delighted by the fact that I&amp;#39;m getting
students from 17 other schools including a couple from outside of
NYC. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m less happy with the gender distribution. Twenty five percent isn&amp;#39;t
bad compared to the national numbers but we should be doing
better. It&amp;#39;s a tough nut to crack. When I visit to schools I&amp;#39;m
normally sent to the CS classes so I&amp;#39;m already getting a gender skewed
audience. Not sure the best approach to work on this. 
&lt;/p&gt;
&lt;p&gt;
On the other hand, I&amp;#39;m getting to enough of a general audience to have
roughly a 50/50 split of students with APCS-A or beyond or what I
would call a beginner. 
&lt;/p&gt;
&lt;p&gt;
As I get to know this new group and find out why they applied to
Hunter Daedalus and ultimately decided to attend I&amp;#39;m hoping to be able
to better fine tune my recruiting approach and outreach.
&lt;/p&gt;
&lt;p&gt;
As a bottom line I&amp;#39;m going to continue to work to make Hunter&amp;#39;s
Daedalus program the place to be for CS education in NY so that kids
can get a top flight experience without paying a quarter of a million
dollars.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Give me a break (and a continue)</title>
      <link>https://cestlaz.github.io/post/break-continue/</link>
      <pubDate>Wed, 01 May 2019 08:39:41 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/break-continue/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
What can I do to discourage my students from using the &amp;#34;break&amp;#34;
statement?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That was more or less the gist of the comment and it elicited some
good responses. This time the conversation was on Facebook but I&amp;#39;ve
seen this one and participated in it many times before. I never liked
the question when presented as a &amp;#34;how can I stop them&amp;#34; one.  I equally
dislike when the offered advice is basically &amp;#34;never use break no
matter what&amp;#34; or something similar. When writing code the best advice
is rarely to never or always do something. The question should really
be &amp;#34;when is it appropriate for my students to use a break statement
and how can I steer them  towards using it correctly.&amp;#34; The answer, of
course is &amp;#34;it depends.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
For those unfamiliar with the statements, &lt;code&gt;break&lt;/code&gt; jumps to the end and
exits the loop or switch statement that encloses it. The &lt;code&gt;continue&lt;/code&gt;
statement jumps up to the next iteration of its enclosing loop. I&amp;#39;ll
show some examples below.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s true that you never &lt;strong&gt;need&lt;/strong&gt; to use break but in my opinion, if
used correctly it can create clearer code. Let&amp;#39;s look at a related
situation. Suppose you write a function to find and return some item
from  a data set (in pseudocode):
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
You could tighten it up a bit but there are two things that I don&amp;#39;t
like about the above solution. First, it goes through the entire data
set even if the item you&amp;#39;re searching for is near the beginning. You
could fix that by putting in a more complex loop boolean:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; numitems &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;found &lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
Second. you&amp;#39;ve got the conditional after the loop. I find the
following much clearer:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
To me this is perfectly clear. Look for an item, if and when we find
it, we&amp;#39;re done so let&amp;#39;s get out of here. If not, the loop finishes and
we return the not found stuff at the end. It&amp;#39;s clean, easy to
understand, and potentially a little faster.
&lt;/p&gt;
&lt;p&gt;
You have a similar situation with &lt;code&gt;break&lt;/code&gt;. Without it you might have
code like this:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
And with:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Not significantly different. 
&lt;/p&gt;
&lt;p&gt;
People who don&amp;#39;t like the break statement usually adhere to a very
strict interpretation of structured programming - one entry point, one
exit point but I&amp;#39;d argue that break (and continue) are not like
arbitrary jumps. They&amp;#39;re well defined and don&amp;#39;t introduce spaghetti
code. They either specifically exit a bounding language construct or
jump to the next iteration. Actually, now that I think about it,
&lt;code&gt;exceptions&lt;/code&gt; can be used in a way that mucks with clear code in a much
more dangerous way than break and continue can.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s an example with continue:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
as opposed to:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;    &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Which is better? It&amp;#39;s purely subjective. Nothing wrong with either.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll share a final example. This one lifted from an &lt;a href=&#34;https://cestlaz.github.io/post/globals-breaks-and-returns/&#34;&gt;older post&lt;/a&gt; on
&amp;#34;best practices.&amp;#34; If you&amp;#39;re writing an event handler, you could put
the exit event in the loop boolean but I find including it
as a case using a &lt;code&gt;break&lt;/code&gt; to be cleaner:
&lt;/p&gt;
&lt;div class=&#34;src src-c++&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
At the end of the day, &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt;, like most langauge
constructs can be used for either good or evil. There have been times
when they&amp;#39;ve led me to cleaner code so I&amp;#39;ve used them. At other times,
using them would have been forced.
&lt;/p&gt;
&lt;p&gt;
If we agree that &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; can be appropriate, the other
question is when to introduce them. One comment from the most recent
Facebook thread on this (name withheld since that&amp;#39;s a semi-private
forum) was that it shouldn&amp;#39;t be right off the bat but rather after
they&amp;#39;re comfortable with loops, conditionals and booleans so that they
can use the new constructs when they make sense and not willy-nilly. I
tend to agree with this.
&lt;/p&gt;
&lt;p&gt;
Personally, I think it&amp;#39;s important to show our kids constructs like
&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; and it&amp;#39;s also important for us to talk about
good code and &lt;a href=&#34;https://cestlaz.github.io/posts/best-practices-cli/&#34;&gt;best practices&lt;/a&gt; but the important thing is that we don&amp;#39;t
have our kids blindly follow any practice but empower them to make good
decisions based on their situations.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Technical Interviews And Diversity</title>
      <link>https://cestlaz.github.io/post/technical-interviews-and-diversity/</link>
      <pubDate>Sun, 28 Apr 2019 11:27:46 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/technical-interviews-and-diversity/</guid>
      <description>&lt;p&gt;
I recently stumbled upon &lt;a href=&#34;https://twitter.com/laurieontech/with_replies&#34;&gt;Laurie Barth&lt;/a&gt; on Twitter and noticed a couple
of tweets about tech interviews and the hiring process, something I&amp;#39;ve
been thinking about recently.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Solid rant. I
think the teach to the programming test market already exists. And
it’s why interviewers who subscribe to these tactics get upset if a
candidate admits they’ve seen the problem previously. Because it ruins
the illusion that this is revealing how candidates think. &lt;a
href=&#34;https://t.co/DpHgQx0TST&#34;&gt;https://t.co/DpHgQx0TST&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Laurie (@laurieontech) &lt;a
href=&#34;https://twitter.com/laurieontech/status/1121879805862064131?ref_src=twsrc%5Etfw&#34;&gt;April
26, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;One of the
things I often think about is feeling like I got lucky making it
through some of my interviews...and then killed it on the job. We know
interviews don’t match the on the job skills, it’s about time we did
something about it. &lt;a
href=&#34;https://t.co/xmUXkGvtoA&#34;&gt;https://t.co/xmUXkGvtoA&lt;/a&gt;&lt;/p&gt;&amp;mdash;
Laurie (@laurieontech) &lt;a
href=&#34;https://twitter.com/laurieontech/status/1122496300912717825?ref_src=twsrc%5Etfw&#34;&gt;April
28, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async
src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I guess I&amp;#39;ve been thinking about it because I&amp;#39;m teaching a section of
Data Structures which, along with Algorithms, provides the base
knowledge you need to have a shot at the typical &amp;#34;Google Style&amp;#34;
technical interview.
&lt;/p&gt;
&lt;p&gt;
I say &amp;#34;base knowledge&amp;#34; because just completing those two classes
doesn&amp;#39;t really prepare you. It gives you the building blocks but you
really have to prep specifically for the types of questions they might
give you. Unfortunately, for most kids it involves a whole lot of
rejection and failure before you start getting offers. 
&lt;/p&gt;
&lt;p&gt;
You might get a problem that has a bad brute force solution and during
the relatively short interview, devoid of your typical resources and
comforts you have to turn it into a much more efficient one. The
argument is that the interviewer is really trying to see how you think
about a problem but having spoken to many, many tech employees who do these
interviews that&amp;#39;s a specious argument at best. It&amp;#39;s really a test of
&amp;#34;who has seen the problem or something similar before but can fake
that they haven&amp;#39;t the best.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
While it&amp;#39;s true that you will get some candidates who can solve the
problems on the spot you&amp;#39;re going to miss out on a whole bunch of
great candidates who just don&amp;#39;t do well on that &amp;#34;Google style&amp;#34; of
interview. At the same time we keep hearing that, as Laurie tweeted,
the skills required on the job don&amp;#39;t match the ones needed to pass the
interview. 
&lt;/p&gt;
&lt;p&gt;
This doesn&amp;#39;t really matter to the big, hot companies. The Googles and
Facebooks of the world. So many students coming out of college want to
work for them that they can afford to miss on tons of great candidates
so long as they hit on enough good ones. 
&lt;/p&gt;
&lt;p&gt;
I put the word &amp;#34;diversity&amp;#34; in the title of this post and you might
wonder what I was going for there. So far, I&amp;#39;m just ranting about the
interview process. This becomes a diversity and privilige issue
because the process favors &amp;#34;elite&amp;#34; CS schools with established CS
cultures. I&amp;#39;m not talking about the fact that they pre-select high
performing candidates nor the fact that all the tech companies go to
those schools, sometimes exclusively for recruiting. I&amp;#39;m talking about
how the school&amp;#39;s student tech culture helps prepare the students for
the technical interview. 
&lt;/p&gt;
&lt;p&gt;
From my discussions with many graduates from many of these institutions, while
classes don&amp;#39;t prep for interviews, students at these CS schools
regularly share interview questions. Friends and classmates talk about
the questions they got and help each other out with practice
sessions - formal or otherwise. I&amp;#39;m certainly not faulting students
for doing this but it&amp;#39;s another known  secret. We all know that the
more tech interview questions you see the better prepared you&amp;#39;ll be -
both because you&amp;#39;ll get better at that specific problem solving skill
and also because you&amp;#39;ll likely get interview questions that are
already in your library. It&amp;#39;s that latter part that makes the whole
process very nod, nod, wink wink. 
&lt;/p&gt;
&lt;p&gt;
Nothing stops other students at other schools from doing similar but
it&amp;#39;s much harder at a commuter school where kids live off campus and
have to work part time jobs. It&amp;#39;s the reason I&amp;#39;m fighting so hard for
space and working on building a postitive tech culture at Hunter. Not
specifically for interviews but to help my students become a support
network for each other.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll finish by noting that while this &amp;#34;technical interview&amp;#34; process
might more or less work for the big boys - the hot company du jour, it
probably doesn&amp;#39;t for eveyrone else. A buddy of mine was talking to me
about the process he uses at his much smaller company. He noted that
he could use the &amp;#34;Google interview&amp;#34; process for his future employees
but since his company was much smaller and lesser known, people who
did well would probably also get offers from the big boys and go work
for them. His goal was to come up with a process that catches the
great candidates that &lt;strong&gt;don&amp;#39;t&lt;/strong&gt; do well on the Google interview to try
to catch the great talent that doesn&amp;#39;t do well on today&amp;#39;s technical
interviews. A number of smaller companies seem to be starting to do
this and from the few I&amp;#39;ve spoken to it seems to be going well.
&lt;/p&gt;
&lt;p&gt;
I get that big companies are machines and look for uniformity in all
processes including the interview process but there has to be a
better, more human way to evaluate talent than a one size fits all
process where the norm is failure - particularly when it seldom
relates to actual skills needed on the job.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ebooks, Nypl and Process Starvation</title>
      <link>https://cestlaz.github.io/post/ebooks-nypl-and-process-starvation/</link>
      <pubDate>Fri, 26 Apr 2019 12:04:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/ebooks-nypl-and-process-starvation/</guid>
      <description>&lt;p&gt;
I&amp;#39;m a big fan of E Ink e-readers. I had one a number of years ago. An &lt;a href=&#34;https://www.mobiletechreview.com/gadgets/Astak-EZ-Reader.htm&#34;&gt;Aztak EZ
Reader&lt;/a&gt;. It was great. Small, cheap, and independent - that is, not
tied in to Amazon or Barnes and Nobles and I found myself doing a lot
more recreational reading with it. I still preferred paper for
technical books but for easy reading  there was nothing like having
tons of reading options always available.
&lt;/p&gt;
&lt;p&gt;
Alas it sadly committed suicide by diving from my hand onto the hard
stone floor of the NY Post office as I waited on the passport line. I
tried other e-readers since then but found E ink so much easier on the
eyes. Not wanting to do my usual &amp;#34;schlepp all the books I might want
to read&amp;#34; on vacation a few years ago, I bit the bullet and bought a
kindle. 
&lt;/p&gt;
&lt;p&gt;
When I originally had the EZ-Reader I loaded it with mostly public
domain books. With the Kindle, I have purchased a small number of
books from Amazon to go along with all sorts of goodies from &lt;a href=&#34;https://www.gutenberg.org/&#34;&gt;Project
Gutenberg&lt;/a&gt; but there&amp;#39;s also been one HUGE change in the landscape. The
&lt;a href=&#34;https://nypl.overdrive.com/&#34;&gt;New York Public Library&lt;/a&gt;.  Public libraries are some of our greatest
public goods and it&amp;#39;s unfortunate that they&amp;#39;re perpetually
underfunded. Where else can a kid or indeed anyone go on any given day
and spend time indoors with no expectation of spending money. What&amp;#39;s
more in addition to books and now movies and sometimes games they
provide all manner of community services and programs to and for the
public. In terms of e-books though, you can use the NYPL without
leaving the comfort of your home.
&lt;/p&gt;
&lt;p&gt;
NYPL has a web site where you can search for and take out ebooks and
have them sent right to your kindle for 28 days at a time. If they
don&amp;#39;t have enough copies - something of a ludicrous point for a
digital resource, you can place it on hold. If it&amp;#39;s close to being
due, you can renew it unless someone else is on the queue at which
point the renewal request becomes a hold request. It&amp;#39;s all rather
seamless.
&lt;/p&gt;
&lt;p&gt;
My reading habits now regularly include taking out books from the
library and that&amp;#39;s led to an interesting resource issue - process
starvation.
&lt;/p&gt;
&lt;p&gt;
In case there are any on CS people reading this, everything running on
your computer at any point in time is a process. Each process gets a
small slice of computer time and it appears that the computer is
running everything at once. Some processes have a higher priority and
can get a bigger slice of time. On older &amp;#34;batch processing&amp;#34; systems,
high priority processes or jobs would run before lower priority
ones. For example, in a university setting, jobs submitted by
professors would be run before jobs submitted by grad students before
those submitted by undergrads. 
&lt;/p&gt;
&lt;p&gt;
This of course could lead to some processes never getting run if
higher priority jobs keep getting submitted. There&amp;#39;s an apocryphal
story about a computer at MIT that had a job submitted in 1967 but
still hadn&amp;#39;t run in 1973.
&lt;/p&gt;
&lt;p&gt;
So what&amp;#39;s happening to me? I have a number of free books just sitting
on my kindle as well as books that I&amp;#39;ve purchased. My friend Paul said
I had to read &amp;#34;Algorithms to Live By&amp;#34; so that&amp;#39;s thre. So is &amp;#34;Captains
Courageous&amp;#34; because I think I want to read it. There are also a bunch of
others. The trouble is, I keep seeing books that I want to read in the
library and I only have a 28 day window to read them, Most recently it
was &amp;#34;Sapiens&amp;#34; but before that it was &amp;#34;Turn Right at Machi Picchu&amp;#34; and
I read that right after &amp;#34;How Chance and Stupidity Have Changed
History,&amp;#34; &amp;#34;The Witch of Lime Street.&amp;#34; and &amp;#34;The Man with the Sawed-Off
Leg and Other Tales of a New York City Block.&amp;#34; As soon as, or before I
finish one, there&amp;#39;s a new one on hold and then on loan and the books I
own keep getting pushed back.
&lt;/p&gt;
&lt;p&gt;
Operating Systems usually implement process aging. If a job isn&amp;#39;t
handled fdor a long period of time its priority is increased. This
means that eventually it will be run. I guess I could do that and just
force myself to not read the next hot library book but I don&amp;#39;t kow if
I have that in me.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Seam Carving and Dynamic Programming</title>
      <link>https://cestlaz.github.io/post/seam-carving/</link>
      <pubDate>Mon, 22 Apr 2019 13:51:52 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/seam-carving/</guid>
      <description>&lt;p&gt;
It&amp;#39;s spring break and for me that&amp;#39;s always been a good time to explore
some new ideas.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s one that some of you might like, particularly if you&amp;#39;re
teaching APCS-A or something similar. 
&lt;/p&gt;
&lt;p&gt;
Many APCS-A teachers do a unit on image processing using the &lt;a href=&#34;https://docs.google.com/viewer?url=http%253A%252F%252Fmedia.collegeboard.com%252FdigitalServices%252Fpdf%252Fap%252Fpicture-lab-studentguide.pdf%0A&#34;&gt;picture
lab&lt;/a&gt; (&lt;a href=&#34;http://www.apcs.mathorama.com/index.php?n=Main.PictureLab&#34;&gt;alternate resource&lt;/a&gt;). Image processing is a nice platform to
explore two dimensional arrays. You basically use a 2D array of pixels
(points) to represent an image. You can just use a 2D array of ints
and store 0-255 at each location for a grayscale image and three ints
per pixel for red, green, blue. For this you can just use a simple
2D array of some color class - I think there&amp;#39;s even one built into
Java that you can use.
&lt;/p&gt;
&lt;p&gt;
I like to use the PPM format to save and later reload the images. PPM
is a simple text format. It starts with a header, then an optional
comment (starting with #), the width and height (4x4 in the example
below), then the maximum color number. Here&amp;#39;s an example:
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
P3
# feep.ppm
4 4
15
 0  0  0    0  0  0    0  0  0   15  0 15
 0  0  0    0 15  7    0  0  0    0  0  0
 0  0  0    0  0  0    0 15  7    0  0  0
15  0 15    0  0  0    0  0  0    0  0  0
&lt;/pre&gt;
&lt;p&gt;
You can even cut and paste the above into a file and view it with an
image viewer. 
&lt;/p&gt;
&lt;p&gt;
You can find the full format specification &lt;a href=&#34;http://netpbm.sourceforge.net/doc/ppm.html%0A&#34;&gt;here&lt;/a&gt; (&lt;a href=&#34;https://en.wikipedia.org/wiki/Netpbm_format&#34;&gt;alternate resource&lt;/a&gt;). 
&lt;/p&gt;
&lt;p&gt;
The picture lab has a bunch of interesting exercise ideas but if
you&amp;#39;re looking for something &amp;#34;next level&amp;#34; check this out:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/6NcIJXTlugc&#34;&gt;https://www.youtube.com/embed/6NcIJXTlugc&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Seam Carving is no longer a new cutting edge
technique but it still blows me away. It&amp;#39;s also a really cool project
for more advanced students for two reasons: one, it&amp;#39;s not a toy
assignment - it&amp;#39;s from real research and two, it contains a very
approachable example of dynamic programming which I&amp;#39;ll talk about in a
bit.
&lt;/p&gt;
&lt;p&gt;
If you watch the video, there are two pieces that can sound
intimidating. One is the &amp;#34;dynamic programming algorithm.&amp;#34; The other is
when they talk about the &amp;#34;gradient magnitude.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
Gradient magnitude. That sounds pretty hard. Actually, it could be
worse. When I first starting looking at the basics of image processing
it was described as &amp;#34;the derivative of the pixels.&amp;#34; &lt;strong&gt;The dirivative of
the pixels????&lt;/strong&gt; I have to know calculus for this?????? Not really. I
hate it when they use big words for simple ideas. All they&amp;#39;re really
talking about is the difference between the color of neighboring
pixels. That is, how much the color changes from one pixel to the
next. Let&amp;#39;s say you have a greyscale image (or have converted an image
to greyscale by averaging the red green and blue values), if you have
a vertical row of pixels with all the values of, let&amp;#39;s say 200 and the
row right next to it is also of values 200, then the two lines are of
the same color - there is no difference. If one pixel has a value of
200 and its neighbor has a value of 50, it changes quite a lot.
&lt;/p&gt;
&lt;p&gt;
The APCS-A picture lab describes a simple way to calculate this in
exercise 9 (linked above). You can also just do a search on &amp;#34;edge
detection tutorial&amp;#34; or &amp;#34;sobol edge detection tutorial&amp;#34; or something
similar.
&lt;/p&gt;
&lt;p&gt;
For Seam Carving, you have to find a sequence of pixels from one side
of the image to the other where the sum off all the differences is the
lowest. This is where the dynamic programming comes in.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_programming&#34;&gt;Dynamic Programming&lt;/a&gt; is a technique that, in basic terms takes a
problem that decomposes into subproblems and you store the optimal
subproblem solution rather than recalculating it.
&lt;/p&gt;
&lt;p&gt;
Probably the easiest example is Fibonacci numbers. You can generate
Fibonacci numbers recursively using something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fib&lt;/span&gt;(n):
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fib(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;fib(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
It&amp;#39;s very simple but it gets very slow very fast. That&amp;#39;s because it
keeps recalculating the same subproblems over and over and over.
&lt;/p&gt;
&lt;p&gt;
You can &amp;#34;fix&amp;#34; this by creating a list of previously found Fibonacci 
numbers and just return them rather than recalculating:
&lt;/p&gt;
&lt;div class=&#34;src src-python&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  fibs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# make room for 1000 fib numbers&lt;/span&gt;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fib&lt;/span&gt;(n):
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; fibs[n] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
          &lt;span style=&#34;color:#75715e&#34;&gt;# we already have the answer, just return it&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fibs[n]
      &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
          &lt;span style=&#34;color:#75715e&#34;&gt;# otherwise, calculate it, store it, return it&lt;/span&gt;
          f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fib(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;fib(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
          fibs[n]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;f
          &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; f&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
and that&amp;#39;s a dynamic programming solution for Fibonacci numbers,
specifically using a technique known as &lt;a href=&#34;https://en.wikipedia.org/wiki/Memoization&#34;&gt;memoization&lt;/a&gt;.  
&lt;/p&gt;
&lt;p&gt;
How does this apply to finding the proper seam to remove? The one with
the lowest total change? 
&lt;/p&gt;
&lt;p&gt;
First, go through the image array and build a second 2D array where
each element contains the pixels &amp;#34;gradient magnitude&amp;#34; or change using
either the method described in task 9 of the picture lab or
elsewhere. 
&lt;/p&gt;
&lt;p&gt;
For the first row, the sum of each pixels path so far is just the
array element.
&lt;/p&gt;
&lt;p&gt;
For each successive row, the value of any pixel is going to be it&amp;#39;s
value plus one of the values abov it, either up left, up center, or up
right. Specifically, the elements new value will be it&amp;#39;s value + the
smallest of the above three.
&lt;/p&gt;
&lt;p&gt;
For example, given this array representing the color changes:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/seam-mat1.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
When calculating the second item in the second row, you&amp;#39;ll consider
the three values above it:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/seam-mat2.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The smallest is 0 so that 2 remains a 2. If we do this for every
element in the second row we get the following:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/seam-mat3.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The green boxes added a 0 from the line above but the yellow ones
added the smallest non zero value from the above  row. Note that the
edges just considered the two values above them and didn&amp;#39;t wrap.
&lt;/p&gt;
&lt;p&gt;
Working the rest of the way through, you get this final array:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/seam-mat4.png&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
You can now easily identify the best seam to remove by finding the
smallest value in the bottom row and working your way up to the top.
&lt;/p&gt;
&lt;p&gt;
All together this is very doable by an advanced APCS-A student and the
results are very cool, particularly if you do it in an interactive
environment like processing.
&lt;/p&gt;
&lt;p&gt;
So, check out seam carving. I&amp;#39;ll leave you with one more link to a
longer presentation on the topic: 
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=ZBtXl3EuU14&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ZBtXl3EuU14&#34;&gt;https://www.youtube.com/watch?v=ZBtXl3EuU14&lt;/a&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Code Review Revisited or research - the teacher version</title>
      <link>https://cestlaz.github.io/post/code-review-2/</link>
      <pubDate>Tue, 16 Apr 2019 11:36:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/code-review-2/</guid>
      <description>&lt;p&gt;
Last semester I wrote about how I was introducing my students to &lt;a href=&#34;https://cestlaz.github.io/post/code-review/&#34;&gt;code
review&lt;/a&gt;. I thought it worked pretty well and was anxious to try it
again.
&lt;/p&gt;
&lt;p&gt;
Well, I did the lesson(s) again this past week and it looks like it&amp;#39;s
a keeper. The setup was pretty much the same with some hiccups due to
using a new platform. Last semester I used plain GitHub public
repos. This time, I&amp;#39;ve been using GitHub classroom which I like very
much but I forgot that I made this assignment use private repos which
turned out to be a hassle.
&lt;/p&gt;
&lt;p&gt;
If you didn&amp;#39;t read the previous post the short version was:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
group the kids in two&amp;#39;s
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Each does a written (no talking) code review on the others previous
lab. Very little guidance was given as to what the review should
look like.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
We then did two parings where one person talked through a live code
review with the other.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Finally, we did one more written session. 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
This left person with three reviews. 
&lt;/p&gt;
&lt;p&gt;
This took the whole class since we had to finish some other material
before starting the reviews.
&lt;/p&gt;
&lt;p&gt;
During the next class we discussed the review, what was important,
what wasn&amp;#39;t etc. We also talked about coding standards and things like
&lt;a href=&#34;https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines&#34;&gt;The C++ Core Guidelines&lt;/a&gt; and Google&amp;#39;s &lt;a href=&#34;https://google.github.io/styleguide/cppguide.html&#34;&gt;C++ Style Guide&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As a follow up assignment, they&amp;#39;re going to add a feature to another
student&amp;#39;s solution to the lab they reviewed.
&lt;/p&gt;
&lt;p&gt;
It seems that the class was effective when I taught it last
semester. I&amp;#39;ve come to that conclusion because I&amp;#39;m teaching that group
again in their Data Structures class and they seem to do better with
Pair Programming (which I related to a live, real-time code review)
and it does seem that they&amp;#39;re paying at least a bit more attention to
the issues we highlighted in the code review lesson. 
&lt;/p&gt;
&lt;p&gt;
I won&amp;#39;t get the same chance to follow up with this group but I can at
least see in the next few weeks if it had any positive affect. One of
the things I&amp;#39;m curious about has to do with the student&amp;#39;s backgrounds.
Last semester&amp;#39;s students all had a year of APCS-A under their belts
before coming to Hunter. This semester&amp;#39;s students had a range from
APCS-P to a summer or after school program to nothing and their last
semester class with me was in my opinion a much lighter programming
class than a year of APCS-A. I&amp;#39;m wondering if the current crop, having
written fewer large programs will have a different appreciation for
the topics we discussed during the code reviews. 
&lt;/p&gt;
&lt;p&gt;
All of this got me to thinking about some of the things I saw both at
SIGCSE and on some of the posts that followed. Specifically about
teacher vs researchers and also, although not mentioned, K12 teachers,
teachers at the college level and researchers.
&lt;/p&gt;
&lt;p&gt;
I was thinking about the fact that this is one of the ways I work to
improve at my craft. I try something, evaluate and reflect on the
results, then repeat, tweak etc. Not everything I try is a winner but
overall I think I&amp;#39;ve made a pretty steady progression as a
teacher. 
&lt;/p&gt;
&lt;p&gt;
I was also thinking that had I done this while in High School I would
have taught the lessons two to five times to similar but different
groups of students within a short period of days. I would also have
been able to iterate, possibly with variations, each semester. It
might not be instant but that&amp;#39;s a lot of potential feedback. At
college, I&amp;#39;m only teaching one section of each class and I&amp;#39;m guessing
that most full time faculty members might only teach two of a
particular class (although I could be very wrong - I just based this
on looking up a few schedules). I also don&amp;#39;t see my kids every
day. This makes for a slower, less effective feedback loop. On the
other hand, I&amp;#39;m not running pillar to post every day so can actually
take the time to evaluate what&amp;#39;s been happening in each class in
arguably a more meaningful way.
&lt;/p&gt;
&lt;p&gt;
All of this is to say that most teachers I know trust other teacher&amp;#39;s
experiences rather than &amp;#34;the research&amp;#34; and that was also what was born
out in this University of Colorado &lt;a href=&#34;https://dl.acm.org/citation.cfm?id=3287420&#34;&gt;survey&lt;/a&gt;. While there are plenty of
bad teachers who know that &amp;#34;it&amp;#39;s always been done this way and it&amp;#39;s
worked well enough&amp;#34; I&amp;#39;ll always consider my most trusted education
resource to be a thoughtful, reflective, experienced teacher who
actively works on improving at their craft.  
&lt;/p&gt;
&lt;p&gt;
This is not to say that there isn&amp;#39;t merit in research. I saw
presentations at SIGCSE and on the one had said to myself &amp;#34;ok, so he
discovered something that any moderately experienced K12 teacher
already knows&amp;#34; and at the same time thinking &amp;#34;but it&amp;#39;s great that
they&amp;#39;re now formalizing and documenting it.&amp;#34; There are also things
that can be researched that a single classroom teacher just can&amp;#39;t
approach and finally, to paraphrase a line from Mark Guzdial&amp;#39;s talk
where he specifically addressed other CS Ed researchers - we can build
things and they need things built - a teacher / researcher partnership
can open a lot of yet unexplored doors for educators.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s all a reminder that we&amp;#39;re all playing different
roles. Researchers aren&amp;#39;t teachers, college teachers aren&amp;#39;t K12
teachers, K12 teachers subdivide further and of course the same holds
for the reverse direction. Sure there are similarities in our goals
and our roles but there are some important differences.
&lt;/p&gt;
&lt;p&gt;
With that in mind, I&amp;#39;ll leave this with a quote form one of the all
time great screwball comedies:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/Hl9OzCY9fVE?start=116&#34;&gt;https://www.youtube.com/embed/Hl9OzCY9fVE?start=116&lt;/a&gt;&amp;#34;
frameborder=&amp;#34;0&amp;#34; allow=&amp;#34;accelerometer; autoplay; encrypted-media;
gyroscope; picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS Teacher PD at Grow with Google</title>
      <link>https://cestlaz.github.io/post/pd-at-gwg/</link>
      <pubDate>Fri, 12 Apr 2019 08:12:54 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-at-gwg/</guid>
      <description>&lt;p&gt;
Yesterday we held our third monthly Professional Development session
for teachers of &amp;#34;APCS-A, Similar, and Beyond.&amp;#34; It&amp;#39;s great to see that
we&amp;#39;re starting to form a core of a community of CS teachers teaching
some of the more advanced classes as there is a core group that keeps
coming back for more. Even better is the fact that we&amp;#39;re gaining a
couple of new teachers at each session.
&lt;/p&gt;
&lt;p&gt;
Last time, we were at &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt;, a cloud provide that has been
very involved in education since their creation  and has been a
tremendous boon to my education projects over the years. 
&lt;/p&gt;
&lt;p&gt;
This time we were hosted at &lt;a href=&#34;https://events.withgoogle.com/grow-with-google-in-nyc/#content&#34;&gt;Grow with Google&lt;/a&gt;&amp;#39;s new New York City
space. It&amp;#39;s a great space on the first two floors of Google&amp;#39;s main
building in Chelsea - 111 8th avenue. GWG looks like it will be a
terrific resource for New Yorkers with workshops ranging from coding,
resume writing, digital skills, and more. They also have offerings for
both kids and adults. 
&lt;/p&gt;
&lt;p&gt;
They were also great hosts, providing a great room for us to run our
session as well as a nice dinner to keep the teachers fueled.
&lt;/p&gt;
&lt;p&gt;
As usual, we had two major themes for our PD. First the pedagogy. My
former colleage Topher started with a pair programming workshop. 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/gwg-topher.jpg&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Pair programming is a pretty common technique but it&amp;#39;s deceptively
difficult to do well. It&amp;#39;s not as simple as &amp;#34;work in groups of two&amp;#34;
and it can be a challenge to make sure both students are engaged and
progressing while using this practice.
&lt;/p&gt;
&lt;p&gt;
Topher ran the group through a pair programming exercise and led a
discussion as to some of the strategies he uses and some of the
challenges he&amp;#39;s face. I found it very helpful. Even small suggestions
like when he has each pair draw their &amp;#34;team flag&amp;#34; on a piece of paper
which they&amp;#39;ll hold up if they want to ask for help. In the discussion
after the workshop I mentioned that I&amp;#39;ve had more success with pair
programming when I relate it to a series of code review lessons I&amp;#39;ve
been doing and that if people were interested I&amp;#39;d talk about those
lessons at a future session.
&lt;/p&gt;
&lt;p&gt;
Then we had dinner after which I did the content piece.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/gwg-z.jpg&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
We first look at a bit of &lt;a href=&#34;https://ccl.northwestern.edu/netlogo/&#34;&gt;NetLogo&lt;/a&gt; for image procesing mostly so I
could introduce the participants to NetLogo since it&amp;#39;s really an
underused, underappreciated environment. Then we talked a bit about
the APCS-A image lab. This led to the meat of the content piece. We
took a look at &lt;a href=&#34;https://www.youtube.com/watch?v=6NcIJXTlugc&amp;amp;list=WL&amp;amp;index=44&amp;amp;t=0s&#34;&gt;this video&lt;/a&gt; on seam carving. When I first saw it, I was
blown away. Now it&amp;#39;s an old technique but I&amp;#39;m still blown away by how
it can be used as both motivation and a a platform to teach some
dynamic programming. We then did a brief overview behind the basic
ideas of dynamic programming and then developed the dynamic
programming algorith that&amp;#39;s used in Seam Carving. I&amp;#39;ll probably write
all of this up in more detail in a future post.
&lt;/p&gt;
&lt;p&gt;
Overall it was a great event. We have one more PD scheduled for May
and then we&amp;#39;ll start it up again in the Fall.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s great to have amazing partners like Google and Digital Ocean to
help support our CS teachers and I&amp;#39;m looking forward to work with both
of them for years to come.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Implicit Curricula</title>
      <link>https://cestlaz.github.io/post/implicit-curricula/</link>
      <pubDate>Sun, 07 Apr 2019 16:23:43 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/implicit-curricula/</guid>
      <description>&lt;p&gt;
The state got back to us the other week on our CSEd programs. Still no
approval. 
&lt;/p&gt;
&lt;p&gt;
One of the requirements is that we have 12 graduate CS
credits in our program and that in those courses these five major
areas:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Algorithms and programming
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Computing systems
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Data and analysis
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Impacts of computing
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Networks and the internet
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
as described in the &lt;a href=&#34;https://k12cs.org/&#34;&gt;K12 CS Framework&lt;/a&gt;. Even though many of the items
described in the framework fit better in an education side course NY
is requiring that it&amp;#39;s all covered in CS courses offered by a CS
department.  The state has more information &lt;a href=&#34;http://www.nysed.gov/college-university-evaluation/computer-science-certificate-coursework-guidance&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
To be honest, I&amp;#39;m not a fan of the K12 Framework and others have also
voiced their concerns about it. Ultimately I think many states will
use it as a certification guide and it will open the door to
substandard preservice programs that will certify teachers lacking in
CS content knowledge.
&lt;/p&gt;
&lt;p&gt;
Still, the programs we designed at Hunter more than covered all the
required bases. 
&lt;/p&gt;
&lt;p&gt;
So, why did the state come back asking for clarification? Because not
everything was explicit in our sample syllabi. As we all know, Syllabi
are usually rather terse documents with just a couple of lines per
topic, maybe also an assignment and some readings. If they contained
all the richness of all the lessons they&amp;#39;d be volumes rather than the
usual page or two. So, to provide the requested clarifications I&amp;#39;ve been spending
the weekend breaking them out to show more detail.
&lt;/p&gt;
&lt;p&gt;
This got me thinking about the concept of implicit items in 
curricula. Much of the richness of a lesson comes not from the
description of the topic in the syllabus but also from related and
ancillary items that aren&amp;#39;t specifically listed - implicit items. One
example I wrote about before is &lt;a href=&#34;https://cestlaz.github.io/posts/2010-01-10-towers-of-hanoi.html/&#34;&gt;the Towers of Hanoi&lt;/a&gt;. When I teach it,
on the one hand, it&amp;#39;s a lesson about a recursive solution to a problem
but on the other hand there&amp;#39;s all sorts of other richness to the
lesson. We talk about
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Proof
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Run time
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Hard problems
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Moores law and the limits f computing power
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Alternate approaches to problems
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
None of which is in a typical Towers of Hanoi lesson plan nor in most
text books yet to me they&amp;#39;re the most important, interesting parts of
the lesson. 
&lt;/p&gt;
&lt;p&gt;
Another example is when I talk about changing the data structure
rather than the code when I teach &lt;a href=&#34;https://cestlaz.github.io/posts/2014-02-26-change-the-data/&#34;&gt;search&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
In our Ed proposals one such place was when we move from using an
online IDE to a local development environment and discuss all sorts of ramifications
another is when we create a web application in our topics class and
things like authentication and security are discussed.
&lt;/p&gt;
&lt;p&gt;
I spent most of this weekend going through our proposals and  making
sure it was clear everywhere we covered something relating to those &amp;#34;5
areas&amp;#34; of computer science.
&lt;/p&gt;
&lt;p&gt;
The unfortunate thing is that of curricular material and  knowledge
isn&amp;#39;t easy to collect and share with others.
&lt;/p&gt;
&lt;p&gt;
I and others have written about lesson ideas on our blogs but there&amp;#39;s
no searchable, shareable, discoverable  place for either basic lesson
material or these rich implicit items. I wrote about &lt;a href=&#34;https://www.engage-csedu.org/&#34;&gt;EngageCS&lt;/a&gt; and
&lt;a href=&#34;http://nifty.stanford.edu/&#34;&gt;Nifty Assignments&lt;/a&gt; &lt;a href=&#34;https://cestlaz.github.io/post/adapting-a-nifty-assignment/&#34;&gt;before&lt;/a&gt; but they&amp;#39;re really core lesson ideas and
aren&amp;#39;t really easy to find grab and use.
&lt;/p&gt;
&lt;p&gt;
I guess the closest project moving in this direction is probably
&lt;a href=&#34;https://cssplice-cm.github.io/&#34;&gt;CSSplice Curriculum Materials Working Group&lt;/a&gt; that I found out about
from &lt;a href=&#34;https://twitter.com/AustinCorgiBart&#34;&gt;Cory Bart&lt;/a&gt; at this past SIGCSE.
&lt;/p&gt;
&lt;p&gt;
Check out the project link and if you&amp;#39;ve got a great lesson with lots
of implicit learnings going on, please share it in the comments.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 57 Dired Narrow</title>
      <link>https://cestlaz.github.io/post/using-emacs-57-dired-narrow/</link>
      <pubDate>Sun, 07 Apr 2019 11:57:57 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-57-dired-narrow/</guid>
      <description>&lt;p&gt;
One of Emacs power features that I&amp;#39;ve never quite gotten into is
&lt;a href=&#34;https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html&#34;&gt;dired&lt;/a&gt;, the Directory Editor. I&amp;#39;ve already done a &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-38-dired/&#34;&gt;video on the package&lt;/a&gt;.
It&amp;#39;s really cool and I do use it at times but I still haven&amp;#39;t started
using it for my day to day.
&lt;/p&gt;
&lt;p&gt;
Well, I just started using a couple of packages that might change
this. They&amp;#39;re part of a set of dired addons that you can check out at the
&lt;a href=&#34;https://github.com/Fuco1/dired-hacks/tree/2c1234592aee91dcd9401bcd67213e6a4a464fd9&#34;&gt;dired hacks&lt;/a&gt; page. The specific ones I&amp;#39;m talkign about are
&lt;code&gt;dired-subtree&lt;/code&gt; and &lt;code&gt;dired-narrow&lt;/code&gt;. &lt;code&gt;dired-subtree&lt;/code&gt; is cool but it&amp;#39;s
not the game changer. &lt;code&gt;dired-narrow&lt;/code&gt; is. One of my issues with
dired is that I can&amp;#39;t see all the files I&amp;#39;m operating on easily at the
same time. If I&amp;#39;m marking a large number of files to delete I want to
be able to see all of them at once so I&amp;#39;m sure I&amp;#39;m not making a
mistake. &lt;code&gt;dired-narrow&lt;/code&gt; lets me easily do this.
&lt;/p&gt;
&lt;p&gt;
Check out the video to see the details:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/pZzDayi5lRo&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Busy Week</title>
      <link>https://cestlaz.github.io/post/busy-week/</link>
      <pubDate>Sat, 06 Apr 2019 07:32:49 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/busy-week/</guid>
      <description>&lt;p&gt;
I&amp;#39;m glad it&amp;#39;s Saturday morning. It&amp;#39;s been a busy week. It looks like
there&amp;#39;s a couple more to plough through but hopefully then I can catch
my breath over spring break.
&lt;/p&gt;
&lt;p&gt;
Why so busy? It&amp;#39;s the same old story - you&amp;#39;ve got all those projects
that you&amp;#39;re waiting on and everything comes in at the same time.
&lt;/p&gt;
&lt;p&gt;
To start off, it&amp;#39;s college decision season. The high school seniors
all know their options and are deciding where to go. While we&amp;#39;re still
considering some applications to my Daedalus honors CS program, most
of the offers have gone out or will go out within a couple of days.
&lt;/p&gt;
&lt;p&gt;
I started the week with an info session about the program. eBay was
nice enough to host. I&amp;#39;ve held this session there now for the past
three years. First time, I had about 20 attendees and am not sure if
it made a difference in any high school senior&amp;#39;s decision. Last year
we had about 40 in the room but this year we reached capacity
at 65. Each senior was allowed to brign a +1. Some didn&amp;#39;t, many
brought a parent but a few brought a friend. At the end of the
session, most of the friends sought me out and asked if it was too
late to apply. I told them where to fill everything out but
unfortunately I didn&amp;#39;t know if I would be allowed to consider them or
not. 
&lt;/p&gt;
&lt;p&gt;
I also had about 10 of my current students at the event. This was the
first time I was able to have that many. First time, I only had a
handful in the program and last year we first had to reschedule due to
weather and most of my students had class on the rain date. Having a
bunch of current students there to mix and talk with the applicants
was proabably the most important part of the evening. 
&lt;/p&gt;
&lt;p&gt;
At the end, the high schoolers had left and the students and I were
BSing along with Paul, our host when Paul offered a tour and then went
into an impromptu tech talk with the kids. I really
wanted to get home to bed but the kids were loving it so I let it
ride.
&lt;/p&gt;
&lt;p&gt;
All in all it was a great night for my current students and I&amp;#39;m hoping
also for the high schoolers but it was a draining way to start the
week.
&lt;/p&gt;
&lt;p&gt;
We also had a big CUNY2X event last week on Thursday evening. Around
50 students interviewing with fifteen or so companies for summer
internships. We&amp;#39;ve had this event three semesters in a row now. It&amp;#39;s a
long evening but at the end of the day lots of students get both
interviewing experience as well as offers. 
&lt;/p&gt;
&lt;p&gt;
Things also started to move this past week on our CS Education
programs but not in a good way. Rather than approving our programs
they came back with a bunch of questions. It&amp;#39;s rather frustrating
since we cover everything they want and then some but they don&amp;#39;t seem
to be seeing it. For example, we&amp;#39;ve got a big chunk of our topics
course where we&amp;#39;ll essentially cover full stack development light and
we cover way in excess of anything in NY&amp;#39;s forthcoming standards on
networks and systems not to mention things like cybersecurity,
accessibility, UX and more in that unit but the state said they don&amp;#39;t see
any evidence to that effect. So I had too start to take our syllabi and bloat
them with excruciating detail. Something I&amp;#39;ll be doing over the
weekend and into next week.
&lt;/p&gt;
&lt;p&gt;
To add to the week I had to pack. I&amp;#39;ve been pushing for an office move
for about two years. When I came to Hunter they placed me physically
in the Ed school. It made sense - I&amp;#39;m officially appointed there but
I&amp;#39;ve done most of my work so far with CS. Even when my CSED programs
start, many of the students will be grad students or working teachers
so they won&amp;#39;t be on campus much except for when they teach. On the
other hand the CS undergrads are around all the time. Well, Monday I&amp;#39;m
moving to a new office right by the all the CS action. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also been a busy semester for my course planning. I&amp;#39;m teaching
data structures at Hunter for the first time. I&amp;#39;ve taught it many
times before but that was to a known audience with a different
toolset - Java instead of C++. To be honest, I&amp;#39;m not particularly
happy with how I&amp;#39;ve been doing. I don&amp;#39;t think I&amp;#39;ve been terrible but
I&amp;#39;ve left plenty of classes feeling I&amp;#39;ve missed my marks. I know
that it&amp;#39;s something I&amp;#39;ll have figured out and next time around I&amp;#39;ll be
back up to speed but it&amp;#39;s made planning and reflection more of a time
sink and it always bothers me when I don&amp;#39;t feel my students are
getting my best.
&lt;/p&gt;
&lt;p&gt;
So, it&amp;#39;s been a busy week in a busy semester. For the most part, good
things happening but I&amp;#39;m really looking forward to spring break.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Choosing A Textbook</title>
      <link>https://cestlaz.github.io/post/choosing-a-textbook/</link>
      <pubDate>Sun, 31 Mar 2019 10:41:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/choosing-a-textbook/</guid>
      <description>&lt;p&gt;
Now and again there are requests on the assorted CS Education forums
asking about which text book to use. These requests are usually for
APCS-A. There are usually a number of &amp;#34;I&amp;#39;m very happy with …&amp;#34;
replies but I thought I&amp;#39;d take a bit of a deeper dive into what
teachers might want to consider when evaluating a textbook.
&lt;/p&gt;
&lt;p&gt;
It was never an issue when I started as a math teacher. The choice was
generally already made and the school had one book for each subject
level. Sometimes there were two if the school was transitioning from
one book to another.
&lt;/p&gt;
&lt;p&gt;
The older books were in general more rigorous and at the same time
more terse. The newer ones were more accessible but never seemed to
give enough guidance for kids to approach the harder
problems on their own. 
&lt;/p&gt;
&lt;p&gt;
In general, most teachers I know used them primarily as a source for
homework problems.
&lt;/p&gt;
&lt;p&gt;
In the CS world, it seems like we have more options. 
&lt;/p&gt;
&lt;p&gt;
When I first starting teaching APCS-AB at Stuy we had to buy new books
as the enrollment had just shot up. There weren&amp;#39;t many books that
covered both the programming and the data structures but I found one
nad it was a good one:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://pictures.abebooks.com/isbn/9780314933072-uk.jpg&#34; alt=&#34;https://pictures.abebooks.com/isbn/9780314933072-uk.jpg&#34; title=&#34;https://pictures.abebooks.com/isbn/9780314933072-uk.jpg&#34; /&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
It was both accessible and was thorough. It wasn&amp;#39;t a great source of
exercises but it was no worse than the other options.
&lt;/p&gt;
&lt;p&gt;
When we moved to C++ it was pretty easy as the same book was still
available, albeit now in two parts:
&amp;lt;div&amp;gt;
&amp;lt;figure class=&amp;#34;z_image_right&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/31pkP2rZj5L._BO1,204,203,200_.jpg&#34; alt=&#34;https://images-na.ssl-images-amazon.com/images/I/31pkP2rZj5L._BO1,204,203,200_.jpg&#34; title=&#34;https://images-na.ssl-images-amazon.com/images/I/31pkP2rZj5L._BO1,204,203,200_.jpg&#34; /&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://images-na.ssl-images-amazon.com/images/I/51BS6W1XRRL._SX394_BO1,204,203,200_.jpg&#34; alt=&#34;https://images-na.ssl-images-amazon.com/images/I/51BS6W1XRRL._SX394_BO1,204,203,200_.jpg&#34; title=&#34;https://images-na.ssl-images-amazon.com/images/I/51BS6W1XRRL._SX394_BO1,204,203,200_.jpg&#34; /&gt;&amp;#34; width=&amp;#34;150px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;/div&amp;gt;
When we went to Java we couldn&amp;#39;t find a book that covered both the
programming and the data structures but settled on this one: 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;https://i.ebayimg.com/images/g/N4oAAOSw4bVTmzOV/s-l1600.jpg&#34; alt=&#34;https://i.ebayimg.com/images/g/N4oAAOSw4bVTmzOV/s-l1600.jpg&#34; title=&#34;https://i.ebayimg.com/images/g/N4oAAOSw4bVTmzOV/s-l1600.jpg&#34; /&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Nowadays, particularly with data structures no longer being in issue
at most high schools there are many more choices and even back then
there was more to consider than I&amp;#39;m sure I realized.
&lt;/p&gt;
&lt;p&gt;
When we recommend books to our colleagues we&amp;#39;re probably not being as
helpful as we can when we say &amp;#34;we like ….&amp;#34;&amp;#34;
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s important to think about how the text book is going to be
used. 
&lt;/p&gt;
&lt;p&gt;
Some text books weave a project, toolkit, or theme throughout
the chapters. That&amp;#39;s great if the teacher&amp;#39;s going to align the course
closely with the textbook. If you don&amp;#39;t however, it can make later
chapters harder on the students. If the text book develops, let&amp;#39;s say,
a graphics library in the early chapters and the teacher doesn&amp;#39;t do
the same, when the later chapters rely on this library students will
find themselves in a bit of trouble. 
&lt;/p&gt;
&lt;p&gt;
Some textbooks develop these large projects or libraries but do so as
add ons to each chapter. For most teachers that&amp;#39;s probably a better
bet.
&lt;/p&gt;
&lt;p&gt;
Does the textbook have a rich set of problems, questions, and
examples? I haven&amp;#39;t found many that are great but then it&amp;#39;s probably
not as important these days with resources like &lt;a href=&#34;https://codingbat.com/java&#34;&gt;Coding Bat&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
Does the textbook present material in a way similar to the teacher? If
it is, is that a good thing or not? On the one hand, it might make the
book easier for the student that&amp;#39;s &amp;#34;getting it&amp;#34; in class and then the
book and the class reinforce each other. On the other hand, if I&amp;#39;m not
connecting with a student, it&amp;#39;s probably better if the textbook takes
on a different voice.
&lt;/p&gt;
&lt;p&gt;
There are more questions one should ask themselves when desciding on a
new textbook but I think you get the idea.
&lt;/p&gt;
&lt;p&gt;
For my classes, I&amp;#39;ve never strictly used the textbook. It&amp;#39;s more meant
as a reference and alternate resource for the kids. For this reason, I
like a book that is more on the tutorial side. I generally don&amp;#39;t use
them for assignments but if the book has good ones, so much the
better. As we cover a unit in class, I want the book to be available
for the student who might need extra support. Nowadays, with so many
free resources out there I try to leverage them as well. For my
beginners at Hunter, I&amp;#39;ve been using &lt;a href=&#34;https://automatetheboringstuff.com/&#34;&gt;this&lt;/a&gt; and am pretty happy with it.
&lt;/p&gt;
&lt;p&gt;
So, what am I missing? What else should we be considering more so than
just &amp;#34;I like the book.&amp;#34;
&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adapting A Nifty Assignment</title>
      <link>https://cestlaz.github.io/post/adapting-a-nifty-assignment/</link>
      <pubDate>Sat, 16 Mar 2019 08:20:47 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/adapting-a-nifty-assignment/</guid>
      <description>&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_center&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;&lt;img src=&#34;http://nifty.stanford.edu/2019/popyack-nifty-post-it/samples/animation/Animated_325.gif&#34; alt=&#34;http://nifty.stanford.edu/2019/popyack-nifty-post-it/samples/animation/Animated_325.gif&#34; title=&#34;http://nifty.stanford.edu/2019/popyack-nifty-post-it/samples/animation/Animated_325.gif&#34; /&gt;&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;a href=&#34;http://nifty.stanford.edu/&#34;&gt;Nifty Assignments&lt;/a&gt; session at SGICSE is always a popular one.
&lt;/p&gt;
&lt;p&gt;
Go to &lt;a href=&#34;http://nifty.stanford.edu/&#34;&gt;the site&lt;/a&gt; and you&amp;#39;ll find links to all the assignments presented
from 1999 to the present year.
&lt;/p&gt;
&lt;p&gt;
On the one hand, it&amp;#39;s a great resource. On the other, the assignments
vary in nifty-ness depending on one&amp;#39;s personal taste. To me, there
seemed to be a run of nifty assignments that were really just &amp;#34;take a
generic assignment and fancy up the graphics&amp;#34; mixed in with one&amp;#39;s that
I found really cool. There&amp;#39;s also no way to really tell if an
assignment scratches your fancy without clicking through and reading
all of them.
&lt;/p&gt;
&lt;p&gt;
I thought I&amp;#39;d talk about one of the assignments presented at this past
SIGCSE. I don&amp;#39;t think I&amp;#39;ll have an opportunity to use it directly but
I did find it pretty nifty. I also thought I&amp;#39;d share some tweaks I&amp;#39;d
consider if I were to use it.
&lt;/p&gt;
&lt;p&gt;
The assignment is Jeffrey L. Popyack&amp;#39;s &lt;a href=&#34;http://nifty.stanford.edu/2019/popyack-nifty-post-it/&#34;&gt;Post-It Pandemoniim&lt;/a&gt; assignment.
&lt;/p&gt;
&lt;p&gt;
At first glance, or rather at the start of the presentation it seemed
a pretty lightweight assignment - kids make a pixelated image by
putting colored postit notes on a grid. That&amp;#39;s a simple, nice
intro to 2D arrays but not all that nifty. The nifty part came when
you drilled down into the details. 
&lt;/p&gt;
&lt;p&gt;
The assignment starts with a GIF image. First you process it  with a program
provided hich produces sheets describing a 3x5 section of the overall
image. These sheets are ultimately distributed to the students
perofming the activity. This still doesn&amp;#39;t sound tremendously deep but
the activity also lets you talk about file formats with color
palettes. The idea that instead of storing the rgb triple for each
pixel you store an index into a palette of 256 colors that&amp;#39;s also
embedded into the file. This is a great way to introduce indirect
lookups. Another feature Poplyack spoke about was compression. He
mentioned the project lending itself to Run Length Encoding. The idea
that if the image has a run of adjacent pixels of the same color,
let&amp;#39;s say 9 reds in a row, instead of encoding them as &amp;#34;RRRRRRRRR&amp;#34; you
would use something like &amp;#34;9R.&amp;#34; Add this all together and it&amp;#39;s pretty
nifty. 
&lt;/p&gt;
&lt;p&gt;
I did have a problem, though with the compression part. During the
talk, Poplyack talked about Run Length Encoding which is pretty simple
and approachable to beginners. GIF, however, as far as I know uses
Lempel-Ziv compression which is much more complex.
&lt;/p&gt;
&lt;p&gt;
If I were to use this assignment, I&amp;#39;d probable make a few changes. I&amp;#39;m
not sure which of the following I&amp;#39;d actually do but here&amp;#39;s what I
would think about.
&lt;/p&gt;
&lt;p&gt;
First I would consider using the &lt;a href=&#34;https://en.wikipedia.org/wiki/Netpbm_format&#34;&gt;NetPBM&lt;/a&gt; formats. Some of these formats
are simple ASCII. You can see some examples on the &lt;a href=&#34;https://en.wikipedia.org/wiki/Netpbm_format&#34;&gt;Wikipedia&lt;/a&gt;
page. This lets them go directly from the file to the poster. You also
have binary encoded versions of the format which adds a layer of
complexity if desired.
&lt;/p&gt;
&lt;p&gt;
The second thing I would consider is using &lt;a href=&#34;https://en.wikipedia.org/wiki/PCX&#34;&gt;PCX&lt;/a&gt; files instead of
GIFs. PCX is a pretty simple format. It uses a color palette and also
RLE compression so while it&amp;#39;s no longer as well known as GIF I think
it might present a more accessible way of getting to a format with Run
Length Encoding and a palette.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not sure of the exact direction I&amp;#39;d go in with this assignment but
these are the additional things I&amp;#39;d think about. It&amp;#39;s pretty nifty as
is but as with a lot of nifty assignments, part of the fun is
customizing it for your situation.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New Monitor</title>
      <link>https://cestlaz.github.io/post/new-monitor/</link>
      <pubDate>Sat, 09 Mar 2019 17:38:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/new-monitor/</guid>
      <description>&lt;p&gt;
&amp;lt;figure class=&amp;#34;z_image_right&amp;#34;&amp;gt;
    &amp;lt;img src=&amp;#34;/img/monitors.jpg&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Got a new monitor today and wanted to share.
&lt;/p&gt;
&lt;p&gt;
My old one was a 27&amp;#34; Hanns G. Actually, the old ones - my old set up
was 2 of them side by side. When I started at Hunter, I was given a
piddly small monitor so I tried to buy my own 27&amp;#34; Hanns G to bring in
but they were no longer available. The 27&amp;#34; jobs available then were
much more expensive so my work monitor situation has been sadly
lacking.
&lt;/p&gt;
&lt;p&gt;
The 2 27&amp;#34; setup worked pretty well but then I read &lt;a href=&#34;https://hackernoon.com/the-best-display-for-programming-8aad0be4227d&#34;&gt;this&lt;/a&gt; post and did a
little research. It turns out that Costco has a great deal on an &lt;a href=&#34;https://www.costco.com/LG-43UD79-B-43%2522-Class-Ultra-HD-4K-IPS-Monitor.product.100378322.html&#34;&gt;LG
43&amp;#34; 4K&lt;/a&gt; monitor so I took the plunge. I also had to pick up a &lt;a href=&#34;https://www.amazon.com/EVGA-GeForce-Passive-Graphics-02G-P4-6332-KR/dp/B073VPKV26/ref=sr_1_3?keywords=gt+1030&amp;amp;qid=1552171987&amp;amp;s=gateway&amp;amp;sr=8-3&#34;&gt;cheap
video card&lt;/a&gt; to drive it since I was just using onboard video and my
setup is pretty old.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s HUGE. I love it but am now working to figure out how best to set
things up. 
&lt;/p&gt;
&lt;p&gt;
The added bonus is that I can now bring one or both of the 27&amp;#34;
monitors to work!!!!!!
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;re on the  market for a new monitor I have to say that I&amp;#39;m
really happy with the LG. Just wanted to share.
&lt;/p&gt;
&lt;p&gt;
&amp;#34;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Evaluating Java IDES for teaching teachers.</title>
      <link>https://cestlaz.github.io/post/java-ides/</link>
      <pubDate>Fri, 08 Mar 2019 13:29:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/java-ides/</guid>
      <description>
&lt;p&gt;
Since Hunter uses C++ as it&amp;#39;s core language, I haven&amp;#39;t used Java much
in the past three years. That&amp;#39;s going to change pretty soon. Once we
start offering our CS teacher Certificate and Masters programs I&amp;#39;ll
once again start teaching with Java as that&amp;#39;s one of the langauges
that we want to prepare our teachers with.
&lt;/p&gt;
&lt;p&gt;
That means deciding on a set of tools and so I&amp;#39;ve been spending time
evaluating Java programming environments with an eye on the
beginner since not only do the teachers I work with have to be
comfortable with the tool but more importantly they will have to be
able to support the tool for all of their students.
&lt;/p&gt;
&lt;p&gt;
One tool we&amp;#39;re likely to use is &lt;a href=&#34;https://repl.it/&#34;&gt;repl.it&lt;/a&gt;. That&amp;#39;s an online environment
for Java and a bunch of other languages. There&amp;#39;s a lot to like about
it and teachers might go with it or a similar cloud based option in
their classes but it&amp;#39;s important that we also prepare teachers to
build programs locally.
&lt;/p&gt;
&lt;p&gt;
So, here&amp;#39;s my criteria and here&amp;#39;s what I found.
&lt;/p&gt;
&lt;h3 id=&#34;headline-1&#34;&gt;
The tool has to install easily on all platforms
&lt;/h3&gt;
&lt;p&gt;
I started with my desktop Linux machine. I&amp;#39;m running LinuxMint which
is pretty mainstream and I installed the Java tools using Mint&amp;#39;s
package manager. The packages are openjdk-11 and it looks like running
Java 10. If the IDE or editor I installed  didn&amp;#39;t work off the bat it
was no good. If it installed and I liked it I&amp;#39;ll pass it off to
friends who use Windows and Macs to see if the install there is
equally seamless.
&lt;/p&gt;
&lt;h3 id=&#34;headline-2&#34;&gt;
The tool has to be easy to run 
&lt;/h3&gt;
&lt;p&gt;
After install you have to be able to run it easily. No fancy &lt;code&gt;java
-jar blah blah blah&lt;/code&gt;.
&lt;/p&gt;
&lt;h3 id=&#34;headline-3&#34;&gt;
I&amp;#39;m not looking for a professional tool
&lt;/h3&gt;
&lt;p&gt;
Professional tools can be too compex and do too much for students. I
was looking for the sweet spot of giving a nice amount of support but
not giving away the store.
&lt;/p&gt;
&lt;p&gt;
Here are the tools I looked at (and you can debate if something
belongs in the other category in some cases):
&lt;/p&gt;
&lt;h4 id=&#34;headline-4&#34;&gt;
Editors
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Emacs
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Gedit
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Vim
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Sublime Text
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Atom
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Jedit
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;headline-5&#34;&gt;
IDES
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Eclipse
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
DrJava
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Geany
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
BlueJ
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
IntelliJ
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
VSCode
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
JGrasp
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;headline-6&#34;&gt;
Editor vs IDE
&lt;/h3&gt;
&lt;p&gt;
The line between editor and IDE is a blurry one. I tend to think of an
editor as multi-purpose and multi-language where an also useful for
non programming text realted tasks whereas an IDE comes with more
programming bells and whistles. The truth is, though. that some IDES
can do well with non programming tasks and many editors are pretty
close to IDEs.
&lt;/p&gt;
&lt;p&gt;
In any event, for a teacher, there&amp;#39;s something to be said for keeping
it &amp;#34;close to the metal&amp;#34; and have them use an editor to edit source
code and compile from the command line. This doesn&amp;#39;t mean they
shouldn&amp;#39;t also see IDEs and perhaps use them with their students but
a teacher should know a little more about what&amp;#39;s going on than just
load a program, write some code, and click run. If a teacher is that
limited you end up in situations similar to that common comment from
people who finish a beginner course on Codecademy - &amp;#34;I finished the
course and I can program in their environment but I don&amp;#39;t know how to
actually make something anywhere else.&amp;#34;
&lt;/p&gt;
&lt;h3 id=&#34;headline-7&#34;&gt;
The Editors
&lt;/h3&gt;
&lt;p&gt;
Here the idea would be start as I mentioned above. Edit files adn then
compile on the command line. Eventually, though, many of these tools
can be used as IDEs
&lt;/p&gt;
&lt;h4 id=&#34;headline-8&#34;&gt;
Emacs
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;https://www.gnu.org/software/emacs/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve got to start with my tool of choice although I can&amp;#39;t really be
unbiased. I think it gets a bad wrap because it&amp;#39;s old and out of the
box looks plain but, yes, you can use your mouse and it does have
menus. The upside is that it can do everything an IDE can do and a
thousand times more. I do email, read rss feeds, maintain my calendar
and more in Emacs. 
&lt;/p&gt;
&lt;p&gt;
The downside is that it doesn&amp;#39;t do Java well out of the box and kids
like shinier objects. 
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t think I&amp;#39;d start the teachers with Emacs but I&amp;#39;d probably shift
my instruction to using it at some point and show some of the cooler
features (many highlighted in my &lt;a href=&#34;https://cestlaz.github.io/stories/emacs/&#34;&gt;Emcacs videos&lt;/a&gt;)
&lt;/p&gt;
&lt;h4 id=&#34;headline-9&#34;&gt;
Gedit
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://wiki.gnome.org/Apps/Gedit%0A&#34;&gt;https://wiki.gnome.org/Apps/Gedit%0A&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is a plain simple editor. You can bucket in notepad+ and whatever
the basic Mac editor is in here. Nothing special and nothing
fancy. It&amp;#39;s easy enough to load, edit a file and save but not much
more. I&amp;#39;d be fine using it were it not for better options.
&lt;/p&gt;
&lt;h4 id=&#34;headline-10&#34;&gt;
Vim
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.vim.org/&#34;&gt;https://www.vim.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
No
&lt;/p&gt;
&lt;h4 id=&#34;headline-11&#34;&gt;
Sublime Text
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.sublimetext.com/%0A&#34;&gt;https://www.sublimetext.com/%0A&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This was the hotness for a while and it&amp;#39;s a pretty slick editor. I
can&amp;#39;t recommend it for teachers though for two reasons. One is that
it&amp;#39;s not free (although it isn&amp;#39;t expensive). The other is that it&amp;#39;s
not open source. There were other hot editors before sublime and when
their companies folded or sunset the editor all those plugins and
customizations had to be redone on a new platform. 
&lt;/p&gt;
&lt;h4 id=&#34;headline-12&#34;&gt;
Atom
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://atom.io/&#34;&gt;https://atom.io/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Atom&amp;#39;s an editor I want to like. It&amp;#39;s open source and looks pretty
neat but it seems more focused on the JS ecosystem. I couldn&amp;#39;t find
enough Java related plugins to make it better than Gedit although it
was easy to theme and customize the keys. Were I not an Emacs guy I&amp;#39;d
probably use Atom for much of my non-Java development but it doesn&amp;#39;t
seem like a great fit for Java
&lt;/p&gt;
&lt;h4 id=&#34;headline-13&#34;&gt;
Jedit
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.jedit.org/&#34;&gt;http://www.jedit.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This looked like the strongest contender for Java. Not too
complicated. Nice syntax highlighting out of the box. It doesn&amp;#39;t do
completion but that&amp;#39;s arguably a good thing when teaching
programming (incidentally, Emacs doesn&amp;#39;t do completion out of the box
but it can be added so you can up the tools ability as the class moves
along). From my limited explorations you can install plugins like a
Java Linter and you can run a console from inside JEdit which means
you can actually type things like &lt;code&gt;javac file.java&lt;/code&gt; and then run the
program all from within the editor.
&lt;/p&gt;
&lt;p&gt;
Jedit also has some nice builtin macros for boilerplate code like
setters and getters.
&lt;/p&gt;
&lt;h3 id=&#34;headline-14&#34;&gt;
IDEs
&lt;/h3&gt;
&lt;h4 id=&#34;headline-15&#34;&gt;
Eclipse 
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.eclipse.org&#34;&gt;https://www.eclipse.org&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve used eclipse before and as a Java environment, it&amp;#39;s actually
pretty nice. You can customize the keys so I set mine to Emacs. It has
a lot of plugins, you can compile and test your program from within
the IDE and do tons of other things. It&amp;#39;s a VERY nice professional
tool.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t like it for teaching for three reasons. First, it does too
much. By giving too much professional support kids rely too much on
the tool. Second, it&amp;#39;s made for big projects using build systems not
small AP class programs consisting of one or two files where you run
javac manually. Yes, you can do this in Eclipse but it seems more
awkward. Third, becasue there&amp;#39;s so much going on you need a HUGE
screen and kids and schools might not have enough screen real estate.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s also a fourth reason which is that I installed Eclipse using
LinuxMint&amp;#39;s package manager and it crashed when running. If I&amp;#39;m going
to recommend a teacher roll out a tool that all of their students are
going to install at home on their own, at the very least it has to
install and run seamlessly.
&lt;/p&gt;
&lt;h4 id=&#34;headline-16&#34;&gt;
DrJava
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.drjava.org/&#34;&gt;http://www.drjava.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Like Eclipse, I&amp;#39;ve used DrJava before. It&amp;#39;s similar to DrRacket (nee
Scheme) and Dr. Python. It&amp;#39;s close to perfect. You get highlighting,
helpful error finding, can run your program from within Dr. Java and
more.
&lt;/p&gt;
&lt;p&gt;
The killer problem is that I can&amp;#39;t get the latest version to
run. Actually the first problem is that it&amp;#39;s just a jar file so you
have to run it with &lt;code&gt;java -jar drjava.jar&lt;/code&gt;. Beyond that, it didn&amp;#39;t
work out of the box. It loaded but compilign and running didn&amp;#39;t After
some mucking around, I got it to compile but it doesn&amp;#39;t run the
programs. 
&lt;/p&gt;
&lt;p&gt;
This is too bad because when it runs it&amp;#39;s a terrific learning
environment.
&lt;/p&gt;
&lt;h4 id=&#34;headline-17&#34;&gt;
BlueJ
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://bluej.org/&#34;&gt;https://bluej.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is another tool that was DOA. I tried the debian package as well
as the jar file. Couldn&amp;#39;t get it working. 
&lt;/p&gt;
&lt;p&gt;
I have used an older version so I&amp;#39;ll describe that instead just
remember things might be different in the current version.
&lt;/p&gt;
&lt;p&gt;
BlueJ does one thing very well - objects. It visually shows object
creation and relationships. I recall that you can create an opject,
click on it&amp;#39;s box in a visual graph pane, inspect it, instantiate new
ones and in general explore and expirement. If you&amp;#39;re big on OOP and
like Object First by all means check BlueJ out. It&amp;#39;s probably best in
class for that approach.
&lt;/p&gt;
&lt;p&gt;
On the other hand, it&amp;#39;s a one trick pony. If you, like me, are not all
in on OOP or an Objects first and all the time approach it&amp;#39;s probably
not the tool for you. 
&lt;/p&gt;
&lt;h4 id=&#34;headline-18&#34;&gt;
Geany
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.geany.org/&#34;&gt;https://www.geany.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I hadn&amp;#39;t heard of this one before but it looks like a contender. It
has a  pretty clean interface and it worked out of the box. I
installed it using the package manager.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/geany.png&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Class browser on the right, files on the left and console (terminal),
compiler status etc on the bottom. It supports some level of
autocomplete but it doesn&amp;#39;t do everything. I&amp;#39;m not sure yet but it
might hit the completion sweet spot.
&lt;/p&gt;
&lt;p&gt;
It says it does snippets but I haven&amp;#39;t figured that out yet. 
&lt;/p&gt;
&lt;h4 id=&#34;headline-19&#34;&gt;
IntelliJ
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;https://www.jetbrains.com/idea/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
IntelliJ is fro JetBrains. They make a bunch of IDEs each focussed on
a different toolset but all with the same look and feel. You can also
add plugins to each to make them multi-modal. I believe the editor at
the core is JEdit. I&amp;#39;ve used their IDEs in the past and as far as
professional IDEs go I like them. They&amp;#39;re more lightweight than say
Eclipse and don&amp;#39;t need the real estate.
&lt;/p&gt;
&lt;p&gt;
Still, I think it&amp;#39;s too much for a beginner. For example, you can
in theory run your program from the build menu but, much like Eclipse,
it takes you to a configuration screen. I was pretty lost and I&amp;#39;m not
a beginner. Much like Eclipse it&amp;#39;s made for projects not small class
programs. 
&lt;/p&gt;
&lt;p&gt;
I found the Python version of JetBrains IDEs more approachable
probably because the ecosystem is much simpler.
&lt;/p&gt;
&lt;h4 id=&#34;headline-20&#34;&gt;
VSCode
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;https://code.visualstudio.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This one shocked me - I actually found myself liking a Microsoft
product. I guess this really isn&amp;#39;t your father&amp;#39;s Microsoft.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/vscode.png&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Much like Geany it has a clean interface and like Geany you don&amp;#39;t need
a whole Java build system. It does more completions out of the box
which you may or may not like as well as snippets. A single key will
compile and run your program and on top of all that it has en &amp;#34;Emacs&amp;#34;
setting for keybindings.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not sure if I like Geany or VSCode better but I think both are
really good options. I&amp;#39;d probably lean towards Geany due to the less
robust completions. Were I writing code for real rather than teaching,
I&amp;#39;d probably go the other way.
&lt;/p&gt;
&lt;h4 id=&#34;headline-21&#34;&gt;
JGrasp
&lt;/h4&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/vscode.png&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
JGrasp feels much the same as the other contenders - Geany and VSCode
but the interface just looks a bit clunkier to me. I know that&amp;#39;s
purely subjective. 
&lt;/p&gt;
&lt;p&gt;
The biggest difference I&amp;#39;m seeing out of the box is that JGrasp
doesn&amp;#39;t do completions so depending on where you fall with that you
might want Jgrasp for none, Geany for some, and VSCode for all.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;[EDIT]&lt;/strong&gt; JGrasp has a very cool visualizer built in that will animate
 your proram. Here&amp;#39;s a &lt;a href=&#34;https://www.youtube.com/watch?v=wuQowTV0o6s&#34;&gt;video&lt;/a&gt; of it in action. I&amp;#39;m going to have to
 play with this a bit and see if it pushes JGrasp up over the top for
 me. 
&lt;/p&gt;
&lt;h4 id=&#34;headline-22&#34;&gt;
Processing
&lt;/h4&gt;
&lt;p&gt;
&lt;a href=&#34;https://processing.org/&#34;&gt;https://processing.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to talk about processing but I felt that it would be
negligent not to mention it at all. Processing is a IDE, wrapper and
graphical library that&amp;#39;s essentially Java under the hood (although
there are Processing bindings in many other languages probably the
most well known now is &lt;a href=&#34;https://p5js.org/&#34;&gt;p5.js&lt;/a&gt;). It&amp;#39;s great if you want to do graphical
work or base your class around the libraries that are available to
processing which include ones for web cameras, hardware access,
networking, sound and more but it&amp;#39;s not the same as an IDE or editor
for traditional Java development.
&lt;/p&gt;
&lt;h3 id=&#34;headline-23&#34;&gt;
Notes
&lt;/h3&gt;
&lt;p&gt;
Just about all of these tools have multiple themes and are fairly
customizable so don&amp;#39;t go by the screenshots above, on the homepages or
what they look like when you first install them.
&lt;/p&gt;
&lt;p&gt;
All of the tools I liked installed right out of the box either by
using the package manager or downloading and extracting from an
archive. I can&amp;#39;t say yet if they install as easily on a Mac or Windows
box but since Linux is usually the unloved stepchild of sortware
packaging and distribution my guess is that if anything it&amp;#39;ll be
easier on those platforms.
&lt;/p&gt;
&lt;h3 id=&#34;headline-24&#34;&gt;
Conclusions
&lt;/h3&gt;
&lt;p&gt;
I&amp;#39;ll always be an Emacs guy. Org-mode is too useful and I can get IDE
like behavior for pretty much any language I want to work in. In some
cases like Clojure, I haven&amp;#39;t seen an IDE that can match Emacs and
Cider, it&amp;#39;s premier Clojure development setup. I also haven&amp;#39;t a Git
interface nearly as slick and powerful as &lt;a href=&#34;https://magit.vc/&#34;&gt;Magit&lt;/a&gt; which works under
Emacs.
&lt;/p&gt;
&lt;p&gt;
For my teachers though, I&amp;#39;ll probably start with Geany or VSCode,
switch to Emacs for myself at some point in the program and make sure
to spend time on the command line along the way.
&lt;/p&gt;
&lt;p&gt;
If I missed any editors or IDEs or have something to add on one of the
ones I mentioned, please share in the comments.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SIGCSE 2019 - the keynotes</title>
      <link>https://cestlaz.github.io/post/sigcse-2019-keynotes/</link>
      <pubDate>Mon, 04 Mar 2019 15:25:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sigcse-2019-keynotes/</guid>
      <description>
&lt;p&gt;
It&amp;#39;s that time of the year to write a series of blog posts about
SIGCSE. I thought I&amp;#39;d start with one on the keynotes. 
&lt;/p&gt;
&lt;p&gt;
There were four keynote speakers. Marie desJardins, Gloria Townsend,
Mark Guzdial, and Blair Taylor. I wasn&amp;#39;t at the first timer&amp;#39;s lunch
where Townsend spoke so I won&amp;#39;t talk at all about that keynote.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m also not going to summarize the talks. Andy Ko wrote up a terrific
summary of his &lt;a href=&#34;https://medium.com/bits-and-behavior/sigcse-2019-trip-report-celebrating-50-years-b3460835a09a&#34;&gt;SIGCSE experience&lt;/a&gt; and did a much better job giving
overviews to the keynotes than I ever could so I&amp;#39;ll just refer you to
Andy&amp;#39;s &lt;a href=&#34;https://medium.com/bits-and-behavior/sigcse-2019-trip-report-celebrating-50-years-b3460835a09a&#34;&gt;blog post&lt;/a&gt;. Rather, I&amp;#39;m just going to talk a bit about what they
left me thinking about. It might be something that&amp;#39;s pretty tangential
to the actual talk but hey, it&amp;#39;s the direction that the speaker sent
my brain to follow.
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Marie des Jardin - the pinch hitter
&lt;/h2&gt;
&lt;p&gt;
Marie desJardins wasn&amp;#39;t supposed to be the keynote. She was filling in
for a flu ridden &lt;a href=&#34;https://en.m.wikipedia.org/wiki/Freeman_A._Hrabowski_III&#34;&gt;Freeman Hrabowski&lt;/a&gt; at the last minute and she did a
more than admirable job.
&lt;/p&gt;
&lt;p&gt;
The big line for me was her plea for us not to create &amp;#34;weed out&amp;#34;
courses but rather to create &amp;#34;launch&amp;#34; courses. I think this resonated
with many in the audience. It got me thinking about something that&amp;#39;s
been a concern of mine for a while. We see a lot of examples of making
student&amp;#39;s first CS experience more gentle and more varied. Probably
the biggest example is APCS-P but you can also find it in many college
CS0 classes. Hunter&amp;#39;s no exception - we&amp;#39;re now in the second year of a
more varied CS0 class (although truth be told, our problem
wasn&amp;#39;t so much that our old CS0 was a gatekeeper but more that
students hardly did any programming). 
&lt;/p&gt;
&lt;p&gt;
I started to become aware of the problem as I would hear stories of
kids who did Girls Who Code programs who then dropped out of CS
classes that were too hard and then later when my former students at
Harvard told me that many kids &amp;#34;dropped like flies&amp;#34; in the class after
CS50. I&amp;#39;ve also seen these problems at Hunter but at least here I know
we&amp;#39;re working on it. Having a more accessible entry point is terrific
but not if you just set the kids up to fail one step down the line. It
seems that not enough people are looking at the complete path: from
first course to last and the transitions in between. This is a hidden
danger. We can proudly say that diversity and enrollments are up based
on those first experiences and no one&amp;#39;s the wiser that we&amp;#39;re killing
the kids later on. We have to do better.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Mark Guzdial - the outstanding contributer
&lt;/h2&gt;
&lt;p&gt;
Mark was this year&amp;#39;s winner of SIGCSE&amp;#39;s Award for Outstanding
Contribution to CS Education. A well deserved award. Mark&amp;#39;s talk was
terrific and similar to the one he gave at the Code and Beyond
conference in NY which I wrote about &lt;a href=&#34;https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
As with the previous keynote you can get a great summary if you read
Andy&amp;#39;s post linked above.
&lt;/p&gt;
&lt;p&gt;
One point Mark made was that he felt that all students should learn
programming but if I remember the talk correctly he didn&amp;#39;t make a
strong statement about all students learning CS. He also said that
first course our CS majors take shouldn&amp;#39;t be the same as the first
course for non majors. I see where Mark&amp;#39;s coming from I&amp;#39;m not sure I
agree. Well, I do agree given what a first CS course for a major
typically looks like versus what a never-CS major might need for life but
the few CS0 for non major courses I&amp;#39;ve seen don&amp;#39;t leave their students
with enough to continue on to the CS major or a minor (which could be
valuable to a HUGE swath of students) so they end up taking the CS0
for CS majors anyway. This means one more course and one more
semester. More cost and more time spent. I&amp;#39;ll say that I do agree with
Mark UNLESS you can design a course that can address the needs of both
parties and the truth is I think you can. We did it at Stuy. Students
come back with that having been their only course and talk of its
usefulness and utility and students come back having used it to launch
a tech career in later high school, college, and beyond. What we built
isn&amp;#39;t perfect and is for a particular population but as proof of
concept it&amp;#39;s convinced me that a single course for both can be done
&lt;/p&gt;
&lt;p&gt;
Another one of Mark&amp;#39;s big points was taking CS into other subject
areas. I love this and I love when he said (apologies if the quote&amp;#39;s a
little off) &amp;#34;They need things and we can build stuff&amp;#34; as a call to
action to partner with and to develop the languages and tools needed
to support a new vision of CS embedded in other subject areas.
&lt;/p&gt;
&lt;p&gt;
My thoughts here are that as a community we are ignoring the realities
of K12 education. Mark mentioned Bootstrap World, a sprogram both he
and I like very much. It is embedded in Algebra classes and uses CS in
Racket (nee Scheme) to support learning said algebra. Mark noted that
Racket looks like Algebra and that&amp;#39;s one of the reasons Bootstrap
works. Another fact often left out is that algebra is frequently
taught either over two years or with a double period allocated to
it. It is given more time than most classes and that allows teachers to experiment
a bit more with instruction. Even if we develop more tools like
Bootstrap that align themselves to teaching other subjects those
subject teachers might not have the time to dedicate to the new
tool. Why not? That&amp;#39;s another thing Mark indirectly mentioned. At one
point he said that we might have to &amp;#34;take a step back&amp;#34; first in terms
of results and quite frankly, K12 teachers sometimes can&amp;#39;t take that
chance. In addition to not wanting to give their current students a
worse experience even with the promise that future classes would get a
better one they have to face the specter of high stakes testing. If
I&amp;#39;m using a new CS tool in a history class and my student&amp;#39;s test
results go down, they might have to repeat the class and the teacher
could put their license in jeopardy.
&lt;/p&gt;
&lt;p&gt;
In the end I loved just about everything Mark had to say but it still
got me thinking about a lot and to me that&amp;#39;s one of the hallmarks of a
great talk. 
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Blair Taylor - the controversy
&lt;/h2&gt;
&lt;p&gt;
Blair Taylor gave the final keynote and this one had some controversy
around it. Andy&amp;#39;s blog post again summarizes things well. 
&lt;/p&gt;
&lt;p&gt;
My only take on the content is that the talk was more about
Dr. Taylor&amp;#39;s journey and less about Cyber Security (I hate it that
it&amp;#39;s now just being called &amp;#34;cyber&amp;#34;) but that was fine. 
&lt;/p&gt;
&lt;p&gt;
What I want to talk about here is not so much the controversy over how
some people took parts of Dr. Taylor&amp;#39;s talk and the Q&amp;amp;A at the end but
rather the fact that more and more recently I&amp;#39;ve felt that as a
community we can&amp;#39;t talk about difficult issues concerning gender,
race, and the like. 
&lt;/p&gt;
&lt;p&gt;
I consider myself an ally to under represented and under served groups
but have found myself in situations recently where unless I 100%
parrot one side&amp;#39;s extreme view I&amp;#39;m accused of sexism or racism at
which point ANYTHING I say is treated as such. One is not allowed to
see any nuance in what is a very complex topic. 
&lt;/p&gt;
&lt;p&gt;
At one point, the speaker made a joke. She prefaced it with something
like &amp;#34;I&amp;#39;m going to tell this offensive joke&amp;#34; and that she could,
presumably because she is a women. The joke fell flat (although I&amp;#39;ve
told the story of the keynote to a few women in tech and they chuckled
and said they actually kind of liked the joke). My take was that the
speaker was setting the stage to maybe dive into a difficult
conversation. My take was also that some members of the audience right
then and there decided that the speaker was wrong about all things. 
&lt;/p&gt;
&lt;p&gt;
After the talk I was a bit more convinced that this was the case as I
read a tweet stream explaining what happened that included the joke
but none of the context for the reader to make an informed decision. 
&lt;/p&gt;
&lt;p&gt;
In the end, I felt that Dr. Taylor has honestly worked for under
represented groups and while this might be unpopular, her pragmatism of
sometimes swallowing an insult and &amp;#34;having a sense of humor&amp;#34; is the
right thing to do. Unfortunately, Dr. Taylor misread the audience and that
some people decided somewhere in her talk that even though she was
working to empower women in her own way, it wasn&amp;#39;t &amp;#34;my way&amp;#34; so it was
wrong. 
&lt;/p&gt;
&lt;p&gt;
The situation was unfortunate and my big fear is that as a community
we still have a long way to go before we can have these conversations
and personally, as someone who considers themselves an ally of the
undeserved I&amp;#39;m becoming more gun shy of partaking in discussions.
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
That&amp;#39;s all for now.
&lt;/h2&gt;
&lt;p&gt;
So, that&amp;#39;s my take on the keynotes. Much more to come on the
conference in future posts. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>March PD for CS Teachers</title>
      <link>https://cestlaz.github.io/post/pd-apcs-a-and-beyond-3-14-2019/</link>
      <pubDate>Tue, 26 Feb 2019 15:49:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-apcs-a-and-beyond-3-14-2019/</guid>
      <description>&lt;p&gt;
Back in December we ran our first &lt;a href=&#34;https://cestlaz.github.io/post/pd-apcs-a-and-beyond/&#34;&gt;PD session for CS teachers&lt;/a&gt;. This was
to address the need for professional development for teachers who were
more experienced in terms of computer science - we aimed this at people who were ready to
teach APCS-A, similar, or beyond and also to start to build a
community for these teachers. 
&lt;/p&gt;
&lt;p&gt;
We had trouble setting things up for February but we&amp;#39;re good to go for
March, April and May.
&lt;/p&gt;
&lt;p&gt;
Just as with our first session, each session will consist of a content
piece, a pedagogy piece, and will overall be driven by the
participants.
&lt;/p&gt;
&lt;p&gt;
The next session is set for Thursday, March 14 from 5:00 - 8:00 and
will be hosted by Digital Ocean. The sessions will earn you 3 CTLE
hours and dinner will be provided.
&lt;/p&gt;
&lt;p&gt;
If you or a CS teacher you know is interested in this, they can sign
up here: &lt;a href=&#34;https://goo.gl/forms/DCXqPtwYS47Ooo8j1&#34;&gt;https://goo.gl/forms/DCXqPtwYS47Ooo8j1&lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hunter College Winter Codefest 2019</title>
      <link>https://cestlaz.github.io/post/code-fest-2019/</link>
      <pubDate>Wed, 20 Feb 2019 17:34:00 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/code-fest-2019/</guid>
      <description>&lt;p&gt;
It&amp;#39;s great to see how much Hunter CS has developed since starting here
there years ago. The latest endeavor is Winter Codefest. During the
fall I was approached by one of my students who had asked an older
Hunter CS student about their portfolio and found that the senior&amp;#39;s
portfolio was lacking. This student said we should do something to
help encourage younger students to build that portfolio. 
&lt;/p&gt;
&lt;p&gt;
The result was Winter Codefest. A team of organizers was formed and
they came up with the plan. Have students register teams right after
Fall finals and have teams work on independent projects over the
course of January before the Spring semester started. We&amp;#39;d then have an
event where everyone would show off their work. We decided to limit
participants to my Daedalus scholars this time around but planned from
the get go to make it Hunter wide in the future.
&lt;/p&gt;
&lt;p&gt;
We ended up with about 24 participants spanning all three Daedalus
cohorts with most of the participants in the second year group. 
&lt;/p&gt;
&lt;p&gt;
Due to the scheduling we couldn&amp;#39;t hold the end of competition event
until today. A bunch of us gathered along with some of our friends
from the tech community to review the projects, network, and generally
talk tech. All in all the event was a real success. All the
participants learned new  technologies and now have one more show
piece to talk about in interviews.
&lt;/p&gt;
&lt;p&gt;
This year was unquestionably a success and it&amp;#39;s going to be a bigger
one next year. The CS department is working on creating 1 and 2 credit
projects courses that will be offered during the winter session. This
will enable students to take the courses to develop a Winterfest
project with the support of a class around it. We&amp;#39;re also going to
make the event available to all Hunter CS students. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s really exciting to be part of developing programs like Hunter
College CS, Programs that can be super transformative for young New
Yorkers. It&amp;#39;s even more exciting when your students take active
leadership roles and help make our programs even more special.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why the Thomas Friedman&#39;s editorial on the College Board&#39;s Two Codes left me concerned</title>
      <link>https://cestlaz.github.io/post/college-boards-two-codes/</link>
      <pubDate>Tue, 19 Feb 2019 10:20:19 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/college-boards-two-codes/</guid>
      <description>&lt;p&gt;
There was some buzz over &lt;a href=&#34;https://www.nytimes.com/2019/02/12/opinion/college-board-sat-ap.html&#34;&gt;this editorial&lt;/a&gt; about the College Board last
week. The two codes every child needs - Coding and the US
Constitution? Who could argue with that.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not going to disagree. Civics and CS are important and can&amp;#39;t wait
until college. The thing that left me chilled though was that nobody&amp;#39;s
paying attention to the fact that the College Board - a private entity
with its own interests has so much influence over American education.
&lt;/p&gt;
&lt;p&gt;
In the piece, Friedman states:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
So rather than have SAT exams and Advanced Placement courses based on things that you cram for and forget, they are shifting them, where they can, to promote the “two codes.”
&lt;/p&gt;
&lt;p&gt;
In 2016, the College Board completely revamped its approach toA.P. computer science courses and exams. 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nothing wrong here but the AP program is supposed to offer &amp;#34;college
level&amp;#34; work in high school. Back when the program started, from 
best I can figure, they offered exams based on courses that were
essentially HS implementations of college classes. Now they&amp;#39;re
flipping the script. They&amp;#39;re dictating what they think should be
taught at the high school level and, oh by the way, it&amp;#39;s college level
because it has the AP designation. The editorial goes into some
details. Now, I&amp;#39;m not against what they&amp;#39;re doing with AP US Gov, it
sounds like a really good idea. I&amp;#39;m against their overall influence.
&lt;/p&gt;
&lt;p&gt;
The biggest concern I had though was with this:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Besides revamping the government course and the exam on that subject, Coleman and Sanford in 2014 made a staple of the regular SAT a long reading comprehension passage from one of the founding documents, such as the Constitution, or another important piece of democracy, like a great presidential speech. That said to students and teachers something the SAT had never dared say before: Some content is disproportionately more powerful and important, and if you prepare for it you will be rewarded on the SAT.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If we put this on the SAT, schools will teach it so the kids will do
better the SAT.
&lt;/p&gt;
&lt;p&gt;
This should be chilling to everyone. 
&lt;/p&gt;
&lt;p&gt;
No, I&amp;#39;m not against the details but it&amp;#39;s frightening to have a private
entity with so much influence on public policy like
education. Ultimately, it can&amp;#39;t be good. Just because what the College
Board&amp;#39;s pushing in terms of civics jives with me doesn&amp;#39;t mean they
should be able to influence and manipulate curriculum across the
nation to such a degree. The College Board is pretty much accountable
to nobody. As long as students are told to take AP classes and the
SAT, particularly with politicians and boards of education agreeing to
pay the college board with taxpayers money, the public has very little
say. Sure, more better civics and CS is good but who&amp;#39;s to say the next
initiative will be in the public&amp;#39;s interest?
&lt;/p&gt;
&lt;p&gt;
The same can be said for any of the major education players - for and
non profit alike both in and out of CS. We have to be more aware,
vigilant, and vocal when the power players accomplish things by being
the 800 pound gorilla even when we agree with what some of those
things are.
&lt;/p&gt;
&lt;p&gt;
This is a big reason why I frequently speak out against the College
Board and other power players, some of whom I greatly like, respect,
and admire, and feel that others should feel obligated to do the same.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How I use Github Classroom</title>
      <link>https://cestlaz.github.io/post/github-classroom/</link>
      <pubDate>Sun, 17 Feb 2019 16:42:48 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-classroom/</guid>
      <description>&lt;p&gt;
It&amp;#39;s been an amazingly unproductive weekend. Mostly because I&amp;#39;ve been
sick with the flu. It sucks but since the rest of the family&amp;#39;s away
anway at least I&amp;#39;m not making everyone miserable.
&lt;/p&gt;
&lt;p&gt;
I did manage to stage my next couple of classes and figured that
writing this post wouldn&amp;#39;t take too much energy since it&amp;#39;s mostly a
video.
&lt;/p&gt;
&lt;p&gt;
Earlier, I talked about using &lt;a href=&#34;https://cestlaz.github.io/post/github-classroom-travis/&#34;&gt;GitHub and TravicCI&lt;/a&gt; and this time around
I show how I use GitHub classroom to set up, disseminate, and collect
assignments.
&lt;/p&gt;
&lt;p&gt;
Here are the important links you&amp;#39;ll need to set things up yourself:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
To register an organization (so that you can use private repos for
free): &lt;a href=&#34;https://education.github.com/discount_requests/new&#34;&gt;https://education.github.com/discount_requests/new&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The main GitHub education page with lots of good stuff and links: &lt;a href=&#34;https://education.github.com/&#34;&gt;https://education.github.com/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
GitHub Classroom: &lt;a href=&#34;https://classroom.github.com/&#34;&gt;https://classroom.github.com/&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
GitHub Classroom Assistant: &lt;a href=&#34;https://classroom.github.com/assistant&#34;&gt;https://classroom.github.com/assistant&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The video goes through the entire process but doesn&amp;#39;t really much into
grading. For grading I usually do something like the following:
&lt;/p&gt;
&lt;p&gt;
First I make a file named &lt;strong&gt;repos&lt;/strong&gt; with the names of all the submitted
repos:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cd THEDIRECTORYWITHALLTHEREPOS
ls &amp;gt; repos&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Then I&amp;#39;ll use a script that looks something like this:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat repos&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
      cd /tmp/235-assignment-02-02-16-2019-07-25-00/$i
      NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;** Name: &amp;#34;&lt;/span&gt; Readme.org | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s/** Name: //g&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;================= &lt;/span&gt;$NAME&lt;span style=&#34;color:#e6db74&#34;&gt; ====================&amp;#34;&lt;/span&gt;
      make test
      ./test -s
      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\n------------------------------------\n\n&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; &amp;gt; report&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
First I &lt;code&gt;cd&lt;/code&gt; into the repo. Each repo has a file named &lt;strong&gt;Readme.org&lt;/strong&gt; 
which has a line that looks like this &lt;code&gt;** Name: Students Name&lt;/code&gt;. The
line that starts &lt;strong&gt;NAME=&lt;/strong&gt; pulls out the student&amp;#39;s name. It then echos a
separator line with the sutdent&amp;#39;s name in it, builds and runs the
tests. &lt;code&gt;./test -s&lt;/code&gt; runs the doctest tests. The &lt;code&gt;-s&lt;/code&gt; says to print out
the passing tests as well as the failing ones. The output of the whole
loop is saved to a file named report.
&lt;/p&gt;
&lt;p&gt;
From there I can look at the report and get a quick overview of who&amp;#39;s
submissions worked and who&amp;#39;s didn&amp;#39;t. I still have to look at the
students actual code but I usually navigate all of that in Emacs.
&lt;/p&gt;
&lt;p&gt;
Finally, for grades, I just use a Google Spreadsheet with a script I
wronte to email grades to the students -
&lt;a href=&#34;https://cestlaz.github.io/posts/google-sheets/.&#34;&gt;https://cestlaz.github.io/posts/google-sheets/.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You can easily adapt this processto use other languages wether you use Unit
Tests or not. 
&lt;/p&gt;
&lt;p&gt;
So, GitHub classroom - check it out. 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/2PuXdb8OLYo&#34;&gt;https://www.youtube.com/embed/2PuXdb8OLYo&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tech Jobs, Diversity, and Equity in the wake of the Amazon/NYC debacle</title>
      <link>https://cestlaz.github.io/post/tech-jobs-amazon/</link>
      <pubDate>Fri, 15 Feb 2019 11:14:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/tech-jobs-amazon/</guid>
      <description>&lt;p&gt;
I was planning on either following up on how I use GitHub classroom or
commenting on the recent &lt;a href=&#34;https://www.nytimes.com/2019/02/12/opinion/college-board-sat-ap.html&#34;&gt;NY Times opinion piece&lt;/a&gt; on the College Board
but the follow up, fall out, and polarization from the Amazon NY thing
has been stuck in my head so I thought I&amp;#39;d write a bit more about it.
&lt;/p&gt;
&lt;p&gt;
Like my &lt;a href=&#34;https://cestlaz.github.io/post/no-amazon-hq/&#34;&gt;previous post&lt;/a&gt;, this isn&amp;#39;t really about Amazon but rather about
the long game, equity, and diversity and how a lot of people are
fooling themselves.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s interesting that the communities I&amp;#39;m in are fairly polarized - my
pure tech world frients are big time upset that the deal fell through while
my pure educator friends, particularly the public school ones, are
really happy things worked out the way they did.
&lt;/p&gt;
&lt;p&gt;
The big disappointment from the tech side revolves largely around the
jobs lost. Lots of tech jobs no longer coming fast and furious. The problem is,
who&amp;#39;s going to fill them. We&amp;#39;ve been hearing for years that there&amp;#39;s a
tech talent problem. Every company at every meetup seems to say &amp;#34;oh,
and we&amp;#39;re hiring,&amp;#34; Google&amp;#39;s expanding as are, as far as I can tell,
most of the other tech giants in the city. How can both be true? If we
need those new jobs now then there must be a glut of tech people
clamoring for employment. If indeed talent is hard to find, how will
NY be able to fill this new need. 
&lt;/p&gt;
&lt;p&gt;
We all know the answer - import them. Companies that can have and will go to
the &amp;#34;elite&amp;#34; institutions around the country and try to recruit the
talent to NY. At the end of the day the politicians can look and say
&amp;#34;behold, I have taken this slum and transformed it into a paradise&amp;#34;
and that might technically be true. Problem is that they did it by
further marginalizing and displacing those already on the fringes. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s hard to see. When I was younger - before I was deeply immersed in
public education all I saw was the gentrification - look the
neighborhood has gotten better. Now I understand the cost. I&amp;#39;m reminded
of Hofstadter&amp;#39;s &lt;a href=&#34;https://en.wikipedia.org/wiki/G%25C3%25B6del,_Escher,_Bach&#34;&gt;GEB&lt;/a&gt; where the anteater is friends with Aunt Hillary -
an ant colony and in fact was an ant surgeon. He &amp;#34;healed&amp;#34; the colony
through strategic amputations. The colony remained healthy but at the
cost of the individuals who didn&amp;#39;t make the cut.
&lt;/p&gt;
&lt;p&gt;
The only way all these high paying tech jobs are going to come from NY
if NY can generate them and the truth is, right now, we can&amp;#39;t.
&lt;/p&gt;
&lt;p&gt;
Colleges nation wide are dealing with capacity issues. At least one
dropped its CS minor - arguably more valuable than a CS major for may
students. Stories abound on how hard it is to attract faculty and in
NYC we also have to deal with real estate issues. At Hunter, we can&amp;#39;t
just plop down a new building for CS even if we did have the money. 
&lt;/p&gt;
&lt;p&gt;
This of course is not just a capacity issue but also a diversity and
equity one and too many players are rearranging the deck chairs on the
Titanic. Some tech players are making an honest effort to deal with
&lt;a href=&#34;https://www.usv.com/blog/our-first-network-wide-diversity-inclusion-survey&#34;&gt;diversity&lt;/a&gt; and equity in a meaningful way, too many aren&amp;#39;t. I was
recently speaking with a friend at a big tech company. I was pitching
him on supporting what I&amp;#39;m building at Hunter. He said he really
wanted to help but his companies diversity plan, once you stripped
away the shiny paint was poaching from FANG (or is it FAAMG)
companies. The other thing I see is recruiting exclusively at &amp;#34;elite&amp;#34;
private schools and trying to grab as many &amp;#34;underserved&amp;#34; candidates as
possible. A third strategy involves counting everyone on your team for
diversity counts even if many of them aren&amp;#39;t really tech. Of course
the elite colleges play the same game. When you&amp;#39;ve got an incoming
class of let&amp;#39;s say 2000 and you&amp;#39;ve got 10 times that many applicants
with 4.0 GPAs and perfect test scores you can shape your class however
you want but it&amp;#39;s a zero sum game and doesn&amp;#39;t provide opportunity for
the masses.. 
&lt;/p&gt;
&lt;p&gt;
If we want to solve these issues we have to deal with K12 and if
that&amp;#39;s the case it&amp;#39;s going to take at least 6 years maybe considerably
more before we really see results and that&amp;#39;s assuming we fix the
college capacity issues.
&lt;/p&gt;
&lt;p&gt;
This brings me to CS for all. I&amp;#39;m a big believer in CS for All and
I&amp;#39;ve dedicated a lot of time and energy on bringing quality CS
education to the have nots but CS for All might not be the
answer. First, many of us believe that it&amp;#39;s not about turning everyone
into a software engineer. True, by exposing everyone to CS we&amp;#39;ll get a
larger pool working towards that end but the intent isn&amp;#39;t or at least
shouldn&amp;#39;t be as a feeder into the tech industry. 
&lt;/p&gt;
&lt;p&gt;
A bigger problem is ensuring that we indeed have quality CS for All
for all and that&amp;#39;s a real concern. Looking over the landscape here&amp;#39;s
what I&amp;#39;m seeing. Rich, well heeled schools are finding those few
really knowledgeable CS teachers and many of the poor schools are
getting quick and dirty training on some generic APCS-Principals
class. Dedicated hard working teachers who want to do a great job but
aren&amp;#39;t being given the time and resources to really learn CS and CS
pedagogy.  Now APCS-P can be a strong class or a weak one but in many
cases by going for the quick fix with a scripted class and then saying
&amp;#34;we&amp;#39;re done&amp;#34; is condemning those kids to sub standard CS. Even if
some do take CS1 in college my guess many will be underprepared and
many will drop. Even with a good APCS-P, the fact that no one is
paying attention to the complete pipeline and the transition from High
School to College and through the major will mean that we&amp;#39;re going to
lose many of the kids along the way.
&lt;/p&gt;
&lt;p&gt;
The answer? Good pre-service programs will help - that&amp;#39;s why I&amp;#39;m so
bullish on the program we&amp;#39;re developing at Hunter. A bad preservice
program, however - one that is based on &amp;#34;you take it you teach it&amp;#34;
won&amp;#39;t prepare our teachers to prepare our kids. Even then, we&amp;#39;re not
going to really solve the problem until we deal with little things
like, oh, you know, poverty. 
&lt;/p&gt;
&lt;p&gt;
I might sound pessimistic. Maybe I am but it doesn&amp;#39;t change
anything. I&amp;#39;m going to do my best to affect positive change in
whatever circles I can be they large or small and many others are
doing the same.
&lt;/p&gt;
&lt;p&gt;
All those jobs that aren&amp;#39;t coming to NY?  They&amp;#39;d have been filled
before any sensible fix to our NYC Tech pipeline problem yields fruit
anyway and would likely have displaced the current fringe population
rather than uplift them.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>No Amazon HQ2 in NYC</title>
      <link>https://cestlaz.github.io/post/no-amazon-hq/</link>
      <pubDate>Thu, 14 Feb 2019 17:57:32 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/no-amazon-hq/</guid>
      <description>&lt;p&gt;
That was the big tech news today. I know there was a good deal of
vocal outrage about the deal but to be honest I was pretty surprised
by the news. Normally deals like these get steamrolled through for
better or worse.
&lt;/p&gt;
&lt;p&gt;
I have decidedly mixed feelings about this. On the one hand, I have no
problem with Amazon - I&amp;#39;ve got a bunch of former students working
there. Mostly in Seattle but at least one in NYC. On the other hand
there were a lot of things about the deal, none of them having to do
specifically with Amazon as a company that made me very uneasy.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s go through these issues from minor to major.
&lt;/p&gt;
&lt;p&gt;
First, I&amp;#39;m against special corporate incentives. In one ear I keep
hearing that these were generic incentives are available to any
company but in the other ear I keep hearing about special concessions
for Amazon. I keep thinking about stadium and Olympic deals. Those are
generally driven by politicians and money men with huge egos and from
what I can tell they generally don&amp;#39;t end up helping the little guy.
&lt;/p&gt;
&lt;p&gt;
Next we have backroom politics. Like so much in New York, it certainly
appeared that this was a back room Cuomo deal where the local
communities weren&amp;#39;t included in the process. It wreaks of Cuomo
Hubris and ego. 
&lt;/p&gt;
&lt;p&gt;
Third we have all the jobs. A recent poll indicated that residents
welcomed the fact that this deal would &amp;#34;create new jobs&amp;#34; but the truth
is that it would &amp;#34;create new jobs for outsiders who will come in and
replace you.&amp;#34; This isn&amp;#39;t a knock on Amazon but it&amp;#39;s probably the
truth. The history of hypergentrification is not one of uplifting the
poor into the middle class. It&amp;#39;s more like bring in the middle and
upper class from other communities and displace the poor. This would
likely be the case with this much demand for tech talent this quickly.
&lt;/p&gt;
&lt;p&gt;
The local colleges, specifically CUNY will not be able to up the flow
of tech graduates that quickly without a big infusion of resources and
that&amp;#39;s something that wasn&amp;#39;t included in the deal. It&amp;#39;s great that
Amazon is supporting HS CS but tech companies aren&amp;#39;t hiring kids out
of high school with a single introductory experience like
APCS-Principals. 
&lt;/p&gt;
&lt;p&gt;
Since New York will not be able to supply the software engineers on a
dime the companies are going to bring them in from elsewhere. I
remember talking to a tech executive a few years ago and he was
telling me that he was going to have to &amp;#34;hire X software engineers in
the next five years&amp;#34; and that while he &amp;#34;would love for them to be New
Yorkers&amp;#34; he&amp;#39;d hire them from wherever he could get them. 
&lt;/p&gt;
&lt;p&gt;
Poor and working class people aren&amp;#39;t all of a sudden going to be
getting these high paying jobs. Sure, some will get into programs like
&lt;a href=&#34;https://www.pursuit.org/&#34;&gt;Pursuit&lt;/a&gt; and get entry level coder jobs and the colleges will continue
to produce what they&amp;#39;re producing now and ramp up capacity as they are
able but a lot of people  who were here during the bad times are just
going to be forced out.
&lt;/p&gt;
&lt;p&gt;
At the end of the day most of this won&amp;#39;t change a thing one way or the
other. LIC is already on the upswing and rents are going through the
roof. Companies will continue to need tech talent in NY and NY will
continue to scramble to try to fill the need. Amazon already has a
presence in NYC and if they want to avail themselves of the talent
that comes from and wants to move to NY they&amp;#39;ll continue to build
their footprint here even without HQ2.
&lt;/p&gt;
&lt;p&gt;
For me the takeaway is that we have to be much more aware of all our
residents and it is our obligation as a society to work to uplift
those who haven&amp;#39;t had the same opportunities as others. That means
really looking hard at diversity, equity, and things like
gentrification. It means not just bringing in jobs without having a
plan and a path for those at the bottom of the economic ladder to
climb up into those jobs. It means working with the communities for
their and New York&amp;#39;s benefit and not making deals that sound good and
might be good for New York as a whole but get there by amputating the
parts that we just don&amp;#39;t want to deal with.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Helps Me Help Students</title>
      <link>https://cestlaz.github.io/post/github-helps-me-help-students/</link>
      <pubDate>Mon, 11 Feb 2019 18:55:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-helps-me-help-students/</guid>
      <description>&lt;p&gt;
Earlier today I was reminded why I love GitHub in support of my
classes. One of my students posted a question about our current
lab. They posted a synopsis of the problem along with the error
message.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re all working on GitHub the student&amp;#39;s work was already up
online Since I started using &lt;a href=&#34;https://classroom.github.com&#34;&gt;GitHub Classroom&lt;/a&gt; I was able to quickly
navigate to the repo. This might have been enough but to really in to
the students work I cloned the repo and went into Emacs. Using &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-47-magit/&#34;&gt;Magit&lt;/a&gt;,
Emacs&amp;#39;s Git interface I was quickly able to navigate the project and
also see recent changes or in fact any changes to any of the student&amp;#39;s
project files. I didn&amp;#39;t use it this time but &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-42-git-gutter/&#34;&gt;Git Timemachine&lt;/a&gt; gives an
even slicker way to see the history of changes for a specific file.
&lt;/p&gt;
&lt;p&gt;
With these tools it took almost no time to get the lay of the land and
figure out where the student hit the wall. From there I posted a hint to nudge the student in the
right direction.
&lt;/p&gt;
&lt;p&gt;
GitHub classroom makes the student repo management easy but the other
tools were just plain old Git and Emacs. 
&lt;/p&gt;
&lt;p&gt;
Of course, for this to work, students have to play their part. If a
student doesn&amp;#39;t push their changes regularly up to GitHub I won&amp;#39;t be
able to see the diffs and help. When they do, it&amp;#39;s a real world tool
that once again has proven to be great at supporting education.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use A Real Language</title>
      <link>https://cestlaz.github.io/post/use-a-real-language/</link>
      <pubDate>Sat, 09 Feb 2019 15:08:18 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/use-a-real-language/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Why can&amp;#39;t we use a real language!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This topic has been coming up a lot recently. Now I&amp;#39;m not talking
about the Drag and drop vs textual language thing. Let me be clear. To
me a Drag and Drop language can certainly be a real language and many
are. I also think they&amp;#39;re terrific when used correctly. I just think
they&amp;#39;re frequently misapplied in later grades. 
&lt;/p&gt;
&lt;p&gt;
No, I&amp;#39;m talking about people asking things like &amp;#34;Why do we have to use
Java in our class, why can&amp;#39;t we use a real language like &lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt;__&lt;/span&gt;&lt;/span&gt;.&amp;#34; Or
at Hunter, I might get &amp;#34;Why do we have to use C++, why can&amp;#39;t we use
Java.&amp;#34; Back at Stuy I&amp;#39;d get the same question about Scheme and
Netlogo. It actually doesn&amp;#39;t really matter what language you
use. Someone else, usually a non-teacher always knows better.
&lt;/p&gt;
&lt;p&gt;
All of this reminded me of when I was young. 
&lt;/p&gt;
&lt;p&gt;
I started with BASIC and then in high school programmed Fortran IV
using punch cards on an &lt;a href=&#34;https://en.wikipedia.org/wiki/IBM_1130&#34;&gt;IBM 1130&lt;/a&gt;. At the time BASIC was considered a
toy language and Fortran IV not to mention punch cards were
yesterday&amp;#39;s technology. I also took APCS the first year it was offered
and that&amp;#39;s where I learned Pascal.
&lt;/p&gt;
&lt;p&gt;
I then went to NYU - The Courant Institute of Mathematical Sciences. There
we also used Pascal as the core language. That was the language used
in CS1, Data Structures, and Algorithms. It was also the default
language for other classes. That is, unless the class lent itself to
a specific language such as Lisp for AI you&amp;#39;d probably use
Pascal. I learned C early on in my college career and also took
classes that used Ada, and 8088 Assembly. I mostly tried to stick with
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
It was the hot language at the time and all the cool kids were
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
using it. Some kids continued to use Pascal but it was universally
derided. It wasn&amp;#39;t a &amp;#34;real language.&amp;#34; Nobody used it for anything
serious.
&lt;/p&gt;
&lt;p&gt;
Senior year it was time to look for a job. I ended up going  to
Goldman Sachs and developed for PCs running Windows 2.1 in C. They
also hired a bunch of college grads to program the Stratus systems in
PL1 and Cobol programmers for the mainframes. This was
around 1989. Goldman and most other big companies started you in a
training program. I already knew C but they ran a crash course for my
group. They did the same for the Cobol kids although most of them had
learned it in their business schools. The PL1 kids were grouped in
with the C and Cobol groups and had to figure out PL1 on their own
once they were assigned teams.
&lt;/p&gt;
&lt;p&gt;
My story tough, isn&amp;#39;t about Goldman. It&amp;#39;s about another big bank I
interviewed with. I won&amp;#39;t name them but it&amp;#39;s a big firm that still
exists today. I think they had at least a whole big building down on
the street back when I interviewed but I don&amp;#39;t remember. The interview
process was tough and thorough. We talked about the firm, what they
did, the platforms they developed and of course they drilled me on
what I brought to the table. The funny thing was that their entire
PC platform was built in, yep, you guessed it, Turbo Pascal. 
&lt;/p&gt;
&lt;p&gt;
Here was a really respected financial firm doing really interesting
tech and they were using that fake toy language that no kid would ever
use for real.
&lt;/p&gt;
&lt;p&gt;
So there you have it. All this &amp;#34;it&amp;#39;s not a real language&amp;#34; stuff is
largely nonsense. If it can solve your problem it&amp;#39;s real. If it can
teach your concept it&amp;#39;s real. The rest is nonsense.
&lt;/p&gt;
&lt;p&gt;
As a side note, my first programming gig was in the mid 1980s for a
ticket printing company - Arcus Simplex Brown. I worked on a computer
ticket printing system for them. It was in BASIC and ran on a little
PC running CP/M with a big line printer. Best I could figure they were
still using the same system in 2012.
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/ticket.jpg&#34; width=&#34;250&#34; height=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
So, don&amp;#39;t get caught up with someone else&amp;#39;s opinion of what&amp;#39;s a real
language just make sure your students are getting what they need.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Java Interfaces</title>
      <link>https://cestlaz.github.io/post/java-interfaces/</link>
      <pubDate>Fri, 08 Feb 2019 09:40:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/java-interfaces/</guid>
      <description>&lt;p&gt;
Two of the hardest topics to make meaningful to students in APCS-A are
inheritance and interfaces. It&amp;#39;s not that they&amp;#39;re super difficult
topics but rather that they&amp;#39;re not often needed, useful, or superior
to not using them on beginner assignments. More often than not the
motivation is a bit forced as are the assignments. 
&lt;/p&gt;
&lt;p&gt;
Inheritance is its own can of worms and to be honest, something I&amp;#39;ve
not found to be all that useful or necessary. The class abstraction
made sense to me for a number of projects but deep inheritance just
hasn&amp;#39;t come up much. 
&lt;/p&gt;
&lt;p&gt;
In any event, today I thought I&amp;#39;d talk about interfaces.
&lt;/p&gt;
&lt;p&gt;
When Java was first built a decision was made not to allow multiple
inheritance - the idea that a class can be derived from multiple
parents. Multiple inheritance is powerful but it can also be
complicated and confusing. By not including multiple inheritance Java
ended up easier to work with than say C++ but there were times where
you needed features that multiple inheritance provide. Specifically
there are times when you need some functionality that operates across
multiple unrelated classes. Without any other features, you&amp;#39;d have to
start &lt;strong&gt;all&lt;/strong&gt; of your classes from a single based class and include that
functionality. Clearly not a good idea.
&lt;/p&gt;
&lt;p&gt;
The first useful example is probably &lt;code&gt;Comparable&lt;/code&gt;
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
At first blush it might not seem all that useful. 
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s suppose you are doing something like finding the first String
(alphabetically) from an array:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
That&amp;#39;s easy enough but what if you had another class, &lt;code&gt;Shape&lt;/code&gt; where
you wanted to find the &amp;#34;smallest&amp;#34; based on area and a third class
&lt;code&gt;Person&lt;/code&gt; where you want to find the smallest by age? Without
interfaces you would need three independent search routines or set up
a crazy inheritance hierarchy where &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Person&lt;/code&gt; and &lt;code&gt;Shape&lt;/code&gt; all
come from the same parent. Instead, by having your two new classes
implement the &lt;code&gt;Comparable&lt;/code&gt; interface all three can use the same
search:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This is not entirely true. The above solution will give you compiler
warnings. You&amp;#39;ll have to decide if it makes sense to jump through the
hoops necessary to get rid of the warnings or if it&amp;#39;s sufficient to do
some vigorous had waving.
&lt;/p&gt;
&lt;p&gt;
This is the benefit of interfaces. You can create functionality that
works across classes. In addition to writing things like our
 &lt;code&gt;findSmallest&lt;/code&gt; above, if our classes implement &lt;code&gt;Comparable&lt;/code&gt; we can sort
collections of our classes using the built in sort methods.
&lt;/p&gt;
&lt;p&gt;
This is a benefit that our students can probably appreciate.
&lt;/p&gt;
&lt;p&gt;
Anther place interfaces come up and make sense are with GUI
programming. It&amp;#39;s pretty easy to show the utility of using interfaces
with the assorted listeners. That said, Java GUI programming is
something of a bear so maybe that&amp;#39;s not the way to go.
&lt;/p&gt;
&lt;p&gt;
Where else can you explore interfaces in APCS-A? Any program where you
have different entities that change in different ways over time. This
might be a simulation where time passes via a control loop or maybe a
game where time passes a turn at a time.
&lt;/p&gt;
&lt;p&gt;
For example, you might have a simulation with various resources that
implement an interface with an &lt;code&gt;update&lt;/code&gt; routine:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Maybe a food resource updates by raising or lowering the amount of
food it provides or perhaps an animal resource updates its location. You could
have an array of objects that implement this interface and just call
update on each one.
&lt;/p&gt;
&lt;p&gt;
You could do the same with a game. Maybe the human player&amp;#39;s &lt;code&gt;update&lt;/code&gt; 
prompts for keyboard input while non player characters just calculate
their next state.
&lt;/p&gt;
&lt;p&gt;
Interfaces are not the easiest thing to teach. The mechanics are
straightforward but the motivation is frequently forced for
beginners. I was never 100% happy with how I did it and now that I&amp;#39;m
in a C++ shop it doesn&amp;#39;t come up but I hope this is helpful to some of
you out there.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Early Ap Registration - it&#39;s, um, for the kids</title>
      <link>https://cestlaz.github.io/post/early-ap-registration-for-the-kids/</link>
      <pubDate>Wed, 06 Feb 2019 08:08:38 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/early-ap-registration-for-the-kids/</guid>
      <description>&lt;p&gt;
I stumbled upon a thread over in the APCS-A Facebook group the other
day. It seems that the College Board is making some changes in their
&lt;a href=&#34;https://apcentral.collegeboard.org/about-ap/news-changes/ap-2019&#34;&gt;registration timeline&lt;/a&gt;. In the past, students registered for the exam
sometime in March with the exams administered in May. The new changes
include requiring registration in November along with $40 late
registration and cancellation fees.
&lt;/p&gt;
&lt;p&gt;
The College Board is, of course, spinning this as for &lt;a href=&#34;https://www.youtube.com/watch?v=3MCNEYCZWqw&amp;amp;feature=youtu.be&amp;amp;fbclid=IwAR04Uuj7vpHoYU_8jMjw00YpAPXp7gi3MDGdTKhzpUXv7mI0OILW01KyzvA%0A&#34;&gt;the student&amp;#39;s
benefit&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
At least a portion of the teaching community thinks otherwise and has
in fact started &lt;a href=&#34;https://www.change.org/p/demand-the-college-board-not-mandate-fall-ap-exam-requirements-and-deadlines&#34;&gt;this petition&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
To me this is just another money grab by the College Board - an
organization that already has way too much influence over high school
education.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s take a look at what the College Board actually brings to the
table. They offer an exam. A single exam in each subject offered
that&amp;#39;s supposed to in 3 hours encapsulate an entire years&amp;#39;s worth of
learning and from that, colleges might give  a student placement or
credit.
&lt;/p&gt;
&lt;p&gt;
But you say &amp;#34;they offer so much more.&amp;#34; Do they?
&lt;/p&gt;
&lt;p&gt;
Teacher&amp;#39;s have to submit syllabi and the college board approves
them. They offer samples but so do text book authors and third party
organizations. In my case I rolled my own. The teacher also develops
the course. Does the College Board provide materials? I guess, but so
do those same groups that provide curricula. The college board
certainly doesn&amp;#39;t define the subject. Last I checked Calculus, was
pretty well defined way before the AP program. So was 
Chemistry, and most other subjects. Actually, due to their outsized
influence they do define the subset of the subject in some cases and
we should really be questioning this influence. Finally, the teacher does
the actual hard job of teaching the class. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m  just not seeing the value added. 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re already seeing schools require that students take the exam to be
in the class or provide &amp;#34;incentives&amp;#34; like a credit or grade bump for
taking the exam or even removing the AP designation from the
transcript if the student doesn&amp;#39;t take the exam. Doing any of these is
just plain wrong. By all means explain the advantages and
disadvantages of taking the exam but to essentially force a student to
fork over money and personal data to an outside independent agency is
just plain wrong. 
&lt;/p&gt;
&lt;p&gt;
But you say that students in many districts don&amp;#39;t have to pay. 
&lt;/p&gt;
&lt;p&gt;
This is even more insidious.
&lt;/p&gt;
&lt;p&gt;
Now it&amp;#39;s the taxpayer on the hook and the College Board has
successfully created an everlasting cash pipeline from the public into
private coffers while providing questionable value.
&lt;/p&gt;
&lt;p&gt;
If you don&amp;#39;t agree with me and think that these requirements or
incentives  are fine ask yourself this: If you had a child in a class
and the teacher said &amp;#34;your child has to sit in a room with a friend of
mine for three hours, give them $100 and personal data and I will give
your child a higher grade&amp;#34; you&amp;#39;d be outraged. 
&lt;/p&gt;
&lt;p&gt;
Spending three hours taking an external exam has no bearing on what a
student did or didn&amp;#39;t do in the class so the grades, credits etc
should be the same whether or not the kid took the AP exam.
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s get back to the early registration changes. Currently kids
register for the AP exam in March. By then students might know what
college they&amp;#39;re likely to go to. They&amp;#39;ll know if the AP exam is of any
use to them. In November they don&amp;#39;t. I frequently lost some high
scores on AP exams because I had top students who were accepted early
to schools that didn&amp;#39;t award credit. I also lost a couple of low
scores of students that for whatever reasons had no chance at getting
a 3 or higher so opted not to sit for the exam. I guess the College Board came up
with a good way to get money for those kids without providing value in
return.
&lt;/p&gt;
&lt;p&gt;
Then there are block scheduled schools or other situations where kids
don&amp;#39;t start the class until after the new November deadline.
&lt;/p&gt;
&lt;p&gt;
Finally, let&amp;#39;s talk a bit about the College Board&amp;#39;s claim that this is
all for the students. The video talks about students doing better if
they signed up earlier. I&amp;#39;m skeptical but even if it&amp;#39;s true, is &amp;#34;doing
better on the AP exam&amp;#34; the goal we have for our students. How about
learning our subject area or being inspired to continue on with it.
&lt;/p&gt;
&lt;p&gt;
In the video, teachers talk about how the kids are more motivated and
focused because the exam. This is getting to sound a lot like the
inane focus on high stakes test where the test is the goal. Is the
motivation that &amp;#34;you paid the $100&amp;#34; so it&amp;#39;s wasted if you don&amp;#39;t do
well or &amp;#34;the school paid $100&amp;#34; so we&amp;#39;ll guilt you into studying more?
Sorry, as teachers we can do better.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m sure I&amp;#39;ll get some flak for writing this but I also suspect that
there are many teachers who agree with me that the College Board is
not looking out for students but rather themselves.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Github Classroom and Travis CI</title>
      <link>https://cestlaz.github.io/post/github-classroom-travis/</link>
      <pubDate>Sat, 02 Feb 2019 09:44:29 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/github-classroom-travis/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve been using GitHub with my classes since GitHub&amp;#39;s early days. Over
time I&amp;#39;ve gotten my &lt;a href=&#34;https://cestlaz.github.io/posts/sigcse-2017-github-4/&#34;&gt;workflows down&lt;/a&gt;. I use a combination of shell
scripts - many just written on the fly, GitHub organizations, and some
naming conventions and protocols that have served me well. 
&lt;/p&gt;
&lt;p&gt;
A few years ago, the &lt;a href=&#34;https://education.github.com/&#34;&gt;GitHub Education team&lt;/a&gt; started &lt;a href=&#34;https://classroom.github.com/&#34;&gt;GitHub
Classroom&lt;/a&gt;. I looked at it at the time. It was pretty cool but I had my
workflow so I didn&amp;#39;t adopt it. I still very much liked GitHub, the
education team, and the product so I kept tabs on the project as time
passed. 
&lt;/p&gt;
&lt;p&gt;
This semester I decided to go all in on GitHub Classroom. Why? A
combination of my changing my workflow and part due to the GitHub
education tools and community. At it&amp;#39;s core, GitHub classroom does two
things well:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Assignment creation and distribution
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Repo management and organization.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I thought I&amp;#39;d do a couple of posts and videos to show how I&amp;#39;m using
everything. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the first one.
&lt;/p&gt;
&lt;p&gt;
Interestingly enough I&amp;#39;m not going to talk at all about GitHub
classroom for the remainder of this post. Instead I&amp;#39;m going to talk
about TravisCI (&lt;a href=&#34;https://travis-ci.com/&#34;&gt;&lt;a href=&#34;https://travis-ci.com/&#34;&gt;https://travis-ci.com/&lt;/a&gt;&lt;/a&gt;,
&lt;a href=&#34;https://travis-ci.org/&#34;&gt;https://travis-ci.org/&lt;/a&gt;). Travis is a platform for continuous
intergration. The idea is pretty simple. After setting things up,
whenever you push code to a repo that Travis is watching, Travis
starts a container for your repo and runs one or more scripts against
the repo. This usually means tests. It turns out that this can be a
useful sanity check for students. It&amp;#39;s true that they can run tests on
their assignments before submitting them but this way it&amp;#39;s done
automatically and after they submit. They can be sure that what
they&amp;#39;ve submitted actually works.
&lt;/p&gt;
&lt;p&gt;
First you have to link your GitHub accoutn with Travis. To do this,
just go to travis-ci.org and log in using GitHub. You can then set a
bunch of options including which repos to run Travis on. The interface
at travis-ci.com looks similar but a bit nicer. The .org site is free
for open source or public repos  (as is the .com site, I think) but
the good people at Travis will give you rights to use private repos
for educational purposes for free. 
&lt;/p&gt;
&lt;p&gt;
The only other thing you have to do is create a &lt;a href=&#34;https://yaml.org/&#34;&gt;YAML&lt;/a&gt; file named
 &lt;code&gt;.travis.yml&lt;/code&gt; in your repo. Here&amp;#39;s one I&amp;#39;m using to test C++ projecs:
&lt;/p&gt;
&lt;div class=&#34;src src-yaml&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;language&lt;/span&gt;: cpp
&lt;span style=&#34;color:#66d9ef&#34;&gt;compiler&lt;/span&gt;: clang
&lt;span style=&#34;color:#66d9ef&#34;&gt;script&lt;/span&gt;:
  - make test
  - ./test&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This tells Travis to use the clang compiler (as opposed to, say g++)
and then run &lt;code&gt;make test&lt;/code&gt; and then &lt;code&gt;./test&lt;/code&gt;. If all the tests pass you
get a green check and an email and you&amp;#39;re good to go. If they don&amp;#39;t
you get a red X and also an email. Of course for this particular
configuration to work you need &lt;code&gt;Makefile&lt;/code&gt; and everything else needed
to build the tests in the repo. In my case, I&amp;#39;m using &lt;a href=&#34;https://github.com/onqtam/doctest&#34;&gt;doctest&lt;/a&gt; for tests.
&lt;/p&gt;
&lt;p&gt;
Travis has support for a whole bunch of languages including Java,
Python, and JavaScript and all of those have nice testing frameworks
so regardless of what you&amp;#39;re teaching with, Travis could be easily
integrated. 
&lt;/p&gt;
&lt;p&gt;
In this video I show how I&amp;#39;m using TravisCI and also a simple Python
setup. In the next post I&amp;#39;ll get back to GitHub classroom and how
TravisCI integrates into it.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/-J8A5oWazvE&#34;&gt;https://www.youtube.com/embed/-J8A5oWazvE&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 56 - Dictionaries</title>
      <link>https://cestlaz.github.io/post/using-emacs-56-dictionaries/</link>
      <pubDate>Mon, 28 Jan 2019 16:58:11 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-56-dictionaries/</guid>
      <description>&lt;p&gt;
One of the great things about Emacs is that it&amp;#39;s not just for writing
programs. Sure, you can set it up as an IDE for just about every
programming language under the sun but that&amp;#39;s just the tip of the
iceberg. I use Emacs for just about all my text processing. This
includes writing blog posts, reading and writing emails, creating
lesson plans and pretty much anything and everything having to do with
text.
&lt;/p&gt;
&lt;p&gt;
Emacs has some nice packages that make it really easy to integrate
dictionary and thesaurus lookups into your work flow.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a short video showing you how to set things up:
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Jtgulzjq7hk&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Sequencing Topics</title>
      <link>https://cestlaz.github.io/post/sequencing-topics/</link>
      <pubDate>Sat, 26 Jan 2019 16:06:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sequencing-topics/</guid>
      <description>&lt;p&gt;
Monday&amp;#39;s the start of the Spring semester. Other than the 8:00am start
I&amp;#39;m looking forward to it. My 8:00am class is the honors/lab component
that goes with CS1. I taught it last semester and during each of the
past two years at Hunter. My second class is the follow up  - more OOP
/ C++, data structures and some algorithms.
&lt;/p&gt;
&lt;p&gt;
The material is old hat. I&amp;#39;ve taught it in Java more times than I can
count and also in C++ albeit many years ago. What&amp;#39;s new is that I&amp;#39;m
teaching my Hunter kids and I&amp;#39;m doing it in a college framework - two
days a week, 1:15 a session. I&amp;#39;m not thinking too much about how I&amp;#39;ll
teach each class - I usually figure that out in the moment - not
actually in the class but week to week based on the flow of the
class. 
&lt;/p&gt;
&lt;p&gt;
Right now, I have to make final decisions on sequencing, at least for
the start of the class. We got ahead of the game by covering most of
the C++ topics - inheritance, templates, overloading etc. at the end
of last semester so that
leaves all the data structures, algorithms, dynamic structures, and
memory management, recursion, and sorting and searching. If I have
time I&amp;#39;d also love to get into some graph stuff. 
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s the plan, at lest for now.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll start with recursion. They had the basics last term but now
we&amp;#39;ll talk about search - I usually focus this around a maze
solver. After this we&amp;#39;ll place recursion on hold - at least in terms
of class time and move to linked lists and dynamic memory. We&amp;#39;ll
follow this with sorting. The idea is that students have trouble
getting comfortable with both recursion and also with dynamic
structures first time through. Rather than ploughing  through from
recursion to the recursive sorts I&amp;#39;m hoping that putting the dynamic
lists in between will give recursion some time to marinate in the
background. Likewise I&amp;#39;m hoping that the dynamic memory stuff can
marinate through the sorting unit for when we revisit it with stacks,
queues, and trees after sorting.
&lt;/p&gt;
&lt;p&gt;
I don&amp;#39;t know if this is the optimal way of sequencing the topics but I
think it will work pretty well.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll see as the semester progresses. If things are going swimmingly I
can always call an audible.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 55 - Irony Completions</title>
      <link>https://cestlaz.github.io/post/using-emacs-55-irony-completions/</link>
      <pubDate>Mon, 21 Jan 2019 08:27:41 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-55-irony-completions/</guid>
      <description>&lt;p&gt;
Last year I put together a &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-32-cpp/&#34;&gt;post and video&lt;/a&gt; on some basics of Emacs for
C++ development. In the video I didn&amp;#39;t quite get completions fully
working. I also used ggtags in that video but find myself using
&lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-33-projectile-jump&#34;&gt;dumb-jump&lt;/a&gt; more frequently.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a quick video showing how to set up &lt;a href=&#34;https://github.com/Sarcasm/irony-mode&#34;&gt;irony-mode&lt;/a&gt; which uses
libclang for completions. It&amp;#39;s pretty slick. Now the only thing I
think I&amp;#39;m missing is header file completions. If you&amp;#39;ve got a good
setup for that, please share.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/GRdZuc1Z4WI&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Solve A To Solve B</title>
      <link>https://cestlaz.github.io/post/solve-a-to-solve-b/</link>
      <pubDate>Fri, 18 Jan 2019 19:36:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/solve-a-to-solve-b/</guid>
      <description>&lt;p&gt;
So many programming assignments involve a direct solution. Write a
program to do this or write a problem to solve that. It&amp;#39;s pretty
typical. There&amp;#39;s nothing wrong with assignments like these. They allow
students to practice what they&amp;#39;ve been learning and it gives them the
opportunity to create some cool programs. All the same, I like it when
there&amp;#39;s an indirect problem. You&amp;#39;re faced with a problem but in order
to solve it you first have to solve some other problem
&lt;/p&gt;
&lt;p&gt;
That&amp;#39;s why I liked &lt;a href=&#34;https://adventofcode.com/2018/day/10&#34;&gt;day 10&lt;/a&gt; from this year&amp;#39;s Advent of Code. 
&lt;/p&gt;
&lt;p&gt;
At it&amp;#39;s core the question presents you with a collection of points
along with velocities in this form::
&lt;/p&gt;
&lt;pre class=&#34;example&#34;&gt;
position=&amp;lt; 9,  1&amp;gt; velocity=&amp;lt; 0,  2&amp;gt;
position=&amp;lt; 7,  0&amp;gt; velocity=&amp;lt;-1,  0&amp;gt;
position=&amp;lt; 3, -2&amp;gt; velocity=&amp;lt;-1,  1&amp;gt;
position=&amp;lt; 6, 10&amp;gt; velocity=&amp;lt;-2, -1&amp;gt;
&lt;/pre&gt;
&lt;p&gt;
Each point moves by adding the x and y components if its velocity each
second. For example, the last two points listed above - points (3,-2)
nad (6,10) would be transformed overtime as follows:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Point&lt;/th&gt;
&lt;th&gt;Velocity&lt;/th&gt;
&lt;th&gt;Second 0&lt;/th&gt;
&lt;th&gt;Second 1&lt;/th&gt;
&lt;th&gt;Second 2&lt;/th&gt;
&lt;th&gt;Second 3&lt;/th&gt;
&lt;th&gt;Second 4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3, -2&lt;/td&gt;
&lt;td&gt;-1,1&lt;/td&gt;
&lt;td&gt;3,-2&lt;/td&gt;
&lt;td&gt;2,-1&lt;/td&gt;
&lt;td&gt;1,0&lt;/td&gt;
&lt;td&gt;0,1&lt;/td&gt;
&lt;td&gt;-1,2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6,10&lt;/td&gt;
&lt;td&gt;-2,-1&lt;/td&gt;
&lt;td&gt;6,10&lt;/td&gt;
&lt;td&gt;4,9&lt;/td&gt;
&lt;td&gt;2,8&lt;/td&gt;
&lt;td&gt;0,7&lt;/td&gt;
&lt;td&gt;-2 6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
At some point in time, if you look at the points on a grid they will
spell out a message or at least a sequence of letters. The question
asks you to figure out that message. There&amp;#39;s a complete example and a
nice story around the problem on the &lt;a href=&#34;https://adventofcode.com/2018/day/10&#34;&gt;Advent of Code site&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
The first thought is probably to run this as a simulation. Set up a
loop, update the point locations, visualize and see if you have an
answer. This isn&amp;#39;t trivial for a beginner but it&amp;#39;s certainly
approachable. It also has a big problem. Unless you happen to have
some optical character recognition libaray handy you have to draw and
look at the output on every change. Given that it could take thousands
of iterations, this is not practical at all. 
&lt;/p&gt;
&lt;p&gt;
We can do better by solving another problem first. The key insight is
that each point travels along a line. In fact, this problem is a great
time to talk about a parametric representation of a line like 
&lt;/p&gt;
&lt;p&gt;
&amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;&lt;a href=&#34;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;&gt;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&lt;/a&gt;&amp;#34;&amp;gt;
&amp;lt;/script&amp;gt;
&lt;/p&gt;
&lt;p&gt;
\(L=P+tV\) 
&lt;/p&gt;
&lt;p&gt;
Where \(P\)represents an \((x,y)\) point and \(V\) a direction vector
\((dx,dy)\).
&lt;/p&gt;
&lt;p&gt;
Regardless of where the points start, at some point all of them will
be contained within your field of view after which they will continue
along their paths outside of that field of view. We can look at a
bounding box for all of the points and when that bounding box is
smallest we should be at or close to our message.
&lt;/p&gt;
&lt;p&gt;
This is readily accomplished. We can find a bounding box by finding the
smallest and largest x and y coordinates for all the current points
and using \((X_{min},Y_{min})\) and \((X_{max},Y_{max})\) as the
diagonals of a bounding rectangle and then compare areas of these
rectangles. They should decrease at first and then eventually
increase. 
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,some_large_value,stepsize):
      new_pts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; transform(pts,time) 
      bbox &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bounding_box(new_pts)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (area(bbox) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; area(previous_bbox)):
          &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re close to or at the smallest bounding box&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
We can start with a big &lt;code&gt;stepsize&lt;/code&gt; and then refine it down until we
hone in on the smallest bounding box.
&lt;/p&gt;
&lt;p&gt;
From there, we can transform all the points using the time that
resulted in the smallest bounding box and then display the points to
see our message. We might have to go through a small window of times
since the actual message might just be close to the configuration
yielded from the smallest bounding box. Of course that visualization
takes some doing - the actual viewing window might not align with your
screeen coordinates, they could all, for example, be negative so
you&amp;#39;ll probably have to do one last transformation to translate and
possibly scale the final points to make it all viewable.
&lt;/p&gt;
&lt;p&gt;
When I first solved the problem, I just dumped the coordinates into a
2 dimentional array and printed it but afterwards I wrote a little
clojurescript html5 canvas visualization:
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/advent-2018-10.gif&#34; width=&#34;200px&#34; height=&#34;20px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
So there it is. It&amp;#39;s not a trivial problem for beginners but it is doable. There&amp;#39;s a
lot to deal with:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
parse the data
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
This isn&amp;#39;t too bad. You could cover regular expressions but even
without it isn&amp;#39;t too big of a deal. You could also just use an editor
to extract the important data or preprocess this for the kids.
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Figure out how to transform the points.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
This also isn&amp;#39;t too bad. Just loop over all the points with &lt;code&gt;newpoint
= oldpoint + t * velocity&lt;/code&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Figure out the bounding boxes
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
Also not too bad. Loop over all the points to find the smallest and
largest x and y coordinates
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Set up a loop to find the smallest bounding box and hence the time
that the message will appear.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
and then finally:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
draw the points to visually inspect the answer.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
This might be the most persnickety part. When I first coded it my
output was upside down and backwards but good enough.
&lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t fully put my finger on it but I really enjoyed this problem. I
hope you enjoyed my writeup. If you want to check out my solution for
this (minus the clojurescript visualization) along with the other
Advent of Code problems I finished this year you can find them &lt;a href=&#34;https://github.com/zamansky/advent2018&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thoughts On Code And Beyond - Computational Thinking</title>
      <link>https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/</link>
      <pubDate>Mon, 14 Jan 2019 17:48:27 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/thoughts-on-code-and-beyond-ct/</guid>
      <description>&lt;p&gt;
The theme of this year&amp;#39;s &lt;a href=&#34;https://twitter.com/i/moments/1084877641285541889&#34;&gt;To Code and Beyond&lt;/a&gt; was Computational
Thinking. &lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt; gave the keynote. While the talk isn&amp;#39;t
currently online, check out &lt;a href=&#34;https://www.youtube.com/watch?v=N3uCb-95fFE&amp;amp;t=5s&#34;&gt;this talk&lt;/a&gt; that Mark gave last March. It&amp;#39;s
not the same but the second halves are and well worth a look.
&lt;/p&gt;
&lt;p&gt;
In the first half, Mark talked about other types of &amp;#34;thinking.&amp;#34;
Scientific thinking, engineering thinking and even historical
thinking. All had a good amount of overlap with both each other and
with computational thinking even as we haven&amp;#39;t yet settled on what
computational thinking actually is.
&lt;/p&gt;
&lt;p&gt;
This overlap is why I think that bringing CS into the primary grades
gives us an opportunity to reduce the achievement gap between rich and
poor. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already said that I&amp;#39;m not sold on hardcore CS and programming in
the early grades but rather it&amp;#39;s CT - the problem solving and
methodologies of CS that can effectively be part of the earlier
grades.
&lt;/p&gt;
&lt;p&gt;
Of course, that&amp;#39;s easier said than done. While there has been some
pushback recently we still have far too much emphasis on standardized
tests and elementary school teachers are way overworked. Trying to get
already overburdened teachers to add in a whole new subject area is a
big ask. The opportunity is that we might be able to develop aspects
of CT in a way that supports what elementary teachers are already
doing, possibly under the unlabeled guise of scientific thinking,
historical thinking, engineering thinking or some other thinking.
&lt;/p&gt;
&lt;p&gt;
This is already going on to a certain extent with individual teachers
at individual schools. Logic games and problem solving techniques have
always been explored by elementary school teachers who have freedom
from tightly packed test based curricula. These could be considered CT
and you could also add data collection and processing and I&amp;#39;m sure
many other things as well. This is where CS/CT can fit in the
elementary schools without adding to the teacher&amp;#39;s current
load. What&amp;#39;s more, if we can figure out how to incorporate these CT
concepts to support the subject matter already being studied we could
help close the gap between the haves and the have nots.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve said many times before that I&amp;#39;m not an elementary school
specialist but I still suspect this is the approach for CS in the
primary grades at least for the near term. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve already got a pretty full plate between my work with Hunters
Daedalus CS honors program along with our pre-service programs being
very close to going live but I&amp;#39;m also hoping to do some work in
relating to this in the near future.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 54 Org Tables</title>
      <link>https://cestlaz.github.io/post/using-emacs-54-org-tables/</link>
      <pubDate>Mon, 14 Jan 2019 11:34:13 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-54-org-tables/</guid>
      <description>&lt;p&gt;
As you know I use Emacs for all sorts of things. In addition to
coding, I use it for email, my schedule, note taking, and much much
more. As part of my job at Hunter, I read and evaluate some of the
Macaulay Honors College applications. I also have to evaluate all the
applicants to my CS honors program. I described how I use Org-mode and
Emacs to help with that &lt;a href=&#34;https://cestlaz-nikola.github.io/posts/using-emacs-44-pdf/&#34;&gt;here&lt;/a&gt;. Processing the Macaulay applications
though is somewhat different. 
&lt;/p&gt;
&lt;p&gt;
I was given a list of student names and IDs as well as online access
to their applications. If I wasn&amp;#39;t an Emacs user I&amp;#39;d probably dump the
list into a spreadsheet and go from there. It turns out, Org-mode has
a really nice table editor with just the spreadsheet functionality
that I needed. I had the ability to perform basic calculations on the
data while also keeping the power of Emacs for editing purpose.
&lt;/p&gt;
&lt;p&gt;
Check out the video to see how it all works. 
&lt;/p&gt;
&lt;p&gt;
For more information, you can check out this &lt;a href=&#34;https://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html&#34;&gt;tutorial&lt;/a&gt; on Org-mode
table formulas and the Org-mode &lt;a href=&#34;https://orgmode.org/manual/The-Spreadsheet.html#The-Spreadsheet&#34;&gt;documentation.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Enjoy!
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/5vGGgfs0q3k&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Is There a First Grade Machine Learning Achievement Gap?</title>
      <link>https://cestlaz.github.io/post/is-there-a-first-grade-ml-achievement-gap/</link>
      <pubDate>Fri, 11 Jan 2019 15:24:16 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/is-there-a-first-grade-ml-achievement-gap/</guid>
      <description>&lt;p&gt;
Today was the fifth &amp;#34;To Code and Beyond&amp;#34; - a one day conference
hosted at Cornell Technion and once again Diane Levitt put together
a great show. The theme was Computational Thinking and the day
consisted of a variety of talks, panels, and activities. I plan on
writing about one panel in particular but for today I wanted to
address something that came up as a question. One attendee asked a
panel about the achievement gap - the fact that when the CS movement got
started in NY some of the more innovative and interesting work was
being done with some of our most vulnerable students. Recently, he
heard about a student who was doing Machine Learning in early
elementary school - first grade. The concern
he had was that when we started the less affluent populations might
have even been pulling ahead but now he&amp;#39;s concerned that the gap
between have and have nots will continue to grow even in this new
field.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not so concerned about the ML gap in the early grades and I
still think that we still have an opportunity to lessen the gap
between the haves and have nots with CS and more specifically CT.
&lt;/p&gt;
&lt;p&gt;
I was reminded about when I started fencing. I first picked up a foil
in 11th grade. Stuy had a senior heavy team that year. I was the only
new junior and there were a bunch of new sophomores. The following
year, we were the starting lineup. We were raw but we still managed
second place in the city. Most of us continued on to fence in USFA
events and then in college. I remember one of the first events we went
to. It was the under 20 qualifiers for the Junior Olympics National
Championships. There were a couple of superstars who recently came
over from eastern bloc countries there. Also a bunch of
fencers we didn&amp;#39;t know but we knew that they&amp;#39;d been fencing for
years - since they were 8, 9, 10. &amp;#34;They&amp;#39;ve been fencing for
years. We&amp;#39;ve only been doing it for one. How can we ever compete?&amp;#34;
I remember Jordan saying &amp;#34;Yeah, they&amp;#39;ve fenced for years but probably
a day or two a week, we&amp;#39;ve been doing it intensely every day for a
year and a half.&amp;#34; He also noted that when they were in their early
years their bodies probably weren&amp;#39;t coordinated enough to really
develop so much. He was right. The superstars dominated but then we
were very much in the mix and in fact took most of the qualifying
spots. 
&lt;/p&gt;
&lt;p&gt;
I also thought about teaching CS at Stuy. There were always kid who
came in to class with prior experience. That was clear on day one and
for the first few weeks. By the end of the first semester you woudn&amp;#39;t
know it based on overall class performance. The newcomers caught up
pretty quickly. 
&lt;/p&gt;
&lt;p&gt;
This is why I&amp;#39; not really concerned when I hear about a school doing
Machine Learning in first grade. How much can they really do and how
deep is it? Is the kid even really ready for it or are they just going
through the motions? Or, are they just doing something they&amp;#39;ve always
done in first grade and are just labelling it ML.
&lt;/p&gt;
&lt;p&gt;
I think that last option is fairly likely. It&amp;#39;s also why I think we
still have an opportunity to close the achievement gap as part of the
CS / CT movement. 
&lt;/p&gt;
&lt;p&gt;
When people ask me about CS in the early grades I first tell them that
I&amp;#39;m not an early grade specialist. I follow this by stating that I
think that well resourced schools have been doing thing that we now
consider CT for years - logic, problem solving, puzzles, etc.When a
group of students solve a problem and describe a solution that
includes repetition it used to be just problem solving. Now it&amp;#39;s
computation thinking. Sure, we can tease it out, formalize it and
expand on it but the schools and teachers with the resources and
freedom have already been doing this. 
&lt;/p&gt;
&lt;p&gt;
With the CS For All movement, we have an opportunity to bring this to
all our students not just the well to do ones.
&lt;/p&gt;
&lt;p&gt;
Of course this is easier said than done. We have to prepare them to
identify these CT practices and actively develop these skills in their
students. This means giving teachers the time, resources, and training
and not shorten the already tight tether to standardized multiple
choice tests. 
&lt;/p&gt;
&lt;p&gt;
At times I&amp;#39;ve been disappointed with the overall K12 CS Ed
movement. We&amp;#39;ve made great strides coming from nowhere to where we are
but as a community we missed the opportunity to bypass the mistakes
and bad ideas that teachers of other disciplines are plagued with. 
We still have this chance with Computational Thinking and the early
grades.
&lt;/p&gt;
&lt;p&gt;
I hope we do it right.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>When does a new course really get developed</title>
      <link>https://cestlaz.github.io/post/when-does-a-new-course-get-developed/</link>
      <pubDate>Mon, 07 Jan 2019 08:49:17 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/when-does-a-new-course-get-developed/</guid>
      <description>&lt;p&gt;
Following up on my last post I thought I&amp;#39;d talk a bit more about
course development. According to most powers that be it&amp;#39;s all done
ahead of time. Organizations and companies with curricula to sell
package it all up ahead of time lesson by lesson unit by unit. When
I create a new course at Hunter, they demand a sample syllabus during
the approval process with a week by week outline, assignments reading
and more. When I created CAPE for Google back in 2010 even though the
programs man advocate knew the real deal he and I spoke many times
about needing something on paper to satisfy the higher ups. 
&lt;/p&gt;
&lt;p&gt;
To me most of this is nonsense. When I create a new course I have an
idea and a direction but little else. Of course there&amp;#39;s much work to
be done between idea and implementation but for me  a detailed
curriculum that early is mostly a waste of time. Why? Because it all
changes once you get in the classroom.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll do the bare minimum to get by the gatkeepers. If they want a week
to week, I give them a week to week but I won&amp;#39;t stress over it. I
then get to work on what I feel I need prior to running a course. A
framework and the first few lessons in detail.
&lt;/p&gt;
&lt;p&gt;
Developing the framework means:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
understanding enough of the content to teach the course. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
deciding on how you will teach or run the course
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
developing rough outlines for units, possible assignments etc.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
finding and understanding resources like possible texts and tools
and also things like data sources mentioned in my previous post.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
And of course there&amp;#39;s more. I&amp;#39;ll also work out the first unit in day
by day detail. 
&lt;/p&gt;
&lt;p&gt;
Another important aspect is that this framework design is where you
put in your safety nets. What&amp;#39;s the backup plan if unit 2 takes too
long or students just aren&amp;#39;t getting unit 3. Another important aspect
is to prepare too much material. In my experience it usually takes
longer to teach something than you originally plan but I still think
it&amp;#39;s better to plan too much rather than too little.
&lt;/p&gt;
&lt;p&gt;
Why do I only plan out the first unit in details? Because i know
things will change once the rubber hits the road. Even if it doesn&amp;#39;t
change, developing specific lessons without regard to your current
students seems rather odd. It reminds me of how &lt;a href=&#34;http://www.bill-irwin.com/&#34;&gt;Bill Irwin&lt;/a&gt; learned his
role in &lt;a href=&#34;https://en.wikipedia.org/wiki/Eight_Men_Out&#34;&gt;Eight Men Out&lt;/a&gt;. Irwin&amp;#39;s amazing but apparently never played
baseball. He played Eddie Collins, the White Sox second
baseman. Having not played himself, his action scenes were
choreographed like a dance. The director would yell action and he&amp;#39;d do
his dance. If the ball happened to go where it was supposed to you
ended up with a bang bang play. If not, cut, retake. It worked for the
movie but it&amp;#39;s not a great idea for a teacher. How can you plan day 5
of a class when the first four days and all the richness of the live
classes and time between hasn&amp;#39;t occurred. 
&lt;/p&gt;
&lt;p&gt;
Of course this means a lot of work under the gun but no one ever said
that developing a new course was easy. It&amp;#39;s reassuring that I&amp;#39;m not
the only one who does the real class development in real time:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Building the course as the semester goes, but the barebones syllabus is here. Thanks to &lt;a href=&#34;https://twitter.com/guzdial?ref_src=twsrc%5Etfw&#34;&gt;@guzdial&lt;/a&gt;, we are using GP as the main language. Reading things like Pattern on the Stone, chapters from Constructionism book by Harel &amp;amp; Papert.  &lt;a href=&#34;https://t.co/CNgEQfcO1Z&#34;&gt;https://t.co/CNgEQfcO1Z&lt;/a&gt;.&lt;/p&gt;&amp;mdash; Aman Yadav (@yadavaman) &lt;a href=&#34;https://twitter.com/yadavaman/status/1082280379153829888?ref_src=twsrc%5Etfw&#34;&gt;January 7, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
Finally having survived the first run through it&amp;#39;s time to &lt;a href=&#34;http://wiki.c2.com/?PlanToThrowOneAway&#34;&gt;throw it
away&lt;/a&gt;. Not really but it&amp;#39;s time to take lessons learned and work them
into the class. From there, it&amp;#39;s incremental improvements.
&lt;/p&gt;
&lt;p&gt;
So there you have it, a summary of my approach to course creation.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Owning The Curriculum</title>
      <link>https://cestlaz.github.io/post/owning-the-curriculum/</link>
      <pubDate>Sat, 05 Jan 2019 19:41:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/owning-the-curriculum/</guid>
      <description>&lt;p&gt;
I spent a couple of days last week hunkered down working designing a
CS Ethics course and of course it got me thinking about designing
courses in general. 
&lt;/p&gt;
&lt;p&gt;
One of the topics I&amp;#39;ve ranted on is my disdain for canned
curricula. I&amp;#39;ve never been a fan. This isn&amp;#39;t to say I don&amp;#39;t want to
leverage other people&amp;#39;s work. I&amp;#39;ll take sample curricula, lessons, and
all the resources I can get my hands on but I&amp;#39;d never just deliver
them as is. Even back when I started as a math teacher and I had the
NYCDOE lesson plan books to use as samples, I&amp;#39;d use those lessons as
sources to develop my own.
&lt;/p&gt;
&lt;p&gt;
I was reminded why I do this as I was developing my ethics course. I
want the course to have a significant amount of programming and for
some of the projects US census data and the NYC data mine look to be
good sources of data. I was led to these sources from some project
ideas I found online but those projects provided the data pre
processed. Had I been using these sources as a canned curriculum
things would be fine until something changed. Either the resource went
away or the direction of the class required something different. In
either event, had I been happy to merely use someone elses canned
materials I wouldn&amp;#39;t be prepared.
&lt;/p&gt;
&lt;p&gt;
It turns out that you&amp;#39;ve got to do some digging before you can
effectively use a resource like the US census data. Maybe you can use
the &lt;a href=&#34;https://factfinder.census.gov/faces/nav/jsf/pages/index.xhtml%5D&#34;&gt;American Fact Finder&lt;/a&gt;. With it you can download a refined data set
as a CSV but you&amp;#39;ll still have to figure out how to use the tool and
which data sets you need. Another approach is to &lt;a href=&#34;https://www.census.gov/programs-surveys/acs/data/data-via-ftp.html&#34;&gt;download the data via
FTP&lt;/a&gt; but then you have to figure out how the files are arranged. 
&lt;/p&gt;
&lt;p&gt;
All of this is to say that you can&amp;#39;t just go to census.gov and
trivially get what you need and you certainly can&amp;#39;t just send students
there and say &amp;#34;good luck.&amp;#34; I spent more hours that I&amp;#39;d care to admit
last week figuring out the ins and outs of a variety of data sources
and I&amp;#39;ve got many more hours ahead. It&amp;#39;s taking a lot of time but at
the end of the day, I&amp;#39;ll own the knowledge. 
&lt;/p&gt;
&lt;p&gt;
At the end of the day the first time you offer a course most of your
pre planning is going to go out the window. You need a framework, a
direction, and a start but first time through you don&amp;#39;t know how or
where things will really go. If you&amp;#39;re using someone else material,
good luck when things take an unexpected turn. If you own the course,
you&amp;#39;ll be prepared.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Angels in the Architecture - when they used to build schools like cathedrals.</title>
      <link>https://cestlaz.github.io/post/fall-2018-tour-benefits/</link>
      <pubDate>Wed, 02 Jan 2019 07:31:07 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/fall-2018-tour-benefits/</guid>
      <description>&lt;p&gt;
One of the side benefits of &lt;a href=&#34;https://cestlaz.github.io/post/fall-2018-tour-revisited/&#34;&gt;visiting high schools&lt;/a&gt; is that I end up
going all over the city. This takes me to neighborhoods that I
normally wouldn&amp;#39;t have reason to visit. For a New York History wonk
that can be pretty cool even if you just limit yourself to looking at
the schools. A few of the schools I visited in the last couple of
weeks before the new year were self contained whole building schools:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
James Madison
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Goddard High School
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
FDR HS
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Midwood HS
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Goddard was interesting because it was founded in 2008 and grew out of
the middle school in the same building. FDR was also interesting. It
was founded in 1965 which makes the building fairly young or at least
early middle aged for a New York City school building. When you
approach it, you see this small short modern looking one story structure:
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://proxy.duckduckgo.com/iu/?u=http%3A%2F%2Fassets.nydailynews.com%2Fpolopoly_fs%2F1.1408243.1374717210!%2Fimg%2FhttpImage%2Fimage.jpg_gen%2Fderivatives%2Flandscape_635%2Fteacher25n-1-web.jpg&amp;amp;f=1&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
Hidden from view is the big rectangular tower that the entrance
connects to via a tunnel. I had an interesting conversation with the
school&amp;#39;s principal about how that came to be.
&lt;/p&gt;
&lt;p&gt;
James Madison and Midwood also have their own buildings and they are
both partially screened - that is, they have selective admissions for
at least a portion of their student population. FDR is particularly
interesting becuase it is frankly an &amp;#34;old school&amp;#34; neighborhood
school that survived the destructive years of Bloomberg/Klein.
&lt;/p&gt;
&lt;p&gt;
The other schools I visited in that span were all housed in schools
that had been closed during the Bloomberg/Klein years and new small
schools created in their place. The original buildings were:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Thomas Jefferson
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Franklin K Lane
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Christopher Columbus
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Andrew Jackson
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
One of the coolest parts about visiting the older buildings is that
they were built in a different time. You have elaborate lobbies of
marble and polished granite. Beautiful murals and ornate
auditoriums. Unique architectural features like the ramps on the first
floor in Thomas Jefferson or the foyer in Brooklyn Tech (a school I
visited earlier in the year).  
&lt;/p&gt;
&lt;p&gt;
They also have school history. In many of the buildings the walls are
still adorned with names of notable alumni.
&lt;/p&gt;
&lt;p&gt;
Christopher Columbus boasts Sal Mineo,  (Anne Bancroft), and, well,
David Berkowitz. Andrew Jackson does pretty well for basketball with
Bob Cousy, Lly Daniels, Boo Harvey, and recent Knick Kyle
O&amp;#39;Quinn. Woody Allen and Mimi Sheraton among others went to
Midwood. James Madison has a political bent with Bernie Sander, Ruth
Bader Ginsburg, and Chuck Schumer. Finally, Thomas Jefferson was home
to Sylvia Fine, David Daniel Kaminsky (that&amp;#39;s Danny Kaye to you), Paul
Mazrusky, Al Lewis, and others. 
&lt;/p&gt;
&lt;p&gt;
Another tidbit I learned was about the history of Franklin K
Lane. Lane&amp;#39;s built in the Brooklyn Queens border. You can see the
hills of Forrest Park left from the last Ice Age rising up behind it
as you approach the building. Apparently there used to be a line of
paint denoting the border. Lane also saw a good deal of race related
turmoil throughout it&amp;#39;s history. I was talking to an alum during my
visit and he was telling me how that in his day, you either left the
building via the north entrance or the south one depending on your
crew and woe is he who got caught on the wrong side. 
&lt;/p&gt;
&lt;p&gt;
Finally, many of the older buildings were part of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Works_Progress_Administration&#34;&gt;WPA&lt;/a&gt; from the New
Deal. 
&lt;/p&gt;
&lt;p&gt;
If you do get a chance to go into an old school, take some time to
check out the architecture and the ghosts of the past.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll leave you with a couple of pictures from Brooklyn Tech - mostly
because they were easy to find.
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;http://www.khomarch.com/wp-content/uploads/2017/01/kevin-hom-architect-university-college-architect-brooklyn-tech-1.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://static1.squarespace.com/static/59aec48e9f7456bae98b8609/5ad7b923575d1f7d69412830/5ad7b93d88251b1250984d58/1524087471280/mural-image-bths-2.JPG&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://www.bthsalumni.org/view.image?Id=812&#34;/&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;#ZgotmplZ&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Happy New Year 2019</title>
      <link>https://cestlaz.github.io/post/new-year-2019/</link>
      <pubDate>Tue, 01 Jan 2019 09:55:01 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/new-year-2019/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve never been much of a New Years person. I get up really early and
so don&amp;#39;t usually stay up late and more to the point, as any teacher
knows, the year really goes from September through June with that
really long much needed  weekend that you regular folks call July and
August tacked on to separate years.
&lt;/p&gt;
&lt;p&gt;
This whole January first thing is really more  of a half time break or
perhaps an intermission.
&lt;/p&gt;
&lt;p&gt;
Regardless, I did start the calendar year productively - it was
warm enough for a run and on my way back got my first &lt;a href=&#34;https://www.citibikenyc.com/bikeangels/&#34;&gt;Bike Angel&lt;/a&gt; point
of the month and year.
&lt;/p&gt;
&lt;p&gt;
Since I see January 1 as more of a mid year point than a start, I&amp;#39;m
not going to reflect back on what was or project what will be but I do
have a few projects that I want to make some headway on before classes
resum in a few weeks.
&lt;/p&gt;
&lt;p&gt;
First and foremost, I&amp;#39;m teaching Data Structures for the first time at
Hunter. Sure, I&amp;#39;ve taught it dozens of times but this will be
different. I haven&amp;#39;t done it in C++ since 2003 and teaching it in
college twice a week Mon/Thu for about 1:15 is not the same as high
school where we meet every day for 0:43. I&amp;#39;ve already been boning up
on my C++. Templates are much more of a pain than I remember them and
I still much prefer toString to operator overloading. I think once
I&amp;#39;ve written some more code and am back up to speed I&amp;#39;ll have a lot of
fun with the class.
&lt;/p&gt;
&lt;p&gt;
The other big project is that I want to make some progress on an
&lt;a href=&#34;https://cestlaz.github.io/posts/time-to-create-an-ethics-course/&#34;&gt;Ethics course&lt;/a&gt; that I want to have as part of my soon to be approved (I
hope) pre-service programs. I also want to make it available to
undergrads. I&amp;#39;ve been collecting thoughts and ideas for a couple of
months now and while I still believe that ethics is too important to
just be contained within a course - it must be woven through all our
courses, I do think I&amp;#39;ve got an overall plan that will result in a
very solid course.
&lt;/p&gt;
&lt;p&gt;
There are a couple of other projects I&amp;#39;m working on that I Can&amp;#39;t talk
about right now but I have no doubt I&amp;#39;ll be keeping myself busy.
&lt;/p&gt;
&lt;p&gt;
So to all the teachers out there, Happy Half Time and to everyone
else, Happy New Year.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code, Data Structures, and Hidden Complexity</title>
      <link>https://cestlaz.github.io/post/aoc-data-structures-hidden-complexity/</link>
      <pubDate>Sun, 30 Dec 2018 15:17:14 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/aoc-data-structures-hidden-complexity/</guid>
      <description>&lt;p&gt;
Since 2015, &lt;a href=&#34;https://twitter.com/ericwastl&#34;&gt;Eric Wastl&lt;/a&gt; has gifted us each December with &lt;a href=&#34;http://adventofcode.com&#34;&gt;Advent of
Code&lt;/a&gt; - a 25 day programming competition that I very much enjoy. This
year I haven&amp;#39;t been able to get to too many of the problems. I only
completed the first two days on the day they were released, problem
three a day late and then I didn&amp;#39;t get back to the problems until
almost 12/25 - the final day of the competition. I&amp;#39;ve spent a bit of
time over the break working through the problems. I&amp;#39;m currently
through 9. I started working through the problems in Clojure - part of
my yearly attempt to dive into the language but then did a few in
Python just to speed up my progress.
&lt;/p&gt;
&lt;p&gt;
Yesterday, I did &lt;a href=&#34;https://adventofcode.com/2018/day/9&#34;&gt;question 9&lt;/a&gt; which I found interesting as a teacher -
so much so that I think I&amp;#39;ll assign at some point in the future.
At the core of the problem you have to maintain a list of items
inserting and deleting items at assorted locations. I threw together
this solution:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;num_players &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;431&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 9&lt;/span&gt;
last_score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;70950&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 255&lt;/span&gt;
players &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(num_players&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)]

player&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
board&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
next_marble &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; next_marble &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; last_score:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; next_marble &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;#regular insert&lt;/span&gt;
        L &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(board)
        index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;L
        index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;L
        board&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insert(index,next_marble)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        players[player]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;players[player]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; next_marble
        index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(index&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;len(board)
        players[player]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;players[player]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;board[index]
        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; board[index]
    player&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(player&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;num_players
    next_marble &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; next_marble &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(max(players))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
It worked and I got my first star. This unlocked part 2 which changed
the number of marbles in the game from 70950 to 70950&amp;lt;b&amp;gt;00&amp;lt;/b&amp;gt;. This
brings me to my first observation - hidden complexity. Seeing my input
I knew my part 2 would be crazy slow. The solution requires you insert
and delete into a list over and over again and I did it using a Python
list and a Python list is backed by an array. This means that every
insert and delete will be linear and I had a whole bunch of them.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s another great simple example of hidden complexity. Students and
beginners use Python lists as if they were linked structures with
direct indexing - the best of all worlds. It&amp;#39;s great if you&amp;#39;re dealing
with small data sets but unless you&amp;#39;re careful things can get very
slow very fast. It&amp;#39;s important that students learn about this and it
appears that many don&amp;#39;t. 
&lt;/p&gt;
&lt;p&gt;
Even though I knew the program would take forever to run it was my bed
time so I started it on part two and turned in for the night.
&lt;/p&gt;
&lt;p&gt;
When I woke up I had an answer to part 2, entered it and earned my
next star. 
&lt;/p&gt;
&lt;p&gt;
Of course I knew that the solution should really be written using a
doubly linked list. The funny thing is that if you&amp;#39;re comfortable with
creating dynamic data structures like linked lists, writing a solution
using a doubly linked list and running it on part 2 actually takes a fraction of
the time of writing the original solution and running it. To make
sure, I did it. I decided to code it up in Java since I might assign
something like this to my students in C++. You can check it out &lt;a href=&#34;https://github.com/zamansky/advent2018/tree/master/java&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
The second take away was that it&amp;#39;s actually beneficial for students to
be able comfortable with pointers and dynamic memory and while
creating a linked list let alone a tree can be tricky at first, &lt;a href=&#34;https://cestlaz.github.io/posts/it-gets-easier-advent19/&#34;&gt;it
does get easier.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With all the debate going on over coding vs computational thinking vs
CS it&amp;#39;s things like this - thinking about things like this that marks
one of the ways a computer scientist is different from a programmer. 
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Visiting schools and talking tech</title>
      <link>https://cestlaz.github.io/post/fall-2018-tour-revisited/</link>
      <pubDate>Fri, 21 Dec 2018 15:49:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/fall-2018-tour-revisited/</guid>
      <description>&lt;p&gt;
Back in September I talked about embarking on my &lt;a href=&#34;https://cestlaz.github.io/post/fall-2018-hs-tour/&#34;&gt;Fall 2018 HS CS Tour&lt;/a&gt;.
Since then I&amp;#39;ve visited about a dozen schools. I&amp;#39;d like to thank my
friends who helped connect me to schools - particularly &lt;a href=&#34;https://twitter.com/aankit&#34;&gt;Aankit Patel&lt;/a&gt;
and &lt;a href=&#34;https://twitter.com/diane_levitt&#34;&gt;Diane Levitt&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Even though the original motivation for the visits was to get the word
out about Hunter CS and the awesome things we&amp;#39;re doing in the Hunter
CS Honors program I always tried to make my talks about something that
would be relevant for the entire audience and not just the few that
were great fits for my program. I think I&amp;#39;ve done a pretty good job at
that. All this said, doing these visits is incredibly draining. I&amp;#39;m
usually up at the crack of dawn and end up taking the subway or
sometimes subway and bus way out into the five boroughs. Actually four
this year since I wasn&amp;#39;t able to get a date to visit any Staten Island
schools. It takes a lot of time and effort and while I love
talking to students and there some ancillary things I enjoy about
getting out into the neighborhoods of the city I&amp;#39;m extremely happy
that I can now rest for a few weeks. 
&lt;/p&gt;
&lt;p&gt;
Reflecting on all of this I&amp;#39;m realizing how important these visits are
and not because they&amp;#39;re recruiting trips.
&lt;/p&gt;
&lt;p&gt;
I spoke about some of the specifics I talk about in an &lt;a href=&#34;https://cestlaz.github.io/post/fall-2018-hs-tour/&#34;&gt;earlier post&lt;/a&gt;
but arguably more important is that for many of them it&amp;#39;s the first
time for them to hear about the possibilities.
&lt;/p&gt;
&lt;p&gt;
While many students are excited about what they&amp;#39;re doing in their first
CS classes it turns out that few have any idea where it will
lead. They may have heard that computer science can lead to a high
paying job. They might know they can get a job at Google but they
don&amp;#39;t really know what that means.
&lt;/p&gt;
&lt;p&gt;
I saw this at Hunter when I started three years ago and now a lot of
hard work later students are much more in tune with the New York Tech
community and all that it means.
&lt;/p&gt;
&lt;p&gt;
Students don&amp;#39;t realize that there are many programming careers beyond
Google and their are many CS careers beyond programming. 
&lt;/p&gt;
&lt;p&gt;
They don&amp;#39;t realize they can combine computer science with almost any
other field or interest.
&lt;/p&gt;
&lt;p&gt;
They don&amp;#39;t know that the same algorithmic approach behind Amazon,
Netflix, and Spotify recommendations can be used by companies selling
cloths, cosmetics, or anything else.
&lt;/p&gt;
&lt;p&gt;
And that&amp;#39;s just the tip of the iceberg. 
&lt;/p&gt;
&lt;p&gt;
Now I&amp;#39;m not saying that teachers aren&amp;#39;t telling their students about
the possibilities but rather that sometimes it has to come from an
outsider. When I started at Stuy, before I had a reputation (good or
bad) I&amp;#39;d tell students things and they wouldn&amp;#39;t buy it. Later I&amp;#39;d have
a friend from the &amp;#34;real world&amp;#34; come in. Frequently they&amp;#39;d touch on
points I addressed in class and all of a sudden I was worth listening
to. Sometimes you need an outside voice to empower and authenticate the teacher.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying that I&amp;#39;m a super motivational speaker or anything like
that. I&amp;#39;m not. I&amp;#39;m an ok speaker with content worth listening to. I&amp;#39;m
just realizing more and more how important this small self imposed
corner of my job is. Not so much for Hunter but for the kids of NY. 
&lt;/p&gt;
&lt;p&gt;
Jut this past week I&amp;#39;ve started to work to connect some of my current
students to &lt;a href=&#34;http://tealsk12.org&#34;&gt;TEALS&lt;/a&gt; volunteers. If you read this blog you know I&amp;#39;m a
big fan of TEALS and have wanted to encourage my students to get
involved for a while. Once we get some of our Hunter CS majors into
schools around the city to help teach CS perhaps they can help spread
the message of the possibilities to even more students.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Professional Development - APCS-A, similar and beyond</title>
      <link>https://cestlaz.github.io/post/pd-apcs-a-and-beyond/</link>
      <pubDate>Sat, 15 Dec 2018 08:56:06 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-apcs-a-and-beyond/</guid>
      <description>&lt;p&gt;
A while ago I wrote about &lt;a href=&#34;https://cestlaz.github.io/post/pd-in-nyc/&#34;&gt;our plans&lt;/a&gt; at Hunter to run professional
development for CS teachers. Specifically, running once a month
sessions for teachers who teach APCS-A, similar and beyond.
&lt;/p&gt;
&lt;p&gt;
The idea started as a joke but morphed into a legit idea.
&lt;/p&gt;
&lt;p&gt;
I was talking to some friends about CTLE hours and how ridiculous the
system is. NY State teachers need 100 hours of CTLE credit (PD hours)
every so many years. It&amp;#39;s something of a scam for a few
reasons. First, two of the biggest providers are the NYC DOE and the
UFT, the teacher&amp;#39;s union. I&amp;#39;ve been told they both charge money for
many CTLE credit bearing activities. That certainly doesn&amp;#39;t seem
kosher – your boss and your union set up a system to charge you to keep your
job. 
&lt;/p&gt;
&lt;p&gt;
Well, it turns out that Hunter is certified to issue CTLE credits so
we joked that we should get dinner and hang out once a month and call
it professional development. We were only half joking - whenever you
get a bunch of teachers in a room they talk shop and that is actually
the best PD there is. Upon talking among ourselves and also to other
teachers we realized there was a legitimate need for PD for teachers
who were beyond the basics and so we turned this silly idea into the
real deal.
&lt;/p&gt;
&lt;p&gt;
Last Thursday we had our first session. We had about 25 attendees for
a three hour session.
&lt;/p&gt;
&lt;p&gt;
I can&amp;#39;t tell you if it was any good - you&amp;#39;ll have to ask the
participants, I can tell you what we did and what we plan moving
forward.
&lt;/p&gt;
&lt;p&gt;
We started with a content piece. I ran through &lt;a href=&#34;https://cestlaz.github.io/posts/2013-03-23-who_won_the_election-quadratic_to_linear_time/&#34;&gt;this lesson&lt;/a&gt; (or &lt;a href=&#34;https://cestlaz.github.io/posts/when-they-change-the-script/&#34;&gt;this
one&lt;/a&gt;) where the students find the mode of a list, realize it&amp;#39;s a slow
(n^2) algorithm and then refine it to a linear solution. The key idea
is to give the students an intuitive feeling for run time issues and
also to introduce them to &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-17-hidden-complexity.html/&#34;&gt;hidden complexity&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
After this we had dinner, provided by our friends at Google. Over
dinner the teachers talked shop. In addition to getting to know each
other, their programs, and their classes we also asked them to
consider these three items:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
What are things that cause you difficulty that you&amp;#39;d like us to
cover?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What are things you wish you knew about that you&amp;#39;d like us to
cover?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What are things you&amp;#39;re comfortable with that you&amp;#39;d be willing to
share with the group?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
After dinner we circled up and JonAlf presented the way he set up
student note taking in his class.
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/pd-apcs-a.jpg&#34; width=&#34;500&#34; height=&#34;500px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
Finally, we discussed next steps - specifically what we came up with
for those three bullet points above.
&lt;/p&gt;
&lt;p&gt;
I like the idea of having at least one short content piece, one short
pedagogy piece and a deeper dive at each meeting. For the first one,
JonAlf and I had to guess as to what might be useful and at the
appropriate level. We advertised for teachers who did APCS-A, similar,
or beyond but I&amp;#39;m sure we had teachers for whom the mode lesson was a
bit too advanced to do without scaffolding and also some for whom it
was way to simple. As we continue to meet, we&amp;#39;ll nail down the right
level and the right activities.
&lt;/p&gt;
&lt;p&gt;
The real hope is that many of the participants will become regulars
and together we&amp;#39;ll turn this into both an amazing once a month
activity and also a community of teachers.
&lt;/p&gt;
&lt;p&gt;
Right now, I&amp;#39;m looking for companies who want to feed us and possibly
provide space so if you know of any, hook me up. We&amp;#39;re also collecting
feedback and ideas from the attendees. 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re targetting February for our next session followed by March,
April, May and possibly June.
&lt;/p&gt;
&lt;p&gt;
In the meantime, stay tuned.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sloan awards for excellence in teaching science and mathematics</title>
      <link>https://cestlaz.github.io/post/sloan-awards-2018/</link>
      <pubDate>Wed, 12 Dec 2018 12:52:44 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/sloan-awards-2018/</guid>
      <description>&lt;p&gt;
I spent yesterday evening at the Cooper Union in their &lt;a href=&#34;https://en.wikipedia.org/wiki/Cooper_Union#The_Foundation_Building&amp;#39;s_Great_Hall&#34;&gt;Great
Hall&lt;/a&gt;, a place famous for Abraham Lincoln&amp;#39;s &lt;a href=&#34;https://en.wikipedia.org/wiki/Cooper_Union_speech#External_links&#34;&gt;speech&lt;/a&gt; that some say
propelled him to the presidency.
&lt;/p&gt;
&lt;p&gt;
I was there in the audience watching as the Sloan Foundation and the
Fund for the City of New York awarded seven public school teachers
with an ward for &amp;#34;Excellence in the Teaching of Science and
Mathematics.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I was their to see my friend Dave Deutsch, a long time public school
physics teacher receive the honor. Here&amp;#39;s a brief clip about Dave:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe src=&amp;#34;&lt;a href=&#34;https://player.vimeo.com/video/304871223&#34;&gt;https://player.vimeo.com/video/304871223&lt;/a&gt;&amp;#34; width=&amp;#34;640&amp;#34;
height=&amp;#34;360&amp;#34; frameborder=&amp;#34;0&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
&lt;p&gt;
You can read Dave&amp;#39;s blurb as well as blurbs and videos for all of the
recipients &lt;a href=&#34;https://www.fcny.org/fcny/core/sae/2018_winners/#david-deutsch&#34;&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never taught with Dave but I&amp;#39;ve known him for a couple of decades
and he&amp;#39;s a teacher&amp;#39;s teacher. He and Devorah cut their teeth teaching
together at the Manhattan Center for Science and Math. Dave&amp;#39;s still
there. 
&lt;/p&gt;
&lt;p&gt;
Dave&amp;#39;s also not the guy that normally gets awards. It&amp;#39;s not because he
doesn&amp;#39;t deserve them - he&amp;#39;s probably the best physics / science
teacher I know. It&amp;#39;s that he never toots his own horn, he&amp;#39;s not the
over the top super charismatic popular teacher who seems great in the
moment but in the long run might not be, and he never looks for the
spotlight. He just goes about his business of connecting, inspiring,
and truly caring about his kids. His value as an educator can be seen
not only in the short term in his classes but in the long run through
his former students.
&lt;/p&gt;
&lt;p&gt;
He&amp;#39;s the best.
&lt;/p&gt;
&lt;p&gt;
Over the years I tried to pull Dave over to Stuy or involve him in
other projects but he&amp;#39;s always stayed true to Manhattan Center and
it&amp;#39;s population even with the school&amp;#39;s toxic administration (it&amp;#39;s
worth noting that Dave&amp;#39;s video is the only one that didn&amp;#39;t include the
school&amp;#39;s principal lauding the recipient and was the only principal
not present at the festivities).
&lt;/p&gt;
&lt;p&gt;
In any event, Dave&amp;#39;s a true champion for the public school students of
NYC and a true hero. There are a small handful of teachers that I
really look up to and Dave Deutsch is one of them.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s to Dave and other teachers who never get the recognition they
deserve because they&amp;#39;re too busy doing the good work rather than self
promoting.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS For All The Time</title>
      <link>https://cestlaz.github.io/post/cs4allthetime/</link>
      <pubDate>Fri, 07 Dec 2018 08:20:42 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs4allthetime/</guid>
      <description>&lt;p&gt;
A question that frequently comes up with respect to CS for All is what
does it mean? 
&lt;/p&gt;
&lt;p&gt;
To me it means giving all students some fundamental exposure to
computer science so that they can:
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Make use of those thinking skills, problem solving approaches, and
practical tools regardless of their future paths. 
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Provide a path for the subset of &amp;#34;all&amp;#34; that desire to further pursue
computer science.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
But even with this, how do you do it?
&lt;/p&gt;
&lt;p&gt;
Does it mean that you require computer science? If so, do we require it every
year? some years? One time only?
&lt;/p&gt;
&lt;p&gt;
Does it mean you offer it as an elective? If so, when?
&lt;/p&gt;
&lt;p&gt;
I think about this a fair amount but decided to write something up
when I saw this tweet:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;STEM related career interests are largely developed before high school (Sadler, Sonnert, Hazari, &amp;amp; Tai, 2012) &lt;a href=&#34;https://twitter.com/hashtag/csforall?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#csforall&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/csedweek?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#csedweek&lt;/a&gt; &lt;a href=&#34;https://t.co/TiAUvpP3bQ&#34;&gt;https://t.co/TiAUvpP3bQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Lana Peterson (@tyLanasaurusrex) &lt;a href=&#34;https://twitter.com/tyLanasaurusrex/status/1070475730562084864?ref_src=twsrc%5Etfw&#34;&gt;December 6, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I responded that I&amp;#39;ve seen many kids get their first exposure in high
school and from that go on to careers in tech so it&amp;#39;s clear to me that
high school isn&amp;#39;t too late. I was reminded that I was talking about
kids who went through my required HS CS class so the kids had no
choice but to be exposed to CS but the people advocating starting at
an elementary level are talking about a compulsory experience so to
compare a required elementary experience against an elective high
school one is really apples to oranges.
&lt;/p&gt;
&lt;p&gt;
Even thought it&amp;#39;s an unfair comparison there are a lot of things it
can lead one to consider.
&lt;/p&gt;
&lt;p&gt;
Should we teach CS in every grade? Probably not. How about every band?
Maybe. For those of you not living in the K12 world &amp;#34;by band&amp;#34; usually
refers to a set of grades - kindergarten to 2, 3 through 5, 6-8, and
then high school. Where should it be required and where an elective?
&lt;/p&gt;
&lt;p&gt;
Teaching a required CS class in every grade or band is going to be a
huge undertaking. I&amp;#39;m also not sure it&amp;#39;s required. To get the best
bang for your buck you want to expose the kids to CS in a way and at a
time when they might pursue it further. If you&amp;#39;re having only one
required experience, I don&amp;#39;t think the elementary grades are the
place.
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s that point in time, I think around first through third grade
where dinosaurs are all the rage. Maybe more so in NYC where we have
access to the &lt;a href=&#34;https://www.amnh.org/&#34;&gt;American Museum of Natural History&lt;/a&gt; but still. Lots of
young kids want to be paleontologists but it doesn&amp;#39;t hold. Okay. maybe
I&amp;#39;m being a little silly here but I think the basic point is
accurate. Kids are exposed to many things in the early grades that
just fade away. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m not saying that we shouldn&amp;#39;t do CS or CS related things in grade
school. Things like the activity &lt;a href=&#34;https://twitter.com/fredwilson&#34;&gt;Fred Wilson&lt;/a&gt; described in his post on
this year&amp;#39;s &lt;a href=&#34;https://avc.com/2018/12/la-hora-del-codigo/&#34;&gt;Hour of Code&lt;/a&gt; or the problem solving and logic games good
teachers do if given the time and resources. Things that have
always been done by some teachers in some schools but are now being
relabled CS or Computational Thinking. These are great practices and
should be made available to all students as part of their elementary
education but I doubt that they&amp;#39;ll lead to many kids following CS as a
career path. I&amp;#39;m not an elementary school expert but to me, even
though I see great value in the early logic / problem solving stuff, I
don&amp;#39;t see hyping CS early as making a difference unless there&amp;#39;s some
follow up before the interest fades.
&lt;/p&gt;
&lt;p&gt;
That brings us to the middle school bands. I&amp;#39;ve dabbled a little here
but it&amp;#39;s also not my wheelhouse. In my experience, kids in lower
middle school can dabble in DnD tools and start to develop some 
coding skills and explore some of the CS concepts that they&amp;#39;ll see in
late HS or college and those in upper middle school can play with the
text based languages to do the same. What I also noticed is that what
can be accomplished in a month with those kids in middle school can be
done in a week or two when the kids are a year or two older and with
greater understanding and retention. 
&lt;/p&gt;
&lt;p&gt;
As a side note, before people get up in arms with &amp;#34;I teach middle
school kids APCS-A and they all master it&amp;#34; let me say that I&amp;#39;m
describing my experience across a range of middle school kids. There
will always be few outliers who can do more when younger. That said
I&amp;#39;m betting that most people who say that any middle school kid can
indeed master APCS-A hasn&amp;#39;t done so in an inner city poor public
school. Have you done it while teaching a class of 34?  With a class
of low income students with all the disadvantages and challenges
inherent to that population? What&amp;#39;s more did you then have to teach
them a data structures course a year or two later to see if they
really mastered the original material.
&lt;/p&gt;
&lt;p&gt;
This brings us to high school. As with my original tweet, in my
experience if you give kids a good first CS experience in high school
you can indeed give them everything needed for CS for All and it&amp;#39;s
close enough to college so that they might very well continue on the
CS career path.
&lt;/p&gt;
&lt;p&gt;
So where does this leave us? We certainly should embed computational
thinking practices (whatever that actaully means) in the elementary
school, particularly if we can do it in a way that also supports other
academic areas and while it&amp;#39;s nice to have a CS middle school
experience and if we can afford to offer one that&amp;#39;s wonderful. On the
other hand, I don&amp;#39;t think it&amp;#39;s as important as elementary exposure and
high school exposure so if we have to cut a corner, that&amp;#39;s the
place. To me, and of course I&amp;#39;m biased, the critical time for a
requirement is high school. Sure, if it&amp;#39;s an elective kids won&amp;#39;t take
it but that&amp;#39;s true of a lot of subjects. I don&amp;#39;t know what the
research says but people do indeed change directions. How many of us
are doing what we thought we&amp;#39;d be doing in grade school or middle
school. Heck, even high school. I have a friend that did computer work
in his twenties and thirties, then went to law school and practiced
law for a bunch of years and then in his forties started a production
company in LA. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m a big believer in CS for All but to me it doesn&amp;#39;t mean it has to
be in every grade or every band. If I could only do it in one place it
would be required in the high school. If in two I&amp;#39;d add the elementary
school piece and then finally the middle school.
&lt;/p&gt;
&lt;p&gt;
As a final point I&amp;#39;d like to add that school is a zero sum game. There
are only so many minutes in the day and as we add CS we remove
something else. I believe we can add CS or, more specifically CT to
the elemntary schools without cutting anything and I know there&amp;#39;s room
in high schools in NY. I&amp;#39;m not sure about middle schools. In any
event, I&amp;#39;d hate to see music and art programs - already decimated by
budget cuts and misguided policies like the small schools movement
take a further hit so as to get CS everywhere.
&lt;/p&gt;
&lt;p&gt;
Just some food for thought.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Email Policy</title>
      <link>https://cestlaz.github.io/post/email-policy/</link>
      <pubDate>Sat, 01 Dec 2018 19:36:37 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/email-policy/</guid>
      <description>&lt;p&gt;
I saw this tweet the day along with the ensuing thread:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Seriously, who emails a professor with words like &amp;quot;u&amp;quot; and &amp;quot;plz hlp&amp;quot;? Am I allowed to put language in my syllabus that penalizes students for obnoxious, intentional misspellings? Maybe: -1% to your course grade multiplied by the edit distance of the word with its correction?&lt;/p&gt;&amp;mdash; Austin Cory Bart (@AustinCorgiBart) &lt;a href=&#34;https://twitter.com/AustinCorgiBart/status/1068386945854779392?ref_src=twsrc%5Etfw&#34;&gt;November 30, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I wanted to reply but as usual, I decided to reply in a blog post so
that it doesn&amp;#39;t get lost in the Twitterverse. This way I can go back
and read this post in five years and say &amp;#34;what was I thinking!!!!&amp;#34;
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never gotten an email like the one Austin described. The closest
was back in the early days of email when kids had email addresses like
 &lt;strong&gt;koolwarezduud@hotmailcom&lt;/strong&gt;. That didn&amp;#39;t last long. Just ask what
they would think if they were a college admissions person or an
interviewer for a job and recieved an email from &lt;strong&gt;koolwarezdude&lt;/strong&gt;. 
&lt;/p&gt;
&lt;p&gt;
That said, even though I haven&amp;#39;t gotten emails with &amp;#34;u&amp;#34; or &amp;#34;plz hlp&amp;#34; I
do have to train my students to use email correctly so there might be
some parallels between my case and experiences and Austin&amp;#39;s.
&lt;/p&gt;
&lt;p&gt;
For years I&amp;#39;ve used a mailing list for class communication. I&amp;#39;ve tried
alternatives like Slack and Piazza but always come back to an old
school mailing list. For years I used &lt;a href=&#34;http://www.list.org/&#34;&gt;Mailman&lt;/a&gt; but most recently I&amp;#39;ve
been using Google Groups. I always give my students the rules at the
beginning of the class:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
The list can be used for anything related to class or CS.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Things that are interesting to the community but not class or CS
related are also OK. Things like if a student is on a team that has
a big competition coming up or that there are free or cheap tickets
to a show or museum are also ok.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The usual rules for civility and respect.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
It&amp;#39;s all pretty low key, informal and open.
&lt;/p&gt;
&lt;p&gt;
The big thing I tell them is that the &lt;strong&gt;only things&lt;/strong&gt; they should email
me directly about are things that are specific to the sender and
me. Things like grade related questions, a request for a
recommendation letter etc.. If it&amp;#39;s a question about the class
material, the tools, etc. I expect the email to go to the list not
me. I give three reasons for this
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;
Other class members could benefit from the question and answers.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
If you email me only I can answer the question and only when I get
  to it. If you email the list, there are many more people who can
  potentially answer.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
If it&amp;#39;s a tools question, particularly Mac related It&amp;#39;s unlikely
I&amp;#39;ll know the answer but almost certainly someone in the class
will,
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
I tell my classes that if they email me directly with something that
should go to the mailing list, I&amp;#39;ll ignore the email.
&lt;/p&gt;
&lt;p&gt;
Predictably, at first students email me directly. The first couple of
times, I&amp;#39;ll answer the question by emailing the full list. I&amp;#39;ll say
something like &amp;#34;someone emailed me &lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt;__&lt;/span&gt;&lt;/span&gt;&amp;#34; give the answer  and also
remind them that emails like that should go to the list.
&lt;/p&gt;
&lt;p&gt;
This usually clears things up for most of the students but some will
continue to email me. My next step is to reply to their email telling
them to repost to the group. If they do, I&amp;#39;ll answer (usually giving a
bit of time to hope that a classmate chimes in first). If they don&amp;#39;t
then the question won&amp;#39;t get a response.
&lt;/p&gt;
&lt;p&gt;
Any emails that come directly to me after phase 2 go into the trash.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll also sometimes redirect questions I get after class to the
mailing list. Particularly if I think that the answer can benefit more
than the asking student or if the answer should remain accessible for a
longer period of time. This came up just the other day when a student
had an issue with their editor saving source files in RTF. I didn&amp;#39;t
have the answer and I also thought that the answer to this would be a
good thing for more students to see and also for the answer to be
searchable should it come up later. The student posted to the list and
another one of the students answered. 
&lt;/p&gt;
&lt;p&gt;
All in all I think this works pretty well.
&lt;/p&gt;
&lt;p&gt;
Now if only I could get more actual student engagement online…
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reunions 2018</title>
      <link>https://cestlaz.github.io/post/reunions-2018/</link>
      <pubDate>Sun, 25 Nov 2018 15:59:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/reunions-2018/</guid>
      <description>&lt;p&gt;
Thanksgiving weekend is also reunion weekend. I&amp;#39;ve been on and off
invited to Stuy reunions over the years. Not as often it seems as some
teachers but more often than others. I always do my best to attend. I
have very fond memories of many students and many classes over many
years and think a lot about them so feel very honored whenever I&amp;#39;m
invited to one of these.
&lt;/p&gt;
&lt;p&gt;
In the past each class due a reunion did its own thing - some club or
bar usually in Manhattan. This year, things were a little
different. Stuy held some &amp;#34;all class&amp;#34; reunion activities at the school
during the day and then multiple reunions were held at the school
during the evening. They hosted three classes - 2008, 2004, and 1998
in different parts of the school. The class of 2013 also had a reunion
off site - that&amp;#39;s my daughter Batya&amp;#39;s graduating class so she got to
catch up with her class wherever they held their shindig. 
&lt;/p&gt;
&lt;p&gt;
I think the format worked well. Two classes were in the cafeteria
separated by a curtain and the third in one of the gyms. There was
self serve beer, wine, and water along with assorted snacks and finger
foods. Each area also had a DJ playing music though not too
loudly. Everyone knew the location, costs were kept low and for the
most part it wasn&amp;#39;t so loud that you couldn&amp;#39;t talk to each other.
&lt;/p&gt;
&lt;p&gt;
As usual it was great to see some former students that I hadn&amp;#39;t seen
in years and also chatting with non-cs students that I really didn&amp;#39;t
know but there were a few highlights.
&lt;/p&gt;
&lt;p&gt;
I spend a good amount of time with some of my 1998 crew. As I told
them, I really honestly missed them. We had some really good
times. Some of them had moved out of the city but talking to the NY
contingent we all left feeling that we should do a better job of
seeing each other in person.
&lt;/p&gt;
&lt;p&gt;
I also enjoyed my time with the other groups but I&amp;#39;ve manged to see
more of them more recently. 
&lt;/p&gt;
&lt;p&gt;
In a couple of weeks, I&amp;#39;m actually going to have a reunion of my own
alumni community. I&amp;#39;ve put together a loose association of my former
students and other Stuy students involved in tech. We&amp;#39;re having a
meetup in early December and right now it looks like around 100 people
are going to attend. I love those meetups because they bring together
people across the generations. The downside for me is that it&amp;#39;s
like a big family event. As the host I never get to really catch up
with anyone since I&amp;#39;m running from person to person.
&lt;/p&gt;
&lt;p&gt;
One final nice takeaway from the evening. After I exited Stuy I
started to gear up in my &lt;a href=&#34;https://www.cleverhood.com/&#34;&gt;Cleverhood&lt;/a&gt; for the rainy ride home and
started chatting with a group of &amp;#39;98 grads one of whom was my
student. He said to the group &amp;#34;you might not remember this guy and
probably have no idea what he did for all of you.&amp;#34; He went on to
explain how I got Stuy on the internet in 1994/1995 and set up email
accounts for everyone. I remembered that I ran the internet stuff at
Stuy for years but never really thought about the fact that we got
online and got those facilities to the kids that early. Working with
Bruce, a student at the time we &lt;del&gt;stole&lt;/del&gt; requisitioned one of the IBM
RS/6000 machines that were supposed to be used in the cad classes, got
it onto the net, and set up email accounts for everyone. It&amp;#39;s funny
that I just always thought of that as something we did but to some of
the students it was a pretty big deal.
&lt;/p&gt;
&lt;p&gt;
Goes to show that you never know what makes a mark on your students.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching Sorting</title>
      <link>https://cestlaz.github.io/post/teaching-sorting/</link>
      <pubDate>Mon, 19 Nov 2018 20:04:08 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/teaching-sorting/</guid>
      <description>&lt;p&gt;
Earlier today I saw a facebook post asking for thoughts on teaching
sorting. The question was specifically not  about motivations like
having the class act out sorts or sort cards but rather about the
coding. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve been meaning to write about this since last summer when I
attended Owen Astrachan&amp;#39;s talk on the same subject.
&lt;/p&gt;
&lt;p&gt;
Early in my career when teaching sorting I developed the n^2 sorts as
standalone routines just as they&amp;#39;re presented in most books but as I
gained more experience as a teacher, I changed it up to build the
sorts (at least some of them) from existing concepts. 
&lt;/p&gt;
&lt;p&gt;
Let&amp;#39;s look at the selection sort.
&lt;/p&gt;
&lt;p&gt;
We can demonstrate it by arranging an already dealt hand. Find the
smallest card place it all the way at the left. The next smallest,
next to it. Repeat until done.
&lt;/p&gt;
&lt;p&gt;
This is actually a very easy algorithm to develop using code the kids
have already written.
&lt;/p&gt;
&lt;p&gt;
By the time we do sorting, students have already written the code to
find the smallest or largest in a list time and time again. We&amp;#39;ve also
used that concept in developing other algorithms like the one I wrote
about &lt;a href=&#34;https://cestlaz.github.io/oldblog/2013-03-23-who_won_the_election-quadratic_to_linear_time/&#34;&gt;here&lt;/a&gt;. Assuming we&amp;#39;ve covered the ArrayList, We can easily code
up a sorting type algorithm (excuse any little Java errors, I&amp;#39;ve been
teaching this in C++ for the past 3 years):
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
      ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Integer&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; min_index&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
          min_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; findMinIndex&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
          value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;min_index&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
          a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;remove&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;min_index&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
          result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;append&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;value&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
This won&amp;#39;t be efficient due to &lt;a href=&#34;https://cestlaz.github.io/posts/2014-11-17-hidden-complexity/&#34;&gt;hidden complexity&lt;/a&gt; but it&amp;#39;s very easy to
write and understand the algorithm
&lt;/p&gt;
&lt;p&gt;
From here it&amp;#39;s a simple matter to code this algorithm in place -
swapping the next smallest item each time. This time coded with an array::
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; min_index&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;++)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
      min_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; findMinIndex&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// find min excluding what&amp;#39;s sorted so far
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;min_index&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
      swap&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;],&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;min_index&lt;span style=&#34;color:#f92672&#34;&gt;]);&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
If you want, you can then break out the findMinIndex routine and the
swap so that kids see all the code in one place but regardless, this
is an easy, incremental way of teaching selection sort.
&lt;/p&gt;
&lt;p&gt;
You can do something similar with insertion sort. Start with the code
to insert an item into an already sorted list. Write that as a routine
and then put a loop around it to complete the sort.
&lt;/p&gt;
&lt;p&gt;
Developing routines like this incrementally has a number of
advantages. The code is simpler, it reinforces old concepts, and it
gives students additional practice in composing more complex solutions
from building blocks.
&lt;/p&gt;
&lt;p&gt;
You can use a similar approach to coding the more advanced sorts but
I&amp;#39;ll save those ideas for a future post.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PD in NYC</title>
      <link>https://cestlaz.github.io/post/pd-in-nyc/</link>
      <pubDate>Sun, 18 Nov 2018 19:43:36 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/pd-in-nyc/</guid>
      <description>&lt;p&gt;
I spent this past Saturday morning up at the Microsoft building in
Times Square. What was I doing there? &lt;a href=&#34;https://twitter.com/aankit?lang=en&#34;&gt;Aankit Patel&lt;/a&gt; invited me to check
out the professional development that he and his team organized for
the teachers involved in the assorted CSforAllNYC programs that his
office runs. 
&lt;/p&gt;
&lt;p&gt;
Wow.
&lt;/p&gt;
&lt;p&gt;
Lots of great things going on. I was only able to stay for a couple of
hours but I spent some time in two rooms run by &lt;a href=&#34;https://www.tealsk12.org/&#34;&gt;TEALS&lt;/a&gt;, a room of &lt;a href=&#34;https://bjc.berkeley.edu/&#34;&gt;BJC&lt;/a&gt;
teachers, a group working with &lt;a href=&#34;https://p5js.org&#34;&gt;p5.js&lt;/a&gt;, one doing physical computing and
a bunch more.
&lt;/p&gt;
&lt;p&gt;
While there was good content all around I was really impressed with
the sense of community in many of the rooms. One of the hardest parts
of being a computer science teacher in K12 is that you&amp;#39;re frequently
the only CS teacher in your school. That can be an awfully lonely
existence. It&amp;#39;s hard to be the only teacher. No one to bounce lesson
ideas off of or to debrief with and if you leave your school they&amp;#39;re
left in the lurch. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s simply amazing that all these NYC teachers have opportunities
like this past weekends PD and the communty it provides. 
&lt;/p&gt;
&lt;p&gt;
On the other hand, teachers who are not part of city programs like
SEP or TEALS don&amp;#39;t have these opportunities and at Hunter we&amp;#39;re trying
to do our piece to help solve that problem.
&lt;/p&gt;
&lt;p&gt;
A few months ago I wrote about our plans to roll out once a month
professional development sessions for CTLE hours specifically aimed at
teachers who are ready for the next step. Those who are already
comfortable with the first courses and student experiences. I&amp;#39;m
describing the sessions as being for high school teachers teaching
APCS-A, similar or beyond.
&lt;/p&gt;
&lt;p&gt;
Were hosting our first session on December 13th. There will be a
couple of presentations or activities to get us started but the bulk
of the time will be about planning the rest of the sessions which will
run until the end of the school year and the hope is that we will
cover both content beyond the basics.
&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re a public school CS teacher in NYC (and need CTLE hours)
and you&amp;#39;re ready for something more advanced than the usual PD
opportunities, why don&amp;#39;t you join us. Just sign up &lt;a href=&#34;https://goo.gl/forms/FJDyCx7qFec1yPjr1&#34;&gt;here&lt;/a&gt;. Space is
limited so if we fill, we&amp;#39;ll add you to the waitlist and we&amp;#39;ll work on
trying to find a bigger space to acomodate more teachers.
&lt;/p&gt;
&lt;p&gt;
Looking forward to getting this thing started!!!!
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An experiment with code review</title>
      <link>https://cestlaz.github.io/post/code-review/</link>
      <pubDate>Thu, 15 Nov 2018 17:09:58 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/code-review/</guid>
      <description>&lt;p&gt;
Sometimes professional practices don&amp;#39;t work well in the classroom and
sometimes they do. One professional practice that does work well is
code review - reading and reflecting on other peoples code.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve had my students do code reviews in the past but this time I did
things differently. Here&amp;#39;s what I did and here&amp;#39;s how it went
&lt;/p&gt;
&lt;p&gt;
Two weeks ago my students completed a lab. The lab involved reading
in a poorly indented C++ program and spit out a properly indented
one. This was the platform for the reviews.
&lt;/p&gt;
&lt;p&gt;
First we paired everyone off. They forked each others labs and then
did a code review on each others assignment. Each student would read
their partner&amp;#39;s code, decide what to focus on - the whole thing, a
single function or something in between, and write up a code
review. They couldn&amp;#39;t talk during this process. 
&lt;/p&gt;
&lt;p&gt;
I was intentionally a little vague in the details of the assignment.
&lt;/p&gt;
&lt;p&gt;
Afterwards, each student got a new partner and we did the review again
but this time one student would review the other&amp;#39;s code and they would
talk through the process while they took notes. 
&lt;/p&gt;
&lt;p&gt;
Next, we changed pairs a third time and this time the student that did
the talking review last time got their code reviewed in the same way.
&lt;/p&gt;
&lt;p&gt;
Finally, we repeated the whole thing again.
&lt;/p&gt;
&lt;p&gt;
This left each student with four code reviews. Two done in silence and
two that were interactive.
&lt;/p&gt;
&lt;p&gt;
This took the entire hour fifteen of class so we didn&amp;#39;t get to discuss
the review until the following week.
&lt;/p&gt;
&lt;p&gt;
The first thing I asked when we debriefed was which review was more
valuable? The written or the interactive one. They universally liked the
latter. This led to a spin-off discussion on pair programming. I love
pair programming as a pedagogical tool but students don&amp;#39;t always buy
all in. Some don&amp;#39;t communicate as much as the should and don&amp;#39;t get as
much value out of the process as they could. On the other hand, they
all seemed to see the value in the interactive code review but if you
think about it, pair programming is really a real time interactive
code review. I&amp;#39;m hoping this process helps with pair programming buy
in. I think it will.
&lt;/p&gt;
&lt;p&gt;
Next we talked about takeaways from all their reviews. There were good
comments on, well, commenting, also on function length. This led to
talk about self commenting code, good variable and function names,
style guides, function header comments and all sorts
of good coding stuff.
&lt;/p&gt;
&lt;p&gt;
All this was great but I think more than the recap, the reviews
themselves might have had the greatest impact.
&lt;/p&gt;
&lt;p&gt;
One student commented that he found the code he reviewed much easier
to read and understand that his own code because it did indeed use
better function and variable names and was better laid out and
commented. 
&lt;/p&gt;
&lt;p&gt;
Another student noted that for a couple of programs he reviewed he had
a hard time understanding what the programmer was doing. During the
interactive review it was apparent that the author also no longer
understood their own code. I think that, at least for these students,
it really drove home the idea of writing good code. We talked about
how the real world would be different. In class they work on a project
in a concentrated short period of time. In the real world, they&amp;#39;ll be
working on multiple projects or at least multiple segments of projects
on and off over a long period of time. Remembering your own code is
super critical.
&lt;/p&gt;
&lt;p&gt;
Overall, I&amp;#39;m very happy with the way these lessons played out. I
already thought that the actual code reviews had value but doing it
this way led to more student discovery some great discussions and
reflections. I think it was a big win.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let Teachers Teach</title>
      <link>https://cestlaz.github.io/post/let-teachers-teach/</link>
      <pubDate>Fri, 09 Nov 2018 08:57:36 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/let-teachers-teach/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://twitter.com/guzdial&#34;&gt;Mark Guzdial&lt;/a&gt;&amp;#39;s post the other day about &lt;a href=&#34;https://cacm.acm.org/blogs/blog-cacm/232557-direct-instruction-is-better-than-discovery-but-what-should-we-be-directly-instructing/fulltext&#34;&gt;direct isntruction&lt;/a&gt; struck a chord with
me. Right up front, Mark said:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
The research evidence is growing that students learn better through direct instruction rather than through a discovery-based method, where we expect students to figure things out for themselves.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite a surprise to the teachers who have been beaten over the head
with &amp;#34;everything must be discovery&amp;#34; in recent years. 
At the end of the post, Mark writes:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I’m a follower of the research Felienne is citing in her blog post, and agree that direct instruction is better than discovery learning for introductory courses
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I found myself very much agreeing with Mark. I&amp;#39;m not surprised. It&amp;#39;s
true that Mark and I have traded blog comments with me saying that
a teacher dominant classroom can be very effective and Mark saying
lecturing is bad but after a while I realized that we were saying the
same thing. To me, a teacher dominant high school class means teacher
directed active learning experience and not a droning college lecture. 
&lt;/p&gt;
&lt;p&gt;
In any event, back to direct instruction vs discovery. It seems
like the pendulum is swinging again. A few years ago it was all about
discovery and now direct instruction is ok. There are two problems
here. The first is that in a few years it will be something
else. Before the discovery learning fad we had other fads. When I
started teaching it was cooperative learning. I also went through the
portfolio movement. There were other fads along the way including yet
another &amp;#34;new math.&amp;#34; At some point we got back to traditional direct
instruction, then discovery and that brings us back up to today.
&lt;/p&gt;
&lt;p&gt;
The second problem is a big one that&amp;#39;s often ignored. Regardless of
what the research says or doesn&amp;#39;t say and what teachers know or don&amp;#39;t
know the powers that be have time and time again decided upon the one
true way to teach and tried to force it upon teachers.
&lt;/p&gt;
&lt;p&gt;
It doesn&amp;#39;t work that way.
&lt;/p&gt;
&lt;p&gt;
The missing piece of the puzzle is the fact that teachers bring
different things to the table and that&amp;#39;s a fact that&amp;#39;s often
ignored. When teachers are observed, at least in NY, supervisors want
to see what they want to see. After Danielson was implemented in NYC I
was talking to a friend who almost sheepishly told me that she was
getting great evaluations because her teaching style aligned perfectly
with Danielson but she knew that when something else came into vogue
all of a sudden she&amp;#39;d no longer be &amp;#34;highly effective.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
When I started, cooperative learning was all the rage but it didn&amp;#39;t
work for me. Since it didn&amp;#39;t work for me, it didn&amp;#39;t work for my
students. This didn&amp;#39;t mean that I couldn&amp;#39;t cherry pick aspects of
cooperative learning and use them to good effect nor did it mean that
I couldn&amp;#39;t run a cooperative learning experience effectively from time
to time  but it meant that I couldn&amp;#39;t whole hog teach the way I was
&amp;#34;supposed&amp;#34; to teach. In another case, I knew a teacher who was a very
strong lecturer and I mean this in the traditional one sided lecture
style. He was much weaker when using active learning techniques and in
no way could he give up control to a cooperative learning
experience. That was who he was. He was most effective as a lecturer
for better or worse. With the right group of kids it worked pretty
well. Certainly better than if he was forced to teach in a way that
was contrary to who he was. I&amp;#39;ve also outright asked some great math teacher
friends of mine about &amp;#34;the research&amp;#34; on how to teach and the responses
I&amp;#39;ve gotten back were generally either &amp;#34;I don&amp;#39;t read the research&amp;#34; or
&amp;#34;it doesn&amp;#39;t work for me so I do what I do.&amp;#34;
&lt;/p&gt;
&lt;p&gt;
All this isn&amp;#39;t to say that research isn&amp;#39;t important and that a teacher
shouldn&amp;#39;t master a variety of techniques and tools. A good preservice
program will leave a teacher with a cabinet full of tools to draw from
and the expertise to know themselves, their students, and what tools
to put in the toolbelt for an any given class. Teachers should
likewise be trained to maximize their inherent tendencies and talents
and blend in teaching techniques as appropriate. Good professional development
should bring new ideas and new techniques to teachers and should
consider who they can be added in to a teacher&amp;#39;s practice rather than
to replace it.
&lt;/p&gt;
&lt;p&gt;
Finally, teachers should be allowed to teach. It&amp;#39;s horrible that
there&amp;#39;s a movement to more and more scripted lessons and to tell
teachers how to teach. It was bad when I started and it&amp;#39;s only gotten
worse.
&lt;/p&gt;
&lt;p&gt;
Fortunately, some supervisors do indeed get it. Back when I was a
young teacher I was talking to a supervisor about this and he told me
that he observed a class he started with one basic question: &amp;#34;is
learning going on?&amp;#34; Everything flowed from there.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Local Tech and Local Learning</title>
      <link>https://cestlaz.github.io/post/local-tech-local-learning/</link>
      <pubDate>Sun, 04 Nov 2018 11:08:22 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/local-tech-local-learning/</guid>
      <description>&lt;p&gt;
A couple of weeks ago I took twenty four of my first year students up
to &lt;a href=&#34;http://catskillsconf.com&#34;&gt;Catskills Conf&lt;/a&gt;. As usual it was a great weekend. I particularly
enjoyed this years talks.
&lt;/p&gt;
&lt;p&gt;
I found one talk particularly engaging. &lt;a href=&#34;https://twitter.com/jordankoschei&#34;&gt;Jordan Koschei&lt;/a&gt; gave at talk
titled &lt;a href=&#34;https://jordankoschei.com/2018/10/20/digital-terroir/&#34;&gt;Digital Terroir&lt;/a&gt;. Terroir refers to the natural envorinment in
which a wine is produced - the ground, the climate, everything. It&amp;#39;s
why wine (and foods) produced in one location taste differently than
the same things mamde elsewhere. I first heard the term used with
respect to wine but it&amp;#39;s also true for coffee, chocolate, tomatoes,
and I&amp;#39;d say even the New York bagel.
&lt;/p&gt;
&lt;p&gt;
Jordan talked about how terroir can be found in local crafts, music,
art, and literature and wondered if his products, as a software
developer exhibited the effects of terroir. Do web sites created in
the hudson valley have their own flavor different to those made say,
in Seattle, NYC, or California? It&amp;#39;s an interesting
question. Unfortunately, Jordan found the answer to be no. 
&lt;/p&gt;
&lt;p&gt;
His post is still very much  worth reading as it&amp;#39;s really concerned
with uniqueness of community in a flattening world.
&lt;/p&gt;
&lt;p&gt;
I wonder if Jordan would have gotten different results if he excluded
the most popular frameworks, Bootstrap, Zurb etc from his survey. 
&lt;/p&gt;
&lt;p&gt;
Regardless, it got me thinking. While the products might not show
regional differences, does the process? 
&lt;/p&gt;
&lt;p&gt;
Do programmers, or teachers for that matter develop styles based on
where they&amp;#39;re from and how they were trained and taught? It&amp;#39;s not so
farfetched an idea - it&amp;#39;s clearly apparent in sports. I fenced and
coached fencing for many years. It was at times apparent that certain
students were from certain coaches or &amp;#34;schools&amp;#34; of training. You could
tell from how they fenced and their philosophy of how to compete.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m guessing that early training does contribute to a developers style
at least to a point but that&amp;#39;s topic based. People who start off in
Object Oriented toolsets tend to solve problems one way while people
who start off with functional programming approach problems
differently. It&amp;#39;s like a conversation I had with a friend of mine who
was on the American International Mathematical Olympiad team in the
lat 90&amp;#39;s. He told me that one of the things he found interesting was
that the American competitors typically looked at problems first and
foremost as algebra problems while the Eastern European competitors
were just as or more likely to approach them as geometry problems. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m wondering if it can be more teacher or local culture based. I&amp;#39;ve
heard from more than one former student that they follow a &lt;a href=&#34;https://cestlaz.github.io/post/compile-each-concept/&#34;&gt;development
loop&lt;/a&gt; or cadence that they got from me and that it&amp;#39;s unique in their
current workplace. I&amp;#39;ve heard similar things about other approaches to
problems that I&amp;#39;ve tried to model.
&lt;/p&gt;
&lt;p&gt;
Going beyond me, what about the team of CS teachers at Stuy? That
school has it&amp;#39;s own culture (as do all schools) and I think I&amp;#39;ve had
some influence on the other teachers there. Is there a StuyCS &amp;#34;school
of CS teaching&amp;#34; that is similar but different to other &amp;#34;schools of CS
teaching?&amp;#34;
&lt;/p&gt;
&lt;p&gt;
What I find particularly interesting is that we might be able to get
some answers, at least on the teacher side of the equation in the
coming years. We&amp;#39;re hoping to roll out our teacher certification
programs at Hunter very soon and I&amp;#39;m going to be relying on my Stuy
teachers to work with me to teach our first few cohorts of teacher
candidates. 
&lt;/p&gt;
&lt;p&gt;
Will those teacher candidates show that there is indeed a unique
character to our way of developing CS teachers and later to their ways
of teaching their students? Time will tell. Maybe we&amp;#39;ll find out if
indeed teaching and programming has some roots in terroir.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 53 Emailing Org Agenda</title>
      <link>https://cestlaz.github.io/post/using-emacs-53-emailing-org-agenda/</link>
      <pubDate>Sat, 03 Nov 2018 08:55:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-53-emailing-org-agenda/</guid>
      <description>&lt;p&gt;
I use both org-mode and Google Calendar for scheduling. I like Google
Calendar because:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
It&amp;#39;s pretty universal so I can issue and accept calendar invites.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
It works well with my phone and other mobile devices.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
The rest of my family doesn&amp;#39;t live in Emacs :-(.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I prefer using org-mode beacuse:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Emacs
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
I prefer, for the most part, to control my data.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I partially sync the two platforms. I&amp;#39;ve already talked about &lt;a href=&#34;https://cestlaz.github.io/posts/using-emacs-26-gcal/&#34;&gt;syncing
Google Calendar and org-mode&lt;/a&gt;. Right now, I&amp;#39;m just pulling from Google
rather than also pushing up from org-mode because I&amp;#39;m still getting
double entry issues. This means that I have my entire schedule in
Emacs but only part of it in my Google calendar.
&lt;/p&gt;
&lt;p&gt;
To help resolve the problem, I do a few things. First, I sync my
orgfiles on all my computers. I used to do this with Dropbox but am
now moving over to &lt;a href=&#34;https://syncthing.net/&#34;&gt;Syncthing&lt;/a&gt;. I also like to set up a &lt;a href=&#34;http://digitalocean.com&#34;&gt;Digital Ocean&lt;/a&gt;
droplet so that I have a single machine that&amp;#39;s always on.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve set things up to have that droplet send me an email with my
agenda. It turns out that org has commands to do things with Emacs
from the command line:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
org-batch-agenda
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
org-batch-store-agenda-views
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
org-batch-agenda-csv 
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
They can be run from the command line to output a formatted agenda as
a string:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;emacs --batch -l ~/.emacs.d/init.el  -eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(org-batch-agenda &amp;#34;a&amp;#34; org-agenda-span 14)&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
or as csv:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;emacs --batch -l ~/.emacs.d/init.el  -eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(org-batch-agenda-csv &amp;#34;a&amp;#34; org-agenda-span 14)&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;gcal&lt;/td&gt;
&lt;td&gt;Stuy recruiting&lt;/td&gt;
&lt;td&gt;2018-10-29&lt;/td&gt;
&lt;td&gt;15:40-16:40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gcal&lt;/td&gt;
&lt;td&gt;RBS Workshop 3&lt;/td&gt;
&lt;td&gt;2018-10-29&lt;/td&gt;
&lt;td&gt;17:30-21:00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gcal&lt;/td&gt;
&lt;td&gt;FDR High School&lt;/td&gt;
&lt;td&gt;2018-10-30&lt;/td&gt;
&lt;td&gt;7:45- 8:45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;soe-cal&lt;/td&gt;
&lt;td&gt;ACERT -  LUNCH  SEMINAR&lt;/td&gt;
&lt;td&gt;2018-10-30&lt;/td&gt;
&lt;td&gt;12:00-14:00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gcal&lt;/td&gt;
&lt;td&gt;Maxim Vengerov Carnegie Hall&lt;/td&gt;
&lt;td&gt;2018-10-30&lt;/td&gt;
&lt;td&gt;20:00-21:00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
Note that you have to specify the location of the startup file
(~/emacs.d/init.e;) since when you run emacs in batch mode it won&amp;#39;t
load your normal config by default
&lt;/p&gt;
&lt;p&gt;
In the video you&amp;#39;ll see how I use my DigitalOcean dropplet, set up
with the Postfix mail server and Syncthing to send me an email with my
agenda every morning.
&lt;/p&gt;
&lt;p&gt;
The command I actually use to send the email is:
&lt;/p&gt;
&lt;div class=&#34;src src-sh&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;/usr/bin/emacs --batch -l ~/.emacs  -eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(org-batch-agenda &amp;#34;a&amp;#34; org-agenda-span 14)&amp;#39;&lt;/span&gt; 2&amp;gt;/dev/null | mail -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mike&amp;#39;s Agenda for &lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date +&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\%A \%D&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; zamansky@gmail.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
which I put in a crontab entry to get it to run every day.
&lt;/p&gt;
&lt;p&gt;
If people want, I can make a runthrough of setting up the actual
dropplet and SyncThing.
&lt;/p&gt;
&lt;p&gt;
Enjoy!
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/wus8R1TWYZ4&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs Episode 52 - Eyebrowse</title>
      <link>https://cestlaz.github.io/post/using-emacs-52-eyebrowse/</link>
      <pubDate>Tue, 30 Oct 2018 14:35:15 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-52-eyebrowse/</guid>
      <description>&lt;p&gt;
I was originally going to do a video on how I set things up so that I
get an email every morning with my org-mode agenda but that&amp;#39;s going to
be something of an ordeal. I have to create a droploet on Digital
Ocean, set up SyncThing and a mail server and lots of other things.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll get to that video at some point but in the meantime I saw &lt;a href=&#34;https://www.reddit.com/r/emacs/comments/9rvboq/what_emacs_packages_have_upped_your_game_recently/&#34;&gt;this
thread&lt;/a&gt; on the Emacs subreddit.
&lt;/p&gt;
&lt;p&gt;
It asked about packages people used to &amp;#34;up their Emacs game.&amp;#34; I&amp;#39;ve
done videos on some of the packages mentioned and there were some
packages that I&amp;#39;d never heard of that I now have to check out. 
&lt;/p&gt;
&lt;p&gt;
One of the packages, &lt;a href=&#34;https://github.com/wasamasa/eyebrowse&#34;&gt;eyebrowse&lt;/a&gt; was one that I&amp;#39;ve been meaning to play
with for a while. Eyebrowse allows you to easily keep track of
window/buffer configurations. It&amp;#39;s pretty easy and pretty cool.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s a quick video overview:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;iframe width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34;
src=&amp;#34;&lt;a href=&#34;https://www.youtube.com/embed/s6IXj0bS7L8&#34;&gt;https://www.youtube.com/embed/s6IXj0bS7L8&lt;/a&gt;&amp;#34; frameborder=&amp;#34;0&amp;#34;
allow=&amp;#34;accelerometer; autoplay; encrypted-media; gyroscope;
picture-in-picture&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Catskills Conf -  Knitting for Good 2018</title>
      <link>https://cestlaz.github.io/post/catskills-blanket-2018/</link>
      <pubDate>Sun, 28 Oct 2018 17:00:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/catskills-blanket-2018/</guid>
      <description>&lt;p&gt;
Two weekends ago I took a group of my first year students up to
&lt;a href=&#34;http://catskillsconf.com&#34;&gt;Catskills Conf&lt;/a&gt;, an annual event that I describe as &amp;#34;light tech
conference with a focus on diversity and inclusion meets summer camp.&amp;#34;
I&amp;#39;ve &lt;a href=&#34;https://cestlaz.github.io/posts/catskills-2017/&#34;&gt;written about&lt;/a&gt; the event before if anyone&amp;#39;s interested in more
details. As in past years, Devorah ran her &lt;a href=&#34;https://cestlaz.github.io/posts/knitting-tech-conference/&#34;&gt;knitting for good&lt;/a&gt;
project. In each of the first two years of the project, attendees of
Catskills Conf learned how to know and collectively knit, crocheted
and assembled a blanket for Project Linux which provides hand made
blankets to children in crisis.
&lt;/p&gt;
&lt;p&gt;
This year we made two:
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Ta Da! Presenting the blankets created by the participants of &lt;a href=&#34;https://twitter.com/catskillsconf?ref_src=twsrc%5Etfw&#34;&gt;@catskillsconf&lt;/a&gt;  2018 for &lt;a href=&#34;https://twitter.com/ProjectLinus?ref_src=twsrc%5Etfw&#34;&gt;@ProjectLinus&lt;/a&gt;  Burgundy yarn courtesy of &lt;a href=&#34;https://twitter.com/ShaarayTefilaNY?ref_src=twsrc%5Etfw&#34;&gt;@ShaarayTefilaNY&lt;/a&gt;  Sanctuary Stitchers. &lt;a href=&#34;https://t.co/MiEGmGGcqG&#34;&gt;pic.twitter.com/MiEGmGGcqG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Devorah Zamansky (@DevorahZamansky) &lt;a href=&#34;https://twitter.com/DevorahZamansky/status/1056636588837556225?ref_src=twsrc%5Etfw&#34;&gt;October 28, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
While I was off this morning &lt;a href=&#34;https://twitter.com/diane_levitt/status/1056560530956214272&#34;&gt;talking&lt;/a&gt; to high school students at
Cornell Technion, Devorah was finishing off the blankets and
delivering them.
&lt;/p&gt;
&lt;p&gt;
In past years, the blanket was usually mostly made by a small handful
of experienced knitters who attended the conference. This year was
very different. For the first time, many of my students took part in
the project.
&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/cconf-knitting-2018.jpg&#34; width=&#34;250&#34; height=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://cestlaz.github.io/img/cconf-knitting-2018-2.jpg&#34; width=&#34;250&#34; height=&#34;250px&#34;/&gt; 
&lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;
A few already knew how to know but more were learning for the first
time.
&lt;/p&gt;
&lt;p&gt;
I love that were at a tech conference and at the same time learning to
be creative with our hands and all the while doing some good for
others.
&lt;/p&gt;
&lt;p&gt;
Already looking forward to next year.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>From Scripts To Freestyle</title>
      <link>https://cestlaz.github.io/post/from-scripts-to-freestyle/</link>
      <pubDate>Fri, 26 Oct 2018 17:35:56 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/from-scripts-to-freestyle/</guid>
      <description>&lt;p&gt;
I just read &lt;a href=&#34;https://medium.com/@bethanymarz/going-off-script-b69345fc5904&#34;&gt;this post&lt;/a&gt; by  &lt;a href=&#34;https://twitter.com/bethanymarz&#34;&gt;Bethany Crystal&lt;/a&gt; - &lt;a href=&#34;https://medium.com/@bethanymarz/going-off-script-b69345fc5904&#34;&gt;Going off script&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Bethany writes that while she normally essentially scripts important
presentations, this time she went more off the cuff.
&lt;/p&gt;
&lt;p&gt;
It made me think about how I teach and a disturbing trend I&amp;#39;ve
seen in CS education and education in general.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve never strictly used a script for teaching. When I started I did
use &lt;strong&gt;very&lt;/strong&gt; detailed lesson plans. Back then I was teaching math. It
was also pre internet or at least pre internet as we now know
it. I had an account on &lt;a href=&#34;https://www.panix.com/&#34;&gt;Panix&lt;/a&gt; and the internet did indeed exist but
you couldn&amp;#39;t just look for teaching materials. I actually remember
bringing a modem in to Seward Park one day and showing a bunch of kids
this up and coming thing called the internet. I showed them usernet
news, a gopher server and a couple of other things.
&lt;/p&gt;
&lt;p&gt;
In terms of teaching materials, you could buy sample lesson plans from
the teacher store near the Board of Ed in Brooklyn. These were books
that were compilations of mostly handwritten lessons. 
&lt;/p&gt;
&lt;p&gt;
I basically copied and modified them. I had an &lt;strong&gt;aim&lt;/strong&gt;, a &lt;strong&gt;do now&lt;/strong&gt; key
questions were written as were definitions and summary
statements. Of course there were numerous sample problems and
exercises, all worked out
in advance. It wasn&amp;#39;t quite a script but it was a very well fleshed
out guide 
&lt;/p&gt;
&lt;p&gt;
As I gained experience and also shifted from math which wasn&amp;#39;t my
passion to CS, my plans become sparser. I&amp;#39;d still write down
definitions, maybe some solutions and a list of key points but a lot
of the particulars were gone. I didn&amp;#39;t write out key questions or
solutions to all the problems in advance. 
&lt;/p&gt;
&lt;p&gt;
As time went by the plans got sparser still. I&amp;#39;d still list the key
points I&amp;#39;d want to cover as well as notes on tricky parts of the
lesson but more often than not I&amp;#39;ll just go in with a bullet list.
&lt;/p&gt;
&lt;p&gt;
Here&amp;#39;s my plan for a recent lesson:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Go over cipher soution
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
How to we solve if already ciphered?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Rotate 26 times.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
What about using stats
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Frequency of letters - look up
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Find freq of letter in string then use distance formula against
model
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Get frequencies from a book
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
try it in another language
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
We didn&amp;#39;t get to the last two bullet items so that&amp;#39;s where we&amp;#39;ll start
off on Monday. This plan was all I needed but it in no way tells the
full story of the lesson to anyone but me. It doesn&amp;#39;t include the
motivation, ancillary stories and materials nor how the lesson was
developed or delivered. I knew how it would play out because I was
teaching it and for me these notes were more than sufficient. 
&lt;/p&gt;
&lt;p&gt;
All this is not to say that I don&amp;#39;t spend a lot of time planning my
lessons. I do. I just don&amp;#39;t create detailed scripts. I know what I
want to cover and how I want to cover it. Then it&amp;#39;s just got to the
class and go.
&lt;/p&gt;
&lt;p&gt;
A big advantage of this is something that Bethany mentioned in her
piece - the ability to &amp;#34;read the room.&amp;#34; This is a big part of
teaching. If you&amp;#39;re following a script, you&amp;#39;re not reading the room
and you&amp;#39;re probably not really teaching the class. You might be
following a script but your students certainly aren&amp;#39;t and once they
veer off program you&amp;#39;ve got to abandon your script or you&amp;#39;re not doing
right by the class. 
&lt;/p&gt;
&lt;p&gt;
Having a direction but not a script makes it easier to &amp;#34;call and
audible.&amp;#34; That&amp;#39;s what led me to teach the &lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;question answering system&lt;/a&gt;
lesson the other day. It was unplanned but as a class we were having a
discussion and that&amp;#39;s where it led.
&lt;/p&gt;
&lt;p&gt;
As I mentioned, when I started out I couldn&amp;#39;t do this. I needed much
more detailed plans. That said, as a teacher gains more experience
they can better connect to their classes and do more for their
students by not sticking to the script, reading the room and adapting.
&lt;/p&gt;
&lt;p&gt;
This brings me to that trend that disturbing trend. I&amp;#39;m talking about
pushing &lt;a href=&#34;https://www.washingtonpost.com/news/answer-sheet/wp/2013/11/30/teacher-slams-scripted-common-core-lessons-that-must-be-taught-word-for-word/?utm_term=.6afd6d64f1c6&#34;&gt;scripted lessons&lt;/a&gt;. These crop up in charter schools and no
excuse environments and are typically used as ways of &amp;#34;compensating&amp;#34;
for teachers that don&amp;#39;t really know the subject area or how to teach
and to standardize teaching. To me it&amp;#39;s an attack on the teaching
profession. A script is great for a play. It&amp;#39;s great for a speech and
for some presentations but not for teaching. 
&lt;/p&gt;
&lt;p&gt;
I understand having something that&amp;#39;s more scripted to use when you&amp;#39;re
faced with novice teachers or teachers that are new to a subject area
but I fear that at times the scripted lessons are the end game.
&lt;/p&gt;
&lt;p&gt;
I was talking to a friend a few years ago. He&amp;#39;s doing great work in the
CS Ed space and among other things, he develops curricula. I mentioned
to him that I loved his work (still do) but I was concerned that his
materials were becoming much more scripted. His reply was something
like &amp;#34;I agree with you in theory but the truth is most teachers aren&amp;#39;t
you.&amp;#34; I understood his point as most of the teachers that used his
materials were novices but I disagreed that they were &amp;#34;not me.&amp;#34; I&amp;#39;m
nothing special. I&amp;#39;m just a reasonably bright guy who works hard at
his craft. If I can teach script free so can anyone. Maybe not at
first, but certainly after time and we subvert our profession by
settling for less. 
&lt;/p&gt;
&lt;p&gt;
As a final note, at this point in my career I actually find it very
hard to use a script - even for a presentation. Over the last couple
of years, I&amp;#39;ve been spending my Falls visiting high schools to talk
about Hunter&amp;#39;s &lt;a href=&#34;http://info.huntercs.org&#34;&gt;Honors CS&lt;/a&gt; program. As much as I tried, I couldn&amp;#39;t
script a presentation. No matter what I did, when I got in front of
the students I just ended up doing my thing and talking to them. At
the end of the day I ended up working things backwards. Over my first
few school visits, I developed a set of key points that I kept coming
back to and finally ended up with a list of bullet points that I can
pretty much follow when I do the &amp;#34;navigating from high school to
college in tech&amp;#34; talk. I guess I&amp;#39;m now working in reverse. Starting
free style and working back to a script.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Emacs 51 - Day to day work with org-mode</title>
      <link>https://cestlaz.github.io/post/using-emacs-51-dtd-org/</link>
      <pubDate>Wed, 24 Oct 2018 17:30:45 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/using-emacs-51-dtd-org/</guid>
      <description>&lt;p&gt;
I can&amp;#39;t believe that I haven&amp;#39;t made a video since the beginning of
summer!!!
&lt;/p&gt;
&lt;p&gt;
Part of the reason is that I haven&amp;#39;t had any video ideas that have
motivated me and the other reason is that the Fall is my busiest
season.
&lt;/p&gt;
&lt;p&gt;
In any event, here&amp;#39;s the latest installment.
&lt;/p&gt;
&lt;p&gt;
Take a look at how I use Emacs and more specifically org-mode for my
day to day work. Sometimes I use the fancy power tools but to be
honest, most of the time, I stick to the basics. 
&lt;/p&gt;
&lt;p&gt;
The point is that you don&amp;#39;t have to be a real guru to use org-mode to
help you with organization and to increase productivity. Just a few
simple commands and you can accomplish a lot.
&lt;/p&gt;
&lt;p&gt;
I hope you enjoy it.
&lt;/p&gt;
  &lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/C6nbjqn5Uxw&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Who Played Spiderman - part 3</title>
      <link>https://cestlaz.github.io/post/who-played-spiderman-3/</link>
      <pubDate>Tue, 16 Oct 2018 17:25:33 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/who-played-spiderman-3/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Parts 1 and 2
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-2/&#34;&gt;Part 2&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Part 3
&lt;/h2&gt;
&lt;p&gt;
In the first two parts of this set of posts I wrote about the
motivation and design a question answering system that can answer
&amp;#34;who&amp;#34; queries like &amp;#34;who played Spiderman&amp;#34; or &amp;#34;who shot John Lennon?&amp;#34;
It&amp;#39;s not perfect. When doing the Spiderman query, chances are the
desired answer will be at or near the top of the list of most
frequently appearing names but so will &amp;#34;Peter Parker.&amp;#34; How do you
distinguish between a real answer and a fictional name? Likewise, if
you ask &amp;#34;Who shot John Lennon?&amp;#34; You&amp;#39;ll probably get Mark David (if you
search for two word names) or if you&amp;#39;re more inclusive, Mark David
Chapman, but you&amp;#39;ll also find John Lennon at or near the top of your
results.
&lt;/p&gt;
&lt;p&gt;
This system may not be perfect but then again, it can be written by one or a
small group of students relatively new to CS in a few periods as
opposed to a team of full time Google Software Engineers. I also truly
 &lt;strong&gt;like&lt;/strong&gt; the fact that it isn&amp;#39;t perfect. Too many student experiences involve
perfect questions with predetermined perfect answers. I love the fact
that they see false positives and true negatives in this. I love that
they can get pretty good but not perfect results. This makes the
experience more interesting, more fun, and more authentic.
&lt;/p&gt;
&lt;p&gt;
This lesson can also easily be extended beyond &amp;#34;who&amp;#34; queries. &amp;#34;When&amp;#34;
queries are also pretty straightforward. Things like &amp;#34;When was D-Day&amp;#34;
or &amp;#34;When did Elvis die?&amp;#34; For a &amp;#34;when&amp;#34; query, you start the same way as
for a &amp;#34;who&amp;#34; query. Use the search API to get a bunch of documents that
mention the query terms. Then you look for dates. Dates can be even
easier to search for than names. Particularly if your students know
regular expressions. Dates could be things like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
two digits / two digits / two digits
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Month name number, number
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
or in regular expressions, something like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
[0-9]{2}/[0-9]{2}/[0-9]{2}/
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
(Jan|Feb|Mar…)[0-9]{2}, {0-9]{4}}
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
Just as with &amp;#34;who&amp;#34; queries there are issues to deal with - searching
for &amp;#34;when did Elvis die&amp;#34; might give you when Elvis was born instead
but again, these are great motivators for further exploration and
discussion.
&lt;/p&gt;
&lt;p&gt;
So, there&amp;#39;s the project. What level of students can do this? It
depends. I first did this in my Software Devepment class. That class
was offered to student who had completed APCS-A. The class covered
using APIs and setting up a web application using Python and Flask so
they were able to do the entire project, soup to nuts. An APCS class
could also do the project without the web application just so long as
they have access to the search API. In fact, an intro programming
class could also have success with this project.
&lt;/p&gt;
&lt;p&gt;
This was actually one of the lessons I&amp;#39;ve missed since I haven&amp;#39;t been
able to work it into my Hunter courses so I was really happy when the
class discussion led me to call and audible and talk about it.
&lt;/p&gt;
&lt;p&gt;
I hope some of you out there experiment with it and if you do, I&amp;#39;d
love to hear about your tweaks, implementations and successes.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Parts 1 and 2
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-2/&#34;&gt;Part 2&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Who Played Spiderman part 2</title>
      <link>https://cestlaz.github.io/post/who-played-spiderman-2/</link>
      <pubDate>Sat, 13 Oct 2018 16:04:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/who-played-spiderman-2/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Parts 1 and 3
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-3/&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Part 2
&lt;/h2&gt;
&lt;p&gt;
When we left off &lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;last time&lt;/a&gt; we used a search engine API to gather a
whole bunch of documents with the term &amp;#34;played Spiderman&amp;#34; or &amp;#34;who
played Spiderman.&amp;#34; Now we have to process these documents to answer
the question. Fortunately, the documents are basically just big
strings of text.
&lt;/p&gt;
&lt;p&gt;
Since we&amp;#39;re doing a &amp;#34;who&amp;#34; query  we want to find all the names in all
the documents. This leads to a class discussion on how to find names
in a large string. They&amp;#39;ll come up with rules like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
two adjacent words each with a capital first letter.
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
an honorific (Mr, Ms, etc.) followed by a capitalized word
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A word that matches a name from a &amp;#34;popular name&amp;#34; list followed by a
capitalized word.
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The class might come up with different or additional rules. Actually
writing the code to pull out the names is an nice little assignment
that can be done with classes at many different levels. A beginning
class might just use string operations while an intermediate one could
use regular expressions. 
&lt;/p&gt;
&lt;p&gt;
Will the students write code that always finds all the names? Probably
not. Will their code incorrectly identify some word sets as names?
Most likely. It doesn&amp;#39;t really matter. Actually, this is a good
thing. You now have a great platform to talk about false positives and
true negatives.
&lt;/p&gt;
&lt;p&gt;
Now the moment of truth - what&amp;#39;s the most common name? To answer that
you have to decide on the meaning of &amp;#34;most common.&amp;#34; Is it the name
that appeared the most times? How about the name that appeared in the
most documents? Does it matter? Whichever way you do it, chances are
the correct answer will be near the top of your list.
&lt;/p&gt;
&lt;p&gt;
Next up in part 3 - other types of queries and why I love this sequence of
lessons so much.
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Parts 1 and 3
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman/&#34;&gt;Part 1&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-3/&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Who Played Spiderman part 1 or my Nifty Assignment (that was rejected)</title>
      <link>https://cestlaz.github.io/post/who-played-spiderman/</link>
      <pubDate>Thu, 11 Oct 2018 17:16:23 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/who-played-spiderman/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
Parts 2 and 3
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
[[/post/who-played-spiderman-2/][Part 2]
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-2/&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
I wasn&amp;#39;t going to teach this lesson today. I was planning on starting
a multi day project starting with an exercise in specification writing
and design.
&lt;/p&gt;
&lt;p&gt;
Beforehand though, we had to talk about classes. One of my students
asked if probability and/or statistics were really important for CS. I
started to cite a few examples and then decided to segue into
this. Normally, I do this as a couple of lessons which leads to a
project, we just did the first part. I might do it as a project with
my class later on.
&lt;/p&gt;
&lt;p&gt;
I also submitted this as a &amp;#34;Nifty Assignment&amp;#34; for SIGCSE a couple of
years ago but it wasn&amp;#39;t accepted. I was going to share the lesson at
some point so, well, here goes.
&lt;/p&gt;
&lt;p&gt;
It starts with a question:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Who played Spiderman?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That&amp;#39;s it. Every student writes down their answer. No talking, no
Googling or other searching, just write something down.
&lt;/p&gt;
&lt;p&gt;
We then go around the room an tally up the answers. I got something
like this:
&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th class=&#34;align-right&#34;&gt;Count&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Toby Maguire&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tom Holland&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Andrew Garfield&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Peter Parker&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;I don&amp;#39;t know&lt;/td&gt;
&lt;td class=&#34;align-right&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
So as a class, we think that Toby MAguire played Spiderman with Tom
Holland also being a good choice. 
&lt;/p&gt;
&lt;p&gt;
After painstakingly explaining that Peter Parker couldn&amp;#39;t play
Spiderman because he &lt;strong&gt;IS&lt;/strong&gt; Spiderman I also shared some of the more
interesting answers I&amp;#39;ve gotten over the years.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve gotten &amp;#34;the lady playing the song on the violin in the movie in
front of the subway&amp;#34; which is technically correct and I also get
Willem Dafoe because as the Green Goblin / Norman Osborn he &lt;strong&gt;PLAYED&lt;/strong&gt; Spiderman.
&lt;/p&gt;
&lt;p&gt;
In any event, it appears that if we get a lot of data on who &amp;#34;played
Spiderman&amp;#34; it&amp;#39;s likely that the most popular result is the right
answer or at least the right answer will be among the most popular
results. Of course, this is &lt;a href=&#34;https://www.nbc.com/saturday-night-live/video/common-knowledge/n9612&#34;&gt;not always the case&lt;/a&gt; but with reliable
data sources. 
&lt;/p&gt;
&lt;p&gt;
So, the basic idea is that if we have a question to answer like &amp;#34;Who
played spiderman?&amp;#34; we can start by collecting a whole bunch of
documents from the web with terms like &amp;#34;played Spiderman&amp;#34; in them.
&lt;/p&gt;
&lt;p&gt;
When I first taught this lesson, we used the Google API to search for
web pages with the search terms in them but more recently I&amp;#39;ve used
the Bing API instead.
&lt;/p&gt;
&lt;p&gt;
This leaves us with a large number of documents that could potentially
answer a search for &amp;#34;who played Spiderman?&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ll leave it at this for now. Next time, we&amp;#39;ll talk about how we can
go from this collection of documents to a likely answer to our query. 
&lt;/p&gt;
&lt;p&gt;
Tune in again tomorrow, same bat Time, same bat channel.
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Parts 2 and 3
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
[[/post/who-played-spiderman-2/][Part 2]
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://cestlaz.github.io/post/who-played-spiderman-2/&#34;&gt;Part 3&lt;/a&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Compile Each Concept</title>
      <link>https://cestlaz.github.io/post/compile-each-concept/</link>
      <pubDate>Tue, 09 Oct 2018 14:46:59 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/compile-each-concept/</guid>
      <description>
&lt;p&gt;
We&amp;#39;ve all been there:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Student: Teacher, I need help
Teacher (comes over)
Student (shows screen listing three bazillion errors)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The student has just written pages of code and finally decided to try
to run it only to end up with pages of errors.
&lt;/p&gt;
&lt;p&gt;
Error messages can at times be hard to read for beginners but to see
and truth be told, they frequently don&amp;#39;t even read them but over the
years I&amp;#39;ve developed a practice that I&amp;#39;ve found helpful as a software
developer and if students adopt the same practice it can save them a
lot of time and effort.
&lt;/p&gt;
&lt;p&gt;
The idea is very simple. 
&lt;/p&gt;
&lt;p&gt;
Compile and test one concept at a time.
&lt;/p&gt;
&lt;p&gt;
It might seem silly, but if I&amp;#39;m writing a a program, my first compile
might be code that looks like this:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
  using std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout;
  using std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()
  {
  
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
  }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
or 
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HelloWorld&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;

      &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
	
      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
This might seem silly but it really doesn&amp;#39;t take any effort. I have a
key sequence to do this under Emacs and if I&amp;#39;m using an interactive
language like Python or Clojure I just have to hit &lt;code&gt;c-c c-c&lt;/code&gt; 
&lt;/p&gt;
&lt;p&gt;
This might seem silly but I do it out of muscle memory and it
immediately tells me I don&amp;#39;t have any syntax errors and my build system
works.
&lt;/p&gt;
&lt;p&gt;
Going further, I compile and test every time I code up what I call a
concept. What&amp;#39;s a concept? Let&amp;#39;s look at some code. A student might
write something like this to find prime number up to n:
&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prime_list&lt;/span&gt;(n):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,n):
        i_isPrime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(i&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;j &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; :
                i_isPrime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False
                &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i_isPrime:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(i)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
There&amp;#39;s a lot going on there. To me, a concept is
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
A loop
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
A complex calculation
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
a conditional
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
All of these can have other concepts within.
&lt;/p&gt;
&lt;p&gt;
In the above code, I&amp;#39;d probable write it as follows, adding in tests
and print statements throughout the process:
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Step 1:
&lt;/h2&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prime_list&lt;/span&gt;(n):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,n):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(i)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;headline-2&#34;&gt;
Step 2
&lt;/h2&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prime_list&lt;/span&gt;(n):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,n):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(i&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(i,j)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;headline-3&#34;&gt;
Step 3
&lt;/h2&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prime_list&lt;/span&gt;(n):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,n):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(i&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;j &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; :
                &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(i,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;is not prime&amp;#34;&lt;/span&gt;)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i_isPrime:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(i)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;headline-4&#34;&gt;
Step 4 
&lt;/h2&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prime_list&lt;/span&gt;(n):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,n):
        i_isPrime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(i&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;j &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; :
                i_isPrime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False
                &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(i,i_isPrime)
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;headline-5&#34;&gt;
Step 5
&lt;/h2&gt;
&lt;p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prime_list&lt;/span&gt;(n):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,n):
        i_isPrime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(i&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;j &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; :
                i_isPrime &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False
                &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i_isPrime:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(i)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;
It might not play out exactly this way but if not it would be something
similar. The idea is that if you test every time you add one concept
or construct there are fewer places where you can introduce an error.
&lt;/p&gt;
&lt;p&gt;
If you enter 100 lines before you test there are 100 places where
things can go wrong. If you type 10, there are only 10. On top of
that, if you&amp;#39;ve added 100 lines, conecptually you&amp;#39;ve probably added a
lot and the error can be anywhere. While it&amp;#39;s not always the case,
most of the time, if you just added an &lt;strong&gt;if&lt;/strong&gt;, the problem will be in the
&lt;strong&gt;if&lt;/strong&gt; or as a result of the if. Same with a &lt;strong&gt;loop&lt;/strong&gt; or any other construct.
&lt;/p&gt;
&lt;p&gt;
Once you get in the habit, it&amp;#39;s easy and doesn&amp;#39;t really take any
time. A couple of keystrokes to compile and a couple more to run. 
&lt;/p&gt;
&lt;p&gt;
All too often students try to write everything at once and it&amp;#39;s so
rare that it works. If we can get them to develop incrementally
they&amp;#39;ll be able to write much more complex systems and write them with
much less frustration.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Challenges of teaching at a commuter school</title>
      <link>https://cestlaz.github.io/post/commuter-school/</link>
      <pubDate>Mon, 08 Oct 2018 08:43:40 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/commuter-school/</guid>
      <description>&lt;p&gt;
One of the bigger challenges faced at commuter schools is building a
feeling of community. Students aren&amp;#39;t on campus every day and come
from far afield and even when they are on campus, we really don&amp;#39;t have
a CS &amp;#34;hang out&amp;#34; space. The space issue should be resolved soon - we&amp;#39;re
scheduled to get a CS student lounge next semester.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m finding this to be even more of a challenge this year with my
honors students. The first two cohorts were a single class in
size. Even though some dormed and some commuted, they were all
together in my class twice a week. This year, we&amp;#39;ve close to doubled
in size and about half of my students came in with a good deal of
prior CS knowledge. The result is that I have two different classes of
honors students and we are never all together unless it&amp;#39;s for a
special event.
&lt;/p&gt;
&lt;p&gt;
Fortunately, we&amp;#39;ve got one of my favorites coming up. 
&lt;/p&gt;
&lt;p&gt;
In two weeks, I&amp;#39;ll be taking about half my students up to &lt;a href=&#34;http://catskillsconf.com&#34;&gt;Catskills
Conf&lt;/a&gt;. An event that I describe as light tech conference with a focus
on creativity and diversity meets summer camp. I&amp;#39;ve written about the
event in in each of the past three years (&lt;a href=&#34;https://cestlaz.github.io/posts/2015-10-29-catskills-2015/%0A&#34;&gt;2015&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/posts/catskillsconf-2016/%0A&#34;&gt;2016&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/posts/catskills-2017/%0A&#34;&gt;2017&lt;/a&gt;) and also
about the  &lt;a href=&#34;https://cestlaz.github.io/posts/knitting-tech-conference/%0A&#34;&gt;knitting for charity&lt;/a&gt; event that Devorah runs during the
conference weekend.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a great event and if you&amp;#39;re anywhere near the Hudson Valley
region you should &lt;a href=&#34;http://catskillsconf.com&#34;&gt;check it out&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
To start, it&amp;#39;s a great first conference for the students. It only has
one track so no choices and the talks look really interesting this
year. Some of the ones I&amp;#39;m looking forward to are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Designing for Access first
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Behind the Tech: Emoji
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Leaning into uncertainty
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The full schedule is &lt;a href=&#34;https://catskillsconf.com/schedule/&#34;&gt;here&lt;/a&gt;. 
&lt;/p&gt;
&lt;p&gt;
But also mixed in are activities like blacksmithing
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/commuter-school/blacksmith.jpg&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
and a live bird of prey show
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/commuter-school/BOP.jpg&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
There are also hikes that show off the beauty of Fall in the Hudson
Valley
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/commuter-school/nature1.jpg&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/commuter-school/nature2.jpg&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/commuter-school/nature3.jpg&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Rather than having the kids spread out in random hotel rooms we&amp;#39;re all
in a camp style bunkhouse.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/commuter-school/bunkhouse.jpg&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
The weekend is spent  living together along with technologists and
other creative types from NYC, the Hudson Valley and everywhere else. 
&lt;/p&gt;
&lt;p&gt;
One of my favorite parts is at the end of each evening when we all
hang out by the campfire. Hunter CS students, company founders,
software engineers, designers.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;#34;/img/commuter-school/campfire.jpg&amp;#34; width=&amp;#34;250px&amp;#34;/&amp;gt; 
&amp;lt;/figure&amp;gt;
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s a great event overall and a great event to build community.
&lt;/p&gt;
&lt;p&gt;
As I said before, if you&amp;#39;re in the area, check it out.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Globals Breaks And Returns, oh my</title>
      <link>https://cestlaz.github.io/post/globals-breaks-and-returns/</link>
      <pubDate>Sat, 06 Oct 2018 15:48:55 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/globals-breaks-and-returns/</guid>
      <description>
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
Never use global variables
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Never break out of a loop
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
These are two &amp;#34;best practices&amp;#34; that are frequently touted in early CS
classes both at the high school and college level.
&lt;/p&gt;
&lt;p&gt;
They came up a couple of times yesterday. Once in the Facebook APCS-A
teachers group and once on &lt;a href=&#34;http://blog.acthompson.net/2018/10/if-you-are-using-global-variables-you.html&#34;&gt;Alfred Thompson&lt;/a&gt;&amp;#39;s blog.
&lt;/p&gt;
&lt;p&gt;
Alfred post was topically on global variables. Actually it was deeper than just global
variables. It&amp;#39;s also about how students progress - what they can figure
out at various stages of progress and how what seems like a good idea
early on the path to computer science doesn&amp;#39;t seem so great later on.
&lt;/p&gt;
&lt;p&gt;
The discussion on the APCS-A group started with a discussion of this
code and its &lt;code&gt;break&lt;/code&gt; statement as opposed to having the loop&amp;#39;s exit
condition in the boolean up top:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
          &lt;span style=&#34;color:#75715e&#34;&gt;// do stuff
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;          &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;condition&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
These two &amp;#34;best practices&amp;#34; - not using globals and not breaking out of
loops are frequently taught to students at a point when reasons for
the best practice aren&amp;#39;t always clear. 
&lt;/p&gt;
&lt;p&gt;
Actually, these aren&amp;#39;t even universally best practices.
&lt;/p&gt;
&lt;p&gt;
Looking at the while loop, You might have event driven code with a
while loop acting as a dispatcher:
&lt;/p&gt;
&lt;div class=&#34;src src-java&#34;&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
      &lt;span style=&#34;color:#75715e&#34;&gt;// do stuff
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;some event&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; that event&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;some other event&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; that event&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;

      &lt;span style=&#34;color:#75715e&#34;&gt;// etc
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;exit event&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
Nothing wrong with that structure. It&amp;#39;s clean, easy to read and easy
to reason about. 
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen loops that use extra variables and crazy boolean expressions
so as to avoid using a &lt;code&gt;break&lt;/code&gt; statement so that they follow the &amp;#34;best
practice&amp;#34; but end up with much messier code.
&lt;/p&gt;
&lt;p&gt;
This is not to say that you should always use &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; for that matter but rather that the best practice should be to
consider if it makes the code cleaner, easier to read, and more
maintainable or not. 
&lt;/p&gt;
&lt;p&gt;
On the global front things are also not so clear. Sure, storing
information in globals  and then using them indiscriminantly in
assorted methods or functions is both bad form and dangerous but there
are times when using globals make sense. 
&lt;/p&gt;
&lt;p&gt;
Back in &amp;#34;the day&amp;#34; I was a C programmer. I used single C source files
along with their matching .h include files to enable &lt;strong&gt;object typed&lt;/strong&gt;
programming. Each file was a singleton object. Functions in the file
were methods using some naming convention to demarcate public vs
private, and variables that were global to the file as class variables
(or instance variables but there was only ever one instance of any
given class). Technically I broke the rules but the technique was very
effective and allowed me to write large maintainable systems. 
&lt;/p&gt;
&lt;p&gt;
More recently I&amp;#39;ve been playing with &lt;a href=&#34;https://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt; for front end
development. Vue uses a central data store - Vuex to maintain
state. Basically a place for global variables to manage the state of
your application. Again, technically global but with rules and
protocols to make things work without the usual danger associated with
globals.
&lt;/p&gt;
&lt;p&gt;
A great comment on the Facebook thread &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; included this Hal
Ableson quote:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;#34;Programs must be written for people to read, and only incidentally for machines to execute.&amp;#34; 
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and noted that this is particularly true on the AP Exam and after all,
the original question was posed on a forum about APCS-A. With this in
mind, you shouldn&amp;#39;t &lt;strong&gt;try&lt;/strong&gt; to use globals or cleverly or creatively 
use &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; but they do have their places.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve used globals in both professional and personal work when
appropriate and I don&amp;#39;t shy away from &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; and use
them regularly. The real &lt;strong&gt;best practice&lt;/strong&gt; is that you consider why you
are or aren&amp;#39;t using these constructs and make a choice that makes
sense for you, your group, or your team. 
&lt;/p&gt;
&lt;h2 id=&#34;headline-1&#34;&gt;
Footnotes
&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr class=&#34;footnotes-separatator&#34;&gt;
&lt;div class=&#34;footnote-definitions&#34;&gt;
&lt;div class=&#34;footnote-definition&#34;&gt;
&lt;sup id=&#34;footnote-1&#34;&gt;&lt;a href=&#34;#footnote-reference-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;div class=&#34;footnote-body&#34;&gt;
&lt;p&gt;
While I will identify sources when they publish content publicly on ablog or Twitter, since
the Facebook group is semi-private, I don&amp;#39;t feel it&amp;#39;s appropriate to
state the names of commenters without asking]
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>When the students know more than the teacher</title>
      <link>https://cestlaz.github.io/post/students-know-more/</link>
      <pubDate>Thu, 04 Oct 2018 16:07:09 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/students-know-more/</guid>
      <description>&lt;p&gt;
We&amp;#39;ve heard it many times with computer science - &amp;#34;the kids know more
than the teacher.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
On the one hand, the truth is that this isn&amp;#39;t so much the case. Kids
might use computers all the time but they don&amp;#39;t necessarily know
much about them or about computer science (&lt;a href=&#34;https://cestlaz.github.io/oldblog/keyboarding-dig-divite/&#34;&gt;link 1&lt;/a&gt;, &lt;a href=&#34;https://cestlaz.github.io/posts/2015-01-15-kids-know-nuttin.html/&#34;&gt;link 2&lt;/a&gt;). Then
you have students who think they know all about CS but really
don&amp;#39;t. They might have picked up a bit of coding somewhere but more
often than not, the knowledge is pretty superficial.
&lt;/p&gt;
&lt;p&gt;
On the other hand, you do have some cases where the students or a
subset of them do know more than the teacher. As K12 CS Education is
fairly nascent many of our teachers are brand new to the subject
matter. You might have kids who&amp;#39;s parents have a background and teach
them, kids who&amp;#39;s previous school had a solid program or you might have
some kids that are in that minority of people who can do it all on
their own. 
&lt;/p&gt;
&lt;p&gt;
In some cases, this problem will work itself out over time. States are
starting to require certification to teach computer science. Some of
these states have requirements that when met will result in teachers
who have a solid background in CS. In these cases, the problem will
eventually mostly be solved. Of course this will take years if not
decades and in states with weaker requirements the issue will never
disappear.
&lt;/p&gt;
&lt;p&gt;
The issue of having students knowing more than the teacher isn&amp;#39;t
always a problem. A solid teacher can make sure a kid that&amp;#39;s ahead of
the class doesn&amp;#39;t dominate and intimidate the rest of the class and as
long as the teacher adds some value to that student things can work
out. 
&lt;/p&gt;
&lt;p&gt;
In any event, I was thinking earlier today that as our subject area
gains traction and starts to mature, perhaps we can learn from other
fields where students knowing more than teachers is not that uncommon.
&lt;/p&gt;
&lt;p&gt;
The subjects that come to mind for me are art and music. Even though
NY has decimated it&amp;#39;s programs, there are still a few out there. When
I grew up and also through my children&amp;#39;s years in school there were
always students in all our music classes that were exceptional and well
beyond their respective teachers. 
&lt;/p&gt;
&lt;p&gt;
I never gave it much thought until now.
&lt;/p&gt;
&lt;p&gt;
I know that the disciplines are different but I wonder if there&amp;#39;s
something us CS teachers can learn from music and art teachers in
terms of dealing with this issue.
&lt;/p&gt;
&lt;p&gt;
Just some food for thought.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fall 2018 HS CS Tour</title>
      <link>https://cestlaz.github.io/post/fall-2018-hs-tour/</link>
      <pubDate>Sat, 29 Sep 2018 16:57:26 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/fall-2018-hs-tour/</guid>
      <description>&lt;p&gt;
I&amp;#39;ve written before about why &lt;a href=&#34;https://cestlaz.github.io/posts/hunter-cs-important/&#34;&gt;Hunter College CS is so important&lt;/a&gt; for
NYC and I&amp;#39;ve been working hard to develop our Daedalus Scholars honors
CS program -  a program in which students receive a scholarship along
with all sorts of special opportunities to add on to their in class CS
education. The program and Hunter CS as a whole have &lt;a href=&#34;https://cestlaz.github.io/posts/hunter-cs-year-two/&#34;&gt;made a lot of
progress&lt;/a&gt; over the past two years and each year I roll out new
special activities and events for my honors students. Still, a major
challenges is getting the word out and building our reputation. Anyone
who takes a close look at what we&amp;#39;re doing can see we&amp;#39;re growing
something special but we still have to convince students and parents
who may not even realize that Hunter offers a CS degree to come to us
instead of going to more well known albeit much more expensive programs.
&lt;/p&gt;
&lt;p&gt;
To that end I try to visit as many high schools as I can during the
Fall semester to speak to high school seniors.
&lt;/p&gt;
&lt;p&gt;
I spent last Friday at Packer Collegiate.
&lt;/p&gt;
  &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Great to have &lt;a href=&#34;https://twitter.com/zamansky?ref_src=twsrc%5Etfw&#34;&gt;@zamansky&lt;/a&gt; come by and talk to juniors and seniors in the advanced CS about the tech sector and options for study including the amazing program at Hunter &lt;a href=&#34;https://t.co/ubHNfyt8Y9&#34;&gt;pic.twitter.com/ubHNfyt8Y9&lt;/a&gt;&lt;/p&gt;&amp;mdash; saber khan (@ed_saber) &lt;a href=&#34;https://twitter.com/ed_saber/status/1045768969519542272?ref_src=twsrc%5Etfw&#34;&gt;September 28, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34;
charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;
I was invited by my friend &lt;a href=&#34;https://twitter.com/ed_saber&#34;&gt;Saber Khan&lt;/a&gt; who runs the weekly twitter
&lt;/p&gt;
&lt;p&gt;
When I first started doing school visits I had a tough time figuring
out exactly what to say - I&amp;#39;m no salesman - I&amp;#39;m not good at it and I
don&amp;#39;t like doing it. Fortunately, I didn&amp;#39;t have to be a salesman. I
decided I&amp;#39;d talk to the students about questions they should be asking
themselves as they consider where to go after graduation. I talk about
school location, community, and culture. I also talk about majors - BA
vs BS, Major vs Minor, niche majors, and possible career paths. I also
talk about tech sectors - how NY might be different from Sill icon
Valley might be different from Seattle or Boston.
&lt;/p&gt;
&lt;p&gt;
I also tell them the truth about the undergraduate experience - how
you can get a great CS background at all sorts of schools. How
Algorithms is Algorithms and no matter where you go you&amp;#39;ll probably
use the same text and how while I have many former students at the
Googles and Facebooks of the world that  have gone to MIT and CMU I
also have plenty who end up at those companies or similar going to
Stony, Oberlin, Tufts, and yes, Hunter.
&lt;/p&gt;
&lt;p&gt;
At the end of the talk I spend a few minutes talking about Hunter and
my honors program but it&amp;#39;s only a small part of the talk. I figure in
any given class there will be a few kids who could be a fit for my
program and I want the time spent to be worthwhile for the entire
class.
&lt;/p&gt;
&lt;p&gt;
Sometimes guidance people sit in when I talk to the students and
almost always they tell me how valuable it was for the students to
have someone like me come in and talk frankly about the college
application and acceptance process.
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s going to take time to build our reputation at Hunter but I think
that going around to students and talking honestly about college and
not giving the hard sell helps build trust and our reputation and over
time, people will realize the value we&amp;#39;re bringing to the table and
come to us. It&amp;#39;s already happening.
&lt;/p&gt;
&lt;p&gt;
Now, the only other challenge is to get more high schools to bring me
in. Next week I&amp;#39;m visiting NEST+M and Brooklyn Tech and I&amp;#39;ve got a few
more on the calendar in upcoming weeks but would love to get to a
bunch more.
&lt;/p&gt;
&lt;p&gt;
So, if you&amp;#39;re at a NY area High School and you think there&amp;#39;s a fit -
hit me up - I&amp;#39;d love to visit and meet and talk with your kids.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CS vs CT vs Coding</title>
      <link>https://cestlaz.github.io/post/cs-ct-cc/</link>
      <pubDate>Fri, 28 Sep 2018 12:08:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/cs-ct-cc/</guid>
      <description>&lt;p&gt;
There&amp;#39;s been a lot of buzz recently concernting Computational Thinking
(CT) vs Computer Science (CS) vs Coding / Programming on the
interwebs.
&lt;/p&gt;
&lt;p&gt;
Some of the questions and concerns that I&amp;#39;ve seen recently include:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
What is CT??
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Will rich schools get CS and poor only CT?
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Will rich schools get CS and poor on coding?
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The first question is a big one and as a community we haven&amp;#39;t answered
it yet. I think about it as including things like algorithmic
thinking, decomposing problems, iterating, pattern recoginition and the like 
but I&amp;#39;m hardpressed to come up with a succinct formal definition. This
is somewhat related to the bigger problem of &amp;#34;what is CS?&amp;#34; A problem
the CS community is still dealing with. There seems to be an editorial
or letter in the &lt;a href=&#34;https://cacm.acm.org/&#34;&gt;Communications of the ACM&lt;/a&gt; every few months talking
about this. &amp;#34;We&amp;#39;re an enginering discipline. No, we&amp;#39;re a science. No
we&amp;#39;re an artistic endeavor&amp;#34; and on and on. It&amp;#39;s no surprise that the
rest of the world doesn&amp;#39;t understand what we are when we haven&amp;#39;t
figured it out ourselves. It&amp;#39;s also no surprise that this problem also
extends to CT.
&lt;/p&gt;
&lt;p&gt;
One thing seemed clear on the twitter threads and posts I read is that
people seem to believe that CT and Coding are potentially overlapping
subsets of CS but you can do CT and Coding without CS.
&lt;/p&gt;
&lt;p&gt;
While there&amp;#39;s probably a lot to say on the CT without CS or rather CT
without programming but today let&amp;#39;s look at the programming without CS
side of things.
&lt;/p&gt;
&lt;p&gt;
This is probably of particular concern to me as a high school and now
college guy. There&amp;#39;s no doubt to me that there&amp;#39;s a big difference
between a kid learning coding/programming and computer science. 
&lt;/p&gt;
&lt;p&gt;
Coding can be a useful skill but without at least some computer
science it&amp;#39;s of limited value. Look at code schools as examples. Many
code schools work to prepare their customers for entry level tech
jobs. Usually, this includes the fundamentals of programming on top of
a typical business toolset. Examples would be a node.js backend,
Mongodb, and React.js. Another, albeit older one so probably not
taught as much now would be Ruby on Rails. Upon completing the
program, one can create a formulaic full stack applicationand knowing
that formula can make you employable in our current tech sector. The
downside though, as I&amp;#39;ve heard from countless employers, is that code
school graduates, by training, can&amp;#39;t break out of that formula. They
just don&amp;#39;t have the context, nor the problem solving ability - they
lack the CS. I&amp;#39;m sure many go on to learn the CS but that&amp;#39;s another
story. I was talking to a code school founder a few years ago about
this and asked &amp;#34;what happens when the formula chages.&amp;#34; The answer I
got was &amp;#34;that&amp;#39;s ok, we&amp;#39;ll just bring them back for a new bootcamp.&amp;#34; Of
course that will cost the kid another 10K or whatever bootcamps are
charging these days.
&lt;/p&gt;
&lt;p&gt;
Now of course some code schools try harder than others and some
attempt build some CS into their programs but while there are always
outliers who can learn a great deal in a short period of time, and
often on their own, real education takes time and effort and a short
term bootcamp just doesn&amp;#39;t have that time.
&lt;/p&gt;
&lt;p&gt;
Back to schools.
&lt;/p&gt;
&lt;p&gt;
To start coding is easier to teach than CS. It can be formulaic and
there are lots of resources out there to assist teachers without a CS
background. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s also easy to test and show off. 
&lt;/p&gt;
&lt;p&gt;
I was at the NYTM once and they were celebrating a code school
project. The idea was really a good one - automatic sensing of heat in
low income apartments. I had a couple of questions about getting their
data out to the authorities but thought that if they figured that out
it could really do some good. On the other hand there was practically
no CS. As the project was described - it sets up it&amp;#39;s own mesh network
and communicates heat readings etc etc., I said to my neighbor in the
audience - sounds like an arduino with an XBee shield and yep, when
they showed the case, it was the exact form factor to hold an arduino
and xbee. That told me there was no CS. The mesh networking is
automatically done by the XBee so all they had to do was take the
sample arduino code to read the heat sensor and instead of sending it
to the serial port as the sample code does, send it to a particular
XBee node. Pretty much no CS and almost no programming. Just a great
idea and gluing some components together.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ve seen the same with student projects that have been highlighted at
events with funders and politicians and in the media. I won&amp;#39;t describe
them as they are student projects and wouldn&amp;#39;t do that to a student
but the projects really had no CS under the hood. Nice ideas or even
more importantly nice stories around the kid but it was glue and
simple basic programming not CS.
&lt;/p&gt;
&lt;p&gt;
Teaching real CS is harder to do, harder to assess and harder to show
off which makes teaching coding so enticing. 
&lt;/p&gt;
&lt;p&gt;
This is not to say that teaching coding without CS doesn&amp;#39;t have
value. I believe it does but it also leads to another problem – it
can be assessed improperly either with showy projects that are merely
gluing a theme on a fixed pattern or by tests that allow for
memorization and this at times has led to students being given too
much too early.
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;ve seen this with algebra and physics. Students end up taking these
subjects before they&amp;#39;re ready for them. They can pass the
standardized test  because they can plug numbers into formulas or can
recognize what form to use because there are a limited set of problem
patterns on the exams but they don&amp;#39;t really &amp;#34;get&amp;#34; the subject. This
leads to problems later on but of course that&amp;#39;s another teacher&amp;#39;s
problem.
&lt;/p&gt;
&lt;p&gt;
This also happens in coding classes. While it&amp;#39;s usually pretty clear
when a kid isn&amp;#39;t getting a CS concept, I&amp;#39;ve seen programming
experiences where the student at first or in the short term can appear
to pass the assessments but later on it&amp;#39;s revealed that they weren&amp;#39;t
ready and they didn&amp;#39;t really learn what they were supposed to.
&lt;/p&gt;
&lt;p&gt;
This is a problem. Just as we might have some students exposed to CT
without CS I think a major problem will be kids getting Coding without
CS. This will particularly be a danger in poorer schools and
communities but possibly across the board.
&lt;/p&gt;
&lt;p&gt;
Just another thing we have to really be on guard for as we try to
achieve CS for all.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Not every lesson has to be magic</title>
      <link>https://cestlaz.github.io/post/not-always-exciting/</link>
      <pubDate>Tue, 25 Sep 2018 18:08:35 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/not-always-exciting/</guid>
      <description>&lt;p&gt;
If you check out Twitter, Facebook, Medium  and other blog sites you
might get the idea that you&amp;#39;re the worst teacher in the world. The
internet abounds with people sharing tweets and posts about wonderful
lessons they&amp;#39;ve just taught, witnessed or learned about in
professional development. Sure, the teacher forums rife with requests
for lesson ideas and resources but the shared material is always aces.
&lt;/p&gt;
&lt;p&gt;
It makes sense, people in the community want to share things that
worked for them or things they think will work. 
&lt;/p&gt;
&lt;p&gt;
Still, for new teachers it can create an unhealthy illusion of what
really goes on in the classroom.
&lt;/p&gt;
&lt;p&gt;
This is not to say that sharing of the good stuff is a bad thing but
the truth is that not every lesson is a masterpiece, not every teacher
is a super charismatic showman, and not all topics lend themselves to
creative teaching.
&lt;/p&gt;
&lt;p&gt;
Why am I writing this now? Because I was planning lessons earlier
today and I&amp;#39;m at one of those places where I&amp;#39;m not going to be able to
deliver a whiz-bang lesson in my next class. One of my classes this
semester is for beginners so we&amp;#39;re building up language skills from
the ground up. Right now I want to do some loop applications but
there&amp;#39;s only so much we can do given what the students know. There are
reasons why I don&amp;#39;t want to do graphics with them right now. I also
haven&amp;#39;t introduced lists yet and don&amp;#39;t want to loop over strings yet
so I&amp;#39;m left with doing mathy stuff.
&lt;/p&gt;
&lt;p&gt;
I think I&amp;#39;ll look at Newton&amp;#39;s method for square roots. It&amp;#39;s
interesting for the math inclined and does let us explore issues with
floating point and accuracy. 
&lt;/p&gt;
&lt;p&gt;
It&amp;#39;s not going to be super exciting for everyone though and that&amp;#39;s okay. 
&lt;/p&gt;
&lt;p&gt;
I could do lists first but I don&amp;#39;t want the kids to have to handle so
much new material so quickly. I&amp;#39;d rather keep the pace slower and work
with what they&amp;#39;ve just learned for a bit. 
&lt;/p&gt;
&lt;p&gt;
I could also do graphics but that adds a level of overhead I don&amp;#39;t
want to get into now.
&lt;/p&gt;
&lt;p&gt;
The idea is to look at the long game. A class runs a whole semester or
possibly a year. You&amp;#39;re going to have some special memorable lessons
and some mundane ones and that&amp;#39;s nothing to be ashamed of. 
&lt;/p&gt;
&lt;p&gt;
We&amp;#39;re still mostly going to see best practices shared online with only
a few brave souls sharing disaster classes and asking for help. That&amp;#39;s
just how the internet works. It&amp;#39;s not the worst thing in the
world. Just remember when you&amp;#39;re struggling to come up with a good
lesson or you&amp;#39;ve just taught a bad one that tomorrow&amp;#39;s will be
better. Judge yourself by your students long term development, not one
day at a time.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What CS should we teach in HS</title>
      <link>https://cestlaz.github.io/post/what-cs-in-hs/</link>
      <pubDate>Sun, 23 Sep 2018 16:54:12 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/what-cs-in-hs/</guid>
      <description>&lt;p&gt;
I wanted to chime in on Alfred Thompson&amp;#39;s post last week on &lt;a href=&#34;http://blog.acthompson.net/2018/09/deciding-what-to-include-in-high-school.html&#34;&gt;what to
include in a HS CS class&lt;/a&gt; but was working on moving blogging platforms
so didn&amp;#39;t get a chance so I&amp;#39;ll say a few words here.
&lt;/p&gt;
&lt;p&gt;
If you&amp;#39;ve been here before you probably know I&amp;#39;m not a fan of &lt;a href=&#34;https://cestlaz.github.io/posts/standards-who-for/&#34;&gt;the
standards&lt;/a&gt; and I certainly am no fan of the College Board and the AP
program so what&amp;#39;s my take?
&lt;/p&gt;
&lt;p&gt;
The truth is, my take doesn&amp;#39;t matter. Not in terms of specifics
anyway. Every school is different. Different kids, teachers, parents,
community, and culture so while there might be some things from the
program I designed at Stuy that work at another school there will be
plenty of things that don&amp;#39;t. I&amp;#39;m now designing first year experiences
at Hunter and while I take lessons earned away from my Stuy
experience, I&amp;#39;m now teaching different kids in a different environment
so the answer to the question &amp;#34;what do I teach them and how?&amp;#34; is different.
&lt;/p&gt;
&lt;p&gt;
The important thing to consider are the questions you should ask and
the answers you come up with.
&lt;/p&gt;
&lt;p&gt;
The first question is &amp;#34;why?&amp;#34; Why are you doing CS in your school? Is
it for kids already interested in CS? Is it &amp;#34;for all?&amp;#34; In either case,
what do you want them to get out of it?
&lt;/p&gt;
&lt;p&gt;
Is it for employment after high school? If so you might want to
consider locally used tools and technologies and also look at more
vocational tech like DevOps, SysAdmin and networking.
&lt;/p&gt;
&lt;p&gt;
Is it in support of other classes while in high school or college? You
might want to look at aspects of CS that cross over into other disciplines.
&lt;/p&gt;
&lt;p&gt;
You&amp;#39;ll then have other questions dealing with resources, class size,
required classes vs electives and so on.
&lt;/p&gt;
&lt;p&gt;
At some point schools get to the point of figuring out what specific
topics to include. Many teachers now veer to an assortment of hot
topics that interest them or alternatively go the other way and try to
do whatever the students want. I&amp;#39;m not a  big fan of either. Don&amp;#39;t get
me wrong, if I worked in a rich private institution with tiny class
sizes and lots of resources I&amp;#39;d love to be student directed after the
basics but that&amp;#39;s a luxury that public school educators can&amp;#39;t really
afford. I&amp;#39;m also not a fan of the &amp;#34;hot topic&amp;#34; approach. 
&lt;/p&gt;
&lt;p&gt;
At Stuy, I tried to look at the complete sequence as a program. I
wanted the designation of &amp;#34;Stuy CS graduate&amp;#34; to mean something so I
looked at what the kids trajectories were after graduation and I tried
to develop a program that best launched them on that trajectory. That
meant designing an intro class that could both launch CS minded kids
into our more advanced classes and also give non-CS kids everything
they needed for their next levels. 
&lt;/p&gt;
&lt;p&gt;
The motivation and design of the intro course is a topic unto itself
but I&amp;#39;ll share what I considered when designing our post AP CS
courses. One of the first guidelines I follow is &amp;#34;don&amp;#39;t give them a
course that they&amp;#39;ll have to take later anyway.&amp;#34; A second is &amp;#34;set up
courses that support the students in what they&amp;#39;ll have to take later&amp;#34;
and finally &amp;#34;fill in the gaps.&amp;#34; 
&lt;/p&gt;
&lt;p&gt;
With this in mind, we ended up with a Graphics course, Systems course
and a two semester Software Development class and it&amp;#39;s worked pretty
well. 
&lt;/p&gt;
&lt;p&gt;
Had I been at another school and designed it&amp;#39;s sequence it would
likely look different. I would have developed the program the same
way but would likely have ended up with something different albeit
with similar themes.
&lt;/p&gt;
&lt;p&gt;
I get emails and calls now and then from schools asking for advice on
building their CS programs. Some want the easy way out - they want a
drop in curriculum with little regard for the fit or worse, they want
APCS because it&amp;#39;s AP. Those conversations usually don&amp;#39;t go
anywhere. Other schools ask for help and ask for a curriculum. I&amp;#39;ll
say I can&amp;#39;t help with that but I&amp;#39;d love to talk and to get to know the
school and together we can come up with the right program. That&amp;#39;s a
longer process and is more work. It&amp;#39;s also more likely to result in a
good sustainable program and building those are both better and a lot
more fun.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First post again</title>
      <link>https://cestlaz.github.io/post/firstpost/</link>
      <pubDate>Fri, 21 Sep 2018 17:21:15 -0400</pubDate>
      
      <guid>https://cestlaz.github.io/post/firstpost/</guid>
      <description>
&lt;h2 id=&#34;headline-1&#34;&gt;
The new site is live.
&lt;/h2&gt;
&lt;p&gt;
I&amp;#39;m now running a &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; based blog. I  set it up using the &lt;a href=&#34;https://themes.gohugo.io/mainroad/&#34;&gt;Mainroad&lt;/a&gt;
theme which seems to support everything I want. 
&lt;/p&gt;
&lt;p&gt;
Out of the box Hugo supports org-mode with pretty much all of its
niceties like:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
code highlighting
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
org-mode structure (lists, tables)
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
html can be directly embedded
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
tags and categories
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
The Mainroad theme added:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
MathJax
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
Analytics
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
An easy menu
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
widgets for the sidebar
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
It was pretty easy to customize and deploying to GitHub pages is
pretty simple. It just took a couple of minutes
to port over the subscribe via email using Feedburner into a widget.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;ll do a post later about how I moved over and maybe make a video. 
&lt;/p&gt;
&lt;p&gt;
I decided not to convert all the old posts but will leave them up on
an &lt;a href=&#34;https://cestlaz-nikola.github.io/&#34;&gt;archive site&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I&amp;#39;m hoping everything works out  of the box. Let me know if there are
any issues.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>